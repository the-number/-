PASS: 00-initial-env.test: goopsless: + wrong type argument: 1st argument string (eval)
PASS: 00-initial-env.test: goopsless: + wrong type argument: 1st argument string (compile -O0)
PASS: 00-initial-env.test: goopsless: + wrong type argument: 1st argument string (compile -O2)
PASS: 00-initial-env.test: goopsless: + wrong type argument: 2nd argument bool (eval)
PASS: 00-initial-env.test: goopsless: + wrong type argument: 2nd argument bool (compile -O0)
PASS: 00-initial-env.test: goopsless: + wrong type argument: 2nd argument bool (compile -O2)
PASS: 00-initial-env.test: goopsless: + wrong type argument: implicit forcing is not supported (eval)
PASS: 00-initial-env.test: goopsless: + wrong type argument: implicit forcing is not supported (compile -O0)
PASS: 00-initial-env.test: goopsless: + wrong type argument: implicit forcing is not supported (compile -O2)
PASS: 00-initial-env.test: goopsless: - wrong type argument: 1st argument string (eval)
PASS: 00-initial-env.test: goopsless: - wrong type argument: 1st argument string (compile -O0)
PASS: 00-initial-env.test: goopsless: - wrong type argument: 1st argument string (compile -O2)
PASS: 00-initial-env.test: goopsless: - wrong type argument: 2nd argument symbol (eval)
PASS: 00-initial-env.test: goopsless: - wrong type argument: 2nd argument symbol (compile -O0)
PASS: 00-initial-env.test: goopsless: - wrong type argument: 2nd argument symbol (compile -O2)
PASS: 00-repl-server.test: repl-server: simple expression
PASS: 00-repl-server.test: repl-server: HTTP inter-protocol attack
PASS: 00-socket.test: inet-ntop: ipv6: 0
PASS: 00-socket.test: inet-ntop: ipv6: 2^128-1
PASS: 00-socket.test: inet-ntop: ipv6: -1
PASS: 00-socket.test: inet-ntop: ipv6: 2^128
PASS: 00-socket.test: inet-ntop: ipv6: 2^1024
PASS: 00-socket.test: inet-pton: ipv6: 00:00:00:00:00:00:00:00
PASS: 00-socket.test: inet-pton: ipv6: 0:0:0:0:0:0:0:1
PASS: 00-socket.test: inet-pton: ipv6: ::1
PASS: 00-socket.test: inet-pton: ipv6: FFFF:FFFF:FFFF:FFFF:FFFF:FFFF:FFFF:FFFF
PASS: 00-socket.test: inet-pton: ipv6: F000:0000:0000:0000:0000:0000:0000:0000
PASS: 00-socket.test: inet-pton: ipv6: 0F00:0000:0000:0000:0000:0000:0000:0000
PASS: 00-socket.test: inet-pton: ipv6: 0000:0000:0000:0000:0000:0000:0000:00F0
PASS: 00-socket.test: inet-ntop: ipv4: 127.0.0.1
PASS: 00-socket.test: inet-ntop: ipv6: FFFF:FFFF:FFFF:FFFF:FFFF:FFFF:FFFF:FFFF
PASS: 00-socket.test: inet-ntop: ipv6: ::1
PASS: 00-socket.test: make-socket-address: AF_INET
PASS: 00-socket.test: make-socket-address: AF_INET6
PASS: 00-socket.test: make-socket-address: AF_UNIX
PASS: 00-socket.test: setsockopt AF_INET: IPPROTO_TCP TCP_NODELAY
PASS: 00-socket.test: AF_UNIX/SOCK_DGRAM: bind
PASS: 00-socket.test: AF_UNIX/SOCK_DGRAM: bind/sockaddr
PASS: 00-socket.test: AF_UNIX/SOCK_DGRAM: sendto
PASS: 00-socket.test: AF_UNIX/SOCK_DGRAM: sendto/sockaddr
PASS: 00-socket.test: AF_UNIX/SOCK_STREAM: bind
PASS: 00-socket.test: AF_UNIX/SOCK_STREAM: bind/sockaddr
PASS: 00-socket.test: AF_UNIX/SOCK_STREAM: listen
PASS: 00-socket.test: AF_UNIX/SOCK_STREAM: connect
PASS: 00-socket.test: AF_UNIX/SOCK_STREAM: connect/sockaddr
PASS: 00-socket.test: AF_UNIX/SOCK_STREAM: accept
PASS: 00-socket.test: AF_UNIX/SOCK_STREAM: bind (bis)
PASS: 00-socket.test: AF_UNIX/SOCK_STREAM: listen (bis)
PASS: 00-socket.test: AF_UNIX/SOCK_STREAM: recv!
PASS: 00-socket.test: AF_UNIX/SOCK_STREAM: accept (bis)
PASS: 00-socket.test: AF_INET6/SOCK_STREAM: bind
PASS: 00-socket.test: AF_INET6/SOCK_STREAM: bind/sockaddr
PASS: 00-socket.test: AF_INET6/SOCK_STREAM: listen
PASS: 00-socket.test: AF_INET6/SOCK_STREAM: connect
PASS: 00-socket.test: AF_INET6/SOCK_STREAM: connect/sockaddr
PASS: 00-socket.test: AF_INET6/SOCK_STREAM: accept
PASS: alist.test: acons
PASS: alist.test: sloppy-assq
PASS: alist.test: sloppy-assq not
PASS: alist.test: sloppy-assv
PASS: alist.test: sloppy-assv not
PASS: alist.test: sloppy-assoc
PASS: alist.test: sloppy-assoc not
PASS: alist.test: assq
PASS: alist.test: assq deformed
PASS: alist.test: assq not
PASS: alist.test: assv
PASS: alist.test: assv deformed
PASS: alist.test: assv not
PASS: alist.test: assoc
PASS: alist.test: assoc deformed
PASS: alist.test: assoc not
PASS: alist.test: assq-ref
PASS: alist.test: assq-ref not
PASS: alist.test: assv-ref
PASS: alist.test: assv-ref not
PASS: alist.test: assoc-ref
PASS: alist.test: assoc-ref not
PASS: alist.test: assv-ref deformed
PASS: alist.test: assoc-ref deformed
PASS: alist.test: assq-ref deformed
PASS: alist.test: assq-set!
PASS: alist.test: assq-set! add
PASS: alist.test: assv-set!
PASS: alist.test: assv-set! add
PASS: alist.test: assoc-set!
PASS: alist.test: assoc-set! add
PASS: alist.test: assq-set! deformed
PASS: alist.test: assv-set! deformed
PASS: alist.test: assoc-set! deformed
PASS: alist.test: assq-remove!
PASS: alist.test: assv-remove!
PASS: alist.test: assoc-remove!
PASS: alist.test: assq-remove! deformed
PASS: alist.test: assv-remove! deformed
PASS: alist.test: assoc-remove! deformed
PASS: and-let-star.test: and-let*: cond-expand srfi-2
PASS: and-let-star.test: and-let*: no bindings: no result expression (gives #t)
PASS: and-let-star.test: and-let*: no bindings: result expression
PASS: and-let-star.test: and-let*: no bindings: two result expressions
PASS: and-let-star.test: and-let*: one binding: no result expression (gives binding value)
PASS: and-let-star.test: and-let*: one binding: result expression
PASS: and-let-star.test: and-let*: one binding: result variable
PASS: and-let-star.test: and-let*: one binding: two result expressions
PASS: and-let-star.test: and-let*: one test: no result expression (gives test value)
PASS: and-let-star.test: and-let*: one test: result expression
PASS: and-let-star.test: and-let*: one test: two result expressions
PASS: array-map.test: array-index-map!: basic test
PASS: array-map.test: array-index-map!: empty arrays: all axes empty
PASS: array-map.test: array-index-map!: empty arrays: last axis empty
PASS: array-map.test: array-index-map!: empty arrays: axis empty, other than last
PASS: array-map.test: array-index-map!: rank 2
PASS: array-map.test: array-copy!: empty arrays: empty other than last, #t
PASS: array-map.test: array-copy!: empty arrays: empty other than last, 'f64
PASS: array-map.test: array-copy!: empty arrays: empty/immutable vector
PASS: array-map.test: array-copy!: matching behavior I
PASS: array-map.test: array-copy!: matching behavior II
PASS: array-map.test: array-copy!: matching behavior III
PASS: array-map.test: array-copy!: rank 0
PASS: array-map.test: array-copy!: rank 1
PASS: array-map.test: array-copy!: rank 2
PASS: array-map.test: array-copy!: rank 2, discontinuous
PASS: array-map.test: array-copy!: null increments, not empty
PASS: array-map.test: array-map!: no args
PASS: array-map.test: array-map!: one arg
PASS: array-map.test: array-map!: no sources: closure 0
PASS: array-map.test: array-map!: no sources: closure 1
PASS: array-map.test: array-map!: no sources: closure 2
PASS: array-map.test: array-map!: no sources: subr_1
PASS: array-map.test: array-map!: no sources: subr_2
PASS: array-map.test: array-map!: no sources: subr_2o
PASS: array-map.test: array-map!: no sources: dsubr
PASS: array-map.test: array-map!: no sources: rpsubr
PASS: array-map.test: array-map!: no sources: asubr
PASS: array-map.test: array-map!: no sources: noop
PASS: array-map.test: array-map!: one source: closure 0
PASS: array-map.test: array-map!: one source: closure 1
PASS: array-map.test: array-map!: one source: closure 2
PASS: array-map.test: array-map!: one source: subr_1
PASS: array-map.test: array-map!: one source: subr_2
PASS: array-map.test: array-map!: one source: subr_2o
PASS: array-map.test: array-map!: one source: dsubr
PASS: array-map.test: array-map!: one source: rpsubr
PASS: array-map.test: array-map!: one source: asubr
PASS: array-map.test: array-map!: one source: 1+
PASS: array-map.test: array-map!: one source: rank 0
PASS: array-map.test: array-map!: one source: rank 2, discontinuous
PASS: array-map.test: array-map!: one source: null increments, not empty
PASS: array-map.test: array-map!: two sources: closure 0
PASS: array-map.test: array-map!: two sources: closure 1
PASS: array-map.test: array-map!: two sources: closure 2
PASS: array-map.test: array-map!: two sources: subr_1
PASS: array-map.test: array-map!: two sources: subr_2
PASS: array-map.test: array-map!: two sources: subr_2o
PASS: array-map.test: array-map!: two sources: dsubr
PASS: array-map.test: array-map!: two sources: rpsubr
PASS: array-map.test: array-map!: two sources: asubr
PASS: array-map.test: array-map!: two sources: +
PASS: array-map.test: array-map!: two sources: noncompact arrays 1
PASS: array-map.test: array-map!: two sources: noncompact arrays 2
PASS: array-map.test: array-map!: two sources: noncompact arrays 3
PASS: array-map.test: array-map!: two sources: noncompact arrays 4
PASS: array-map.test: array-map!: two sources: offset arrays 1
PASS: array-map.test: array-map!: matching behavior I
PASS: array-map.test: array-map!: matching behavior II
PASS: array-map.test: array-map!: matching behavior III
PASS: array-map.test: array-for-each: 1 source: rank 0
PASS: array-map.test: array-for-each: 1 source: noncompact array
PASS: array-map.test: array-for-each: 1 source: vector
PASS: array-map.test: array-for-each: 1 source: shared array
PASS: array-map.test: array-for-each: 3 sources: noncompact arrays 1
PASS: array-map.test: array-for-each: 3 sources: noncompact arrays 2
PASS: array-map.test: array-for-each: 3 sources: noncompact arrays 3
PASS: array-map.test: array-for-each: 3 sources: noncompact arrays 4
PASS: array-map.test: array-for-each: empty arrays: empty other than last, #t
PASS: array-map.test: array-for-each: empty arrays: empty other than last, f64
PASS: array-map.test: array-for-each: empty arrays: empty arrays shape check
PASS: array-map.test: array-slice-for-each: 1 argument frame rank 1
PASS: array-map.test: array-slice-for-each: 1 argument frame rank 1, non-zero base indices
PASS: array-map.test: array-slice-for-each: 2 arguments frame rank 1
PASS: array-map.test: array-slice-for-each: regression: zero-sized frame loop without unrolling
PASS: arrays.test: array?: is bool: (eq? #t (typed-array? bool (quote b)))
PASS: arrays.test: array?: is bool: (eq? #f (typed-array? char (quote b)))
PASS: arrays.test: array?: is bool: (eq? #f (typed-array? byte (quote b)))
PASS: arrays.test: array?: is bool: (eq? #f (typed-array? short (quote b)))
PASS: arrays.test: array?: is bool: (eq? #f (typed-array? ulong (quote b)))
PASS: arrays.test: array?: is bool: (eq? #f (typed-array? long (quote b)))
PASS: arrays.test: array?: is bool: (eq? #f (typed-array? longlong (quote b)))
PASS: arrays.test: array?: is bool: (eq? #f (typed-array? float (quote b)))
PASS: arrays.test: array?: is bool: (eq? #f (typed-array? double (quote b)))
PASS: arrays.test: array?: is bool: (eq? #f (typed-array? complex (quote b)))
PASS: arrays.test: array?: is bool: (eq? #f (typed-array? scm (quote b)))
PASS: arrays.test: array?: is char: (eq? #f (typed-array? bool (quote a)))
PASS: arrays.test: array?: is char: (eq? #t (typed-array? char (quote a)))
PASS: arrays.test: array?: is char: (eq? #f (typed-array? byte (quote a)))
PASS: arrays.test: array?: is char: (eq? #f (typed-array? short (quote a)))
PASS: arrays.test: array?: is char: (eq? #f (typed-array? ulong (quote a)))
PASS: arrays.test: array?: is char: (eq? #f (typed-array? long (quote a)))
PASS: arrays.test: array?: is char: (eq? #f (typed-array? longlong (quote a)))
PASS: arrays.test: array?: is char: (eq? #f (typed-array? float (quote a)))
PASS: arrays.test: array?: is char: (eq? #f (typed-array? double (quote a)))
PASS: arrays.test: array?: is char: (eq? #f (typed-array? complex (quote a)))
PASS: arrays.test: array?: is char: (eq? #f (typed-array? scm (quote a)))
PASS: arrays.test: array?: is byte: (eq? #f (typed-array? bool (quote u8)))
PASS: arrays.test: array?: is byte: (eq? #f (typed-array? char (quote u8)))
PASS: arrays.test: array?: is byte: (eq? #t (typed-array? byte (quote u8)))
PASS: arrays.test: array?: is byte: (eq? #f (typed-array? short (quote u8)))
PASS: arrays.test: array?: is byte: (eq? #f (typed-array? ulong (quote u8)))
PASS: arrays.test: array?: is byte: (eq? #f (typed-array? long (quote u8)))
PASS: arrays.test: array?: is byte: (eq? #f (typed-array? longlong (quote u8)))
PASS: arrays.test: array?: is byte: (eq? #f (typed-array? float (quote u8)))
PASS: arrays.test: array?: is byte: (eq? #f (typed-array? double (quote u8)))
PASS: arrays.test: array?: is byte: (eq? #f (typed-array? complex (quote u8)))
PASS: arrays.test: array?: is byte: (eq? #f (typed-array? scm (quote u8)))
PASS: arrays.test: array?: is short: (eq? #f (typed-array? bool (quote s16)))
PASS: arrays.test: array?: is short: (eq? #f (typed-array? char (quote s16)))
PASS: arrays.test: array?: is short: (eq? #f (typed-array? byte (quote s16)))
PASS: arrays.test: array?: is short: (eq? #t (typed-array? short (quote s16)))
PASS: arrays.test: array?: is short: (eq? #f (typed-array? ulong (quote s16)))
PASS: arrays.test: array?: is short: (eq? #f (typed-array? long (quote s16)))
PASS: arrays.test: array?: is short: (eq? #f (typed-array? longlong (quote s16)))
PASS: arrays.test: array?: is short: (eq? #f (typed-array? float (quote s16)))
PASS: arrays.test: array?: is short: (eq? #f (typed-array? double (quote s16)))
PASS: arrays.test: array?: is short: (eq? #f (typed-array? complex (quote s16)))
PASS: arrays.test: array?: is short: (eq? #f (typed-array? scm (quote s16)))
PASS: arrays.test: array?: is ulong: (eq? #f (typed-array? bool (quote u32)))
PASS: arrays.test: array?: is ulong: (eq? #f (typed-array? char (quote u32)))
PASS: arrays.test: array?: is ulong: (eq? #f (typed-array? byte (quote u32)))
PASS: arrays.test: array?: is ulong: (eq? #f (typed-array? short (quote u32)))
PASS: arrays.test: array?: is ulong: (eq? #t (typed-array? ulong (quote u32)))
PASS: arrays.test: array?: is ulong: (eq? #f (typed-array? long (quote u32)))
PASS: arrays.test: array?: is ulong: (eq? #f (typed-array? longlong (quote u32)))
PASS: arrays.test: array?: is ulong: (eq? #f (typed-array? float (quote u32)))
PASS: arrays.test: array?: is ulong: (eq? #f (typed-array? double (quote u32)))
PASS: arrays.test: array?: is ulong: (eq? #f (typed-array? complex (quote u32)))
PASS: arrays.test: array?: is ulong: (eq? #f (typed-array? scm (quote u32)))
PASS: arrays.test: array?: is long: (eq? #f (typed-array? bool (quote s32)))
PASS: arrays.test: array?: is long: (eq? #f (typed-array? char (quote s32)))
PASS: arrays.test: array?: is long: (eq? #f (typed-array? byte (quote s32)))
PASS: arrays.test: array?: is long: (eq? #f (typed-array? short (quote s32)))
PASS: arrays.test: array?: is long: (eq? #f (typed-array? ulong (quote s32)))
PASS: arrays.test: array?: is long: (eq? #t (typed-array? long (quote s32)))
PASS: arrays.test: array?: is long: (eq? #f (typed-array? longlong (quote s32)))
PASS: arrays.test: array?: is long: (eq? #f (typed-array? float (quote s32)))
PASS: arrays.test: array?: is long: (eq? #f (typed-array? double (quote s32)))
PASS: arrays.test: array?: is long: (eq? #f (typed-array? complex (quote s32)))
PASS: arrays.test: array?: is long: (eq? #f (typed-array? scm (quote s32)))
PASS: arrays.test: array?: is long long: (eq? #f (typed-array? bool (quote s64)))
PASS: arrays.test: array?: is long long: (eq? #f (typed-array? char (quote s64)))
PASS: arrays.test: array?: is long long: (eq? #f (typed-array? byte (quote s64)))
PASS: arrays.test: array?: is long long: (eq? #f (typed-array? short (quote s64)))
PASS: arrays.test: array?: is long long: (eq? #f (typed-array? ulong (quote s64)))
PASS: arrays.test: array?: is long long: (eq? #f (typed-array? long (quote s64)))
PASS: arrays.test: array?: is long long: (eq? #t (typed-array? longlong (quote s64)))
PASS: arrays.test: array?: is long long: (eq? #f (typed-array? float (quote s64)))
PASS: arrays.test: array?: is long long: (eq? #f (typed-array? double (quote s64)))
PASS: arrays.test: array?: is long long: (eq? #f (typed-array? complex (quote s64)))
PASS: arrays.test: array?: is long long: (eq? #f (typed-array? scm (quote s64)))
PASS: arrays.test: array?: is float: (eq? #f (typed-array? bool (quote f32)))
PASS: arrays.test: array?: is float: (eq? #f (typed-array? char (quote f32)))
PASS: arrays.test: array?: is float: (eq? #f (typed-array? byte (quote f32)))
PASS: arrays.test: array?: is float: (eq? #f (typed-array? short (quote f32)))
PASS: arrays.test: array?: is float: (eq? #f (typed-array? ulong (quote f32)))
PASS: arrays.test: array?: is float: (eq? #f (typed-array? long (quote f32)))
PASS: arrays.test: array?: is float: (eq? #f (typed-array? longlong (quote f32)))
PASS: arrays.test: array?: is float: (eq? #t (typed-array? float (quote f32)))
PASS: arrays.test: array?: is float: (eq? #f (typed-array? double (quote f32)))
PASS: arrays.test: array?: is float: (eq? #f (typed-array? complex (quote f32)))
PASS: arrays.test: array?: is float: (eq? #f (typed-array? scm (quote f32)))
PASS: arrays.test: array?: is double: (eq? #f (typed-array? bool (quote f64)))
PASS: arrays.test: array?: is double: (eq? #f (typed-array? char (quote f64)))
PASS: arrays.test: array?: is double: (eq? #f (typed-array? byte (quote f64)))
PASS: arrays.test: array?: is double: (eq? #f (typed-array? short (quote f64)))
PASS: arrays.test: array?: is double: (eq? #f (typed-array? ulong (quote f64)))
PASS: arrays.test: array?: is double: (eq? #f (typed-array? long (quote f64)))
PASS: arrays.test: array?: is double: (eq? #f (typed-array? longlong (quote f64)))
PASS: arrays.test: array?: is double: (eq? #f (typed-array? float (quote f64)))
PASS: arrays.test: array?: is double: (eq? #t (typed-array? double (quote f64)))
PASS: arrays.test: array?: is double: (eq? #f (typed-array? complex (quote f64)))
PASS: arrays.test: array?: is double: (eq? #f (typed-array? scm (quote f64)))
PASS: arrays.test: array?: is complex: (eq? #f (typed-array? bool (quote c64)))
PASS: arrays.test: array?: is complex: (eq? #f (typed-array? char (quote c64)))
PASS: arrays.test: array?: is complex: (eq? #f (typed-array? byte (quote c64)))
PASS: arrays.test: array?: is complex: (eq? #f (typed-array? short (quote c64)))
PASS: arrays.test: array?: is complex: (eq? #f (typed-array? ulong (quote c64)))
PASS: arrays.test: array?: is complex: (eq? #f (typed-array? long (quote c64)))
PASS: arrays.test: array?: is complex: (eq? #f (typed-array? longlong (quote c64)))
PASS: arrays.test: array?: is complex: (eq? #f (typed-array? float (quote c64)))
PASS: arrays.test: array?: is complex: (eq? #f (typed-array? double (quote c64)))
PASS: arrays.test: array?: is complex: (eq? #t (typed-array? complex (quote c64)))
PASS: arrays.test: array?: is complex: (eq? #f (typed-array? scm (quote c64)))
PASS: arrays.test: array?: is scm: (eq? #f (typed-array? bool #t))
PASS: arrays.test: array?: is scm: (eq? #f (typed-array? char #t))
PASS: arrays.test: array?: is scm: (eq? #f (typed-array? byte #t))
PASS: arrays.test: array?: is scm: (eq? #f (typed-array? short #t))
PASS: arrays.test: array?: is scm: (eq? #f (typed-array? ulong #t))
PASS: arrays.test: array?: is scm: (eq? #f (typed-array? long #t))
PASS: arrays.test: array?: is scm: (eq? #f (typed-array? longlong #t))
PASS: arrays.test: array?: is scm: (eq? #f (typed-array? float #t))
PASS: arrays.test: array?: is scm: (eq? #f (typed-array? double #t))
PASS: arrays.test: array?: is scm: (eq? #f (typed-array? complex #t))
PASS: arrays.test: array?: is scm: (eq? #t (typed-array? scm #t))
PASS: arrays.test: array?: typed-array? returns #f: (eq? #f (typed-array? (quote (1 2 3)) (quote c64)))
PASS: arrays.test: array?: typed-array? returns #f: (eq? #f (typed-array? (quote (1 2 3)) #t))
PASS: arrays.test: array?: typed-array? returns #f: (eq? #f (typed-array? 99 (quote c64)))
PASS: arrays.test: array?: typed-array? returns #f: (eq? #f (typed-array? 99 #t))
PASS: arrays.test: array-equal?: #s16(...) (eval)
PASS: arrays.test: array-equal?: #s16(...) (compile -O0)
PASS: arrays.test: array-equal?: #s16(...) (compile -O2)
PASS: arrays.test: array-equal?: #0f64(...) (eval)
PASS: arrays.test: array-equal?: #0f64(...) (compile -O0)
PASS: arrays.test: array-equal?: #0f64(...) (compile -O2)
PASS: arrays.test: array-equal?: #0(...) (eval)
PASS: arrays.test: array-equal?: #0(...) (compile -O0)
PASS: arrays.test: array-equal?: #0(...) (compile -O2)
PASS: arrays.test: make-shared-array: vector unchanged (eval)
PASS: arrays.test: make-shared-array: vector unchanged (compile -O0)
PASS: arrays.test: make-shared-array: vector unchanged (compile -O2)
PASS: arrays.test: make-shared-array: vector, high too big (eval)
PASS: arrays.test: make-shared-array: vector, high too big (compile -O0)
PASS: arrays.test: make-shared-array: vector, high too big (compile -O2)
PASS: arrays.test: make-shared-array: vector, low too big (eval)
PASS: arrays.test: make-shared-array: vector, low too big (compile -O0)
PASS: arrays.test: make-shared-array: vector, low too big (compile -O2)
PASS: arrays.test: make-shared-array: truncate columns (eval)
PASS: arrays.test: make-shared-array: truncate columns (compile -O0)
PASS: arrays.test: make-shared-array: truncate columns (compile -O2)
PASS: arrays.test: make-shared-array: pick one column (eval)
PASS: arrays.test: make-shared-array: pick one column (compile -O0)
PASS: arrays.test: make-shared-array: pick one column (compile -O2)
PASS: arrays.test: make-shared-array: diagonal (eval)
PASS: arrays.test: make-shared-array: diagonal (compile -O0)
PASS: arrays.test: make-shared-array: diagonal (compile -O2)
PASS: arrays.test: make-shared-array: 2 dims from 1 dim (eval)
PASS: arrays.test: make-shared-array: 2 dims from 1 dim (compile -O0)
PASS: arrays.test: make-shared-array: 2 dims from 1 dim (compile -O2)
PASS: arrays.test: make-shared-array: reverse columns (eval)
PASS: arrays.test: make-shared-array: reverse columns (compile -O0)
PASS: arrays.test: make-shared-array: reverse columns (compile -O2)
PASS: arrays.test: make-shared-array: fixed offset, 0 based becomes 1 based (eval)
PASS: arrays.test: make-shared-array: fixed offset, 0 based becomes 1 based (compile -O0)
PASS: arrays.test: make-shared-array: fixed offset, 0 based becomes 1 based (compile -O2)
PASS: arrays.test: make-shared-array: stride every third element (eval)
PASS: arrays.test: make-shared-array: stride every third element (compile -O0)
PASS: arrays.test: make-shared-array: stride every third element (compile -O2)
PASS: arrays.test: make-shared-array: shared of shared (eval)
PASS: arrays.test: make-shared-array: shared of shared (compile -O0)
PASS: arrays.test: make-shared-array: shared of shared (compile -O2)
PASS: arrays.test: array-slice: vector I (eval)
PASS: arrays.test: array-slice: vector I (compile -O0)
PASS: arrays.test: array-slice: vector I (compile -O2)
PASS: arrays.test: array-slice: vector II (eval)
PASS: arrays.test: array-slice: vector II (compile -O0)
PASS: arrays.test: array-slice: vector II (compile -O2)
PASS: arrays.test: array-slice: array I (eval)
PASS: arrays.test: array-slice: array I (compile -O0)
PASS: arrays.test: array-slice: array I (compile -O2)
PASS: arrays.test: array-slice: array II (eval)
PASS: arrays.test: array-slice: array II (compile -O0)
PASS: arrays.test: array-slice: array II (compile -O2)
PASS: arrays.test: array-slice: array III (eval)
PASS: arrays.test: array-slice: array III (compile -O0)
PASS: arrays.test: array-slice: array III (compile -O2)
PASS: arrays.test: array-slice: rank 0 array (eval)
PASS: arrays.test: array-slice: rank 0 array (compile -O0)
PASS: arrays.test: array-slice: rank 0 array (compile -O2)
PASS: arrays.test: array-cell-ref: vector I (eval)
PASS: arrays.test: array-cell-ref: vector I (compile -O0)
PASS: arrays.test: array-cell-ref: vector I (compile -O2)
PASS: arrays.test: array-cell-ref: vector II (eval)
PASS: arrays.test: array-cell-ref: vector II (compile -O0)
PASS: arrays.test: array-cell-ref: vector II (compile -O2)
PASS: arrays.test: array-cell-ref: array I (eval)
PASS: arrays.test: array-cell-ref: array I (compile -O0)
PASS: arrays.test: array-cell-ref: array I (compile -O2)
PASS: arrays.test: array-cell-ref: array II (eval)
PASS: arrays.test: array-cell-ref: array II (compile -O0)
PASS: arrays.test: array-cell-ref: array II (compile -O2)
PASS: arrays.test: array-cell-ref: array III (eval)
PASS: arrays.test: array-cell-ref: array III (compile -O0)
PASS: arrays.test: array-cell-ref: array III (compile -O2)
PASS: arrays.test: array-cell-ref: rank 0 array (eval)
PASS: arrays.test: array-cell-ref: rank 0 array (compile -O0)
PASS: arrays.test: array-cell-ref: rank 0 array (compile -O2)
PASS: arrays.test: array-cell-set!: vector I (eval)
PASS: arrays.test: array-cell-set!: vector I (compile -O0)
PASS: arrays.test: array-cell-set!: vector I (compile -O2)
PASS: arrays.test: array-cell-set!: vector II (eval)
PASS: arrays.test: array-cell-set!: vector II (compile -O0)
PASS: arrays.test: array-cell-set!: vector II (compile -O2)
PASS: arrays.test: array-cell-set!: array I (eval)
PASS: arrays.test: array-cell-set!: array I (compile -O0)
PASS: arrays.test: array-cell-set!: array I (compile -O2)
PASS: arrays.test: array-cell-set!: array II (eval)
PASS: arrays.test: array-cell-set!: array II (compile -O0)
PASS: arrays.test: array-cell-set!: array II (compile -O2)
PASS: arrays.test: array-cell-set!: array III (eval)
PASS: arrays.test: array-cell-set!: array III (compile -O0)
PASS: arrays.test: array-cell-set!: array III (compile -O2)
PASS: arrays.test: array-cell-set!: rank 0 array (eval)
PASS: arrays.test: array-cell-set!: rank 0 array (compile -O0)
PASS: arrays.test: array-cell-set!: rank 0 array (compile -O2)
PASS: arrays.test: array-contents: 0-rank array (eval)
PASS: arrays.test: array-contents: 0-rank array (compile -O0)
PASS: arrays.test: array-contents: 0-rank array (compile -O2)
PASS: arrays.test: array-contents: simple vector (eval)
PASS: arrays.test: array-contents: simple vector (compile -O0)
PASS: arrays.test: array-contents: simple vector (compile -O2)
PASS: arrays.test: array-contents: offset vector (eval)
PASS: arrays.test: array-contents: offset vector (compile -O0)
PASS: arrays.test: array-contents: offset vector (compile -O2)
PASS: arrays.test: array-contents: offset vector, strict (eval)
PASS: arrays.test: array-contents: offset vector, strict (compile -O0)
PASS: arrays.test: array-contents: offset vector, strict (compile -O2)
PASS: arrays.test: array-contents: stepped vector (eval)
PASS: arrays.test: array-contents: stepped vector (compile -O0)
PASS: arrays.test: array-contents: stepped vector (compile -O2)
PASS: arrays.test: array-contents: stepped vector, strict (eval)
PASS: arrays.test: array-contents: stepped vector, strict (compile -O0)
PASS: arrays.test: array-contents: stepped vector, strict (compile -O2)
PASS: arrays.test: array-contents: plain rank 2 array (eval)
PASS: arrays.test: array-contents: plain rank 2 array (compile -O0)
PASS: arrays.test: array-contents: plain rank 2 array (compile -O2)
PASS: arrays.test: array-contents: offset rank 2 array (eval)
PASS: arrays.test: array-contents: offset rank 2 array (compile -O0)
PASS: arrays.test: array-contents: offset rank 2 array (compile -O2)
PASS: arrays.test: array-contents: transposed rank 2 array (eval)
PASS: arrays.test: array-contents: transposed rank 2 array (compile -O0)
PASS: arrays.test: array-contents: transposed rank 2 array (compile -O2)
PASS: arrays.test: array-contents: empty array (eval)
PASS: arrays.test: array-contents: empty array (compile -O0)
PASS: arrays.test: array-contents: empty array (compile -O2)
PASS: arrays.test: array-contents: broadcast vector I (eval)
PASS: arrays.test: array-contents: broadcast vector I (compile -O0)
PASS: arrays.test: array-contents: broadcast vector I (compile -O2)
PASS: arrays.test: array-contents: broadcast vector II (eval)
PASS: arrays.test: array-contents: broadcast vector II (compile -O0)
PASS: arrays.test: array-contents: broadcast vector II (compile -O2)
PASS: arrays.test: array-contents: broadcast 2-rank I (eval)
PASS: arrays.test: array-contents: broadcast 2-rank I (compile -O0)
PASS: arrays.test: array-contents: broadcast 2-rank I (compile -O2)
PASS: arrays.test: array-contents: broadcast 2-rank II (eval)
PASS: arrays.test: array-contents: broadcast 2-rank II (compile -O0)
PASS: arrays.test: array-contents: broadcast 2-rank II (compile -O2)
PASS: arrays.test: array-contents: literal array (eval)
PASS: arrays.test: array-contents: literal array (compile -O0)
PASS: arrays.test: array-contents: literal array (compile -O2)
PASS: arrays.test: shared-array-root: plain vector (eval)
PASS: arrays.test: shared-array-root: plain vector (compile -O0)
PASS: arrays.test: shared-array-root: plain vector (compile -O2)
PASS: arrays.test: shared-array-root: plain array rank 2 (eval)
PASS: arrays.test: shared-array-root: plain array rank 2 (compile -O0)
PASS: arrays.test: shared-array-root: plain array rank 2 (compile -O2)
PASS: arrays.test: shared-array-root: uniform array rank 2 (eval)
PASS: arrays.test: shared-array-root: uniform array rank 2 (compile -O0)
PASS: arrays.test: shared-array-root: uniform array rank 2 (compile -O2)
PASS: arrays.test: shared-array-root: bit array rank 2 (eval)
PASS: arrays.test: shared-array-root: bit array rank 2 (compile -O0)
PASS: arrays.test: shared-array-root: bit array rank 2 (compile -O2)
PASS: arrays.test: shared-array-offset: plain vector (eval)
PASS: arrays.test: shared-array-offset: plain vector (compile -O0)
PASS: arrays.test: shared-array-offset: plain vector (compile -O2)
PASS: arrays.test: shared-array-offset: plain array rank 2 (eval)
PASS: arrays.test: shared-array-offset: plain array rank 2 (compile -O0)
PASS: arrays.test: shared-array-offset: plain array rank 2 (compile -O2)
PASS: arrays.test: shared-array-offset: row of rank-2 array, I (eval)
PASS: arrays.test: shared-array-offset: row of rank-2 array, I (compile -O0)
PASS: arrays.test: shared-array-offset: row of rank-2 array, I (compile -O2)
PASS: arrays.test: shared-array-offset: row of rank-2 array, II (eval)
PASS: arrays.test: shared-array-offset: row of rank-2 array, II (compile -O0)
PASS: arrays.test: shared-array-offset: row of rank-2 array, II (compile -O2)
PASS: arrays.test: shared-array-offset: col of rank-2 array, I (eval)
PASS: arrays.test: shared-array-offset: col of rank-2 array, I (compile -O0)
PASS: arrays.test: shared-array-offset: col of rank-2 array, I (compile -O2)
PASS: arrays.test: shared-array-offset: col of rank-2 array, II (eval)
PASS: arrays.test: shared-array-offset: col of rank-2 array, II (compile -O0)
PASS: arrays.test: shared-array-offset: col of rank-2 array, II (compile -O2)
PASS: arrays.test: shared-array-increments: plain vector
PASS: arrays.test: shared-array-increments: plain array rank 2
PASS: arrays.test: shared-array-increments: plain array rank 3
PASS: arrays.test: shared-array-increments: row of rank-2 array
PASS: arrays.test: shared-array-increments: col of rank-2 array
PASS: arrays.test: transpose-array: non array argument (eval)
PASS: arrays.test: transpose-array: non array argument (compile -O0)
PASS: arrays.test: transpose-array: non array argument (compile -O2)
PASS: arrays.test: transpose-array: rank 0 (eval)
PASS: arrays.test: transpose-array: rank 0 (compile -O0)
PASS: arrays.test: transpose-array: rank 0 (compile -O2)
PASS: arrays.test: transpose-array: rank 1 (eval)
PASS: arrays.test: transpose-array: rank 1 (compile -O0)
PASS: arrays.test: transpose-array: rank 1 (compile -O2)
PASS: arrays.test: transpose-array: rank 2 (eval)
PASS: arrays.test: transpose-array: rank 2 (compile -O0)
PASS: arrays.test: transpose-array: rank 2 (compile -O2)
PASS: arrays.test: transpose-array: rank 3 (eval)
PASS: arrays.test: transpose-array: rank 3 (compile -O0)
PASS: arrays.test: transpose-array: rank 3 (compile -O2)
PASS: arrays.test: array->list: uniform vector (eval)
PASS: arrays.test: array->list: uniform vector (compile -O0)
PASS: arrays.test: array->list: uniform vector (compile -O2)
PASS: arrays.test: array->list: vector (eval)
PASS: arrays.test: array->list: vector (compile -O0)
PASS: arrays.test: array->list: vector (compile -O2)
PASS: arrays.test: array->list: rank 2 array (eval)
PASS: arrays.test: array->list: rank 2 array (compile -O0)
PASS: arrays.test: array->list: rank 2 array (compile -O2)
PASS: arrays.test: array->list: empty vector (eval)
PASS: arrays.test: array->list: empty vector (compile -O0)
PASS: arrays.test: array->list: empty vector (compile -O2)
PASS: arrays.test: array->list: http://bugs.gnu.org/12465 - ok (eval)
PASS: arrays.test: array->list: http://bugs.gnu.org/12465 - ok (compile -O0)
PASS: arrays.test: array->list: http://bugs.gnu.org/12465 - ok (compile -O2)
PASS: arrays.test: array->list: http://bugs.gnu.org/12465 - bad (eval)
PASS: arrays.test: array->list: http://bugs.gnu.org/12465 - bad (compile -O0)
PASS: arrays.test: array->list: http://bugs.gnu.org/12465 - bad (compile -O2)
PASS: arrays.test: array-fill!: bool: #f
PASS: arrays.test: array-fill!: bool: #t
PASS: arrays.test: array-fill!: char: x
PASS: arrays.test: array-fill!: byte: 0
PASS: arrays.test: array-fill!: byte: 127
PASS: arrays.test: array-fill!: byte: -128
PASS: arrays.test: array-fill!: byte: 128
PASS: arrays.test: array-fill!: byte: -129
PASS: arrays.test: array-fill!: byte: symbol
PASS: arrays.test: array-fill!: short: 0
PASS: arrays.test: array-fill!: short: 123
PASS: arrays.test: array-fill!: short: -123
PASS: arrays.test: array-fill!: ulong: 0
PASS: arrays.test: array-fill!: ulong: 123
PASS: arrays.test: array-fill!: ulong: -123
PASS: arrays.test: array-fill!: long: 0
PASS: arrays.test: array-fill!: long: 123
PASS: arrays.test: array-fill!: long: -123
PASS: arrays.test: array-fill!: float: 0.0
PASS: arrays.test: array-fill!: float: 123.0
PASS: arrays.test: array-fill!: float: -123.0
PASS: arrays.test: array-fill!: float: 0
PASS: arrays.test: array-fill!: float: 123
PASS: arrays.test: array-fill!: float: -123
PASS: arrays.test: array-fill!: float: 5/8
PASS: arrays.test: array-fill!: double: 0.0
PASS: arrays.test: array-fill!: double: 123.0
PASS: arrays.test: array-fill!: double: -123.0
PASS: arrays.test: array-fill!: double: 0
PASS: arrays.test: array-fill!: double: 123
PASS: arrays.test: array-fill!: double: -123
PASS: arrays.test: array-fill!: double: 5/8
PASS: arrays.test: array-fill!: noncompact: (and (equal? b #(9 9 9)) (equal? a #2((9 0 0) (0 9 0) (0 0 9))))
PASS: arrays.test: array-in-bounds?: (let ((a (make-array #f (quote (425 425))))) (eq? #f (array-in-bounds? a 0)))
PASS: arrays.test: array-type: on make-foo-vector: bool
PASS: arrays.test: array-type: on make-foo-vector: char
PASS: arrays.test: array-type: on make-foo-vector: byte
PASS: arrays.test: array-type: on make-foo-vector: short
PASS: arrays.test: array-type: on make-foo-vector: ulong
PASS: arrays.test: array-type: on make-foo-vector: long
PASS: arrays.test: array-type: on make-foo-vector: long long
PASS: arrays.test: array-type: on make-foo-vector: float
PASS: arrays.test: array-type: on make-foo-vector: double
PASS: arrays.test: array-type: on make-foo-vector: complex
PASS: arrays.test: array-type: on make-foo-vector: scm
PASS: arrays.test: array-type: on make-typed-array: b
PASS: arrays.test: array-type: on make-typed-array: a
PASS: arrays.test: array-type: on make-typed-array: u8
PASS: arrays.test: array-type: on make-typed-array: s8
PASS: arrays.test: array-type: on make-typed-array: u16
PASS: arrays.test: array-type: on make-typed-array: s16
PASS: arrays.test: array-type: on make-typed-array: u32
PASS: arrays.test: array-type: on make-typed-array: s32
PASS: arrays.test: array-type: on make-typed-array: u64
PASS: arrays.test: array-type: on make-typed-array: u64
PASS: arrays.test: array-type: on make-typed-array: f32
PASS: arrays.test: array-type: on make-typed-array: f64
PASS: arrays.test: array-type: on make-typed-array: c32
PASS: arrays.test: array-type: on make-typed-array: c64
PASS: arrays.test: array-set!: bitvector: one elem set #t
PASS: arrays.test: array-set!: bitvector: one elem set #f
PASS: arrays.test: array-set!: byte: -128
PASS: arrays.test: array-set!: byte: 0
PASS: arrays.test: array-set!: byte: 127
PASS: arrays.test: array-set!: byte: -129
PASS: arrays.test: array-set!: byte: 128
PASS: arrays.test: array-set!: short: store/fetch: 1
PASS: arrays.test: array-set!: short: store/fetch: 3
PASS: arrays.test: array-set!: short: store/fetch: 7
PASS: arrays.test: array-set!: short: store/fetch: 15
PASS: arrays.test: array-set!: short: store/fetch: 31
PASS: arrays.test: array-set!: short: store/fetch: 63
PASS: arrays.test: array-set!: short: store/fetch: 127
PASS: arrays.test: array-set!: short: store/fetch: 255
PASS: arrays.test: array-set!: short: store/fetch: 511
PASS: arrays.test: array-set!: short: store/fetch: 1023
PASS: arrays.test: array-set!: short: store/fetch: 2047
PASS: arrays.test: array-set!: short: store/fetch: 4095
PASS: arrays.test: array-set!: short: store/fetch: 8191
PASS: arrays.test: array-set!: short: store/fetch: 16383
PASS: arrays.test: array-set!: short: store/fetch: 32767
PASS: arrays.test: array-set!: short: store/fetch: -1
PASS: arrays.test: array-set!: short: store/fetch: -2
PASS: arrays.test: array-set!: short: store/fetch: -4
PASS: arrays.test: array-set!: short: store/fetch: -8
PASS: arrays.test: array-set!: short: store/fetch: -16
PASS: arrays.test: array-set!: short: store/fetch: -32
PASS: arrays.test: array-set!: short: store/fetch: -64
PASS: arrays.test: array-set!: short: store/fetch: -128
PASS: arrays.test: array-set!: short: store/fetch: -256
PASS: arrays.test: array-set!: short: store/fetch: -512
PASS: arrays.test: array-set!: short: store/fetch: -1024
PASS: arrays.test: array-set!: short: store/fetch: -2048
PASS: arrays.test: array-set!: short: store/fetch: -4096
PASS: arrays.test: array-set!: short: store/fetch: -8192
PASS: arrays.test: array-set!: short: store/fetch: -16384
PASS: arrays.test: array-set!: short: store/fetch: -32768
PASS: arrays.test: array-set!: one dim: start
PASS: arrays.test: array-set!: one dim: end
PASS: arrays.test: array-set!: one dim: start-1
PASS: arrays.test: array-set!: one dim: end+1
PASS: arrays.test: array-set!: one dim: two indexes
PASS: arrays.test: array-set!: two dim: start
PASS: arrays.test: array-set!: two dim: end
PASS: arrays.test: array-set!: two dim: start i-1
PASS: arrays.test: array-set!: two dim: end i+1
PASS: arrays.test: array-set!: two dim: one index
PASS: arrays.test: array-set!: two dim: three indexes
PASS: arrays.test: typed arrays: array-ref byte: 0
PASS: arrays.test: typed arrays: array-ref byte: 127
PASS: arrays.test: typed arrays: array-ref byte: -128
PASS: arrays.test: typed arrays: shared with rank 1 equality: change offset
PASS: arrays.test: typed arrays: shared with rank 1 equality: change stride
PASS: arrays.test: syntax: rank and lower bounds (eval)
PASS: arrays.test: syntax: rank and lower bounds (compile -O0)
PASS: arrays.test: syntax: rank and lower bounds (compile -O2)
PASS: arrays.test: syntax: negative lower bound (eval)
PASS: arrays.test: syntax: negative lower bound (compile -O0)
PASS: arrays.test: syntax: negative lower bound (compile -O2)
PASS: arrays.test: syntax: negative length (eval)
PASS: arrays.test: syntax: negative length (compile -O0)
PASS: arrays.test: syntax: negative length (compile -O2)
PASS: arrays.test: syntax: bitvector is self-evaluating (eval)
PASS: arrays.test: syntax: bitvector is self-evaluating (compile -O0)
PASS: arrays.test: syntax: bitvector is self-evaluating (compile -O2)
PASS: arrays.test: syntax: typed arrays that are not uniform arrays (eval)
PASS: arrays.test: syntax: typed arrays that are not uniform arrays (compile -O0)
PASS: arrays.test: syntax: typed arrays that are not uniform arrays (compile -O2)
PASS: arrays.test: equal?: array and non-array (eval)
PASS: arrays.test: equal?: array and non-array (compile -O0)
PASS: arrays.test: equal?: array and non-array (compile -O2)
PASS: arrays.test: equal?: empty vectors of different types (eval)
PASS: arrays.test: equal?: empty vectors of different types (compile -O0)
PASS: arrays.test: equal?: empty vectors of different types (compile -O2)
PASS: arrays.test: equal?: empty arrays of different types (eval)
PASS: arrays.test: equal?: empty arrays of different types (compile -O0)
PASS: arrays.test: equal?: empty arrays of different types (compile -O2)
PASS: arrays.test: equal?: empty arrays of the same type (eval)
PASS: arrays.test: equal?: empty arrays of the same type (compile -O0)
PASS: arrays.test: equal?: empty arrays of the same type (compile -O2)
PASS: arrays.test: equal?: identical uniform vectors of the same type (eval)
PASS: arrays.test: equal?: identical uniform vectors of the same type (compile -O0)
PASS: arrays.test: equal?: identical uniform vectors of the same type (compile -O2)
PASS: arrays.test: equal?: nonidentical uniform vectors of the same type (eval)
PASS: arrays.test: equal?: nonidentical uniform vectors of the same type (compile -O0)
PASS: arrays.test: equal?: nonidentical uniform vectors of the same type (compile -O2)
PASS: arrays.test: equal?: identical uniform vectors of different types (eval)
PASS: arrays.test: equal?: identical uniform vectors of different types (compile -O0)
PASS: arrays.test: equal?: identical uniform vectors of different types (compile -O2)
PASS: arrays.test: equal?: nonidentical uniform vectors of different types (eval)
PASS: arrays.test: equal?: nonidentical uniform vectors of different types (compile -O0)
PASS: arrays.test: equal?: nonidentical uniform vectors of different types (compile -O2)
PASS: arrays.test: equal?: vector and one-dimensional array (eval)
PASS: arrays.test: equal?: vector and one-dimensional array (compile -O0)
PASS: arrays.test: equal?: vector and one-dimensional array (compile -O2)
PASS: arrays.test: generalized vector slices: [unnamed test] (eval)
PASS: arrays.test: generalized vector slices: [unnamed test] (compile -O0)
PASS: arrays.test: generalized vector slices: [unnamed test] (compile -O2)
PASS: arrays.test: generalized vector slices: [unnamed test] (eval)
PASS: arrays.test: generalized vector slices: [unnamed test] (compile -O0)
PASS: arrays.test: generalized vector slices: [unnamed test] (compile -O2)
PASS: arrays.test: printing arrays: writing 1D arrays that aren't vectors (eval)
PASS: arrays.test: printing arrays: writing 1D arrays that aren't vectors (compile -O0)
PASS: arrays.test: printing arrays: writing 1D arrays that aren't vectors (compile -O2)
PASS: arrays.test: printing arrays: 0-array (eval)
PASS: arrays.test: printing arrays: 0-array (compile -O0)
PASS: arrays.test: printing arrays: 0-array (compile -O2)
PASS: arrays.test: printing arrays: 2-array (eval)
PASS: arrays.test: printing arrays: 2-array (compile -O0)
PASS: arrays.test: printing arrays: 2-array (compile -O2)
PASS: arrays.test: printing arrays: empty 3-array (eval)
PASS: arrays.test: printing arrays: empty 3-array (compile -O0)
PASS: arrays.test: printing arrays: empty 3-array (compile -O2)
PASS: arrays.test: printing arrays: empty 3-array with last nonempty dim. (eval)
PASS: arrays.test: printing arrays: empty 3-array with last nonempty dim. (compile -O0)
PASS: arrays.test: printing arrays: empty 3-array with last nonempty dim. (compile -O2)
PASS: arrays.test: printing arrays: empty typed 3-array with last nonempty dim. (eval)
PASS: arrays.test: printing arrays: empty typed 3-array with last nonempty dim. (compile -O0)
PASS: arrays.test: printing arrays: empty typed 3-array with last nonempty dim. (compile -O2)
PASS: arrays.test: printing arrays: empty 3-array with middle nonempty dim. (eval)
PASS: arrays.test: printing arrays: empty 3-array with middle nonempty dim. (compile -O0)
PASS: arrays.test: printing arrays: empty 3-array with middle nonempty dim. (compile -O2)
PASS: arrays.test: printing arrays: empty 3-array with first nonempty dim. (eval)
PASS: arrays.test: printing arrays: empty 3-array with first nonempty dim. (compile -O0)
PASS: arrays.test: printing arrays: empty 3-array with first nonempty dim. (compile -O2)
PASS: arrays.test: printing arrays: 3-array with non-zero lower bounds (eval)
PASS: arrays.test: printing arrays: 3-array with non-zero lower bounds (compile -O0)
PASS: arrays.test: printing arrays: 3-array with non-zero lower bounds (compile -O2)
PASS: arrays.test: printing arrays: 3-array with non-zero-lower bounds and last nonempty dim. (eval)
PASS: arrays.test: printing arrays: 3-array with non-zero-lower bounds and last nonempty dim. (compile -O0)
PASS: arrays.test: printing arrays: 3-array with non-zero-lower bounds and last nonempty dim. (compile -O2)
PASS: arrays.test: printing arrays: 3-array with non-zero-lower bounds and middle nonempty dim. (eval)
PASS: arrays.test: printing arrays: 3-array with non-zero-lower bounds and middle nonempty dim. (compile -O0)
PASS: arrays.test: printing arrays: 3-array with non-zero-lower bounds and middle nonempty dim. (compile -O2)
PASS: arrays.test: printing arrays: 3-array with non-zero-lower bounds and first nonempty dim. (eval)
PASS: arrays.test: printing arrays: 3-array with non-zero-lower bounds and first nonempty dim. (compile -O0)
PASS: arrays.test: printing arrays: 3-array with non-zero-lower bounds and first nonempty dim. (compile -O2)
PASS: arrays.test: printing arrays: 3-array with singleton dim case I (eval)
PASS: arrays.test: printing arrays: 3-array with singleton dim case I (compile -O0)
PASS: arrays.test: printing arrays: 3-array with singleton dim case I (compile -O2)
PASS: arrays.test: printing arrays: 3-array with singleton dim case II (eval)
PASS: arrays.test: printing arrays: 3-array with singleton dim case II (compile -O0)
PASS: arrays.test: printing arrays: 3-array with singleton dim case II (compile -O2)
PASS: arrays.test: printing arrays: 3-array with singleton dim case III (eval)
PASS: arrays.test: printing arrays: 3-array with singleton dim case III (compile -O0)
PASS: arrays.test: printing arrays: 3-array with singleton dim case III (compile -O2)
PASS: arrays.test: reading arrays: empty 3-array with first nonempty dim I (eval)
PASS: arrays.test: reading arrays: empty 3-array with first nonempty dim I (compile -O0)
PASS: arrays.test: reading arrays: empty 3-array with first nonempty dim I (compile -O2)
PASS: arrays.test: reading arrays: empty 3-array with first nonempty dim II (eval)
PASS: arrays.test: reading arrays: empty 3-array with first nonempty dim II (compile -O0)
PASS: arrays.test: reading arrays: empty 3-array with first nonempty dim II (compile -O2)
PASS: arrays.test: reading arrays: empty 3-array with middle nonempty dim I (eval)
PASS: arrays.test: reading arrays: empty 3-array with middle nonempty dim I (compile -O0)
PASS: arrays.test: reading arrays: empty 3-array with middle nonempty dim I (compile -O2)
PASS: arrays.test: reading arrays: empty 3-array with middle nonempty dim II (eval)
PASS: arrays.test: reading arrays: empty 3-array with middle nonempty dim II (compile -O0)
PASS: arrays.test: reading arrays: empty 3-array with middle nonempty dim II (compile -O2)
PASS: arrays.test: reading arrays: empty typed 3-array with middle nonempty dim I (eval)
PASS: arrays.test: reading arrays: empty typed 3-array with middle nonempty dim I (compile -O0)
PASS: arrays.test: reading arrays: empty typed 3-array with middle nonempty dim I (compile -O2)
PASS: arrays.test: reading arrays: empty typed 3-array with middle nonempty dim II (eval)
PASS: arrays.test: reading arrays: empty typed 3-array with middle nonempty dim II (compile -O0)
PASS: arrays.test: reading arrays: empty typed 3-array with middle nonempty dim II (compile -O2)
PASS: arrays.test: reading arrays: array with specified size I (eval)
PASS: arrays.test: reading arrays: array with specified size I (compile -O0)
PASS: arrays.test: reading arrays: array with specified size I (compile -O2)
PASS: arrays.test: reading arrays: array with specified size II (eval)
PASS: arrays.test: reading arrays: array with specified size II (compile -O0)
PASS: arrays.test: reading arrays: array with specified size II (compile -O2)
PASS: asyncs.test: interrupts: self-interruptable v1
PASS: asyncs.test: interrupts: self-interruptable v2
PASS: asyncs.test: preemption via sigprof
PASS: asyncs.test: preemption via external thread
PASS: atomic.test: atomics: predicate (eval)
PASS: atomic.test: atomics: predicate (compile -O0)
PASS: atomic.test: atomics: predicate (compile -O2)
PASS: atomic.test: atomics: ref (eval)
PASS: atomic.test: atomics: ref (compile -O0)
PASS: atomic.test: atomics: ref (compile -O2)
PASS: atomic.test: atomics: swap (eval)
PASS: atomic.test: atomics: swap (compile -O0)
PASS: atomic.test: atomics: swap (compile -O2)
PASS: atomic.test: atomics: set and ref (eval)
PASS: atomic.test: atomics: set and ref (compile -O0)
PASS: atomic.test: atomics: set and ref (compile -O2)
PASS: atomic.test: atomics: swap and ref (eval)
PASS: atomic.test: atomics: swap and ref (compile -O0)
PASS: atomic.test: atomics: swap and ref (compile -O2)
PASS: atomic.test: atomics: compare and swap (eval)
PASS: atomic.test: atomics: compare and swap (compile -O0)
PASS: atomic.test: atomics: compare and swap (compile -O2)
PASS: atomic.test: atomics: compare and swap (wrong) (eval)
PASS: atomic.test: atomics: compare and swap (wrong) (compile -O0)
PASS: atomic.test: atomics: compare and swap (wrong) (compile -O2)
PASS: atomic.test: atomics: compare and swap and ref (eval)
PASS: atomic.test: atomics: compare and swap and ref (compile -O0)
PASS: atomic.test: atomics: compare and swap and ref (compile -O2)
PASS: atomic.test: atomics: compare and swap (wrong) and ref (eval)
PASS: atomic.test: atomics: compare and swap (wrong) and ref (compile -O0)
PASS: atomic.test: atomics: compare and swap (wrong) and ref (compile -O2)
PASS: atomic.test: atomics: class-of (eval)
PASS: atomic.test: atomics: class-of (compile -O0)
PASS: atomic.test: atomics: class-of (compile -O2)
PASS: bit-operations.test: bit-extract: documented?
PASS: bit-operations.test: bit-extract: extract from zero: single bit 0
PASS: bit-operations.test: bit-extract: extract from zero: single bit 1
PASS: bit-operations.test: bit-extract: extract from zero: single bit 28
PASS: bit-operations.test: bit-extract: extract from zero: single bit 29
PASS: bit-operations.test: bit-extract: extract from zero: single bit 30
PASS: bit-operations.test: bit-extract: extract from zero: single bit 31
PASS: bit-operations.test: bit-extract: extract from zero: fixnum-bit - 1 bits starting at 0
PASS: bit-operations.test: bit-extract: extract from zero: fixnum-bit - 1 bits starting at 1
PASS: bit-operations.test: bit-extract: extract from zero: fixnum-bit - 1 bits starting at 2
PASS: bit-operations.test: bit-extract: extract from zero: fixnum-bit - 1 bits starting at 28
PASS: bit-operations.test: bit-extract: extract from zero: fixnum-bit - 1 bits starting at 29
PASS: bit-operations.test: bit-extract: extract from zero: fixnum-bit - 1 bits starting at 30
PASS: bit-operations.test: bit-extract: extract from zero: fixnum-bit - 1 bits starting at 31
PASS: bit-operations.test: bit-extract: extract from zero: fixnum-bit bits starting at 0
PASS: bit-operations.test: bit-extract: extract from zero: fixnum-bit bits starting at 1
PASS: bit-operations.test: bit-extract: extract from zero: fixnum-bit bits starting at 2
PASS: bit-operations.test: bit-extract: extract from zero: fixnum-bit bits starting at 28
PASS: bit-operations.test: bit-extract: extract from zero: fixnum-bit bits starting at 29
PASS: bit-operations.test: bit-extract: extract from zero: fixnum-bit bits starting at 30
PASS: bit-operations.test: bit-extract: extract from zero: fixnum-bit bits starting at 31
PASS: bit-operations.test: bit-extract: extract from zero: fixnum-bit + 1 bits starting at 0
PASS: bit-operations.test: bit-extract: extract from zero: fixnum-bit + 1 bits starting at 1
PASS: bit-operations.test: bit-extract: extract from zero: fixnum-bit + 1 bits starting at 2
PASS: bit-operations.test: bit-extract: extract from zero: fixnum-bit + 1 bits starting at 28
PASS: bit-operations.test: bit-extract: extract from zero: fixnum-bit + 1 bits starting at 29
PASS: bit-operations.test: bit-extract: extract from zero: fixnum-bit + 1 bits starting at 30
PASS: bit-operations.test: bit-extract: extract from zero: fixnum-bit + 1 bits starting at 31
PASS: bit-operations.test: bit-extract: extract from fixnum-max: single bit 0
PASS: bit-operations.test: bit-extract: extract from fixnum-max: single bit 1
PASS: bit-operations.test: bit-extract: extract from fixnum-max: single bit 28
PASS: bit-operations.test: bit-extract: extract from fixnum-max: single bit 29
PASS: bit-operations.test: bit-extract: extract from fixnum-max: single bit 30
PASS: bit-operations.test: bit-extract: extract from fixnum-max: single bit 31
PASS: bit-operations.test: bit-extract: extract from fixnum-max: fixnum-bit - 1 bits starting at 0
PASS: bit-operations.test: bit-extract: extract from fixnum-max: fixnum-bit - 1 bits starting at 1
PASS: bit-operations.test: bit-extract: extract from fixnum-max: fixnum-bit - 1 bits starting at 2
PASS: bit-operations.test: bit-extract: extract from fixnum-max: fixnum-bit - 1 bits starting at 28
PASS: bit-operations.test: bit-extract: extract from fixnum-max: fixnum-bit - 1 bits starting at 29
PASS: bit-operations.test: bit-extract: extract from fixnum-max: fixnum-bit - 1 bits starting at 30
PASS: bit-operations.test: bit-extract: extract from fixnum-max: fixnum-bit - 1 bits starting at 31
PASS: bit-operations.test: bit-extract: extract from fixnum-max: fixnum-bit bits starting at 0
PASS: bit-operations.test: bit-extract: extract from fixnum-max: fixnum-bit bits starting at 1
PASS: bit-operations.test: bit-extract: extract from fixnum-max: fixnum-bit bits starting at 2
PASS: bit-operations.test: bit-extract: extract from fixnum-max: fixnum-bit bits starting at 28
PASS: bit-operations.test: bit-extract: extract from fixnum-max: fixnum-bit bits starting at 29
PASS: bit-operations.test: bit-extract: extract from fixnum-max: fixnum-bit bits starting at 30
PASS: bit-operations.test: bit-extract: extract from fixnum-max: fixnum-bit bits starting at 31
PASS: bit-operations.test: bit-extract: extract from fixnum-max: fixnum-bit + 1 bits starting at 0
PASS: bit-operations.test: bit-extract: extract from fixnum-max: fixnum-bit + 1 bits starting at 1
PASS: bit-operations.test: bit-extract: extract from fixnum-max: fixnum-bit + 1 bits starting at 2
PASS: bit-operations.test: bit-extract: extract from fixnum-max: fixnum-bit + 1 bits starting at 28
PASS: bit-operations.test: bit-extract: extract from fixnum-max: fixnum-bit + 1 bits starting at 29
PASS: bit-operations.test: bit-extract: extract from fixnum-max: fixnum-bit + 1 bits starting at 30
PASS: bit-operations.test: bit-extract: extract from fixnum-max: fixnum-bit + 1 bits starting at 31
PASS: bit-operations.test: bit-extract: extract from fixnum-max + 1: single bit 0
PASS: bit-operations.test: bit-extract: extract from fixnum-max + 1: single bit 1
PASS: bit-operations.test: bit-extract: extract from fixnum-max + 1: single bit 28
PASS: bit-operations.test: bit-extract: extract from fixnum-max + 1: single bit 29
PASS: bit-operations.test: bit-extract: extract from fixnum-max + 1: single bit 30
PASS: bit-operations.test: bit-extract: extract from fixnum-max + 1: single bit 31
PASS: bit-operations.test: bit-extract: extract from fixnum-max + 1: fixnum-bit - 1 bits starting at 0
PASS: bit-operations.test: bit-extract: extract from fixnum-max + 1: fixnum-bit - 1 bits starting at 1
PASS: bit-operations.test: bit-extract: extract from fixnum-max + 1: fixnum-bit - 1 bits starting at 2
PASS: bit-operations.test: bit-extract: extract from fixnum-max + 1: fixnum-bit - 1 bits starting at 28
PASS: bit-operations.test: bit-extract: extract from fixnum-max + 1: fixnum-bit - 1 bits starting at 29
PASS: bit-operations.test: bit-extract: extract from fixnum-max + 1: fixnum-bit - 1 bits starting at 30
PASS: bit-operations.test: bit-extract: extract from fixnum-max + 1: fixnum-bit - 1 bits starting at 31
PASS: bit-operations.test: bit-extract: extract from fixnum-max + 1: fixnum-bit bits starting at 0
PASS: bit-operations.test: bit-extract: extract from fixnum-max + 1: fixnum-bit bits starting at 1
PASS: bit-operations.test: bit-extract: extract from fixnum-max + 1: fixnum-bit bits starting at 2
PASS: bit-operations.test: bit-extract: extract from fixnum-max + 1: fixnum-bit bits starting at 28
PASS: bit-operations.test: bit-extract: extract from fixnum-max + 1: fixnum-bit bits starting at 29
PASS: bit-operations.test: bit-extract: extract from fixnum-max + 1: fixnum-bit bits starting at 30
PASS: bit-operations.test: bit-extract: extract from fixnum-max + 1: fixnum-bit bits starting at 31
PASS: bit-operations.test: bit-extract: extract from fixnum-max + 1: fixnum-bit + 1 bits starting at 0
PASS: bit-operations.test: bit-extract: extract from fixnum-max + 1: fixnum-bit + 1 bits starting at 1
PASS: bit-operations.test: bit-extract: extract from fixnum-max + 1: fixnum-bit + 1 bits starting at 2
PASS: bit-operations.test: bit-extract: extract from fixnum-max + 1: fixnum-bit + 1 bits starting at 28
PASS: bit-operations.test: bit-extract: extract from fixnum-max + 1: fixnum-bit + 1 bits starting at 29
PASS: bit-operations.test: bit-extract: extract from fixnum-max + 1: fixnum-bit + 1 bits starting at 30
PASS: bit-operations.test: bit-extract: extract from fixnum-max + 1: fixnum-bit + 1 bits starting at 31
PASS: bit-operations.test: bit-extract: extract from fixnum-min: single bit 0
PASS: bit-operations.test: bit-extract: extract from fixnum-min: single bit 1
PASS: bit-operations.test: bit-extract: extract from fixnum-min: single bit 28
PASS: bit-operations.test: bit-extract: extract from fixnum-min: single bit 29
PASS: bit-operations.test: bit-extract: extract from fixnum-min: single bit 30
PASS: bit-operations.test: bit-extract: extract from fixnum-min: single bit 31
PASS: bit-operations.test: bit-extract: extract from fixnum-min: fixnum-bit - 1 bits starting at 0
PASS: bit-operations.test: bit-extract: extract from fixnum-min: fixnum-bit - 1 bits starting at 1
PASS: bit-operations.test: bit-extract: extract from fixnum-min: fixnum-bit - 1 bits starting at 2
PASS: bit-operations.test: bit-extract: extract from fixnum-min: fixnum-bit - 1 bits starting at 28
PASS: bit-operations.test: bit-extract: extract from fixnum-min: fixnum-bit - 1 bits starting at 29
PASS: bit-operations.test: bit-extract: extract from fixnum-min: fixnum-bit - 1 bits starting at 30
PASS: bit-operations.test: bit-extract: extract from fixnum-min: fixnum-bit - 1 bits starting at 31
PASS: bit-operations.test: bit-extract: extract from fixnum-min: fixnum-bit bits starting at 0
PASS: bit-operations.test: bit-extract: extract from fixnum-min: fixnum-bit bits starting at 1
PASS: bit-operations.test: bit-extract: extract from fixnum-min: fixnum-bit bits starting at 2
PASS: bit-operations.test: bit-extract: extract from fixnum-min: fixnum-bit bits starting at 28
PASS: bit-operations.test: bit-extract: extract from fixnum-min: fixnum-bit bits starting at 29
PASS: bit-operations.test: bit-extract: extract from fixnum-min: fixnum-bit bits starting at 30
PASS: bit-operations.test: bit-extract: extract from fixnum-min: fixnum-bit bits starting at 31
PASS: bit-operations.test: bit-extract: extract from fixnum-min: fixnum-bit + 1 bits starting at 0
PASS: bit-operations.test: bit-extract: extract from fixnum-min: fixnum-bit + 1 bits starting at 1
PASS: bit-operations.test: bit-extract: extract from fixnum-min: fixnum-bit + 1 bits starting at 2
PASS: bit-operations.test: bit-extract: extract from fixnum-min: fixnum-bit + 1 bits starting at 28
PASS: bit-operations.test: bit-extract: extract from fixnum-min: fixnum-bit + 1 bits starting at 29
PASS: bit-operations.test: bit-extract: extract from fixnum-min: fixnum-bit + 1 bits starting at 30
PASS: bit-operations.test: bit-extract: extract from fixnum-min: fixnum-bit + 1 bits starting at 31
PASS: bit-operations.test: bit-extract: extract from fixnum-min - 1: single bit 0
PASS: bit-operations.test: bit-extract: extract from fixnum-min - 1: single bit 1
PASS: bit-operations.test: bit-extract: extract from fixnum-min - 1: single bit 28
PASS: bit-operations.test: bit-extract: extract from fixnum-min - 1: single bit 29
PASS: bit-operations.test: bit-extract: extract from fixnum-min - 1: single bit 30
PASS: bit-operations.test: bit-extract: extract from fixnum-min - 1: single bit 31
PASS: bit-operations.test: bit-extract: extract from fixnum-min - 1: fixnum-bit - 1 bits starting at 0
PASS: bit-operations.test: bit-extract: extract from fixnum-min - 1: fixnum-bit - 1 bits starting at 1
PASS: bit-operations.test: bit-extract: extract from fixnum-min - 1: fixnum-bit - 1 bits starting at 2
PASS: bit-operations.test: bit-extract: extract from fixnum-min - 1: fixnum-bit - 1 bits starting at 28
PASS: bit-operations.test: bit-extract: extract from fixnum-min - 1: fixnum-bit - 1 bits starting at 29
PASS: bit-operations.test: bit-extract: extract from fixnum-min - 1: fixnum-bit - 1 bits starting at 30
PASS: bit-operations.test: bit-extract: extract from fixnum-min - 1: fixnum-bit - 1 bits starting at 31
PASS: bit-operations.test: bit-extract: extract from fixnum-min - 1: fixnum-bit bits starting at 0
PASS: bit-operations.test: bit-extract: extract from fixnum-min - 1: fixnum-bit bits starting at 1
PASS: bit-operations.test: bit-extract: extract from fixnum-min - 1: fixnum-bit bits starting at 2
PASS: bit-operations.test: bit-extract: extract from fixnum-min - 1: fixnum-bit bits starting at 28
PASS: bit-operations.test: bit-extract: extract from fixnum-min - 1: fixnum-bit bits starting at 29
PASS: bit-operations.test: bit-extract: extract from fixnum-min - 1: fixnum-bit bits starting at 30
PASS: bit-operations.test: bit-extract: extract from fixnum-min - 1: fixnum-bit bits starting at 31
PASS: bit-operations.test: bit-extract: extract from fixnum-min - 1: fixnum-bit + 1 bits starting at 0
PASS: bit-operations.test: bit-extract: extract from fixnum-min - 1: fixnum-bit + 1 bits starting at 1
PASS: bit-operations.test: bit-extract: extract from fixnum-min - 1: fixnum-bit + 1 bits starting at 2
PASS: bit-operations.test: bit-extract: extract from fixnum-min - 1: fixnum-bit + 1 bits starting at 28
PASS: bit-operations.test: bit-extract: extract from fixnum-min - 1: fixnum-bit + 1 bits starting at 29
PASS: bit-operations.test: bit-extract: extract from fixnum-min - 1: fixnum-bit + 1 bits starting at 30
PASS: bit-operations.test: bit-extract: extract from fixnum-min - 1: fixnum-bit + 1 bits starting at 31
PASS: bit-operations.test: bitshifts on word boundaries: (= (ash 1 32) 4294967296)
PASS: bit-operations.test: bitshifts on word boundaries: (= (ash 1 64) 18446744073709551616)
PASS: bitvectors.test: predicates: (bitvector? #*1010101010)
PASS: bitvectors.test: predicates: (array? #*1010101010)
PASS: bitvectors.test: predicates: (eq? (array-type #*1010101010) (quote b))
PASS: bitvectors.test: equality: (equal? #*1010101 #*1010101)
PASS: bitvectors.test: equality: (array-equal? #*1010101 #*1010101)
PASS: bitvectors.test: equality: (not (equal? #*10101010 #*1010101))
PASS: bitvectors.test: equality: (not (array-equal? #*10101010 #*1010101))
PASS: bitvectors.test: lists: (equal? (bitvector->list #*10010) (quote (#t #f #f #t #f)))
PASS: bitvectors.test: lists: (equal? (array->list #*10010) (quote (#t #f #f #t #f)))
PASS: bitvectors.test: lists: (equal? #*10010 (list->bitvector (quote (#t #f #f #t #f))))
PASS: bitvectors.test: ref and set: as bitvector: (eqv? (bitvector-bit-set? bv 0) #f)
PASS: bitvectors.test: ref and set: as bitvector: (eqv? (bitvector-bit-set? bv 2) #t)
PASS: bitvectors.test: ref and set: as bitvector: (eqv? (bitvector-bit-set? bv 0) #t)
PASS: bitvectors.test: ref and set: as bitvector: (eqv? (bitvector-bit-clear? bv 0) #f)
PASS: bitvectors.test: ref and set: as bitvector: (eqv? (bitvector-bit-set? bv 0) #f)
PASS: bitvectors.test: ref and set: as bitvector: (eqv? (bitvector-bit-clear? bv 0) #t)
PASS: bitvectors.test: ref and set: as array: (eqv? (array-ref bv 0) #f)
PASS: bitvectors.test: ref and set: as array: (eqv? (array-ref bv 2) #t)
PASS: bitvectors.test: ref and set: as array: (eqv? (array-ref bv 0) #t)
PASS: bitvectors.test: all bits: bv
PASS: bitvectors.test: all bits: bv
PASS: bitvectors.test: all bits: bv
PASS: bitvectors.test: all bits: bv
PASS: bitvectors.test: all bits: bv
PASS: bitvectors.test: bitvector-set-bits!: #t
PASS: bitvectors.test: bitvector-set-bits!: #t, shorter
PASS: bitvectors.test: bitvector-clear-bits!: #f
PASS: bitvectors.test: bitvector-clear-bits!: #f, shorter
PASS: bitvectors.test: bitvector-count: (bitvector-count #*01110111)
PASS: bitvectors.test: bitvector-count: (let ((bv #*01110111)) (- (bitvector-length bv) (bitvector-count bv)))
PASS: bitvectors.test: bitvector-position: (bitvector-position #*01110111 #f)
PASS: bitvectors.test: bitvector-position: (bitvector-position #*01110111 #t)
PASS: bitvectors.test: bitvector-position: (bitvector-position #*01110111 #f 1)
PASS: bitvectors.test: bitvector-position: (bitvector-position #*01110111 #f 4)
PASS: bitvectors.test: bitvector-position: (bitvector-position #*01110111 #t 5)
PASS: bitvectors.test: bitvector-position: (bitvector-position #*01110111 #f 5)
PASS: bitvectors.test: bitvector-count-bits: (bitvector-count-bits #*01110111 #*11001101)
PASS: brainfuck.test: (equal? (with-output-to-string (lambda () (call-with-input-string prog (lambda (port) (read-and-compile port #:from (quote brainfuck) #:to (quote value)))))) Hello World!)
PASS: bytevectors.test: 2.2 General Operations: native-endianness (eval)
PASS: bytevectors.test: 2.2 General Operations: native-endianness (compile -O0)
PASS: bytevectors.test: 2.2 General Operations: native-endianness (compile -O2)
PASS: bytevectors.test: 2.2 General Operations: make-bytevector (eval)
PASS: bytevectors.test: 2.2 General Operations: make-bytevector (compile -O0)
PASS: bytevectors.test: 2.2 General Operations: make-bytevector (compile -O2)
PASS: bytevectors.test: 2.2 General Operations: bytevector-length (eval)
PASS: bytevectors.test: 2.2 General Operations: bytevector-length (compile -O0)
PASS: bytevectors.test: 2.2 General Operations: bytevector-length (compile -O2)
PASS: bytevectors.test: 2.2 General Operations: bytevector=? (eval)
PASS: bytevectors.test: 2.2 General Operations: bytevector=? (compile -O0)
PASS: bytevectors.test: 2.2 General Operations: bytevector=? (compile -O2)
PASS: bytevectors.test: 2.2 General Operations: bytevector-fill! with fill 255 (eval)
PASS: bytevectors.test: 2.2 General Operations: bytevector-fill! with fill 255 (compile -O0)
PASS: bytevectors.test: 2.2 General Operations: bytevector-fill! with fill 255 (compile -O2)
PASS: bytevectors.test: 2.2 General Operations: bytevector-fill! with fill -128 (eval)
PASS: bytevectors.test: 2.2 General Operations: bytevector-fill! with fill -128 (compile -O0)
PASS: bytevectors.test: 2.2 General Operations: bytevector-fill! with fill -128 (compile -O2)
PASS: bytevectors.test: 2.2 General Operations: bytevector-copy! overlapping (eval)
PASS: bytevectors.test: 2.2 General Operations: bytevector-copy! overlapping (compile -O0)
PASS: bytevectors.test: 2.2 General Operations: bytevector-copy! overlapping (compile -O2)
PASS: bytevectors.test: 2.3 Operations on Bytes and Octets: bytevector-{u8,s8}-ref (eval)
PASS: bytevectors.test: 2.3 Operations on Bytes and Octets: bytevector-{u8,s8}-ref (compile -O0)
PASS: bytevectors.test: 2.3 Operations on Bytes and Octets: bytevector-{u8,s8}-ref (compile -O2)
PASS: bytevectors.test: 2.3 Operations on Bytes and Octets: bytevector-{u8,s8}-set! (eval)
PASS: bytevectors.test: 2.3 Operations on Bytes and Octets: bytevector-{u8,s8}-set! (compile -O0)
PASS: bytevectors.test: 2.3 Operations on Bytes and Octets: bytevector-{u8,s8}-set! (compile -O2)
PASS: bytevectors.test: 2.3 Operations on Bytes and Octets: bytevector->u8-list (eval)
PASS: bytevectors.test: 2.3 Operations on Bytes and Octets: bytevector->u8-list (compile -O0)
PASS: bytevectors.test: 2.3 Operations on Bytes and Octets: bytevector->u8-list (compile -O2)
PASS: bytevectors.test: 2.3 Operations on Bytes and Octets: u8-list->bytevector (eval)
PASS: bytevectors.test: 2.3 Operations on Bytes and Octets: u8-list->bytevector (compile -O0)
PASS: bytevectors.test: 2.3 Operations on Bytes and Octets: u8-list->bytevector (compile -O2)
PASS: bytevectors.test: 2.3 Operations on Bytes and Octets: u8-list->bytevector [invalid argument type] (eval)
PASS: bytevectors.test: 2.3 Operations on Bytes and Octets: u8-list->bytevector [invalid argument type] (compile -O0)
PASS: bytevectors.test: 2.3 Operations on Bytes and Octets: u8-list->bytevector [invalid argument type] (compile -O2)
PASS: bytevectors.test: 2.3 Operations on Bytes and Octets: u8-list->bytevector [circular list] (eval)
PASS: bytevectors.test: 2.3 Operations on Bytes and Octets: u8-list->bytevector [circular list] (compile -O0)
PASS: bytevectors.test: 2.3 Operations on Bytes and Octets: u8-list->bytevector [circular list] (compile -O2)
PASS: bytevectors.test: 2.3 Operations on Bytes and Octets: bytevector-uint-{ref,set!} [small] (eval)
PASS: bytevectors.test: 2.3 Operations on Bytes and Octets: bytevector-uint-{ref,set!} [small] (compile -O0)
PASS: bytevectors.test: 2.3 Operations on Bytes and Octets: bytevector-uint-{ref,set!} [small] (compile -O2)
PASS: bytevectors.test: 2.3 Operations on Bytes and Octets: bytevector-uint-set! [large] (eval)
PASS: bytevectors.test: 2.3 Operations on Bytes and Octets: bytevector-uint-set! [large] (compile -O0)
PASS: bytevectors.test: 2.3 Operations on Bytes and Octets: bytevector-uint-set! [large] (compile -O2)
PASS: bytevectors.test: 2.3 Operations on Bytes and Octets: bytevector-uint-{ref,set!} [large] (eval)
PASS: bytevectors.test: 2.3 Operations on Bytes and Octets: bytevector-uint-{ref,set!} [large] (compile -O0)
PASS: bytevectors.test: 2.3 Operations on Bytes and Octets: bytevector-uint-{ref,set!} [large] (compile -O2)
PASS: bytevectors.test: 2.3 Operations on Bytes and Octets: bytevector-sint-ref [small] (eval)
PASS: bytevectors.test: 2.3 Operations on Bytes and Octets: bytevector-sint-ref [small] (compile -O0)
PASS: bytevectors.test: 2.3 Operations on Bytes and Octets: bytevector-sint-ref [small] (compile -O2)
PASS: bytevectors.test: 2.3 Operations on Bytes and Octets: bytevector-sint-ref [large] (eval)
PASS: bytevectors.test: 2.3 Operations on Bytes and Octets: bytevector-sint-ref [large] (compile -O0)
PASS: bytevectors.test: 2.3 Operations on Bytes and Octets: bytevector-sint-ref [large] (compile -O2)
PASS: bytevectors.test: 2.3 Operations on Bytes and Octets: bytevector-sint-set! [small] (eval)
PASS: bytevectors.test: 2.3 Operations on Bytes and Octets: bytevector-sint-set! [small] (compile -O0)
PASS: bytevectors.test: 2.3 Operations on Bytes and Octets: bytevector-sint-set! [small] (compile -O2)
PASS: bytevectors.test: 2.3 Operations on Bytes and Octets: equal? (eval)
PASS: bytevectors.test: 2.3 Operations on Bytes and Octets: equal? (compile -O0)
PASS: bytevectors.test: 2.3 Operations on Bytes and Octets: equal? (compile -O2)
PASS: bytevectors.test: 2.4 Operations on Integers of Arbitrary Size: bytevector->sint-list (eval)
PASS: bytevectors.test: 2.4 Operations on Integers of Arbitrary Size: bytevector->sint-list (compile -O0)
PASS: bytevectors.test: 2.4 Operations on Integers of Arbitrary Size: bytevector->sint-list (compile -O2)
PASS: bytevectors.test: 2.4 Operations on Integers of Arbitrary Size: bytevector->uint-list (eval)
PASS: bytevectors.test: 2.4 Operations on Integers of Arbitrary Size: bytevector->uint-list (compile -O0)
PASS: bytevectors.test: 2.4 Operations on Integers of Arbitrary Size: bytevector->uint-list (compile -O2)
PASS: bytevectors.test: 2.4 Operations on Integers of Arbitrary Size: bytevector->uint-list [empty] (eval)
PASS: bytevectors.test: 2.4 Operations on Integers of Arbitrary Size: bytevector->uint-list [empty] (compile -O0)
PASS: bytevectors.test: 2.4 Operations on Integers of Arbitrary Size: bytevector->uint-list [empty] (compile -O2)
PASS: bytevectors.test: 2.4 Operations on Integers of Arbitrary Size: bytevector->sint-list [out-of-range] (eval)
PASS: bytevectors.test: 2.4 Operations on Integers of Arbitrary Size: bytevector->sint-list [out-of-range] (compile -O0)
PASS: bytevectors.test: 2.4 Operations on Integers of Arbitrary Size: bytevector->sint-list [out-of-range] (compile -O2)
PASS: bytevectors.test: 2.4 Operations on Integers of Arbitrary Size: bytevector->uint-list [out-of-range] (eval)
PASS: bytevectors.test: 2.4 Operations on Integers of Arbitrary Size: bytevector->uint-list [out-of-range] (compile -O0)
PASS: bytevectors.test: 2.4 Operations on Integers of Arbitrary Size: bytevector->uint-list [out-of-range] (compile -O2)
PASS: bytevectors.test: 2.4 Operations on Integers of Arbitrary Size: bytevector->uint-list [word size doesn't divide length] (eval)
PASS: bytevectors.test: 2.4 Operations on Integers of Arbitrary Size: bytevector->uint-list [word size doesn't divide length] (compile -O0)
PASS: bytevectors.test: 2.4 Operations on Integers of Arbitrary Size: bytevector->uint-list [word size doesn't divide length] (compile -O2)
PASS: bytevectors.test: 2.4 Operations on Integers of Arbitrary Size: {sint,uint}-list->bytevector (eval)
PASS: bytevectors.test: 2.4 Operations on Integers of Arbitrary Size: {sint,uint}-list->bytevector (compile -O0)
PASS: bytevectors.test: 2.4 Operations on Integers of Arbitrary Size: {sint,uint}-list->bytevector (compile -O2)
PASS: bytevectors.test: 2.4 Operations on Integers of Arbitrary Size: sint-list->bytevector [limits] (eval)
PASS: bytevectors.test: 2.4 Operations on Integers of Arbitrary Size: sint-list->bytevector [limits] (compile -O0)
PASS: bytevectors.test: 2.4 Operations on Integers of Arbitrary Size: sint-list->bytevector [limits] (compile -O2)
PASS: bytevectors.test: 2.4 Operations on Integers of Arbitrary Size: sint-list->bytevector [invalid argument type] (eval)
PASS: bytevectors.test: 2.4 Operations on Integers of Arbitrary Size: sint-list->bytevector [invalid argument type] (compile -O0)
PASS: bytevectors.test: 2.4 Operations on Integers of Arbitrary Size: sint-list->bytevector [invalid argument type] (compile -O2)
PASS: bytevectors.test: 2.4 Operations on Integers of Arbitrary Size: uint-list->bytevector [invalid argument type] (eval)
PASS: bytevectors.test: 2.4 Operations on Integers of Arbitrary Size: uint-list->bytevector [invalid argument type] (compile -O0)
PASS: bytevectors.test: 2.4 Operations on Integers of Arbitrary Size: uint-list->bytevector [invalid argument type] (compile -O2)
PASS: bytevectors.test: 2.4 Operations on Integers of Arbitrary Size: sint-list->bytevector [circular list] (eval)
PASS: bytevectors.test: 2.4 Operations on Integers of Arbitrary Size: sint-list->bytevector [circular list] (compile -O0)
PASS: bytevectors.test: 2.4 Operations on Integers of Arbitrary Size: sint-list->bytevector [circular list] (compile -O2)
PASS: bytevectors.test: 2.4 Operations on Integers of Arbitrary Size: uint-list->bytevector [circular list] (eval)
PASS: bytevectors.test: 2.4 Operations on Integers of Arbitrary Size: uint-list->bytevector [circular list] (compile -O0)
PASS: bytevectors.test: 2.4 Operations on Integers of Arbitrary Size: uint-list->bytevector [circular list] (compile -O2)
PASS: bytevectors.test: 2.4 Operations on Integers of Arbitrary Size: sint-list->bytevector [out-of-range] (eval)
PASS: bytevectors.test: 2.4 Operations on Integers of Arbitrary Size: sint-list->bytevector [out-of-range] (compile -O0)
PASS: bytevectors.test: 2.4 Operations on Integers of Arbitrary Size: sint-list->bytevector [out-of-range] (compile -O2)
PASS: bytevectors.test: 2.4 Operations on Integers of Arbitrary Size: uint-list->bytevector [out-of-range] (eval)
PASS: bytevectors.test: 2.4 Operations on Integers of Arbitrary Size: uint-list->bytevector [out-of-range] (compile -O0)
PASS: bytevectors.test: 2.4 Operations on Integers of Arbitrary Size: uint-list->bytevector [out-of-range] (compile -O2)
PASS: bytevectors.test: 2.5 Operations on 16-Bit Integers: bytevector-u16-ref (eval)
PASS: bytevectors.test: 2.5 Operations on 16-Bit Integers: bytevector-u16-ref (compile -O0)
PASS: bytevectors.test: 2.5 Operations on 16-Bit Integers: bytevector-u16-ref (compile -O2)
PASS: bytevectors.test: 2.5 Operations on 16-Bit Integers: bytevector-s16-ref (eval)
PASS: bytevectors.test: 2.5 Operations on 16-Bit Integers: bytevector-s16-ref (compile -O0)
PASS: bytevectors.test: 2.5 Operations on 16-Bit Integers: bytevector-s16-ref (compile -O2)
PASS: bytevectors.test: 2.5 Operations on 16-Bit Integers: bytevector-s16-ref [unaligned] (eval)
PASS: bytevectors.test: 2.5 Operations on 16-Bit Integers: bytevector-s16-ref [unaligned] (compile -O0)
PASS: bytevectors.test: 2.5 Operations on 16-Bit Integers: bytevector-s16-ref [unaligned] (compile -O2)
PASS: bytevectors.test: 2.5 Operations on 16-Bit Integers: bytevector-{u16,s16}-ref (eval)
PASS: bytevectors.test: 2.5 Operations on 16-Bit Integers: bytevector-{u16,s16}-ref (compile -O0)
PASS: bytevectors.test: 2.5 Operations on 16-Bit Integers: bytevector-{u16,s16}-ref (compile -O2)
PASS: bytevectors.test: 2.5 Operations on 16-Bit Integers: bytevector-native-{u16,s16}-{ref,set!} (eval)
PASS: bytevectors.test: 2.5 Operations on 16-Bit Integers: bytevector-native-{u16,s16}-{ref,set!} (compile -O0)
PASS: bytevectors.test: 2.5 Operations on 16-Bit Integers: bytevector-native-{u16,s16}-{ref,set!} (compile -O2)
PASS: bytevectors.test: 2.5 Operations on 16-Bit Integers: bytevector-s16-{ref,set!} [unaligned] (eval)
PASS: bytevectors.test: 2.5 Operations on 16-Bit Integers: bytevector-s16-{ref,set!} [unaligned] (compile -O0)
PASS: bytevectors.test: 2.5 Operations on 16-Bit Integers: bytevector-s16-{ref,set!} [unaligned] (compile -O2)
PASS: bytevectors.test: 2.6 Operations on 32-bit Integers: bytevector-u32-ref (eval)
PASS: bytevectors.test: 2.6 Operations on 32-bit Integers: bytevector-u32-ref (compile -O0)
PASS: bytevectors.test: 2.6 Operations on 32-bit Integers: bytevector-u32-ref (compile -O2)
PASS: bytevectors.test: 2.6 Operations on 32-bit Integers: bytevector-s32-ref (eval)
PASS: bytevectors.test: 2.6 Operations on 32-bit Integers: bytevector-s32-ref (compile -O0)
PASS: bytevectors.test: 2.6 Operations on 32-bit Integers: bytevector-s32-ref (compile -O2)
PASS: bytevectors.test: 2.6 Operations on 32-bit Integers: bytevector-{u32,s32}-ref (eval)
PASS: bytevectors.test: 2.6 Operations on 32-bit Integers: bytevector-{u32,s32}-ref (compile -O0)
PASS: bytevectors.test: 2.6 Operations on 32-bit Integers: bytevector-{u32,s32}-ref (compile -O2)
PASS: bytevectors.test: 2.6 Operations on 32-bit Integers: bytevector-{u32,s32}-native-{ref,set!} (eval)
PASS: bytevectors.test: 2.6 Operations on 32-bit Integers: bytevector-{u32,s32}-native-{ref,set!} (compile -O0)
PASS: bytevectors.test: 2.6 Operations on 32-bit Integers: bytevector-{u32,s32}-native-{ref,set!} (compile -O2)
PASS: bytevectors.test: 2.7 Operations on 64-bit Integers: bytevector-u64-ref (eval)
PASS: bytevectors.test: 2.7 Operations on 64-bit Integers: bytevector-u64-ref (compile -O0)
PASS: bytevectors.test: 2.7 Operations on 64-bit Integers: bytevector-u64-ref (compile -O2)
PASS: bytevectors.test: 2.7 Operations on 64-bit Integers: bytevector-s64-ref (eval)
PASS: bytevectors.test: 2.7 Operations on 64-bit Integers: bytevector-s64-ref (compile -O0)
PASS: bytevectors.test: 2.7 Operations on 64-bit Integers: bytevector-s64-ref (compile -O2)
PASS: bytevectors.test: 2.7 Operations on 64-bit Integers: bytevector-{u64,s64}-ref (eval)
PASS: bytevectors.test: 2.7 Operations on 64-bit Integers: bytevector-{u64,s64}-ref (compile -O0)
PASS: bytevectors.test: 2.7 Operations on 64-bit Integers: bytevector-{u64,s64}-ref (compile -O2)
PASS: bytevectors.test: 2.7 Operations on 64-bit Integers: bytevector-{u64,s64}-native-{ref,set!} (eval)
PASS: bytevectors.test: 2.7 Operations on 64-bit Integers: bytevector-{u64,s64}-native-{ref,set!} (compile -O0)
PASS: bytevectors.test: 2.7 Operations on 64-bit Integers: bytevector-{u64,s64}-native-{ref,set!} (compile -O2)
PASS: bytevectors.test: 2.7 Operations on 64-bit Integers: ref/set! with zero (eval)
PASS: bytevectors.test: 2.7 Operations on 64-bit Integers: ref/set! with zero (compile -O0)
PASS: bytevectors.test: 2.7 Operations on 64-bit Integers: ref/set! with zero (compile -O2)
PASS: bytevectors.test: 2.7 Operations on 64-bit Integers: bignum out of range (eval)
PASS: bytevectors.test: 2.7 Operations on 64-bit Integers: bignum out of range (compile -O0)
PASS: bytevectors.test: 2.7 Operations on 64-bit Integers: bignum out of range (compile -O2)
PASS: bytevectors.test: 2.8 Operations on IEEE-754 Representations: single, little endian (eval)
PASS: bytevectors.test: 2.8 Operations on IEEE-754 Representations: single, little endian (compile -O0)
PASS: bytevectors.test: 2.8 Operations on IEEE-754 Representations: single, little endian (compile -O2)
PASS: bytevectors.test: 2.8 Operations on IEEE-754 Representations: single, big endian (eval)
PASS: bytevectors.test: 2.8 Operations on IEEE-754 Representations: single, big endian (compile -O0)
PASS: bytevectors.test: 2.8 Operations on IEEE-754 Representations: single, big endian (compile -O2)
PASS: bytevectors.test: 2.8 Operations on IEEE-754 Representations: bytevector-ieee-single-native-{ref,set!} (eval)
PASS: bytevectors.test: 2.8 Operations on IEEE-754 Representations: bytevector-ieee-single-native-{ref,set!} (compile -O0)
PASS: bytevectors.test: 2.8 Operations on IEEE-754 Representations: bytevector-ieee-single-native-{ref,set!} (compile -O2)
PASS: bytevectors.test: 2.8 Operations on IEEE-754 Representations: bytevector-ieee-single-{ref,set!} (eval)
PASS: bytevectors.test: 2.8 Operations on IEEE-754 Representations: bytevector-ieee-single-{ref,set!} (compile -O0)
PASS: bytevectors.test: 2.8 Operations on IEEE-754 Representations: bytevector-ieee-single-{ref,set!} (compile -O2)
PASS: bytevectors.test: 2.8 Operations on IEEE-754 Representations: bytevector-ieee-single-{ref,set!} [unaligned] (eval)
PASS: bytevectors.test: 2.8 Operations on IEEE-754 Representations: bytevector-ieee-single-{ref,set!} [unaligned] (compile -O0)
PASS: bytevectors.test: 2.8 Operations on IEEE-754 Representations: bytevector-ieee-single-{ref,set!} [unaligned] (compile -O2)
PASS: bytevectors.test: 2.8 Operations on IEEE-754 Representations: double, little endian (eval)
PASS: bytevectors.test: 2.8 Operations on IEEE-754 Representations: double, little endian (compile -O0)
PASS: bytevectors.test: 2.8 Operations on IEEE-754 Representations: double, little endian (compile -O2)
PASS: bytevectors.test: 2.8 Operations on IEEE-754 Representations: double, big endian (eval)
PASS: bytevectors.test: 2.8 Operations on IEEE-754 Representations: double, big endian (compile -O0)
PASS: bytevectors.test: 2.8 Operations on IEEE-754 Representations: double, big endian (compile -O2)
PASS: bytevectors.test: 2.8 Operations on IEEE-754 Representations: bytevector-ieee-double-native-{ref,set!} (eval)
PASS: bytevectors.test: 2.8 Operations on IEEE-754 Representations: bytevector-ieee-double-native-{ref,set!} (compile -O0)
PASS: bytevectors.test: 2.8 Operations on IEEE-754 Representations: bytevector-ieee-double-native-{ref,set!} (compile -O2)
PASS: bytevectors.test: 2.8 Operations on IEEE-754 Representations: bytevector-ieee-double-{ref,set!} (eval)
PASS: bytevectors.test: 2.8 Operations on IEEE-754 Representations: bytevector-ieee-double-{ref,set!} (compile -O0)
PASS: bytevectors.test: 2.8 Operations on IEEE-754 Representations: bytevector-ieee-double-{ref,set!} (compile -O2)
PASS: bytevectors.test: 2.9 Operations on Strings: string->utf8
PASS: bytevectors.test: 2.9 Operations on Strings: string->utf8 [latin-1]
PASS: bytevectors.test: 2.9 Operations on Strings: string->utf16
PASS: bytevectors.test: 2.9 Operations on Strings: string->utf16 [little]
PASS: bytevectors.test: 2.9 Operations on Strings: string->utf32
PASS: bytevectors.test: 2.9 Operations on Strings: string->utf32 [Greek]
PASS: bytevectors.test: 2.9 Operations on Strings: string->utf32 [little]
PASS: bytevectors.test: 2.9 Operations on Strings: utf8->string
PASS: bytevectors.test: 2.9 Operations on Strings: utf8->string [latin-1]
PASS: bytevectors.test: 2.9 Operations on Strings: utf8->string [replacement character]
PASS: bytevectors.test: 2.9 Operations on Strings: utf8->string [invalid encoding]
PASS: bytevectors.test: 2.9 Operations on Strings: utf16->string
PASS: bytevectors.test: 2.9 Operations on Strings: utf16->string [little]
PASS: bytevectors.test: 2.9 Operations on Strings: utf32->string
PASS: bytevectors.test: 2.9 Operations on Strings: utf32->string [little]
PASS: bytevectors.test: Datum Syntax: empty
PASS: bytevectors.test: Datum Syntax: simple
PASS: bytevectors.test: Datum Syntax: >127
PASS: bytevectors.test: Datum Syntax: self-evaluating?
PASS: bytevectors.test: Datum Syntax: self-evaluating
PASS: bytevectors.test: Datum Syntax: quoted
PASS: bytevectors.test: Datum Syntax: literal simple
PASS: bytevectors.test: Datum Syntax: literal >127
PASS: bytevectors.test: Datum Syntax: literal quoted
PASS: bytevectors.test: Datum Syntax: incorrect prefix
PASS: bytevectors.test: Datum Syntax: extraneous space
PASS: bytevectors.test: Datum Syntax: negative integers
PASS: bytevectors.test: Datum Syntax: out-of-range integers
PASS: bytevectors.test: Arrays: array?
PASS: bytevectors.test: Arrays: array-length
PASS: bytevectors.test: Arrays: array-ref
PASS: bytevectors.test: Arrays: array-ref [index out-of-range]
PASS: bytevectors.test: Arrays: array-set!
PASS: bytevectors.test: Arrays: array-set! [index out-of-range]
PASS: bytevectors.test: Arrays: array-set! [value out-of-range]
PASS: bytevectors.test: Arrays: array-type
PASS: bytevectors.test: Arrays: array-contents
PASS: bytevectors.test: Arrays: array-ref
PASS: bytevectors.test: Arrays: array-set!
PASS: bytevectors.test: Arrays: make-typed-array
PASS: bytevectors.test: Arrays: make-typed-array [out-of-range]
PASS: bytevectors.test: uniform-array->bytevector: bytevector
PASS: bytevectors.test: uniform-array->bytevector: empty bitvector
PASS: bytevectors.test: uniform-array->bytevector: bitvector < 8
PASS: bytevectors.test: uniform-array->bytevector: bitvector == 8
PASS: bytevectors.test: uniform-array->bytevector: bitvector > 8
PASS: bytevectors.test: uniform-array->bytevector: bitvector == 32
PASS: bytevectors.test: uniform-array->bytevector: bitvector > 32
PASS: bytevectors.test: srfi-4 homogeneous numeric vectors as bytevectors: bytevector-copy on srfi-4 arrays
PASS: c-api.test: SEEK_XXX => #include <unistd.h>: /home/gunter/Data/pi02/GNU/guile/libguile/r6rs-ports.c
PASS: c-api.test: SEEK_XXX => #include <unistd.h>: /home/gunter/Data/pi02/GNU/guile/libguile/ports.c
PASS: c-api.test: SEEK_XXX => #include <unistd.h>: /home/gunter/Data/pi02/GNU/guile/libguile/loader.c
PASS: c-api.test: SEEK_XXX => #include <unistd.h>: /home/gunter/Data/pi02/GNU/guile/libguile/read.c
PASS: c-api.test: SEEK_XXX => #include <unistd.h>: /home/gunter/Data/pi02/GNU/guile/libguile/ioext.c
PASS: c-api.test: SEEK_XXX => #include <unistd.h>: /home/gunter/Data/pi02/GNU/guile/libguile/fports.c
PASS: c-api.test: SEEK_XXX => #include <unistd.h>: /home/gunter/Data/pi02/GNU/guile/libguile/strports.c
PASS: c-api.test: SEEK_XXX => #include <unistd.h>: /home/gunter/Data/pi02/GNU/guile/libguile/filesys.c
PASS: chars.test: basic char handling: evaluator: evaluating chars
PASS: chars.test: basic char handling: comparisons: char=? #\A #\A
PASS: chars.test: basic char handling: comparisons: char=? #\A #\a
PASS: chars.test: basic char handling: comparisons: char=? #\A #\B
PASS: chars.test: basic char handling: comparisons: char=? #\B #\A
PASS: chars.test: basic char handling: comparisons: char<? #\A #\A
PASS: chars.test: basic char handling: comparisons: char<? #\A #\a
PASS: chars.test: basic char handling: comparisons: char<? #\A #\B
PASS: chars.test: basic char handling: comparisons: char<? #\B #\A
PASS: chars.test: basic char handling: comparisons: char<=? #\A #\A
PASS: chars.test: basic char handling: comparisons: char<=? #\A #\a
PASS: chars.test: basic char handling: comparisons: char<=? #\A #\B
PASS: chars.test: basic char handling: comparisons: char<=? #\B #\A
PASS: chars.test: basic char handling: comparisons: char>? #\A #\A
PASS: chars.test: basic char handling: comparisons: char>? #\A #\a
PASS: chars.test: basic char handling: comparisons: char>? #\A #\B
PASS: chars.test: basic char handling: comparisons: char>? #\B #\A
PASS: chars.test: basic char handling: comparisons: char>=? #\A #\A
PASS: chars.test: basic char handling: comparisons: char>=? #\A #\a
PASS: chars.test: basic char handling: comparisons: char>=? #\A #\B
PASS: chars.test: basic char handling: comparisons: char>=? #\B #\A
PASS: chars.test: basic char handling: comparisons: char-ci=? #\A #\A
PASS: chars.test: basic char handling: comparisons: char-ci=? #\A #\a
PASS: chars.test: basic char handling: comparisons: char-ci=? #\A #\B
PASS: chars.test: basic char handling: comparisons: char-ci=? #\B #\A
PASS: chars.test: basic char handling: comparisons: char-ci<? #\A #\A
PASS: chars.test: basic char handling: comparisons: char-ci<? #\A #\a
PASS: chars.test: basic char handling: comparisons: char-ci<? #\A #\B
PASS: chars.test: basic char handling: comparisons: char-ci<? #\B #\A
PASS: chars.test: basic char handling: comparisons: char-ci<=? #\A #\A
PASS: chars.test: basic char handling: comparisons: char-ci<=? #\A #\a
PASS: chars.test: basic char handling: comparisons: char-ci<=? #\A #\B
PASS: chars.test: basic char handling: comparisons: char-ci<=? #\B #\A
PASS: chars.test: basic char handling: comparisons: char-ci>? #\A #\A
PASS: chars.test: basic char handling: comparisons: char-ci>? #\A #\a
PASS: chars.test: basic char handling: comparisons: char-ci>? #\A #\B
PASS: chars.test: basic char handling: comparisons: char-ci>? #\B #\A
PASS: chars.test: basic char handling: comparisons: char-ci>=? #\A #\A
PASS: chars.test: basic char handling: comparisons: char-ci>=? #\A #\a
PASS: chars.test: basic char handling: comparisons: char-ci>=? #\A #\B
PASS: chars.test: basic char handling: comparisons: char-ci>=? #\B #\A
PASS: chars.test: basic char handling: categories: char-alphabetic?
PASS: chars.test: basic char handling: categories: char-numeric?
PASS: chars.test: basic char handling: categories: char-whitespace?
PASS: chars.test: basic char handling: categories: char-upper-case?
PASS: chars.test: basic char handling: categories: char-lower-case?
PASS: chars.test: basic char handling: categories: char-is-both? works
PASS: chars.test: basic char handling: categories: char-general-category
PASS: chars.test: basic char handling: integer: char->integer
PASS: chars.test: basic char handling: integer: integer->char
PASS: chars.test: basic char handling: integer: integer->char out of range, -1
PASS: chars.test: basic char handling: integer: integer->char out of range, surrrogate
PASS: chars.test: basic char handling: integer: integer->char out of range, too big
PASS: chars.test: basic char handling: integer: octal out of range, surrrogate
PASS: chars.test: basic char handling: integer: octal out of range, too big
PASS: chars.test: basic char handling: case: char-upcase
PASS: chars.test: basic char handling: case: char-downcase
PASS: chars.test: basic char handling: case: char-titlecase
PASS: chars.test: basic char handling: charnames: R5RS character names
PASS: chars.test: basic char handling: charnames: R6RS character names
PASS: chars.test: basic char handling: charnames: R5RS character names are case insensitive
PASS: chars.test: basic char handling: charnames: C0 control names are case insensitive
PASS: chars.test: basic char handling: charnames: alt charnames are case insensitive
PASS: chars.test: basic char handling: charnames: bad charname
PASS: chars.test: basic char handling: charnames: R5RS character names are preferred write format
PASS: chars.test: basic char handling: charnames: C0 control character names are preferred write format
PASS: chars.test: basic char handling: charnames: combining accent is pretty-printed
PASS: chars.test: basic char handling: charnames: combining X is pretty-printed
PASS: coding.test: block comments: first line
PASS: coding.test: block comments: first line no whitespace
PASS: coding.test: block comments: second line
PASS: coding.test: block comments: second line no whitespace
PASS: coding.test: block comments: third line
PASS: coding.test: block comments: third line no whitespace
PASS: coding.test: line comment: first line, no whitespace, no nl
PASS: coding.test: line comment: first line, whitespace, no nl
PASS: coding.test: line comment: first line, no whitespace, nl
PASS: coding.test: line comment: first line, whitespace, nl
PASS: coding.test: line comment: second line, no whitespace, no nl
PASS: coding.test: line comment: second line, whitespace, no nl
PASS: coding.test: line comment: second line, no whitespace, nl
PASS: coding.test: line comment: second line, whitespace, nl
PASS: coding.test: line comment: http://bugs.gnu.org/16463
PASS: common-list.test: intersection: documented?
PASS: common-list.test: intersection: both arguments empty
PASS: common-list.test: intersection: first argument empty
PASS: common-list.test: intersection: second argument empty
PASS: common-list.test: intersection: disjoint arguments
PASS: common-list.test: intersection: equal arguments
PASS: common-list.test: intersection: reverse argument order
PASS: common-list.test: intersection: multiple matches in first list
PASS: common-list.test: intersection: multiple matches in second list
PASS: common-list.test: intersection: mixed arguments
PASS: common-list.test: set-difference: documented?
PASS: common-list.test: set-difference: both arguments empty
PASS: common-list.test: set-difference: first argument empty
PASS: common-list.test: set-difference: second argument empty
PASS: common-list.test: set-difference: disjoint arguments
PASS: common-list.test: set-difference: equal arguments
PASS: common-list.test: set-difference: reverse argument order
PASS: common-list.test: set-difference: multiple matches in first list
PASS: common-list.test: set-difference: multiple matches in second list
PASS: common-list.test: set-difference: mixed arguments
PASS: common-list.test: remove-if: documented?
PASS: common-list.test: remove-if: empty list, remove all
PASS: common-list.test: remove-if: empty list, remove none
PASS: common-list.test: remove-if: non-empty list, remove all
PASS: common-list.test: remove-if: non-empty list, remove none
PASS: common-list.test: remove-if: non-empty list, remove some
PASS: common-list.test: remove-if-not: documented?
PASS: common-list.test: remove-if-not: empty list, remove all
PASS: common-list.test: remove-if-not: empty list, remove none
PASS: common-list.test: remove-if-not: non-empty list, remove all
PASS: common-list.test: remove-if-not: non-empty list, remove none
PASS: common-list.test: remove-if-not: non-empty list, remove some
PASS: common-list.test: delete-if!: documented?
PASS: common-list.test: delete-if!: empty list, remove all
PASS: common-list.test: delete-if!: empty list, remove none
PASS: common-list.test: delete-if!: non-empty list, remove all
PASS: common-list.test: delete-if!: non-empty list, remove none
PASS: common-list.test: delete-if!: non-empty list, remove some
PASS: common-list.test: delete-if-not!: documented?
PASS: common-list.test: delete-if-not!: empty list, remove all
PASS: common-list.test: delete-if-not!: empty list, remove none
PASS: common-list.test: delete-if-not!: non-empty list, remove all
PASS: common-list.test: delete-if-not!: non-empty list, remove none
PASS: common-list.test: delete-if-not!: non-empty list, remove some
PASS: compiler.test: basic: compile to value
PASS: compiler.test: psyntax: compile uses a fresh module by default
PASS: compiler.test: psyntax: compile-time definitions are isolated
PASS: compiler.test: psyntax: compile in current module
PASS: compiler.test: psyntax: compile in fresh module
PASS: compiler.test: psyntax: redefinition
PASS: compiler.test: current-reader: default compile-time current-reader differs
PASS: compiler.test: current-reader: compile-time changes are honored and isolated
PASS: compiler.test: current-reader: with eval-when
PASS: compiler.test: procedure-name: program
PASS: compiler.test: procedure-name: program with lambda
PASS: compiler.test: procedure-name: subr
PASS: compiler.test: program-sources: source info associated with IP 0: lambda
PASS: compiler.test: program-sources: source info associated with IP 0: lambda*
PASS: compiler.test: program-sources: source info associated with IP 0: case-lambda
PASS: compiler.test: case-lambda: self recursion to different clause
PASS: compiler.test: limits: 300 arguments
PASS: compiler.test: limits: 300 arguments with list
PASS: compiler.test: limits: 300 arguments with vector
PASS: compiler.test: limits: 0 arguments with list of 300 elements
PASS: compiler.test: limits: 0 arguments with vector of 300 elements
PASS: compiler.test: regression tests: #18583
PASS: compiler.test: regression tests: Chained comparisons
PASS: compiler.test: prompt body slot allocation: compiling test works
PASS: compiler.test: prompt body slot allocation: test terminates without error
PASS: compiler.test: flonum inference: compiling test works
PASS: compiler.test: flonum inference: test flonum
PASS: compiler.test: flonum inference: test complex
PASS: compiler.test: null? and nil? inference: nil? after null?
PASS: compiler.test: null? and nil? inference: nil? after truth test
PASS: compiler.test: null? and nil? inference: null? after nil?
PASS: compiler.test: null? and nil? inference: truth test after nil?
PASS: compiler.test: cse auxiliary definitions: compiling test works
PASS: compiler.test: cse auxiliary definitions: test terminates without error
PASS: compiler.test: closure conversion: compiling test works
PASS: compiler.test: closure conversion: test terminates without error
PASS: compiler.test: read-and-compile tree-il: compiling tree-il works
PASS: compiler.test: read-and-compile tree-il: bytecode can be read
PASS: compiler.test: read-and-compile tree-il: proc executes
PASS: continuations.test: continuations: throwing to a rewound catch context
PASS: continuations.test: continuations: can print a continuation
PASS: continuations.test: continuations: blocked attempt to cross a continuation barrier
PASS: continuations.test: continuations: uncaught exception is handled by continuation barrier
PASS: continuations.test: continuations: exit unwinds dynwinds inside a continuation barrier
PASS: continuations.test: continuations: make a stack from a continuation
PASS: continuations.test: continuations: get a continuation's stack ID
PASS: control.test: escape-only continuations: no values, normal exit (eval)
PASS: control.test: escape-only continuations: no values, normal exit (compile -O0)
PASS: control.test: escape-only continuations: no values, normal exit (compile -O2)
PASS: control.test: escape-only continuations: no values, abnormal exit (eval)
PASS: control.test: escape-only continuations: no values, abnormal exit (compile -O0)
PASS: control.test: escape-only continuations: no values, abnormal exit (compile -O2)
PASS: control.test: escape-only continuations: single value, normal exit (eval)
PASS: control.test: escape-only continuations: single value, normal exit (compile -O0)
PASS: control.test: escape-only continuations: single value, normal exit (compile -O2)
PASS: control.test: escape-only continuations: single value, abnormal exit (eval)
PASS: control.test: escape-only continuations: single value, abnormal exit (compile -O0)
PASS: control.test: escape-only continuations: single value, abnormal exit (compile -O2)
PASS: control.test: escape-only continuations: multiple values, normal exit (eval)
PASS: control.test: escape-only continuations: multiple values, normal exit (compile -O0)
PASS: control.test: escape-only continuations: multiple values, normal exit (compile -O2)
PASS: control.test: escape-only continuations: multiple values, abnormal exit (eval)
PASS: control.test: escape-only continuations: multiple values, abnormal exit (compile -O0)
PASS: control.test: escape-only continuations: multiple values, abnormal exit (compile -O2)
PASS: control.test: escape-only continuations: call/ec (eval)
PASS: control.test: escape-only continuations: call/ec (compile -O0)
PASS: control.test: escape-only continuations: call/ec (compile -O2)
PASS: control.test: escape-only continuations: let/ec (eval)
PASS: control.test: escape-only continuations: let/ec (compile -O0)
PASS: control.test: escape-only continuations: let/ec (compile -O2)
PASS: control.test: escape-only continuations: loop only in handler (eval)
PASS: control.test: escape-only continuations: loop only in handler (compile -O0)
PASS: control.test: escape-only continuations: loop only in handler (compile -O2)
PASS: control.test: reified continuations: no values, normal exit (eval)
PASS: control.test: reified continuations: no values, normal exit (compile -O0)
PASS: control.test: reified continuations: no values, normal exit (compile -O2)
PASS: control.test: reified continuations: no values, abnormal exit (eval)
PASS: control.test: reified continuations: no values, abnormal exit (compile -O0)
PASS: control.test: reified continuations: no values, abnormal exit (compile -O2)
PASS: control.test: reified continuations: single value, normal exit (eval)
PASS: control.test: reified continuations: single value, normal exit (compile -O0)
PASS: control.test: reified continuations: single value, normal exit (compile -O2)
PASS: control.test: reified continuations: single value, abnormal exit (eval)
PASS: control.test: reified continuations: single value, abnormal exit (compile -O0)
PASS: control.test: reified continuations: single value, abnormal exit (compile -O2)
PASS: control.test: reified continuations: multiple values, normal exit (eval)
PASS: control.test: reified continuations: multiple values, normal exit (compile -O0)
PASS: control.test: reified continuations: multiple values, normal exit (compile -O2)
PASS: control.test: reified continuations: multiple values, abnormal exit (eval)
PASS: control.test: reified continuations: multiple values, abnormal exit (compile -O0)
PASS: control.test: reified continuations: multiple values, abnormal exit (compile -O2)
PASS: control.test: reified continuations: reified pending call frames, instantiated elsewhere on the stack (eval)
PASS: control.test: reified continuations: reified pending call frames, instantiated elsewhere on the stack (compile -O0)
PASS: control.test: reified continuations: reified pending call frames, instantiated elsewhere on the stack (compile -O2)
PASS: control.test: restarting partial continuations: in side-effect position (eval)
PASS: control.test: restarting partial continuations: in side-effect position (compile -O0)
PASS: control.test: restarting partial continuations: in side-effect position (compile -O2)
PASS: control.test: restarting partial continuations: passing values to side-effect abort (eval)
PASS: control.test: restarting partial continuations: passing values to side-effect abort (compile -O0)
PASS: control.test: restarting partial continuations: passing values to side-effect abort (compile -O2)
PASS: control.test: restarting partial continuations: called for one value (eval)
PASS: control.test: restarting partial continuations: called for one value (compile -O0)
PASS: control.test: restarting partial continuations: called for one value (compile -O2)
PASS: control.test: restarting partial continuations: called for multiple values (eval)
PASS: control.test: restarting partial continuations: called for multiple values (compile -O0)
PASS: control.test: restarting partial continuations: called for multiple values (compile -O2)
PASS: control.test: restarting partial continuations: in tail position (eval)
PASS: control.test: restarting partial continuations: in tail position (compile -O0)
PASS: control.test: restarting partial continuations: in tail position (compile -O2)
PASS: control.test: prompt in different contexts: push, normal exit (eval)
PASS: control.test: prompt in different contexts: push, normal exit (compile -O0)
PASS: control.test: prompt in different contexts: push, normal exit (compile -O2)
PASS: control.test: prompt in different contexts: push, nonlocal exit (eval)
PASS: control.test: prompt in different contexts: push, nonlocal exit (compile -O0)
PASS: control.test: prompt in different contexts: push, nonlocal exit (compile -O2)
PASS: control.test: prompt in different contexts: push with RA, normal exit (eval)
PASS: control.test: prompt in different contexts: push with RA, normal exit (compile -O0)
PASS: control.test: prompt in different contexts: push with RA, normal exit (compile -O2)
PASS: control.test: prompt in different contexts: push with RA, nonlocal exit (eval)
PASS: control.test: prompt in different contexts: push with RA, nonlocal exit (compile -O0)
PASS: control.test: prompt in different contexts: push with RA, nonlocal exit (compile -O2)
PASS: control.test: prompt in different contexts: tail, normal exit (eval)
PASS: control.test: prompt in different contexts: tail, normal exit (compile -O0)
PASS: control.test: prompt in different contexts: tail, normal exit (compile -O2)
PASS: control.test: prompt in different contexts: tail, nonlocal exit (eval)
PASS: control.test: prompt in different contexts: tail, nonlocal exit (compile -O0)
PASS: control.test: prompt in different contexts: tail, nonlocal exit (compile -O2)
PASS: control.test: prompt in different contexts: tail with RA, normal exit (eval)
PASS: control.test: prompt in different contexts: tail with RA, normal exit (compile -O0)
PASS: control.test: prompt in different contexts: tail with RA, normal exit (compile -O2)
PASS: control.test: prompt in different contexts: tail with RA, nonlocal exit (eval)
PASS: control.test: prompt in different contexts: tail with RA, nonlocal exit (compile -O0)
PASS: control.test: prompt in different contexts: tail with RA, nonlocal exit (compile -O2)
PASS: control.test: prompt in different contexts: drop, normal exit (eval)
PASS: control.test: prompt in different contexts: drop, normal exit (compile -O0)
PASS: control.test: prompt in different contexts: drop, normal exit (compile -O2)
PASS: control.test: prompt in different contexts: drop, nonlocal exit (eval)
PASS: control.test: prompt in different contexts: drop, nonlocal exit (compile -O0)
PASS: control.test: prompt in different contexts: drop, nonlocal exit (compile -O2)
PASS: control.test: prompt in different contexts: drop with RA, normal exit (eval)
PASS: control.test: prompt in different contexts: drop with RA, normal exit (compile -O0)
PASS: control.test: prompt in different contexts: drop with RA, normal exit (compile -O2)
PASS: control.test: prompt in different contexts: drop with RA, nonlocal exit (eval)
PASS: control.test: prompt in different contexts: drop with RA, nonlocal exit (compile -O0)
PASS: control.test: prompt in different contexts: drop with RA, nonlocal exit (compile -O2)
PASS: control.test: suspend/resume with fluids: normal
PASS: control.test: suspend/resume with fluids: with-fluids normal
PASS: control.test: suspend/resume with fluids: normal (post)
PASS: control.test: suspend/resume with fluids: with-fluids and fluid-set!
PASS: control.test: suspend/resume with fluids: normal (post2)
PASS: control.test: suspend/resume with fluids: normal fluid-set!
PASS: control.test: suspend/resume with fluids: reset fluid-set!
PASS: control.test: suspend/resume with fluids: pre
PASS: control.test: suspend/resume with fluids: res
PASS: control.test: suspend/resume with fluids: post
PASS: control.test: rewinding prompts: nested prompts (eval)
PASS: control.test: rewinding prompts: nested prompts (compile -O0)
PASS: control.test: rewinding prompts: nested prompts (compile -O2)
PASS: control.test: abort to unknown prompt: foo (eval)
PASS: control.test: abort to unknown prompt: foo (compile -O0)
PASS: control.test: abort to unknown prompt: foo (compile -O2)
PASS: control.test: unwind: unwind through call-with-vm (eval)
PASS: control.test: unwind: unwind through call-with-vm (compile -O0)
PASS: control.test: unwind: unwind through call-with-vm (compile -O2)
PASS: control.test: shift and reset: (equal? 117 (+ 10 (reset (+ 2 (shift k (+ 100 (k (k 3))))))))
PASS: control.test: shift and reset: (equal? 60 (* 10 (reset (* 2 (shift g (* 5 (shift f (+ (f 1) 1))))))))
PASS: control.test: shift and reset: (equal? 121 (let ((f (lambda (x) (shift k (k (k x)))))) (+ 1 (reset (+ 10 (f 100))))))
PASS: control.test: shift and reset: (equal? (quote a) (car (reset (let ((x (shift f (shift f1 (f1 (cons (quote a) (f (quote ())))))))) (shift g x)))))
PASS: control.test: shift and reset: (equal? (quote (1 2 3 4 5)) (let () (define (traverse xs) (define (visit xs) (if (null? xs) (quote ()) (visit (shift* (lambda (k) (cons (car xs) (k (cdr xs)))))))) (reset* (lambda () (visit xs)))) (traverse (quote (1 2 3 4 5)))))
PASS: control.test: suspendable-continuation?: escape-only
PASS: control.test: suspendable-continuation?: full
PASS: control.test: suspendable-continuation?: escape-only with barrier
PASS: control.test: suspendable-continuation?: full with barrier
PASS: copy-tree.test: copy-tree: (#t . #(#t))
PASS: copy-tree.test: copy-tree: circular lists in forms
PASS: coverage.test: instrumented/executed-lines: instr = exec
PASS: coverage.test: instrumented/executed-lines: instr >= exec
PASS: coverage.test: line-execution-counts: once
XFAIL: coverage.test: line-execution-counts: several times
PASS: coverage.test: line-execution-counts: some
XFAIL: coverage.test: line-execution-counts: one proc hit, one proc unused
PASS: coverage.test: line-execution-counts: case-lambda
PASS: coverage.test: line-execution-counts: all code on one line
PASS: coverage.test: line-execution-counts: tail calls
PASS: coverage.test: procedure-execution-count: several times
PASS: coverage.test: procedure-execution-count: case-lambda
PASS: coverage.test: procedure-execution-count: never
PASS: coverage.test: procedure-execution-count: applicable struct
PASS: coverage.test: procedure-execution-count: called from C
PASS: coverage.test: procedure-execution-count: called from eval
PASS: coverage.test: instrumented-source-files: source files are listed as expected
PASS: cross-compilation.test: cross-compilation: triplet i586-pc-gnu0.3
PASS: cross-compilation.test: cross-compilation: triplet x86_64-unknown-linux-gnu
PASS: cross-compilation.test: cross-compilation: triplet x86_64-unknown-kfreebsd-gnu
PASS: cross-compilation.test: cross-compilation: target `i586-pc-gnu0.3' honored
PASS: cross-compilation.test: cross-compilation: target `x86_64-pc-linux-gnu' honored
PASS: cross-compilation.test: cross-compilation: target `powerpc-unknown-linux-gnu' honored
PASS: cross-compilation.test: cross-compilation: target `sparc64-unknown-freebsd8.2' honored
PASS: cross-compilation.test: cross-compilation: target `mips64el-unknown-linux-gnu' honored
PASS: cross-compilation.test: cross-compilation: target `mips64el-unknown-linux-gnuabi64' honored
PASS: cross-compilation.test: cross-compilation: target `x86_64-unknown-linux-gnux32' honored
PASS: cross-compilation.test: cross-compilation: target `arm-unknown-linux-androideabi' honored
PASS: cross-compilation.test: cross-compilation: target `armeb-unknown-linux-gnu' honored
PASS: cross-compilation.test: cross-compilation: target `aarch64-linux-gnu' honored
PASS: cross-compilation.test: cross-compilation: target `aarch64_be-linux-gnu' honored
PASS: cross-compilation.test: cross-compilation: unknown target
PASS: curried-definitions.test: define: define works as usual
PASS: curried-definitions.test: define: define works as usual (2)
PASS: curried-definitions.test: define: currying once
PASS: curried-definitions.test: define: currying twice
PASS: curried-definitions.test: define: just a value
PASS: curried-definitions.test: define*: define* works as usual
PASS: curried-definitions.test: define*: define* works as usual (2)
PASS: curried-definitions.test: define*: currying once
PASS: curried-definitions.test: define*: currying twice
PASS: curried-definitions.test: define*: just a value
PASS: dwarf.test: ((load-thunk-from-memory bv))
PASS: dwarf.test: (bar 10)
PASS: dwarf.test: (source-file source)
PASS: dwarf.test: (source-line source)
PASS: dwarf.test: (source-line-for-user source)
PASS: dwarf.test: (source-column source)
PASS: dwarf.test: (source-file source)
PASS: dwarf.test: (source-line source)
PASS: dwarf.test: (source-line-for-user source)
PASS: dwarf.test: (source-column source)
PASS: dwarf.test: (source-file s1)
PASS: dwarf.test: (source-line s1)
PASS: dwarf.test: (source-line-for-user s1)
PASS: dwarf.test: (source-column s1)
PASS: dwarf.test: (source-file s2)
PASS: dwarf.test: (source-line s2)
PASS: dwarf.test: (source-line-for-user s2)
PASS: dwarf.test: (source-column s2)
PASS: dwarf.test: (source-file s3)
PASS: dwarf.test: (source-line s3)
PASS: dwarf.test: (source-line-for-user s3)
PASS: dwarf.test: (source-column s3)
PASS: dwarf.test: (source-file s1)
PASS: dwarf.test: (source-line s1)
PASS: dwarf.test: (source-line-for-user s1)
PASS: dwarf.test: (source-column s1)
PASS: dwarf.test: (source-file s2)
PASS: dwarf.test: (source-line s2)
PASS: dwarf.test: (source-line-for-user s2)
PASS: dwarf.test: (source-column s2)
PASS: ecmascript.test: parser: true;
PASS: ecmascript.test: parser: true;
PASS: ecmascript.test: parser: 2 + 2;
PASS: ecmascript.test: parser: 2 + 2;
PASS: ecmascript.test: parser: 2 +2;
PASS: ecmascript.test: parser: 2 +2;
PASS: ecmascript.test: parser: "hello";
PASS: ecmascript.test: parser: "hello";
PASS: ecmascript.test: parser: function square(x) { return x * x; }
PASS: ecmascript.test: parser: function square(x) { return x * x; }
PASS: ecmascript.test: parser: document.write('Hello, world!');
PASS: ecmascript.test: parser: document.write('Hello, world!');
PASS: ecmascript.test: parser: var x = { foo: 12, bar: "hello" };
PASS: ecmascript.test: parser: var x = { foo: 12, bar: "hello" };
PASS: ecmascript.test: parser: "\x12";
PASS: ecmascript.test: parser: "\x12";
PASS: ecmascript.test: parser: "\u1234";
PASS: ecmascript.test: parser: "\u1234";
PASS: ecmascript.test: parser: function foo(x) { }
PASS: ecmascript.test: parser: function foo(x) { }
PASS: ecmascript.test: parser: .123;
PASS: ecmascript.test: parser: .123;
PASS: ecmascript.test: parser: 0xff;
PASS: ecmascript.test: parser: 0xff;
PASS: ecmascript.test: compiler: true;
PASS: ecmascript.test: compiler: if (3 > 2) true; else false;
PASS: ecmascript.test: compiler: 2 + 2;
PASS: ecmascript.test: compiler: "hello";
PASS: ecmascript.test: compiler: var test = { bar: 1 };
PASS: ecmascript.test: compiler: new Object;
PASS: ecmascript.test: compiler: 42 + " good times!";
PASS: ecmascript.test: compiler: [0,1,2,3,4,5].length * 7;
PASS: elisp-compiler.test: Sequencing: progn
PASS: elisp-compiler.test: Sequencing: empty progn
PASS: elisp-compiler.test: Sequencing: prog1
PASS: elisp-compiler.test: Sequencing: prog2
PASS: elisp-compiler.test: Conditionals: succeeding if
PASS: elisp-compiler.test: Conditionals: failing if
PASS: elisp-compiler.test: Conditionals: if with no else
PASS: elisp-compiler.test: Conditionals: empty cond
PASS: elisp-compiler.test: Conditionals: all failing cond
PASS: elisp-compiler.test: Conditionals: only condition
PASS: elisp-compiler.test: Conditionals: succeeding cond value
PASS: elisp-compiler.test: Conditionals: succeeding cond side-effect
PASS: elisp-compiler.test: Combining Conditions: empty and
PASS: elisp-compiler.test: Combining Conditions: failing and
PASS: elisp-compiler.test: Combining Conditions: succeeding and
PASS: elisp-compiler.test: Combining Conditions: empty or
PASS: elisp-compiler.test: Combining Conditions: failing or
PASS: elisp-compiler.test: Combining Conditions: succeeding or
PASS: elisp-compiler.test: Combining Conditions: not true
PASS: elisp-compiler.test: Combining Conditions: not false
PASS: elisp-compiler.test: Iteration: failing while
PASS: elisp-compiler.test: Iteration: running while
PASS: elisp-compiler.test: Exceptions: catch without exception
PASS: elisp-compiler.test: Exceptions: catch and throw
PASS: elisp-compiler.test: Exceptions: unwind-protect
PASS: elisp-compiler.test: Eval: basic eval
PASS: elisp-compiler.test: Eval: real dynamic code
PASS: elisp-compiler.test: Eval: recursive eval
PASS: elisp-compiler.test: Variable Setting/Referencing: setq and reference
PASS: elisp-compiler.test: Variable Setting/Referencing: setq evaluation order
PASS: elisp-compiler.test: Variable Setting/Referencing: setq value
PASS: elisp-compiler.test: Variable Setting/Referencing: set and symbol-value
PASS: elisp-compiler.test: Variable Setting/Referencing: void variables
PASS: elisp-compiler.test: Let and Let*: let without value
PASS: elisp-compiler.test: Let and Let*: basic let
PASS: elisp-compiler.test: Let and Let*: empty let
PASS: elisp-compiler.test: Let and Let*: let*
PASS: elisp-compiler.test: Let and Let*: empty let*
PASS: elisp-compiler.test: Let and Let*: local scope
PASS: elisp-compiler.test: Lexical Scoping: basic let semantics
PASS: elisp-compiler.test: Lexical Scoping: lexical scope with lexical-let's
PASS: elisp-compiler.test: Lexical Scoping: lexical scoping vs. symbol-value / set
PASS: elisp-compiler.test: Lexical Scoping: let inside lexical-let
PASS: elisp-compiler.test: Lexical Scoping: lambda args inside lexical-let
PASS: elisp-compiler.test: Lexical Scoping: closures
PASS: elisp-compiler.test: Lexical Scoping: lexical lambda args
PASS: elisp-compiler.test: Lexical Scoping: lexical lambda tail-recursion
PASS: elisp-compiler.test: defconst and defvar: defconst without docstring
PASS: elisp-compiler.test: defconst and defvar: defconst value
PASS: elisp-compiler.test: defconst and defvar: defvar without value
PASS: elisp-compiler.test: defconst and defvar: defvar on already defined variable
PASS: elisp-compiler.test: defconst and defvar: defvar on undefined variable
PASS: elisp-compiler.test: defconst and defvar: defvar value
PASS: elisp-compiler.test: Lambda Expressions: required arguments
PASS: elisp-compiler.test: Lambda Expressions: optional argument
PASS: elisp-compiler.test: Lambda Expressions: optional missing
PASS: elisp-compiler.test: Lambda Expressions: rest argument
PASS: elisp-compiler.test: Lambda Expressions: rest missing
PASS: elisp-compiler.test: Lambda Expressions: empty lambda
PASS: elisp-compiler.test: Function Definitions: defun
PASS: elisp-compiler.test: Function Definitions: defun value
PASS: elisp-compiler.test: Function Definitions: fset and symbol-function
PASS: elisp-compiler.test: Function Definitions: void function values
PASS: elisp-compiler.test: Function Definitions: flet
PASS: elisp-compiler.test: Calling Functions: recursion
PASS: elisp-compiler.test: Calling Functions: dynamic scoping
PASS: elisp-compiler.test: Calling Functions: funcall and apply argument handling
PASS: elisp-compiler.test: Calling Functions: raw functions with funcall
PASS: elisp-compiler.test: Quotation: quote
PASS: elisp-compiler.test: Quotation: simple backquote
PASS: elisp-compiler.test: Quotation: unquote
PASS: elisp-compiler.test: Quotation: unquote splicing
PASS: elisp-compiler.test: Macros: defmacro value
PASS: elisp-compiler.test: Macros: macro expansion
PASS: elisp-compiler.test: Equivalence Predicates: equal
PASS: elisp-compiler.test: Equivalence Predicates: eq
PASS: elisp-compiler.test: Number Built-Ins: floatp
PASS: elisp-compiler.test: Number Built-Ins: integerp
PASS: elisp-compiler.test: Number Built-Ins: numberp
PASS: elisp-compiler.test: Number Built-Ins: wholenump
PASS: elisp-compiler.test: Number Built-Ins: zerop
PASS: elisp-compiler.test: Number Built-Ins: comparisons
PASS: elisp-compiler.test: Number Built-Ins: max and min
PASS: elisp-compiler.test: Number Built-Ins: abs
PASS: elisp-compiler.test: Number Built-Ins: float
PASS: elisp-compiler.test: Number Built-Ins: basic arithmetic operators
PASS: elisp-compiler.test: Number Built-Ins: modulo
PASS: elisp-compiler.test: Number Built-Ins: floating point rounding
PASS: elisp-compiler.test: List Built-Ins: consp and atom
PASS: elisp-compiler.test: List Built-Ins: listp and nlistp
PASS: elisp-compiler.test: List Built-Ins: null
PASS: elisp-compiler.test: List Built-Ins: car and cdr
PASS: elisp-compiler.test: List Built-Ins: car-safe and cdr-safe
PASS: elisp-compiler.test: List Built-Ins: nth and nthcdr
PASS: elisp-compiler.test: List Built-Ins: length
PASS: elisp-compiler.test: List Built-Ins: cons, list and make-list
PASS: elisp-compiler.test: List Built-Ins: append
PASS: elisp-compiler.test: List Built-Ins: reverse
PASS: elisp-compiler.test: List Built-Ins: setcar and setcdr
PASS: elisp-reader.test: Lexer: end-of-input
PASS: elisp-reader.test: Lexer: single character tokens
PASS: elisp-reader.test: Lexer: whitespace and comments
PASS: elisp-reader.test: Lexer: source properties
PASS: elisp-reader.test: Lexer: symbols
PASS: elisp-reader.test: Lexer: integers
PASS: elisp-reader.test: Lexer: floats
PASS: elisp-reader.test: Lexer: strings
PASS: elisp-reader.test: Lexer: ASCII control characters and meta in strings
PASS: elisp-reader.test: Lexer: characters
PASS: elisp-reader.test: Lexer: meta characters
PASS: elisp-reader.test: Lexer: circular markers
PASS: elisp-reader.test: Lexer: lexer/1
PASS: elisp-reader.test: Parser: only next expression
PASS: elisp-reader.test: Parser: source properties
PASS: elisp-reader.test: Parser: constants
PASS: elisp-reader.test: Parser: quotation
PASS: elisp-reader.test: Parser: lists
PASS: elisp-reader.test: Parser: vectors
PASS: elisp-reader.test: Parser: circular structures
PASS: elisp.test: scheme: nil value is a boolean: boolean?
PASS: elisp.test: scheme: nil value is false: not
PASS: elisp.test: scheme: nil value is false: if
PASS: elisp.test: scheme: nil value is false: and
PASS: elisp.test: scheme: nil value is false: or
PASS: elisp.test: scheme: nil value is false: cond
PASS: elisp.test: scheme: nil value is false: do
PASS: elisp.test: scheme: nil value as an empty list: list?
PASS: elisp.test: scheme: nil value as an empty list: null?
PASS: elisp.test: scheme: nil value as an empty list: sort
PASS: elisp.test: scheme: lists formed using nil value: list?
PASS: elisp.test: scheme: lists formed using nil value: length of #nil
PASS: elisp.test: scheme: lists formed using nil value: length
PASS: elisp.test: scheme: lists formed using nil value: length (with backquoted list)
PASS: elisp.test: scheme: lists formed using nil value: write (#nil)
PASS: elisp.test: scheme: lists formed using nil value: display (#nil)
PASS: elisp.test: scheme: lists formed using nil value: write (list)
PASS: elisp.test: scheme: lists formed using nil value: display (list)
PASS: elisp.test: scheme: lists formed using nil value: assq
PASS: elisp.test: scheme: lists formed using nil value: assv
PASS: elisp.test: scheme: lists formed using nil value: assoc
PASS: elisp.test: scheme: lists formed using nil value: with-fluids*
PASS: elisp.test: scheme: lists formed using nil value: append!
PASS: elisp.test: scheme: lists formed using nil value: last-pair
PASS: elisp.test: scheme: lists formed using nil value: reverse
PASS: elisp.test: scheme: lists formed using nil value: reverse!
PASS: elisp.test: scheme: lists formed using nil value: list-ref
PASS: elisp.test: scheme: lists formed using nil value: list-ref
PASS: elisp.test: scheme: lists formed using nil value: list-set!
PASS: elisp.test: scheme: lists formed using nil value: list-set!
PASS: elisp.test: scheme: lists formed using nil value: list-cdr-set!
PASS: elisp.test: scheme: lists formed using nil value: list-cdr-set!
PASS: elisp.test: scheme: lists formed using nil value: memq
PASS: elisp.test: scheme: lists formed using nil value: memv
PASS: elisp.test: scheme: lists formed using nil value: member
PASS: elisp.test: scheme: lists formed using nil value: list->vector
PASS: elisp.test: scheme: lists formed using nil value: list->vector
PASS: elisp.test: scheme: lists formed using nil value: list->weak-vector
PASS: elisp.test: scheme: lists formed using nil value: sorted?
PASS: elisp.test: scheme: lists formed using nil value: merge
PASS: elisp.test: scheme: lists formed using nil value: merge!
PASS: elisp.test: scheme: lists formed using nil value: sort
PASS: elisp.test: scheme: lists formed using nil value: stable-sort
PASS: elisp.test: scheme: lists formed using nil value: sort!
PASS: elisp.test: scheme: lists formed using nil value: stable-sort!
PASS: elisp.test: scheme: value preservation: car
PASS: elisp.test: scheme: value preservation: cdr
PASS: elisp.test: scheme: value preservation: vector-ref
PASS: elisp.test: elisp: (and #f)
PASS: elisp.test: elisp: (and #t)
PASS: elisp.test: elisp: (and nil)
PASS: elisp.test: elisp: (and t)
PASS: elisp.test: elisp: (and)
PASS: elisp.test: elisp: (cond (nil t) (t 3))
PASS: elisp.test: elisp: (cond (nil t) (t))
PASS: elisp.test: elisp: (cond (nil))
PASS: elisp.test: elisp: (cond)
PASS: elisp.test: elisp: (if #f (quote a) (quote b))
PASS: elisp.test: elisp: (if #t (quote a) (quote b))
PASS: elisp.test: elisp: (if nil (quote a) (quote b))
PASS: elisp.test: elisp: (if nil 1 2 3 4)
PASS: elisp.test: elisp: (if nil 1 2)
PASS: elisp.test: elisp: (if nil 1)
PASS: elisp.test: elisp: (if t 1 2)
PASS: elisp.test: elisp: (if t 1)
PASS: elisp.test: elisp: (let (a) a)
PASS: elisp.test: elisp: (let* (a) a)
PASS: elisp.test: elisp: (let* ((a 1) (b (* a 2))) b)
PASS: elisp.test: elisp: (null nil)
PASS: elisp.test: elisp: (or 1 2 3)
PASS: elisp.test: elisp: (or nil t nil)
PASS: elisp.test: elisp: (or nil)
PASS: elisp.test: elisp: (or t nil t)
PASS: elisp.test: elisp: (or t)
PASS: elisp.test: elisp: (or)
PASS: elisp.test: elisp: (prog1 1 2 3)
PASS: elisp.test: elisp: (prog2 1 2 3)
PASS: elisp.test: elisp: (progn 1 2 3)
PASS: elisp.test: elisp: (while nil 1)
PASS: elisp.test: elisp: (defun testf (x y &optional o &rest r) (list x y o r))
PASS: elisp.test: elisp: (testf 1 2)
PASS: elisp.test: elisp: (testf 1 2 3 4 5 56)
PASS: elisp.test: elisp: (funcall (lambda (x y &optional o &rest r) (list x y o r)) 1 2 3 4)
PASS: elisp.test: elisp: (apply (lambda (x y &optional o &rest r) (list x y o r)) 1 2 3 nil)
PASS: elisp.test: elisp: (setq x 3)
PASS: elisp.test: elisp: (defvar x 4)
PASS: elisp.test: elisp: x
PASS: encoding-escapes.test: internal encoding: ultima
PASS: encoding-escapes.test: internal encoding: cedula
PASS: encoding-escapes.test: internal encoding: anos
PASS: encoding-escapes.test: internal encoding: Rashomon
PASS: encoding-escapes.test: chars: ultima
PASS: encoding-escapes.test: chars: cedula
PASS: encoding-escapes.test: chars: anos
PASS: encoding-escapes.test: chars: Rashomon
PASS: encoding-escapes.test: display output errors: ultima
PASS: encoding-escapes.test: display output errors: Rashomon
PASS: encoding-escapes.test: display output errors: tekniko
PASS: encoding-escapes.test: display output substitutions: ultima
PASS: encoding-escapes.test: display output substitutions: Rashomon
PASS: encoding-escapes.test: display output escapes: ultima
PASS: encoding-escapes.test: display output escapes: Rashomon
PASS: encoding-escapes.test: display output escapes: fake escape
PASS: encoding-escapes.test: input escapes: última
PASS: encoding-escapes.test: input escapes: 羅生門
PASS: encoding-iso88591.test: characters: input A
PASS: encoding-iso88591.test: characters: input A acute
PASS: encoding-iso88591.test: characters: display A
PASS: encoding-iso88591.test: characters: display A acute
PASS: encoding-iso88591.test: characters: display alpha
PASS: encoding-iso88591.test: characters: display Cherokee a
PASS: encoding-iso88591.test: characters: write A
PASS: encoding-iso88591.test: characters: write A acute
PASS: encoding-iso88591.test: characters: write A followed by combining accent
PASS: encoding-iso88591.test: string length: última
PASS: encoding-iso88591.test: string length: cédula
PASS: encoding-iso88591.test: string length: años
PASS: encoding-iso88591.test: string length: ¿Cómo?
PASS: encoding-iso88591.test: internal encoding: última
PASS: encoding-iso88591.test: internal encoding: cédula
PASS: encoding-iso88591.test: internal encoding: años
PASS: encoding-iso88591.test: internal encoding: ¿Cómo?
PASS: encoding-iso88591.test: chars: última
PASS: encoding-iso88591.test: chars: cédula
PASS: encoding-iso88591.test: chars: años
PASS: encoding-iso88591.test: chars: ¿Cómo?
PASS: encoding-iso88591.test: symbols == strings: última
PASS: encoding-iso88591.test: symbols == strings: cédula
PASS: encoding-iso88591.test: symbols == strings: años
PASS: encoding-iso88591.test: symbols == strings: ¿Cómo?
PASS: encoding-iso88591.test: non-ascii variable names: 1
PASS: encoding-iso88591.test: output errors: char 256
PASS: encoding-iso88597.test: characters: input A
PASS: encoding-iso88597.test: characters: input alpha
PASS: encoding-iso88597.test: characters: display A
PASS: encoding-iso88597.test: characters: display A acute
PASS: encoding-iso88597.test: characters: display alpha
PASS: encoding-iso88597.test: characters: display Cherokee A
PASS: encoding-iso88597.test: characters: write A
PASS: encoding-iso88597.test: characters: write alpha
PASS: encoding-iso88597.test: string length: s1
PASS: encoding-iso88597.test: string length: s2
PASS: encoding-iso88597.test: string length: s3
PASS: encoding-iso88597.test: string length: s4
PASS: encoding-iso88597.test: internal encoding: s1
PASS: encoding-iso88597.test: internal encoding: s2
PASS: encoding-iso88597.test: internal encoding: s3
PASS: encoding-iso88597.test: internal encoding: s4
PASS: encoding-iso88597.test: chars: s1
PASS: encoding-iso88597.test: chars: s2
PASS: encoding-iso88597.test: chars: s3
PASS: encoding-iso88597.test: chars: s4
PASS: encoding-iso88597.test: symbols == strings: Περί
PASS: encoding-iso88597.test: symbols == strings: της
PASS: encoding-iso88597.test: symbols == strings: κριτικής
PASS: encoding-iso88597.test: symbols == strings: και
PASS: encoding-iso88597.test: non-ascii variable names: 1
PASS: encoding-iso88597.test: output errors: char #x0400
PASS: encoding-utf8.test: characters: input A
PASS: encoding-utf8.test: characters: input A acute
PASS: encoding-utf8.test: characters: input alpha
PASS: encoding-utf8.test: characters: input Cherokee A
PASS: encoding-utf8.test: characters: display A
PASS: encoding-utf8.test: characters: display A acute
PASS: encoding-utf8.test: characters: display alpha
PASS: encoding-utf8.test: characters: display Cherokee A
PASS: encoding-utf8.test: characters: write A
PASS: encoding-utf8.test: characters: write A acute
PASS: encoding-utf8.test: characters: write A followed by combining accent
PASS: encoding-utf8.test: characters: write alpha
PASS: encoding-utf8.test: characters: write Cherokee A
PASS: encoding-utf8.test: string length: última
PASS: encoding-utf8.test: string length: cédula
PASS: encoding-utf8.test: string length: años
PASS: encoding-utf8.test: string length: 羅生門
PASS: encoding-utf8.test: internal encoding: última
PASS: encoding-utf8.test: internal encoding: cédula
PASS: encoding-utf8.test: internal encoding: años
PASS: encoding-utf8.test: internal encoding: 羅生門
PASS: encoding-utf8.test: chars: última
PASS: encoding-utf8.test: chars: cédula
PASS: encoding-utf8.test: chars: años
PASS: encoding-utf8.test: chars: 羅生門
PASS: encoding-utf8.test: symbols == strings: última
PASS: encoding-utf8.test: symbols == strings: cédula
PASS: encoding-utf8.test: symbols == strings: años
PASS: encoding-utf8.test: symbols == strings: 羅生門
PASS: encoding-utf8.test: non-ascii variable names: 1
PASS: eval-string.test: basic: eval none
PASS: eval-string.test: basic: eval single
PASS: eval-string.test: basic: eval multiple
PASS: eval-string.test: basic: compile none
PASS: eval-string.test: basic: compile single
PASS: eval-string.test: basic: compile multiple
PASS: eval-string.test: basic: eval values
PASS: eval-string.test: basic: compile values
PASS: eval.test: memoization: transparency
PASS: eval.test: evaluator: definitions return #<unspecified>
PASS: eval.test: evaluator: symbol lookup: top level: unbound: variable reference
PASS: eval.test: evaluator: symbol lookup: top level: unbound: procedure
PASS: eval.test: evaluator: parameter error: macro as argument
PASS: eval.test: evaluator: parameter error: passing macro as parameter
PASS: eval.test: call: wrong number of arguments: ((lambda () #f) 1)
PASS: eval.test: call: wrong number of arguments: ((lambda (x) #f))
PASS: eval.test: call: wrong number of arguments: ((lambda (x) #f) 1 2)
PASS: eval.test: call: wrong number of arguments: ((lambda (x y) #f))
PASS: eval.test: call: wrong number of arguments: ((lambda (x y) #f) 1)
PASS: eval.test: call: wrong number of arguments: ((lambda (x y) #f) 1 2 3)
PASS: eval.test: call: wrong number of arguments: ((lambda (x . rest) #f))
PASS: eval.test: call: wrong number of arguments: ((lambda (x y . rest) #f))
PASS: eval.test: call: wrong number of arguments: ((lambda (x y . rest) #f) 1)
PASS: eval.test: apply: scm_tc7_subr_2o: 0 args
PASS: eval.test: apply: scm_tc7_subr_2o: 1 arg
PASS: eval.test: apply: scm_tc7_subr_2o: 2 args
PASS: eval.test: apply: scm_tc7_subr_2o: 3 args
XFAIL: eval.test: map: documented?
PASS: eval.test: map: argument error: different length lists: first list empty
PASS: eval.test: map: argument error: different length lists: second list empty
PASS: eval.test: map: argument error: different length lists: first list shorter
PASS: eval.test: map: argument error: different length lists: second list shorter
PASS: eval.test: for-each: 1 arg, non-list, even number of elements
PASS: eval.test: for-each: 1 arg, non-list, odd number of elements
PASS: eval.test: define set procedure-name: closure
XFAIL: eval.test: define set procedure-name: procedure-with-setter
PASS: eval.test: promises: basic promise behaviour: delay gives a promise
PASS: eval.test: promises: basic promise behaviour: force evaluates a promise
PASS: eval.test: promises: basic promise behaviour: a forced promise is a promise
PASS: eval.test: promises: basic promise behaviour: forcing a forced promise works
PASS: eval.test: promises: basic promise behaviour: a promise is evaluated once
PASS: eval.test: promises: basic promise behaviour: a promise may call itself
PASS: eval.test: promises: basic promise behaviour: a promise carries its environment
PASS: eval.test: promises: basic promise behaviour: a forced promise does not reference its environment
PASS: eval.test: promises: extended promise behaviour: forcing a non-promise object is not supported
PASS: eval.test: promises: extended promise behaviour: unmemoizing a promise
PASS: eval.test: stacks: stack involving a primitive
PASS: eval.test: stacks: arguments of a primitive stack frame
PASS: eval.test: stacks: inner trim with prompt tag
PASS: eval.test: stacks: outer trim with prompt tag
PASS: eval.test: letrec init evaluation: lots of inits calculated in correct order
PASS: eval.test: values: single value
PASS: eval.test: values: call-with-values
PASS: eval.test: values: equal?
PASS: eval.test: stack overflow handlers: limit should be number
PASS: eval.test: stack overflow handlers: limit should be exact integer
PASS: eval.test: stack overflow handlers: limit should be nonnegative
PASS: eval.test: stack overflow handlers: limit should be positive
PASS: eval.test: stack overflow handlers: limit should be within address space
PASS: eval.test: stack overflow handlers: exception on overflow
PASS: eval.test: stack overflow handlers: exception on overflow with dynwind
PASS: eval.test: stack overflow handlers: overflow handler should return number
PASS: eval.test: stack overflow handlers: overflow handler should return exact integer
PASS: eval.test: stack overflow handlers: overflow handler should be nonnegative
PASS: eval.test: stack overflow handlers: overflow handler should be positive
PASS: eval.test: stack overflow handlers: overflow handler can allow recursion to continue
PASS: eval.test: docstrings: fixed closure
PASS: eval.test: docstrings: fixed closure with many args
PASS: eval.test: docstrings: general closure
PASS: eval.test: local evaluation: local-eval
PASS: eval.test: local evaluation: local-compile
PASS: eval.test: local evaluation: the-environment within a macro
PASS: eval.test: local evaluation: capture pattern variables
PASS: eval.test: local evaluation: mixed primitive-eval, local-eval and local-compile
PASS: exceptions.test: throw/catch: wrong type argument: (throw 1)
PASS: exceptions.test: throw/catch: wrong number of arguments: (throw)
PASS: exceptions.test: throw/catch: wrong number of arguments: throw 1 / catch 0
PASS: exceptions.test: throw/catch: wrong number of arguments: throw 2 / catch 1
PASS: exceptions.test: throw/catch: wrong number of arguments: throw 1 / catch 2
PASS: exceptions.test: throw/catch: wrong number of arguments: throw 3 / catch 2
PASS: exceptions.test: throw/catch: wrong number of arguments: throw 1 / catch 2+
PASS: exceptions.test: throw/catch: with pre-unwind handler: pre-unwind fluid state
PASS: exceptions.test: throw/catch: normal catch
PASS: exceptions.test: throw/catch: catch and with-throw-handler
PASS: exceptions.test: throw/catch: catch with rethrowing throw-handler
PASS: exceptions.test: throw/catch: catch with pre-unwind handler
PASS: exceptions.test: throw/catch: catch with rethrowing pre-unwind handler
PASS: exceptions.test: throw/catch: catch with throw handler
PASS: exceptions.test: throw/catch: catch with rethrowing throw handler
PASS: exceptions.test: throw/catch: effect of with-throw-handler not-unwinding on throw to another key
PASS: exceptions.test: throw/catch: with-throw-handler chaining
PASS: exceptions.test: throw/catch: throw handlers throwing to each other recursively
PASS: exceptions.test: throw/catch: throw handler throwing to lexically inside catch
PASS: exceptions.test: throw/catch: reuse of same throw handler after lexically inside catch
PASS: exceptions.test: throw/catch: again but with two chained throw handlers
PASS: exceptions.test: false-if-exception: (false-if-exception #t)
PASS: exceptions.test: false-if-exception: (not (false-if-exception #f))
PASS: exceptions.test: false-if-exception: (not (false-if-exception (error xxx)))
PASS: exceptions.test: delimited exception handlers: (let ((thunk (catch* (quote foo) (lambda () (throw (quote foo)))))) (thunk))
PASS: exceptions.test: delimited exception handlers: (let* ((thunk1 (catch* (quote foo) (lambda () (throw (quote foo))))) (thunk2 (catch* (quote bar) (lambda () (thunk1))))) (thunk1))
PASS: exceptions.test: delimited exception handlers: (let* ((thunk1 (catch* (quote foo) (lambda () (throw (quote foo))))) (thunk2 (catch* (quote bar) (lambda () (thunk1))))) (thunk2))
PASS: exceptions.test: delimited exception handlers: (let* ((thunk1 (catch* (quote foo) (lambda () (throw (quote bar))))) (thunk2 (catch* (quote bar) (lambda () (thunk1))))) (thunk2))
PASS: fdes-finalizers.test: simple: call-count
PASS: fdes-finalizers.test: simple: call-count
PASS: fdes-finalizers.test: simple: call-count
PASS: fdes-finalizers.test: simple: call-count
PASS: fdes-finalizers.test: multiple: call-count
PASS: fdes-finalizers.test: multiple: call-count
PASS: fdes-finalizers.test: multiple: call-count
PASS: fdes-finalizers.test: with removal: call-count
PASS: fdes-finalizers.test: with removal: call-count
PASS: fdes-finalizers.test: with removal: call-count
PASS: filesys.test: copy-file: fd leak when dest unwritable
PASS: filesys.test: lstat: normal file
PASS: filesys.test: lstat: symlink
PASS: filesys.test: opendir: root directory: not empty
PASS: filesys.test: opendir: root directory: all entries are strings
PASS: filesys.test: stat: filename: size
PASS: filesys.test: stat: file descriptor: size
PASS: filesys.test: stat: port: size
PASS: filesys.test: sendfile: file
PASS: filesys.test: sendfile: file with offset
PASS: filesys.test: sendfile: file with offset past the end
PASS: filesys.test: sendfile: file with offset near the end
PASS: filesys.test: sendfile: pipe
PASS: filesys.test: sendfile: pipe with offset
PASS: filesys.test: basename: /
PASS: filesys.test: basename: //
PASS: filesys.test: basename: a/b/c
PASS: filesys.test: mkdtemp: number arg
PASS: filesys.test: mkdtemp: template prefix is preserved
PASS: filesys.test: mkdtemp: invalid template
PASS: filesys.test: mkdtemp: directory created
PASS: fluids.test: syntax: with-fluids missing expression
PASS: fluids.test: syntax: with-fluids bad bindings
PASS: fluids.test: syntax: with-fluids bad bindings
PASS: fluids.test: initial fluid values: fluid-ref returns #f for uninitialized fluid
PASS: fluids.test: initial fluid values: fluid-ref returns #f for uninitialized thread local fluid
PASS: fluids.test: initial fluid values: fluid-ref returns default
PASS: fluids.test: initial fluid values: fluid-ref returns thread local default
PASS: fluids.test: initial fluid values: initial value is inherited from parent thread
PASS: fluids.test: with-fluids with non-fluid: exception raised if nonfluid passed to with-fluids
PASS: fluids.test: with-fluids with non-fluid: fluids not modified if nonfluid passed to with-fluids
PASS: fluids.test: with-fluids with duplicate fluid: last value wins
PASS: fluids.test: with-fluids with duplicate fluid: remove the duplicate, not the last binding
PASS: fluids.test: with-fluids with duplicate fluid: original value restored
PASS: fluids.test: fluid values are thread-local
PASS: fluids.test: fluids are GC'd
PASS: fluids.test: with-fluids: with-fluids binds
PASS: fluids.test: with-fluids: with-fluids unbinds
PASS: fluids.test: with-fluids: with-fluids and dynamic-wind
PASS: fluids.test: unbound fluids: fluid-ref of unbound fluid
PASS: fluids.test: unbound fluids: fluid-bound? of bound fluid
PASS: fluids.test: unbound fluids: fluid-bound? of unbound fluid
PASS: fluids.test: unbound fluids: unbound fluids can be set
PASS: fluids.test: unbound fluids: bound fluids can be unset
PASS: fluids.test: dynamic states: basics
PASS: fluids.test: dynamic states: with a fluid (basic)
PASS: fluids.test: dynamic states: with a fluid (set outer)
PASS: fluids.test: dynamic states: with a fluid (set inner)
PASS: fluids.test: dynamic states: dynstate captured (1)
PASS: fluids.test: dynamic states: dynstate captured (2)
PASS: fluids.test: dynamic states: dynstate captured (3)
PASS: fluids.test: dynamic states: exception handler not captured
PASS: foreign.test: foreign-library-pointer: error message
PASS: foreign.test: null pointer: pointer?
PASS: foreign.test: null pointer: zero
PASS: foreign.test: null pointer: null pointer identity
PASS: foreign.test: null pointer: null-pointer? %null-pointer
PASS: foreign.test: null pointer: dereference-pointer %null-pointer
PASS: foreign.test: null pointer: pointer->bytevector %null-pointer
PASS: foreign.test: make-pointer: pointer?
PASS: foreign.test: make-pointer: address preserved
PASS: foreign.test: make-pointer: equal?
PASS: foreign.test: make-pointer: equal? modulo finalizer
PASS: foreign.test: make-pointer: equal? modulo finalizer (set-pointer-finalizer!)
PASS: foreign.test: make-pointer: not equal?
PASS: foreign.test: pointer<->scm: immediates
PASS: foreign.test: pointer<->scm: non-immediates
PASS: foreign.test: define-wrapped-pointer-type: foo?
PASS: foreign.test: define-wrapped-pointer-type: unwrap-foo
PASS: foreign.test: define-wrapped-pointer-type: identity
PASS: foreign.test: define-wrapped-pointer-type: printer
PASS: foreign.test: pointer<->bytevector: bijection
PASS: foreign.test: pointer<->bytevector: pointer from bits
PASS: foreign.test: pointer<->bytevector: dereference-pointer
PASS: foreign.test: pointer<->string: %default-port-conversion-strategy is error
PASS: foreign.test: pointer<->string: %default-port-conversion-strategy is escape
PASS: foreign.test: pointer<->string: %default-port-conversion-strategy is substitute
PASS: foreign.test: pointer<->string: bijection
UNRESOLVED: foreign.test: pointer<->string: bijection [latin1]
PASS: foreign.test: pointer<->string: bijection, utf-8
PASS: foreign.test: pointer<->string: bijection, utf-8 [latin1]
PASS: foreign.test: pointer->procedure: object instead of pointer
PASS: foreign.test: procedure->pointer: qsort
PASS: foreign.test: procedure->pointer: qsort, wrong return type
PASS: foreign.test: procedure->pointer: qsort, wrong arity
PASS: foreign.test: procedure->pointer: bijection
PASS: foreign.test: procedure->pointer: procedures returning a pointer
PASS: foreign.test: procedure->pointer: procedures returning void
PASS: foreign.test: procedure->pointer: procedure is retained
PASS: foreign.test: procedure->pointer: arity
PASS: foreign.test: structs: sizeof { int8, double }
PASS: foreign.test: structs: sizeof { double, int8 }
PASS: foreign.test: structs: sizeof { short, int, long, pointer }
PASS: foreign.test: structs: alignof { int8, double, int8 }
PASS: foreign.test: structs: parse-c-struct
PASS: foreign.test: structs: alignment constraints honored
PASS: foreign.test: structs: int8, pointer
PASS: foreign.test: structs: unsigned-long, int8, size_t
PASS: foreign.test: structs: long, int, pointer
PASS: foreign.test: structs: int8, pointer, short, double
PASS: foreign.test: structs: int8, { int8, double, int8 }, int16
PASS: foreign.test: lib->cyg: name is #f
PASS: foreign.test: lib->cyg: name too short
PASS: foreign.test: lib->cyg: name starts with 'lib'
PASS: foreign.test: lib->cyg: name contains 'lib'
PASS: foreign.test: lib->cyg: name doesn't contain 'lib'
PASS: foreign.test: lib->cyg: name in path too short
PASS: foreign.test: lib->cyg: name in path starts with 'lib'
PASS: foreign.test: lib->cyg: name in path contains 'lib'
PASS: foreign.test: lib->cyg: name in path doesn't contain 'lib'
PASS: foreign.test: lib->cyg: name in windows path starts with 'lib'
PASS: foreign.test: lib->cyg: name in windows path doesn't contain 'lib'
PASS: format.test: simple-format: current-output-port is closed
PASS: format.test: format basic output: default to Unicode-capable port
PASS: format.test: format basic output: format ~% produces a new line
PASS: format.test: format basic output: format ~& starts a fresh line
PASS: format.test: format basic output: format ~& is stateless but works properly across outputs via port-column
PASS: format.test: format basic output: format ~F (format-out-substr) maintains the column correctly
PASS: format.test: format: excess arguments ignored A
PASS: format.test: format: excess arguments ignored B
PASS: format.test: ~d decimal integer: ~@d: -1
PASS: format.test: ~d decimal integer: ~@d: +0
PASS: format.test: ~d decimal integer: ~@d: +1
PASS: format.test: ~f fixed-point: 1.5
PASS: format.test: ~f fixed-point: 3/2
PASS: format.test: ~f fixed-point: ~2f
PASS: format.test: ~f fixed-point: ~2,1f
PASS: format.test: ~f fixed-point: ~2,2f
PASS: format.test: ~f fixed-point: string 02.5
PASS: format.test: ~h localized number: 1234.5
PASS: format.test: ~h localized number: padding
PASS: format.test: ~h localized number: padchar
PASS: format.test: ~h localized number: decimals
PASS: format.test: ~h localized number: locale
PASS: format.test: ~{ iteration: no arbitrary iteration limit
PASS: fractions.test: fractions: (= 3/4 0.75)
PASS: fractions.test: fractions: (= 3/4 0.75)
PASS: fractions.test: fractions: (= 0.75 3/4)
PASS: fractions.test: fractions: (= 0.75 3/4)
PASS: fractions.test: fractions: (eqv? 3/4 3/4)
PASS: fractions.test: fractions: (eqv? 3/4 3/4)
PASS: fractions.test: fractions: (eqv? 3 3)
PASS: fractions.test: fractions: (= -1 (/ most-negative-fixnum (- most-negative-fixnum)))
PASS: fractions.test: fractions: (eq? #t (integer? (/ most-negative-fixnum (- most-negative-fixnum))))
PASS: fractions.test: fractions: (eqv? (+ 1/4 1/2) 3/4)
PASS: fractions.test: fractions: (eqv? (* 1/4 2/3) 1/6)
PASS: fractions.test: fractions: (eqv? (/ 1/4 2/3) 3/8)
PASS: fractions.test: fractions: (eqv? (+ 1/4 2/3) 11/12)
PASS: fractions.test: fractions: (eqv? (- 1/4 2/3) -5/12)
PASS: fractions.test: fractions: (= -3/4 -0.75)
PASS: fractions.test: fractions: (eqv? -3/4 -3/4)
PASS: fractions.test: fractions: (eqv? -3/4 (/ 1/2 -2/3))
PASS: fractions.test: fractions: (eqv? (* 3/4 2) 3/2)
PASS: fractions.test: fractions: (eqv? (* 2 3/4) 3/2)
PASS: fractions.test: fractions: (eqv? (* 3/4 0.5) 0.375)
PASS: fractions.test: fractions: (eqv? (* 0.5 3/4) 0.375)
PASS: fractions.test: fractions: (eqv? (* 1/2 2.0-4.0i) 1.0-2.0i)
PASS: fractions.test: fractions: (eqv? (* 2.0-4.0i 1/2) 1.0-2.0i)
PASS: fractions.test: fractions: (eqv? (* 1/2 2.0+3.0i) 1.0+1.5i)
PASS: fractions.test: fractions: (eqv? (/ 2.0+4.0i 1/2) 4.0+8.0i)
PASS: fractions.test: fractions: (= 1/2 0.5)
PASS: fractions.test: fractions: (eqv? (- 1/2 0.5+1.0i) 0.0-1.0i)
PASS: fractions.test: fractions: (eqv? (- 0.5+1.0i 1/2) 0.0+1.0i)
PASS: fractions.test: fractions: (eqv? (+ 1/2 0.5+1.0i) 1.0+1.0i)
PASS: fractions.test: fractions: (eqv? (+ 0.5+1.0i 1/2) 1.0+1.0i)
PASS: fractions.test: fractions: (eq? (> 1 2/3) #t)
PASS: fractions.test: fractions: (eq? (> 2/3 1) #f)
PASS: fractions.test: fractions: (eq? (> 1.5 2/3) #t)
PASS: fractions.test: fractions: (eq? (> 2/3 1.5) #f)
PASS: fractions.test: fractions: (eq? (> 3/4 2/3) #t)
PASS: fractions.test: fractions: (eq? (> 2/3 3/4) #f)
PASS: fractions.test: fractions: (eqv? (max 1 2/3) 1)
PASS: fractions.test: fractions: (eqv? (max 2/3 1) 1)
PASS: fractions.test: fractions: (eqv? (max 1 4/3) 4/3)
PASS: fractions.test: fractions: (eqv? (max 4/3 1) 4/3)
PASS: fractions.test: fractions: (eqv? (max 1.5 4/3) 1.5)
PASS: fractions.test: fractions: (eqv? (max 4/3 1.5) 1.5)
PASS: fractions.test: fractions: (eqv? (max 4/3 2/3) 4/3)
PASS: fractions.test: fractions: (eqv? (max 2/3 4/3) 4/3)
PASS: fractions.test: fractions: (eqv? (min 1 2/3) 2/3)
PASS: fractions.test: fractions: (eqv? (min 2/3 1) 2/3)
PASS: fractions.test: fractions: (eqv? (min 1 4/3) 1)
PASS: fractions.test: fractions: (eqv? (min 4/3 1) 1)
PASS: fractions.test: fractions: (eqv? (min 1.5 1/2) 0.5)
PASS: fractions.test: fractions: (eqv? (min 1/2 1.5) 0.5)
PASS: fractions.test: fractions: (eqv? (min 4/3 2/3) 2/3)
PASS: fractions.test: fractions: (eqv? (min 2/3 4/3) 2/3)
PASS: fractions.test: fractions: (eq? (> 3/4 12345678912345678) #f)
PASS: fractions.test: fractions: (eq? (> 12345678912345678 3/4) #t)
PASS: fractions.test: fractions: (eq? (< 3/4 12345678912345678) #t)
PASS: fractions.test: fractions: (eq? (< 12345678912345678 3/4) #f)
PASS: fractions.test: fractions: (eqv? (max 12345678912345678 3/4) 12345678912345678)
PASS: fractions.test: fractions: (eqv? (max 3/4 12345678912345678) 12345678912345678)
PASS: fractions.test: fractions: (eqv? (min 12345678912345678 3/4) 3/4)
PASS: fractions.test: fractions: (eqv? (min 3/4 12345678912345678) 3/4)
PASS: fractions.test: fractions: (eqv? (max 3/4 10197734562406803221/17452826108659293487) 3/4)
PASS: fractions.test: fractions: (eqv? (max 1/2 10197734562406803221/17452826108659293487) 10197734562406803221/17452826108659293487)
PASS: fractions.test: fractions: (eqv? (min 3/4 10197734562406803221/17452826108659293487) 10197734562406803221/17452826108659293487)
PASS: fractions.test: fractions: (eqv? (min 1/2 10197734562406803221/17452826108659293487) 1/2)
PASS: fractions.test: fractions: (eqv? (max 10197734562406803221/17452826108659293487 10197734562406803221/17) 10197734562406803221/17)
PASS: fractions.test: fractions: (eqv? (max 10197734562406803221/174 10197734562406803221/17452826108659293487) 10197734562406803221/174)
PASS: fractions.test: fractions: (eqv? (max 10/17452826108659293487 10197734562406803221/17452826108659293487) 10197734562406803221/17452826108659293487)
PASS: fractions.test: fractions: (eqv? (max 10197734562406803221/17452826108659293487 10/17452826108659293487) 10197734562406803221/17452826108659293487)
PASS: fractions.test: fractions: (eqv? (min 10197734562406803221/17452826108659293487 10197734562406803221/17) 10197734562406803221/17452826108659293487)
PASS: fractions.test: fractions: (eqv? (min 10197734562406803221/174 10197734562406803221/17452826108659293487) 10197734562406803221/17452826108659293487)
PASS: fractions.test: fractions: (eqv? (min 10/17452826108659293487 10197734562406803221/17452826108659293487) 10/17452826108659293487)
PASS: fractions.test: fractions: (eqv? (min 10197734562406803221/17452826108659293487 10/17452826108659293487) 10/17452826108659293487)
PASS: fractions.test: fractions: (eqv? (expt 2 1/2) (sqrt 2))
PASS: fractions.test: fractions: (eqv? (expt 1/2 2) 1/4)
PASS: fractions.test: fractions: (eqv? (expt 2.0 1/2) (sqrt 2))
PASS: fractions.test: fractions: (eqv? (expt 1/2 2) 1/4)
PASS: fractions.test: fractions: (eqv? (real-part 3/4) 3/4)
PASS: fractions.test: fractions: (eqv? (imag-part 3/4) 0)
PASS: fractions.test: fractions: (eqv? (numerator 3/4) 3)
PASS: fractions.test: fractions: (eqv? (denominator 3/4) 4)
PASS: fractions.test: fractions: (eqv? (numerator -3/4) -3)
PASS: fractions.test: fractions: (eqv? (denominator -3/4) 4)
PASS: fractions.test: fractions: (eqv? (numerator 10197734562406803221/17452826108659293487) 10197734562406803221)
PASS: fractions.test: fractions: (eqv? (denominator 10197734562406803221/17452826108659293487) 17452826108659293487)
PASS: fractions.test: fractions: (eqv? (numerator 1/17452826108659293487) 1)
PASS: fractions.test: fractions: (eqv? (denominator 10197734562406803221/17) 17)
PASS: fractions.test: fractions: (eq? (rational? 3/4) #t)
PASS: fractions.test: fractions: (eq? (rational? 1.5) #t)
PASS: fractions.test: fractions: (eq? (rational? 1) #t)
PASS: fractions.test: fractions: (eq? (rational? 10197734562406803221/17452826108659293487) #t)
PASS: fractions.test: fractions: (eq? (integer? 2) #t)
PASS: fractions.test: fractions: (eq? (rational? 2) #t)
PASS: fractions.test: fractions: (eqv? (angle 3/4) 0.0)
PASS: fractions.test: fractions: (eqv? (angle -3/4) (atan 0.0 -1.0))
PASS: fractions.test: fractions: (eqv? (angle 10197734562406803221/17452826108659293487) 0.0)
PASS: fractions.test: fractions: (eqv? (magnitude 3/4) 3/4)
PASS: fractions.test: fractions: (eqv? (magnitude -3/4) 3/4)
PASS: fractions.test: fractions: (eqv? (magnitude 10197734562406803221/17452826108659293487) 10197734562406803221/17452826108659293487)
PASS: fractions.test: fractions: (eqv? (magnitude -10197734562406803221/17452826108659293487) 10197734562406803221/17452826108659293487)
PASS: fractions.test: fractions: (eqv? (abs 3/4) 3/4)
PASS: fractions.test: fractions: (eqv? (abs -3/4) 3/4)
PASS: fractions.test: fractions: (eqv? (abs 10197734562406803221/17452826108659293487) 10197734562406803221/17452826108659293487)
PASS: fractions.test: fractions: (eqv? (abs -10197734562406803221/17452826108659293487) 10197734562406803221/17452826108659293487)
PASS: fractions.test: fractions: (eqv? (abs 10197734562406803221/174) 10197734562406803221/174)
PASS: fractions.test: fractions: (eqv? (abs -10197734562406803221/174) 10197734562406803221/174)
PASS: fractions.test: fractions: (eqv? (abs 101/17452826108659293487) 101/17452826108659293487)
PASS: fractions.test: fractions: (eqv? (abs -101/17452826108659293487) 101/17452826108659293487)
PASS: fractions.test: fractions: (eqv? (exact->inexact 3/4) 0.75)
PASS: fractions.test: fractions: (eqv? (inexact->exact 0.5) 1/2)
PASS: fractions.test: fractions: (eqv? (inexact->exact -0.5) -1/2)
PASS: fractions.test: fractions: (eqv? (inexact->exact (exact->inexact 2135445/16777216)) 2135445/16777216)
PASS: fractions.test: fractions: (eq? (< (- (exact->inexact 10197734562406803221/17452826108659293487) 0.584302765576009) 1.0e-7) #t)
PASS: fractions.test: fractions: (eqv? (rationalize 19/25 1/10) 2/3)
PASS: fractions.test: fractions: (eqv? (rationalize 723/1000 1/10) 2/3)
PASS: fractions.test: fractions: (eqv? (rationalize 723/1000 1/100) 5/7)
PASS: fractions.test: fractions: (eqv? (rationalize -723/1000 1/100) -5/7)
PASS: fractions.test: fractions: (eqv? (rationalize 51/5 1/100) 51/5)
PASS: fractions.test: fractions: (eqv? (rationalize -51/5 1/100) -51/5)
PASS: fractions.test: fractions: (eqv? (rationalize 10197734562406803221/17452826108659293487 1/10) 1/2)
PASS: fractions.test: fractions: (eqv? (rationalize 10197734562406803221/17452826108659293487 1/100) 7/12)
PASS: fractions.test: fractions: (eqv? (rationalize 10197734562406803221/17452826108659293487 1/1000) 7/12)
PASS: fractions.test: fractions: (eqv? (rationalize 10197734562406803221/17452826108659293487 1/10000) 52/89)
PASS: fractions.test: fractions: (eqv? (rationalize 3/10 1/10) 1/3)
PASS: fractions.test: fractions: (eqv? (rationalize 3/10 -1/10) 1/3)
PASS: fractions.test: fractions: (eqv? (rationalize -3/10 1/10) -1/3)
PASS: fractions.test: fractions: (eqv? (rationalize -3/10 -1/10) -1/3)
PASS: fractions.test: fractions: (eqv? (rationalize 3/10 2/5) 0)
PASS: fractions.test: fractions: (eq? (exact? 0.6666666666666666) #f)
PASS: fractions.test: fractions: (eq? (exact? -15/16) #t)
PASS: fractions.test: fractions: (eq? (exact? (/ 2 3)) #t)
PASS: fractions.test: fractions: (eq? (exact? (/ 3000000000000 4000000000000)) #t)
PASS: fractions.test: fractions: (eq? (exact? (/ 3 4000000000)) #t)
PASS: fractions.test: fractions: (eq? (exact? (/ 4000000000 3)) #t)
PASS: fractions.test: fractions: (eq? (exact? (/ 10197734562406803221 17452826108659293487)) #t)
PASS: fractions.test: fractions: (eq? (exact? (/ 10197734562406803221 17)) #t)
PASS: fractions.test: fractions: (eq? (inexact? 0.6666666666666666) #t)
PASS: fractions.test: fractions: (eq? (inexact? -15/16) #f)
PASS: fractions.test: fractions: (eq? (inexact? (/ 2 3)) #f)
PASS: fractions.test: fractions: (eq? (inexact? (/ 3000000000000 4000000000000)) #f)
PASS: fractions.test: fractions: (eq? (inexact? (/ 3 4000000000)) #f)
PASS: fractions.test: fractions: (eq? (inexact? (/ 4000000000 3)) #f)
PASS: fractions.test: fractions: (eq? (inexact? (/ 10197734562406803221 17452826108659293487)) #f)
PASS: fractions.test: fractions: (eq? (inexact? (/ 10197734562406803221 17)) #f)
PASS: fractions.test: fractions: (eq? (= 2/3 0.667) #f)
PASS: fractions.test: fractions: (eq? (< 1/2 2/3 3/4) #t)
PASS: fractions.test: fractions: (eqv? (+ 1/2 2/3) 7/6)
PASS: fractions.test: fractions: (eqv? (* 4 1/2) 2)
PASS: fractions.test: fractions: (eqv? (- -2/3) 2/3)
PASS: fractions.test: fractions: (eqv? (- 2/3) -2/3)
PASS: fractions.test: fractions: (eqv? (+ 2/3) 2/3)
PASS: fractions.test: fractions: (eqv? (* 2/3) 2/3)
PASS: fractions.test: fractions: (eqv? (/ 2/3) 3/2)
PASS: fractions.test: fractions: (eqv? (/ 3 4 5) 3/20)
PASS: fractions.test: fractions: (eqv? (* 1 1/2) 1/2)
PASS: fractions.test: fractions: (eqv? (+ 1 1/4 1/3) 19/12)
PASS: fractions.test: fractions: (eqv? (* 3/5 1/6 3) 3/10)
PASS: fractions.test: fractions: (eqv? 0 0)
PASS: fractions.test: fractions: (eqv? (#{1-}# 1/2) -1/2)
PASS: fractions.test: fractions: (eqv? (#{1+}# 1/2) 3/2)
PASS: fractions.test: fractions: (eq? (zero? 3/4) #f)
PASS: fractions.test: fractions: (eq? (zero? 0) #t)
PASS: fractions.test: fractions: (eq? (positive? 3/4) #t)
PASS: fractions.test: fractions: (eq? (negative? 3/4) #f)
PASS: fractions.test: fractions: (eq? (positive? 10197734562406803221/17452826108659293487) #t)
PASS: fractions.test: fractions: (eq? (negative? 10197734562406803221/17452826108659293487) #f)
PASS: fractions.test: fractions: (eqv? (/ 17) 1/17)
PASS: fractions.test: fractions: (eqv? (/ 17452826108659293487) 1/17452826108659293487)
PASS: fractions.test: fractions: (eqv? (/ -17) -1/17)
PASS: fractions.test: fractions: (eqv? (/ -17452826108659293487) -1/17452826108659293487)
PASS: fractions.test: fractions: (eqv? (/ 1/2) 2)
PASS: fractions.test: fractions: (eqv? (/ 2 3) 2/3)
PASS: fractions.test: fractions: (eqv? (/ 2 -3) -2/3)
PASS: fractions.test: fractions: (eq? (zero? (+ 1/2 1/2)) #f)
PASS: fractions.test: fractions: (eq? (zero? (+ 1/2 -1/2)) #t)
PASS: fractions.test: fractions: (eq? (zero? (- 1/2 1/2)) #t)
PASS: fractions.test: fractions: (eqv? (/ 60 5 4 3 2) 1/2)
PASS: fractions.test: fractions: (= (truncate 5/4) 1.0)
PASS: fractions.test: fractions: (= (truncate 4/5) 0.0)
PASS: fractions.test: fractions: (= (truncate -2/3) 0.0)
PASS: fractions.test: fractions: (= (truncate 10197734562406803221/17452826108659293487) 0.0)
PASS: fractions.test: fractions: (= (truncate 17452826108659293487/10197734562406803221) 1.0)
PASS: fractions.test: fractions: (= (/ (log 1/2) (log 2)) -1.0)
PASS: fractions.test: fractions: (= (floor 2/3) 0)
PASS: fractions.test: fractions: (= (floor -2/3) -1)
PASS: fractions.test: fractions: (= (floor 10197734562406803221/17452826108659293487) 0)
PASS: fractions.test: fractions: (= (ceiling 2/3) 1)
PASS: fractions.test: fractions: (= (ceiling -2/3) 0)
PASS: fractions.test: fractions: (= (ceiling 10197734562406803221/17452826108659293487) 1)
PASS: fractions.test: fractions: (= (round 2/3) 1.0)
PASS: fractions.test: fractions: (= (round -2/3) -1.0)
PASS: fractions.test: fractions: (= (round 1/3) 0.0)
PASS: fractions.test: fractions: (= (round 10197734562406803221/17452826108659293487) 1.0)
PASS: fractions.test: fractions: (eqv? (max 1/2 3/4 4/5 5/6 6/7) 6/7)
PASS: fractions.test: fractions: (eqv? (min 1/2 3/4 4/5 5/6 6/7) 1/2)
PASS: fractions.test: fractions: (eqv? (expt -1/2 5) -1/32)
PASS: fractions.test: fractions: (eqv? (expt 1/2 -10) 1024)
PASS: fractions.test: fractions: (eqv? (rationalize 3/10 1/10) 1/3)
PASS: fractions.test: fractions: (= (make-rectangular 1/2 -1/2) 0.5-0.5i)
PASS: fractions.test: fractions: (= (sqrt 1/4) 0.5)
PASS: fractions.test: fractions: (eqv? (string->number 3/4) 3/4)
PASS: fractions.test: fractions: (eqv? (string->number -3/4) -3/4)
PASS: fractions.test: fractions: (eqv? (string->number 10197734562406803221/17452826108659293487) 10197734562406803221/17452826108659293487)
PASS: fractions.test: fractions: (eqv? (string->number -10197734562406803221/17452826108659293487) -10197734562406803221/17452826108659293487)
PASS: fractions.test: fractions: (eqv? (string->number 10/17452826108659293487) 10/17452826108659293487)
PASS: fractions.test: fractions: (eqv? (string->number 10197734562406803221/174) 10197734562406803221/174)
PASS: fractions.test: fractions: (string=? (number->string 3/4) 3/4)
PASS: fractions.test: fractions: (string=? (number->string 10197734562406803221/17452826108659293487) 10197734562406803221/17452826108659293487)
PASS: fractions.test: fractions: (eq? (eq? 3/4 0.75) #f)
PASS: fractions.test: fractions: (eq? (eqv? 3/4 0.75) #f)
PASS: fractions.test: fractions: (eq? (eqv? 3/4 3/4) #t)
PASS: fractions.test: fractions: (eq? (eqv? 10197734562406803221/17452826108659293487 10197734562406803221/17452826108659293487) #t)
PASS: fractions.test: fractions: (eq? (equal? 3/4 0.75) #f)
PASS: fractions.test: fractions: (eq? (number? 3/4) #t)
PASS: fractions.test: fractions: (eq? (real? 3/4) #t)
PASS: fractions.test: fractions: (eq? (integer? 3/4) #f)
PASS: fractions.test: fractions: (= (* 1/2 2.0e40) 1.0e40)
PASS: fractions.test: fractions: (= (* 2.0e40 1/2) 1.0e40)
PASS: fractions.test: fractions: (= (/ 3.0e40 3/2) 2.0e40)
PASS: fractions.test: fractions: (eqv? (case 1/2 ((1/2) 1) ((3/4) 2)) 1)
PASS: fractions.test: fractions: (eqv? (/ 1 -2) -1/2)
PASS: fractions.test: fractions: (eqv? (numerator (/ 1 -2)) -1)
PASS: fractions.test: fractions: (eqv? (denominator (/ 1 -2)) 2)
PASS: fractions.test: fractions: (eq? (negative? (/ 1 -2)) #t)
PASS: fractions.test: fractions: (eq? (positive? (/ 1 -2)) #f)
PASS: fractions.test: fractions: (eqv? (/ -1/2 -1/3) 3/2)
PASS: fractions.test: fractions: (eqv? (numerator (/ -1/2 -1/3)) 3)
PASS: fractions.test: fractions: (eqv? (denominator (/ -1/2 -1/3)) 2)
PASS: fractions.test: fractions: (eq? (negative? (/ -1/2 -1/3)) #f)
PASS: fractions.test: fractions: (eq? (positive? (/ -1/2 -1/3)) #t)
PASS: fractions.test: fractions: (eqv? (numerator 12) 12)
PASS: fractions.test: fractions: (eqv? (numerator -12) -12)
PASS: fractions.test: fractions: (eqv? (denominator 12) 1)
PASS: fractions.test: fractions: (eqv? (denominator -12) 1)
PASS: fractions.test: fractions: (eqv? (- 1/2 1/2) 0)
PASS: fractions.test: fractions: (eqv? (+ 1/2 1/2) 1)
PASS: fractions.test: fractions: (eqv? (/ 1/2 1/2) 1)
PASS: fractions.test: fractions: (eqv? (* 2 1/2) 1)
PASS: fractions.test: fractions: (eq? (complex? 1/2) #t)
PASS: fractions.test: fractions: (eqv? (+ (exact->inexact 3/10) (exact->inexact -3/10)) 0.0)
PASS: fractions.test: fractions: (eqv? (/ 1/2 1/4) 2)
PASS: fractions.test: fractions: (eqv? (/ 2 1/4) 8)
PASS: fractions.test: fractions: (eqv? (/ 1/4 2) 1/8)
PASS: fractions.test: fractions: (eqv? (floor 5/2) 2)
PASS: fractions.test: fractions: (eqv? (ceiling 5/2) 3)
PASS: fractions.test: fractions: (eqv? (round 5/2) 2)
PASS: fractions.test: fractions: (eqv? (truncate 5/2) 2)
PASS: fractions.test: fractions: (eqv? (floor -5/2) -3)
PASS: fractions.test: fractions: (eqv? (ceiling -5/2) -2)
PASS: fractions.test: fractions: (eqv? (round -5/2) -2)
PASS: fractions.test: fractions: (eqv? (truncate -5/2) -2)
PASS: fractions.test: fractions: (eqv? (floor 4/3) 1)
PASS: fractions.test: fractions: (eqv? (ceiling 4/3) 2)
PASS: fractions.test: fractions: (eqv? (round 4/3) 1)
PASS: fractions.test: fractions: (eqv? (truncate 4/3) 1)
PASS: fractions.test: fractions: (eqv? (floor -4/3) -2)
PASS: fractions.test: fractions: (eqv? (ceiling -4/3) -1)
PASS: fractions.test: fractions: (eqv? (round -4/3) -1)
PASS: fractions.test: fractions: (eqv? (truncate -4/3) -1)
PASS: fractions.test: fractions: (eqv? (floor 5/3) 1)
PASS: fractions.test: fractions: (eqv? (ceiling 5/3) 2)
PASS: fractions.test: fractions: (eqv? (round 5/3) 2)
PASS: fractions.test: fractions: (eqv? (truncate 5/3) 1)
PASS: fractions.test: fractions: (eqv? (floor -5/3) -2)
PASS: fractions.test: fractions: (eqv? (ceiling -5/3) -1)
PASS: fractions.test: fractions: (eqv? (round -5/3) -2)
PASS: fractions.test: fractions: (eqv? (truncate -5/3) -1)
PASS: fractions.test: fractions: (eqv? (floor 11/4) 2)
PASS: fractions.test: fractions: (eqv? (ceiling 11/4) 3)
PASS: fractions.test: fractions: (eqv? (round 11/4) 3)
PASS: fractions.test: fractions: (eqv? (truncate 11/4) 2)
PASS: fractions.test: fractions: (eqv? (floor -11/4) -3)
PASS: fractions.test: fractions: (eqv? (ceiling -11/4) -2)
PASS: fractions.test: fractions: (eqv? (round -11/4) -3)
PASS: fractions.test: fractions: (eqv? (truncate -11/4) -2)
PASS: fractions.test: fractions: (eqv? (floor 9/4) 2)
PASS: fractions.test: fractions: (eqv? (ceiling 9/4) 3)
PASS: fractions.test: fractions: (eqv? (round 9/4) 2)
PASS: fractions.test: fractions: (eqv? (truncate 9/4) 2)
PASS: fractions.test: fractions: (eqv? (floor -9/4) -3)
PASS: fractions.test: fractions: (eqv? (ceiling -9/4) -2)
PASS: fractions.test: fractions: (eqv? (round -9/4) -2)
PASS: fractions.test: fractions: (eqv? (truncate -9/4) -2)
PASS: fractions.test: fractions: (eqv? (numerator 9.0) 9.0)
PASS: fractions.test: fractions: (eqv? (numerator 9) 9)
PASS: fractions.test: fractions: (eqv? (numerator -9/4) -9)
PASS: fractions.test: fractions: (eqv? (numerator -2.25) -9.0)
PASS: fractions.test: fractions: (eqv? (denominator 0) 1)
PASS: fractions.test: fractions: (eqv? (denominator 9) 1)
PASS: fractions.test: fractions: (eqv? (denominator 2/3) 3)
PASS: fractions.test: fractions: (eqv? (denominator -9/4) 4)
PASS: fractions.test: fractions: (eqv? (denominator -2.25) 4.0)
PASS: fractions.test: fractions: (eqv? (denominator 9.0) 1.0)
PASS: fractions.test: fractions: (eqv? (expt 2 -2) 1/4)
PASS: fractions.test: fractions: (eqv? (expt 1/2 2) 1/4)
PASS: fractions.test: fractions: (eqv? (expt 1/2 -2) 4)
PASS: fractions.test: fractions: (eqv? (expt -1/2 3) -1/8)
PASS: fractions.test: fractions: (= (+ 1 1/2 0.5 3.0+5.5i) 5.0+5.5i)
PASS: fractions.test: fractions: (eq? (let ((error (catch #t (lambda () (/ 1 0)) (lambda args (car args))))) error) (quote numerical-overflow))
PASS: fractions.test: fractions: (eq? (let ((error (catch #t (lambda () (/ 0)) (lambda args (car args))))) error) (quote numerical-overflow))
PASS: fractions.test: fractions: (eq? (let ((error (catch #t (lambda () (modulo 1/2 1)) (lambda args (car args))))) error) (quote wrong-type-arg))
PASS: fractions.test: fractions: (eq? (let ((error (catch #t (lambda () (logand 1/2 1)) (lambda args (car args))))) error) (quote wrong-type-arg))
PASS: fractions.test: fractions: (eq? (let ((error (catch #t (lambda () (gcd 1/2 3)) (lambda args (car args))))) error) (quote wrong-type-arg))
PASS: fractions.test: fractions: (eq? (let ((error (catch #t (lambda () (numerator 1.0+1.0i)) (lambda args (car args))))) error) (quote wrong-type-arg))
PASS: fractions.test: fractions: (= (- 0.0+6.0i 1/4 0.5 7) -7.75+6.0i)
PASS: fractions.test: fractions: (eqv? (rationalize 5/2 1/1000) 5/2)
PASS: fractions.test: fractions: (eqv? (rationalize 7/3 1/1000) 7/3)
PASS: fractions.test: fractions: (eqv? (rationalize 62831853/20000000 1/10) 16/5)
PASS: fractions.test: fractions: (eqv? (numerator (/ 8 -6)) -4)
PASS: fractions.test: fractions: (eqv? (denominator (/ 8 -6)) 3)
PASS: fractions.test: fractions: (eqv? (gcd (numerator 7/9) (denominator 7/9)) 1)
PASS: fractions.test: fractions: (eqv? (/ 10105597264942543888 14352488138967388642) 5052798632471271944/7176244069483694321)
PASS: fractions.test: fractions: (eqv? (/ -17631701977702695093 3931860028646338313) -17631701977702695093/3931860028646338313)
PASS: fractions.test: fractions: (eqv? (/ -1606495881715082381 16324360910828438638) -1606495881715082381/16324360910828438638)
PASS: fractions.test: fractions: (eqv? (/ -7960193178071300653 -10280747961248435844) 7960193178071300653/10280747961248435844)
PASS: fractions.test: fractions: (eqv? (+ -6069217517368004039/4076344942716985944 -399587800008780737/578697755310708616) -321318766345655960630110128852941297/147435729263904928853096856396980844)
PASS: fractions.test: fractions: (eqv? (+ -41285036778370718/305793940074617155 -1396094619926552183/15846027887642356854) -1081121118676718273499338028514700537/4845619302294419132297197085940230370)
PASS: fractions.test: fractions: (eqv? (+ 15975644088444536091/18063939613598316583 17501188199168431305/2979264551795273683) 363736076920798535449296038324193823968/53817254956563877935003279344562385189)
PASS: fractions.test: fractions: (eqv? (+ 10197734562406803221/17452826108659293487 14639450560606090654/236781760961536951) 257914422508077920978698094723491089669/4132510899763835955061848877304138137)
PASS: fractions.test: fractions: (eqv? (+ 2479135971595944301/28169711053558469409458629766960029324030958129245230797895768033968717159836 3427244662960653095/28446538857424788738244844756675951434179713170118835630969510829753715142438) 83533664807147783700314944003289704497366290621039272787320536148072960487262393639109696219129/400665390043739792096386856839000624247597803909916773326187593475005945995926511155915226239317839405221783416485999405286913042389632370302962776360084)
PASS: fractions.test: fractions: (eqv? (+ 14865500635281371370/56222262470894935247131881777606182311286871927285650835673424014252462156319 6436092572090050725/19282524131572095520593158313261757267758159099923763177708581262473988426947) 648496060602737474174747620183913927791943082591316359990137585798909535115053578637078811588665/1084107132826611778585714784136700465449309125114745313342842325649687943726086785657821763235618936882528385000712567133180567926723616940173290425928093)
PASS: fractions.test: fractions: (eqv? (+ 340196811925805824067049620503247332111/14422464039094716975 51285507111580975533385007190438537498/3230944134273302873) 1838820276033673324738967436225477772648372110186756083453/46598175588880723338390245118389369175)
PASS: fractions.test: fractions: (eqv? (+ -210449319160504160992731982827917332322/5436857856220342451 251628249079137248539965770847855056283/4323109210037952829) 458271632943884346915405609513071881239303671882386130695/23504130271893362375786510953364243879)
PASS: fractions.test: fractions: (eqv? (- 8229768172162771789/4094631553683915058 14916542302144281688/9648520391570031013) 18327341244785642013243791303754634353/39507136041685332578233153660317693754)
PASS: fractions.test: fractions: (eqv? (- 13554976081719376860/5850035209629724601 -6813034992928443315/16012083383654426278) 256899901877002811987490932642058619395/93671251573905451634945335611797465078)
PASS: fractions.test: fractions: (eqv? (- -221798849980968127/896588178875000428 -10118632981534633697/16809799818197706916) 333990778095757160537366868413422249/941966737890699707694484674257410003)
PASS: fractions.test: fractions: (eqv? (- -10398409463665680242/10672871071680021919 908300169382593227/1663860017749090135) -2076589873614048366639515256135965791/1366012573135328609279238070700513005)
PASS: fractions.test: fractions: (eqv? (- -2198518713248421187/494031967775171833 162489257999262168/3608560229859558061) -8013762081101965644053022173225152351/1782744111192743850497670941715295813)
PASS: fractions.test: fractions: (eqv? (- 4025149216228566945/640594137312937394 5467380276809034025/15813352732084653151) 60148732603712157399679443099667862845/10129941051434949990590527231467828494)
PASS: fractions.test: fractions: (eqv? (- 1543899448831604569141696144740105016328586790221799945430718394112623114412/1094690716976737526626281319975432667416762320123576900412499904933271786567 -101835025746074730017715423582062511397387458863000475669454309217160145993/55116548932808468782187525862059393507883043749327746382569396580129398962) 196572266866178229534134252625134989714563665559807019513454337864363053729628560611312158082929567528955985669620113192156991984486011150099776316375/60335574468539540262844259780498204139853746803235564167348945699931512713417761400790104247218084745081610815218855896912895393599203789305655343454)
PASS: fractions.test: fractions: (eqv? (- -37581128364300495505521143552535972339959603365602244668159915869829949338997/42947503543372015019662104425995959382231280059683481488692141811517675950053 -64888994735350842409379226446854438865448614840503930577860382883594178287934/83188698741706753136718468601650233481619465918167616089202536622553688681087) -339504834548876267781536981106771553482515399809961247195394672491113984585270709765073243997043174508213253440272888923497173265137136111635177948889237/3572746933977957867604303713153220827104741303667912510494658617478381525690274918494624922428110123336345510454960178899375325287131764283538305257747611)
PASS: fractions.test: fractions: (eqv? (* -6520062188352981842/3213004995534018829 -3812444292971845716/15284944374811818089) 24857373879807849010516976362973488872/49110602632729971801355498746248797781)
PASS: fractions.test: fractions: (eqv? (* -844583948128454879/4750740551331102615 -1309778567130405125/4885884698278749707) 221243590680205607733892613510570975/4642314113048197066962569716783636761)
PASS: fractions.test: fractions: (eqv? (* -4579815856418431271/16947444571374397297 7990245706938186906/12540719430158043191) -36593853985314806270746820601513137526/212533147427761354206383017714519654727)
PASS: fractions.test: fractions: (eqv? (* -3587966953201943536/3194797554208122281 975954052071387816/2707062718507963111) -3501690886675668292903668827990357376/8648517352177231144330968693325176191)
PASS: fractions.test: fractions: (eqv? (* 710265334225408429/567023629756400552 -5578988760400430103/4131535930210536898) -3962562316545608552741467762441538187/2342678499616965424161446427863567696)
PASS: fractions.test: fractions: (eqv? (* 18305319006789031727/4480148641441744463 -1641093267260986094/16028097657311023719) -30040735777106040963634910981471804338/71808259944297590021537032075729917897)
PASS: fractions.test: fractions: (eqv? (* 522499067029593907/142530390958606446621834761330018829110 1567459634764499377/31663510497342378306792964160850079086) 818996196770998943862055820464495939/4513012530308148429025282037949729145117603192483641232823845248212618993460)
PASS: fractions.test: fractions: (eqv? (* -280037880297253633994139513185953058494/23798550327416056573646642830182072429 13967268482262630670960486883264178489/7947215947745048068401387767511847243) -434596028812829556627014314125713048434599389957141408329542154357763726174/21014690966139335562014814134594464675233042588696546668504776333756662583)
PASS: fractions.test: fractions: (eqv? (* 87160410649223805266866345018804635271/204719779683096591635231158476535039583 91197762560765392928084914476898132964/277206223024759381433146631560580134513) 7948834435086720002947247338196997812861466884983039250681993725808882173244/56749596904412078223459353928850191672356004665473536520452927516595919428079)
PASS: fractions.test: fractions: (eqv? (/ 7013212896988366906/12397903473277899947 818833870013215068/2125577647443895255) 7453564285301859120853045020886215515/5075911640537211768265804260348400698)
PASS: fractions.test: fractions: (eqv? (/ -15781329068048599432/14942574238341613337 4388772934226358350/2640112802717985697) -20832244458230302534551181278529162052/32789782692450857054331267544650656975)
PASS: fractions.test: fractions: (eqv? (/ -9015230453321124271/17425619133302730035 -10422000746814766599/14972344381173680534) 134979135022768387806775446187867640714/181609815620990738305316999098032100965)
PASS: fractions.test: fractions: (eqv? (/ -14741075237791868512/12448692140900938227 -1090381863721238817/1060836378253796023) 15637868866825840780217685066084527776/13573828137487503515304766902031557459)
PASS: fractions.test: fractions: (eqv? (/ -7371815071140740177/4722722556038701367 3872455829192658988/994203944294825175) -7329087620340161131469364260313555975/18288534491791723206480607737200436596)
PASS: fractions.test: fractions: (eqv? (/ -9856364379969390509/7988230468709836259 -7208901117187058135/7430860779232874136) 1093153305924514768551484985555671272/859497963436269188803272225817371895)
PASS: fractions.test: fractions: (eqv? (/ -4420263280205408439/38682162086456801604593696710774835436326970692840048042132553053971380151628 -758651402628235427/1755534012040040367913026343944696058732638465867705260088080517539506722166) 3879961265286134914514096239640695384126081133972137242327715997675029567458817030555062379437/14673138261791601182714628661554161812345431143865809776872034934342213839184709418896670662578)
PASS: fractions.test: fractions: (eqv? (/ -54987418627898620923060954379316763081930842855917193391807940070173620336071/17370345837184638879794373707261631548922174314274224219546763452439685451597 107349939397731511365417710412808670916754334908520065561311453951414109180973/7800708635318451621630266369706695626474649690647985662113853436261704078874) -428940831324519456770429889832838610542119304716244392653623661175655561457214418178921042544524225772650432309479656622489393939407340321261255371264054/1864705572939408818246392762570376592749103793151936455808919833872532407312841098160841844995663367019074328670998871082130543124576872890789577304863881)
PASS: fractions.test: fraction generics: (eq? (G 1) (quote integer))
PASS: fractions.test: fraction generics: (eq? (G 2/3) (quote fraction))
PASS: ftw.test: visited?-proc: valid inodes: 0 1 - 1st
PASS: ftw.test: visited?-proc: valid inodes: 0 1 - 2nd
PASS: ftw.test: visited?-proc: valid inodes: 0 1 - 3rd
PASS: ftw.test: visited?-proc: valid inodes: 0 2
PASS: ftw.test: visited?-proc: valid inodes: 0 3
PASS: ftw.test: visited?-proc: valid inodes: 0 4
PASS: ftw.test: visited?-proc: valid inodes: 5 5
PASS: ftw.test: visited?-proc: valid inodes: 5 7
PASS: ftw.test: visited?-proc: valid inodes: 7 5
PASS: ftw.test: visited?-proc: valid inodes: 7 7
PASS: ftw.test: visited?-proc: valid inodes: 5 5 - 2nd
PASS: ftw.test: visited?-proc: valid inodes: 5 7 - 2nd
PASS: ftw.test: visited?-proc: valid inodes: 7 5 - 2nd
PASS: ftw.test: visited?-proc: valid inodes: 7 7 - 2nd
PASS: ftw.test: visited?-proc: broken inodes: 0 1 - 1st
PASS: ftw.test: visited?-proc: broken inodes: 0 1 - 2nd
PASS: ftw.test: visited?-proc: broken inodes: 0 1 - 3rd
PASS: ftw.test: visited?-proc: broken inodes: 0 2
PASS: ftw.test: visited?-proc: broken inodes: 0 3
PASS: ftw.test: visited?-proc: broken inodes: 0 4
PASS: ftw.test: visited?-proc: broken inodes: 5 5
PASS: ftw.test: visited?-proc: broken inodes: 5 7
PASS: ftw.test: visited?-proc: broken inodes: 7 5
PASS: ftw.test: visited?-proc: broken inodes: 7 7
PASS: ftw.test: visited?-proc: broken inodes: 5 5 - 2nd
PASS: ftw.test: visited?-proc: broken inodes: 5 7 - 2nd
PASS: ftw.test: visited?-proc: broken inodes: 7 5 - 2nd
PASS: ftw.test: visited?-proc: broken inodes: 7 7 - 2nd
PASS: ftw.test: file-system-fold: test-suite
PASS: ftw.test: file-system-fold: test-suite (never enter)
PASS: ftw.test: file-system-fold: test-suite/lib.scm (flat file)
PASS: ftw.test: file-system-fold: ENOENT
PASS: ftw.test: file-system-fold: EACCES
PASS: ftw.test: file-system-fold: dangling symlink and lstat
PASS: ftw.test: file-system-fold: dangling symlink and stat
PASS: ftw.test: file-system-tree: test-suite (never enter)
PASS: ftw.test: file-system-tree: test-suite/*
PASS: ftw.test: file-system-tree: test-suite (recursive)
PASS: ftw.test: file-system-tree: ENOENT
PASS: ftw.test: scandir: top-srcdir
PASS: ftw.test: scandir: test-suite
PASS: ftw.test: scandir: flat file
PASS: ftw.test: scandir: EACCES
PASS: ftw.test: scandir: no select
PASS: ftw.test: scandir: symlink to directory
PASS: future.test: futures: make-future
PASS: future.test: futures: future
PASS: future.test: futures: true
PASS: future.test: futures: (+ 2 3)
PASS: future.test: futures: many
PASS: future.test: futures: touch several times
PASS: future.test: futures: nested
PASS: future.test: futures: multiple values
PASS: future.test: futures: no exception
PASS: future.test: futures: exception
PASS: future.test: nested futures: simple
PASS: future.test: nested futures: loop
PASS: gc.test: weak-values versus records
PASS: gc.test: gc: after-gc-hook gets called
PASS: gc.test: gc: Unused modules are removed
PASS: gc.test: gc: Lexical vars are collectable
PASS: getopt-long.test: exported procs: `option-ref' defined
PASS: getopt-long.test: exported procs: `getopt-long' defined
PASS: getopt-long.test: specifying predicate: valid arg
PASS: getopt-long.test: specifying predicate: invalid arg
PASS: getopt-long.test: specifying predicate: option has no arg
PASS: getopt-long.test: not specifying predicate: option has arg
PASS: getopt-long.test: not specifying predicate: option has no arg
PASS: getopt-long.test: value optional: long option `foo' w/ arg, long option `bar'
PASS: getopt-long.test: value optional: short option `foo' w/ arg, long option `bar'
PASS: getopt-long.test: value optional: short option `foo', long option `bar', no args
PASS: getopt-long.test: value optional: long option `foo', long option `bar', no args
PASS: getopt-long.test: value optional: long option `bar', short option `foo', no args
PASS: getopt-long.test: value optional: long option `bar', long option `foo', no args
PASS: getopt-long.test: option-ref: option-ref `--foo 4'
PASS: getopt-long.test: option-ref: option-ref `-f 4'
PASS: getopt-long.test: option-ref: option-ref `-f4'
PASS: getopt-long.test: option-ref: option-ref `--foo=4'
PASS: getopt-long.test: required: not mentioned, not given
PASS: getopt-long.test: required: not mentioned, given
PASS: getopt-long.test: required: not specified required, not given
PASS: getopt-long.test: required: not specified required, given anyway
PASS: getopt-long.test: required: not specified required, but w/ value, given anyway w/ "=" val
PASS: getopt-long.test: required: not specified required, but w/ value, given anyway w/ non-"=" val
PASS: getopt-long.test: required: specified required, not given
PASS: getopt-long.test: specified no-value, given anyway: using "=" syntax
PASS: getopt-long.test: specified arg required: short opt, arg given
PASS: getopt-long.test: specified arg required: long non-"=" opt, arg given
PASS: getopt-long.test: specified arg required: long "=" opt, arg given
PASS: getopt-long.test: specified arg required: short opt, arg not given
PASS: getopt-long.test: specified arg required: long non-"=" opt, arg not given (next arg an option)
PASS: getopt-long.test: specified arg required: long "=" opt, arg not given
PASS: getopt-long.test: apples-blimps-catalexis example: normal 1
PASS: getopt-long.test: apples-blimps-catalexis example: normal 2
PASS: getopt-long.test: apples-blimps-catalexis example: normal 3
PASS: getopt-long.test: apples-blimps-catalexis example: bad ordering causes missing option
PASS: getopt-long.test: multiple occurrences: sf/sf
PASS: getopt-long.test: multiple occurrences: sa/sa
PASS: getopt-long.test: multiple occurrences: sf/sa
PASS: getopt-long.test: multiple occurrences: sa/sf
PASS: getopt-long.test: multiple occurrences: lf/lf
PASS: getopt-long.test: multiple occurrences: la/la
PASS: getopt-long.test: multiple occurrences: lf/la
PASS: getopt-long.test: multiple occurrences: la/lf
PASS: getopt-long.test: multiple occurrences: sf/lf
PASS: getopt-long.test: multiple occurrences: lf/sf
PASS: getopt-long.test: multiple occurrences: sf/la
PASS: getopt-long.test: multiple occurrences: la/sf
PASS: getopt-long.test: multiple occurrences: sa/lf
PASS: getopt-long.test: multiple occurrences: lf/sa
PASS: getopt-long.test: multiple occurrences: sa/la
PASS: getopt-long.test: multiple occurrences: la/sa
PASS: getopt-long.test: stop-at-first-non-option: guile-tools compile example
PASS: goops.test: GOOPS loads
PASS: goops.test: basic classes: <top>: instance?
PASS: goops.test: basic classes: <top>: class-of
PASS: goops.test: basic classes: <top>: is a class?
PASS: goops.test: basic classes: <top>: class-name
PASS: goops.test: basic classes: <top>: direct superclasses
PASS: goops.test: basic classes: <top>: superclasses
PASS: goops.test: basic classes: <top>: direct slots
PASS: goops.test: basic classes: <top>: slots
PASS: goops.test: basic classes: <object>: instance?
PASS: goops.test: basic classes: <object>: class-of
PASS: goops.test: basic classes: <object>: is a class?
PASS: goops.test: basic classes: <object>: class-name
PASS: goops.test: basic classes: <object>: direct superclasses
PASS: goops.test: basic classes: <object>: superclasses
PASS: goops.test: basic classes: <object>: direct slots
PASS: goops.test: basic classes: <object>: slots
PASS: goops.test: basic classes: <class>: instance?
PASS: goops.test: basic classes: <class>: class-of
PASS: goops.test: basic classes: <class>: is a class?
PASS: goops.test: basic classes: <class>: class-name
PASS: goops.test: basic classes: <class>: direct superclass
PASS: goops.test: basic classes: class-precedence-list: <js-object>
PASS: goops.test: basic classes: class-precedence-list: <port>
PASS: goops.test: basic classes: class-precedence-list: <generic>
PASS: goops.test: basic classes: class-precedence-list: <null>
PASS: goops.test: basic classes: class-precedence-list: <pair>
PASS: goops.test: basic classes: class-precedence-list: <protected-slot>
PASS: goops.test: basic classes: class-precedence-list: <bytevector>
PASS: goops.test: basic classes: class-precedence-list: <r6rs-transcoded-port-port>
PASS: goops.test: basic classes: class-precedence-list: <applicable-struct-with-setter-class>
PASS: goops.test: basic classes: class-precedence-list: <r6rs-custom-binary-input/output-port-port>
PASS: goops.test: basic classes: class-precedence-list: <js-module-object>
PASS: goops.test: basic classes: class-precedence-list: <top>
PASS: goops.test: basic classes: class-precedence-list: <r6rs-custom-binary-output-port-port>
PASS: goops.test: basic classes: class-precedence-list: <primitive-generic>
PASS: goops.test: basic classes: class-precedence-list: <extended-generic>
PASS: goops.test: basic classes: class-precedence-list: <accessor>
PASS: goops.test: basic classes: class-precedence-list: <applicable-struct-with-setter>
PASS: goops.test: basic classes: class-precedence-list: <string-port>
PASS: goops.test: basic classes: class-precedence-list: #{<finalized smob>}#
PASS: goops.test: basic classes: class-precedence-list: <continuation>
PASS: goops.test: basic classes: class-precedence-list: <thread>
PASS: goops.test: basic classes: class-precedence-list: <mutex>
PASS: goops.test: basic classes: class-precedence-list: <condition-variable>
PASS: goops.test: basic classes: class-precedence-list: <promise>
PASS: goops.test: basic classes: class-precedence-list: <hook>
PASS: goops.test: basic classes: class-precedence-list: <random-state>
PASS: goops.test: basic classes: class-precedence-list: <macro>
PASS: goops.test: basic classes: class-precedence-list: <malloc>
PASS: goops.test: basic classes: class-precedence-list: <directory>
PASS: goops.test: basic classes: class-precedence-list: <regexp>
PASS: goops.test: basic classes: class-precedence-list: <srcprops>
PASS: goops.test: basic classes: class-precedence-list: <>
PASS: goops.test: basic classes: class-precedence-list: <character-set>
PASS: goops.test: basic classes: class-precedence-list: <char-set-cursor>
PASS: goops.test: basic classes: class-precedence-list: <locale>
PASS: goops.test: basic classes: class-precedence-list: <&i/o-file-already-exists>
PASS: goops.test: basic classes: class-precedence-list: <&lexical>
PASS: goops.test: basic classes: class-precedence-list: <<linker-object>>
PASS: goops.test: basic classes: class-precedence-list: <record-constructor-descriptor>
PASS: goops.test: basic classes: class-precedence-list: <<closure>>
PASS: goops.test: basic classes: class-precedence-list: <<intset>>
PASS: goops.test: basic classes: class-precedence-list: <<analysis>>
PASS: goops.test: basic classes: class-precedence-list: <<fix>>
PASS: goops.test: basic classes: class-precedence-list: <<binding-info>>
PASS: goops.test: basic classes: class-precedence-list: <<jit-data>>
PASS: goops.test: basic classes: class-precedence-list: <&i/o-write>
PASS: goops.test: basic classes: class-precedence-list: <<stringbuf>>
PASS: goops.test: basic classes: class-precedence-list: <<use-before-def-info>>
PASS: goops.test: basic classes: class-precedence-list: <$throw>
PASS: goops.test: basic classes: class-precedence-list: <<tree-analysis>>
PASS: goops.test: basic classes: class-precedence-list: <<applicable-struct-vtable>>
PASS: goops.test: basic classes: class-precedence-list: <$kreceive>
PASS: goops.test: basic classes: class-precedence-list: <<elf-note>>
PASS: goops.test: basic classes: class-precedence-list: <<transient-intset>>
PASS: goops.test: basic classes: class-precedence-list: <&message>
PASS: goops.test: basic classes: class-precedence-list: <<linker-symbol>>
PASS: goops.test: basic classes: class-precedence-list: <&non-continuable>
PASS: goops.test: basic classes: class-precedence-list: <$const>
PASS: goops.test: basic classes: class-precedence-list: <$call-alloc>
PASS: goops.test: basic classes: class-precedence-list: <&i/o-port>
PASS: goops.test: basic classes: class-precedence-list: <$callk>
PASS: goops.test: basic classes: class-precedence-list: <<static-procedure>>
PASS: goops.test: basic classes: class-precedence-list: <$prim>
PASS: goops.test: basic classes: class-precedence-list: <&exception-with-kind-and-args>
PASS: goops.test: basic classes: class-precedence-list: <$kargs>
PASS: goops.test: basic classes: class-precedence-list: <$continue>
PASS: goops.test: basic classes: class-precedence-list: <<language>>
PASS: goops.test: basic classes: class-precedence-list: <<coverage-data>>
PASS: goops.test: basic classes: class-precedence-list: <$kfun>
PASS: goops.test: basic classes: class-precedence-list: <$fun>
PASS: goops.test: basic classes: class-precedence-list: <stack>
PASS: goops.test: basic classes: class-precedence-list: <<transient-intmap>>
PASS: goops.test: basic classes: class-precedence-list: <<let-values>>
PASS: goops.test: basic classes: class-precedence-list: <date>
PASS: goops.test: basic classes: class-precedence-list: <$branch>
PASS: goops.test: basic classes: class-precedence-list: <<abbrev>>
PASS: goops.test: basic classes: class-precedence-list: <<arity>>
PASS: goops.test: basic classes: class-precedence-list: <<request>>
PASS: goops.test: basic classes: class-precedence-list: <<elf-segment>>
PASS: goops.test: basic classes: class-precedence-list: <<abort>>
PASS: goops.test: basic classes: class-precedence-list: <<asm>>
PASS: goops.test: basic classes: class-precedence-list: <<state>>
PASS: goops.test: basic classes: class-precedence-list: <&compound-exception>
PASS: goops.test: basic classes: class-precedence-list: <<line-prog>>
PASS: goops.test: basic classes: class-precedence-list: <<prompt>>
PASS: goops.test: basic classes: class-precedence-list: <$switch>
PASS: goops.test: basic classes: class-precedence-list: <<dwarf-context>>
PASS: goops.test: basic classes: class-precedence-list: <<var>>
PASS: goops.test: basic classes: class-precedence-list: <$arity>
PASS: goops.test: basic classes: class-precedence-list: <$allocation>
PASS: goops.test: basic classes: class-precedence-list: <<header-decl>>
PASS: goops.test: basic classes: class-precedence-list: <transcoder>
PASS: goops.test: basic classes: class-precedence-list: <&i/o-file-protection>
PASS: goops.test: basic classes: class-precedence-list: <<standard-vtable>>
PASS: goops.test: basic classes: class-precedence-list: <&quit-exception>
PASS: goops.test: basic classes: class-precedence-list: <<trap-state>>
PASS: goops.test: basic classes: class-precedence-list: <record-type>
PASS: goops.test: basic classes: class-precedence-list: <r6rs:hashtable>
PASS: goops.test: basic classes: class-precedence-list: <<intmap>>
PASS: goops.test: basic classes: class-precedence-list: <<repl>>
PASS: goops.test: basic classes: class-precedence-list: <&i/o-file-is-read-only>
PASS: goops.test: basic classes: class-precedence-list: <$rec>
PASS: goops.test: basic classes: class-precedence-list: <&i/o-decoding>
PASS: goops.test: basic classes: class-precedence-list: <<vlist>>
PASS: goops.test: basic classes: class-precedence-list: <<dwarf-meta>>
PASS: goops.test: basic classes: class-precedence-list: <&programming-error>
PASS: goops.test: basic classes: class-precedence-list: <<debug-context>>
PASS: goops.test: basic classes: class-precedence-list: <<string-table>>
PASS: goops.test: basic classes: class-precedence-list: <$prompt>
PASS: goops.test: basic classes: class-precedence-list: <&i/o>
PASS: goops.test: basic classes: class-precedence-list: <&warning>
PASS: goops.test: basic classes: class-precedence-list: <&i/o-encoding>
PASS: goops.test: basic classes: class-precedence-list: <<arity-info>>
PASS: goops.test: basic classes: class-precedence-list: <print-state>
PASS: goops.test: basic classes: class-precedence-list: <&i/o-invalid-position>
PASS: goops.test: basic classes: class-precedence-list: <option-spec>
PASS: goops.test: basic classes: class-precedence-list: <$kclause>
PASS: goops.test: basic classes: class-precedence-list: <$values>
PASS: goops.test: basic classes: class-precedence-list: <<parameter>>
PASS: goops.test: basic classes: class-precedence-list: <&i/o-file-does-not-exist>
PASS: goops.test: basic classes: class-precedence-list: <<applicable-struct-with-setter-vtable>>
PASS: goops.test: basic classes: class-precedence-list: <<encoding>>
PASS: goops.test: basic classes: class-precedence-list: <&implementation-restriction>
PASS: goops.test: basic classes: class-precedence-list: <<uniform-vector-backing-store>>
PASS: goops.test: basic classes: class-precedence-list: <&exception>
PASS: goops.test: basic classes: class-precedence-list: <<program-debug-info>>
PASS: goops.test: basic classes: class-precedence-list: <<linker-reloc>>
PASS: goops.test: basic classes: class-precedence-list: <<elf-section>>
PASS: goops.test: basic classes: class-precedence-list: <<operand>>
PASS: goops.test: basic classes: class-precedence-list: <<lregs>>
PASS: goops.test: basic classes: class-precedence-list: <&i/o-filename>
PASS: goops.test: basic classes: class-precedence-list: <$primcall>
PASS: goops.test: basic classes: class-precedence-list: <srfi-69:hash-table>
PASS: goops.test: basic classes: class-precedence-list: <call-data>
PASS: goops.test: basic classes: class-precedence-list: <<future>>
PASS: goops.test: basic classes: class-precedence-list: <<die>>
PASS: goops.test: basic classes: class-precedence-list: <&irritants>
PASS: goops.test: basic classes: class-precedence-list: <<counter>>
PASS: goops.test: basic classes: class-precedence-list: <time>
PASS: goops.test: basic classes: class-precedence-list: <<source-chunk>>
PASS: goops.test: basic classes: class-precedence-list: <<trap-wrapper>>
PASS: goops.test: basic classes: class-precedence-list: <&i/o-read>
PASS: goops.test: basic classes: class-precedence-list: <&syntax>
PASS: goops.test: basic classes: class-precedence-list: <$call>
PASS: goops.test: basic classes: class-precedence-list: <<cache-cell>>
PASS: goops.test: basic classes: class-precedence-list: <<elf>>
PASS: goops.test: basic classes: class-precedence-list: <$const-fun>
PASS: goops.test: basic classes: class-precedence-list: <&error>
PASS: goops.test: basic classes: class-precedence-list: <<uri>>
PASS: goops.test: basic classes: class-precedence-list: <&external-error>
PASS: goops.test: basic classes: class-precedence-list: <<elf-symbol>>
PASS: goops.test: basic classes: class-precedence-list: <<arity>>
PASS: goops.test: basic classes: class-precedence-list: <<meta>>
PASS: goops.test: basic classes: class-precedence-list: <<debug>>
PASS: goops.test: basic classes: class-precedence-list: <<reference-graph>>
PASS: goops.test: basic classes: class-precedence-list: <$ktail>
PASS: goops.test: basic classes: class-precedence-list: <<binding>>
PASS: goops.test: basic classes: class-precedence-list: <<primitive>>
PASS: goops.test: basic classes: class-precedence-list: <&assertion-failure>
PASS: goops.test: basic classes: class-precedence-list: <&origin>
PASS: goops.test: basic classes: class-precedence-list: <stats>
PASS: goops.test: basic classes: class-precedence-list: <enum-set>
PASS: goops.test: basic classes: class-precedence-list: <<source>>
PASS: goops.test: basic classes: class-precedence-list: <<warning-type>>
PASS: goops.test: basic classes: class-precedence-list: <&undefined-variable>
PASS: goops.test: basic classes: class-precedence-list: <$code>
PASS: goops.test: basic classes: class-precedence-list: <<foreign-library>>
PASS: goops.test: basic classes: class-precedence-list: <<env>>
PASS: goops.test: basic classes: class-precedence-list: <<env>>
PASS: goops.test: basic classes: class-precedence-list: <<env>>
PASS: goops.test: basic classes: class-precedence-list: <<env>>
PASS: goops.test: basic classes: class-precedence-list: <<env>>
PASS: goops.test: basic classes: class-precedence-list: <<env>>
PASS: goops.test: basic classes: class-precedence-list: <<env>>
PASS: goops.test: basic classes: class-precedence-list: <<env>>
PASS: goops.test: basic classes: class-precedence-list: <<env>>
PASS: goops.test: basic classes: class-precedence-list: <<env>>
PASS: goops.test: basic classes: class-precedence-list: <<env>>
PASS: goops.test: basic classes: class-precedence-list: <<env>>
PASS: goops.test: basic classes: class-precedence-list: <<env>>
PASS: goops.test: basic classes: class-precedence-list: <<env>>
PASS: goops.test: basic classes: class-precedence-list: <<env>>
PASS: goops.test: basic classes: class-precedence-list: <<env>>
PASS: goops.test: basic classes: class-precedence-list: <<env>>
PASS: goops.test: basic classes: class-precedence-list: <<env>>
PASS: goops.test: basic classes: class-precedence-list: <<env>>
PASS: goops.test: basic classes: class-precedence-list: <<env>>
PASS: goops.test: basic classes: class-precedence-list: <<env>>
PASS: goops.test: basic classes: class-precedence-list: <<env>>
PASS: goops.test: basic classes: class-precedence-list: <<env>>
PASS: goops.test: basic classes: class-precedence-list: <<env>>
PASS: goops.test: basic classes: class-precedence-list: <<env>>
PASS: goops.test: basic classes: class-precedence-list: <<env>>
PASS: goops.test: basic classes: class-precedence-list: <<env>>
PASS: goops.test: basic classes: class-precedence-list: <<env>>
PASS: goops.test: basic classes: class-precedence-list: <<env>>
PASS: goops.test: basic classes: class-precedence-list: <<env>>
PASS: goops.test: basic classes: class-precedence-list: <<env>>
PASS: goops.test: basic classes: class-precedence-list: <<env>>
PASS: goops.test: basic classes: class-precedence-list: <<env>>
PASS: goops.test: basic classes: class-precedence-list: <<env>>
PASS: goops.test: basic classes: class-precedence-list: <<env>>
PASS: goops.test: basic classes: class-precedence-list: <<env>>
PASS: goops.test: basic classes: class-precedence-list: <<env>>
PASS: goops.test: basic classes: class-precedence-list: <<env>>
PASS: goops.test: basic classes: class-precedence-list: <<env>>
PASS: goops.test: basic classes: class-precedence-list: <<env>>
PASS: goops.test: basic classes: class-precedence-list: <<env>>
PASS: goops.test: basic classes: class-precedence-list: <<env>>
PASS: goops.test: basic classes: class-precedence-list: <<env>>
PASS: goops.test: basic classes: class-precedence-list: <<env>>
PASS: goops.test: basic classes: class-precedence-list: <<env>>
PASS: goops.test: basic classes: class-precedence-list: <<env>>
PASS: goops.test: basic classes: class-precedence-list: <<env>>
PASS: goops.test: basic classes: class-precedence-list: <<env>>
PASS: goops.test: basic classes: class-precedence-list: <<env>>
PASS: goops.test: basic classes: class-precedence-list: <<env>>
PASS: goops.test: basic classes: class-precedence-list: <<env>>
PASS: goops.test: basic classes: class-precedence-list: <<env>>
PASS: goops.test: basic classes: class-precedence-list: <<env>>
PASS: goops.test: basic classes: class-precedence-list: <<env>>
PASS: goops.test: basic classes: class-precedence-list: <<env>>
PASS: goops.test: basic classes: class-precedence-list: <<env>>
PASS: goops.test: basic classes: class-precedence-list: <<env>>
PASS: goops.test: basic classes: class-precedence-list: <<env>>
PASS: goops.test: basic classes: class-precedence-list: <<env>>
PASS: goops.test: basic classes: class-precedence-list: <<env>>
PASS: goops.test: basic classes: class-precedence-list: <<env>>
PASS: goops.test: basic classes: class-precedence-list: <<env>>
PASS: goops.test: basic classes: class-precedence-list: <<env>>
PASS: goops.test: basic classes: class-precedence-list: <<env>>
PASS: goops.test: basic classes: class-precedence-list: <<env>>
PASS: goops.test: basic classes: class-precedence-list: <<env>>
PASS: goops.test: basic classes: class-precedence-list: <<env>>
PASS: goops.test: basic classes: class-precedence-list: <<env>>
PASS: goops.test: basic classes: class-precedence-list: <<env>>
PASS: goops.test: basic classes: class-precedence-list: <<env>>
PASS: goops.test: basic classes: class-precedence-list: <<env>>
PASS: goops.test: basic classes: class-precedence-list: <<env>>
PASS: goops.test: basic classes: class-precedence-list: <<env>>
PASS: goops.test: basic classes: class-precedence-list: <lexical-token>
PASS: goops.test: basic classes: class-precedence-list: <source-location>
PASS: goops.test: basic classes: class-precedence-list: <bindings>
PASS: goops.test: basic classes: class-precedence-list: <falias>
PASS: goops.test: basic classes: class-precedence-list: <lexical-environment-type>
PASS: goops.test: basic classes: class-precedence-list: <foo>
PASS: goops.test: basic classes: class-precedence-list: <foo>
PASS: goops.test: basic classes: class-precedence-list: <<env>>
PASS: goops.test: basic classes: class-precedence-list: <<env>>
PASS: goops.test: basic classes: class-precedence-list: <<env>>
PASS: goops.test: basic classes: class-precedence-list: <<env>>
PASS: goops.test: basic classes: class-precedence-list: <<env>>
PASS: goops.test: basic classes: class-precedence-list: <<env>>
PASS: goops.test: basic classes: class-precedence-list: <<env>>
PASS: goops.test: basic classes: class-precedence-list: <<env>>
PASS: goops.test: basic classes: class-precedence-list: <<env>>
PASS: goops.test: basic classes: class-precedence-list: <<env>>
PASS: goops.test: basic classes: class-precedence-list: <<env>>
PASS: goops.test: basic classes: class-precedence-list: <<env>>
PASS: goops.test: basic classes: class-precedence-list: <<env>>
PASS: goops.test: basic classes: class-precedence-list: <<env>>
PASS: goops.test: basic classes: class-precedence-list: <<env>>
PASS: goops.test: basic classes: class-precedence-list: <<env>>
PASS: goops.test: basic classes: class-precedence-list: <<env>>
PASS: goops.test: basic classes: class-precedence-list: <<env>>
PASS: goops.test: basic classes: class-precedence-list: <<env>>
PASS: goops.test: basic classes: class-precedence-list: <<env>>
PASS: goops.test: basic classes: class-precedence-list: <<env>>
PASS: goops.test: basic classes: class-precedence-list: <<env>>
PASS: goops.test: basic classes: class-precedence-list: <<env>>
PASS: goops.test: basic classes: class-precedence-list: <<env>>
PASS: goops.test: basic classes: class-precedence-list: <<env>>
PASS: goops.test: basic classes: class-precedence-list: <<env>>
PASS: goops.test: basic classes: class-precedence-list: <<env>>
PASS: goops.test: basic classes: class-precedence-list: <<env>>
PASS: goops.test: basic classes: class-precedence-list: <<env>>
PASS: goops.test: basic classes: class-precedence-list: <<env>>
PASS: goops.test: basic classes: class-precedence-list: <<env>>
PASS: goops.test: basic classes: class-precedence-list: <<env>>
PASS: goops.test: basic classes: class-precedence-list: <<env>>
PASS: goops.test: basic classes: class-precedence-list: <<env>>
PASS: goops.test: basic classes: class-precedence-list: <<env>>
PASS: goops.test: basic classes: class-precedence-list: <<env>>
PASS: goops.test: basic classes: class-precedence-list: <<env>>
PASS: goops.test: basic classes: class-precedence-list: <<env>>
PASS: goops.test: basic classes: class-precedence-list: <<env>>
PASS: goops.test: basic classes: class-precedence-list: <<env>>
PASS: goops.test: basic classes: class-precedence-list: <<env>>
PASS: goops.test: basic classes: class-precedence-list: <<env>>
PASS: goops.test: basic classes: class-precedence-list: <<env>>
PASS: goops.test: basic classes: class-precedence-list: <<env>>
PASS: goops.test: basic classes: class-precedence-list: <<env>>
PASS: goops.test: basic classes: class-precedence-list: <<env>>
PASS: goops.test: basic classes: class-precedence-list: <<env>>
PASS: goops.test: basic classes: class-precedence-list: <<env>>
PASS: goops.test: basic classes: class-precedence-list: <<env>>
PASS: goops.test: basic classes: class-precedence-list: <<env>>
PASS: goops.test: basic classes: class-precedence-list: <<env>>
PASS: goops.test: basic classes: class-precedence-list: <<env>>
PASS: goops.test: basic classes: class-precedence-list: <<env>>
PASS: goops.test: basic classes: class-precedence-list: <<env>>
PASS: goops.test: basic classes: class-precedence-list: <<env>>
PASS: goops.test: basic classes: class-precedence-list: <<env>>
PASS: goops.test: basic classes: class-precedence-list: <<env>>
PASS: goops.test: basic classes: class-precedence-list: <<env>>
PASS: goops.test: basic classes: class-precedence-list: <<env>>
PASS: goops.test: basic classes: class-precedence-list: <<env>>
PASS: goops.test: basic classes: class-precedence-list: <<env>>
PASS: goops.test: basic classes: class-precedence-list: <<env>>
PASS: goops.test: basic classes: class-precedence-list: <<env>>
PASS: goops.test: basic classes: class-precedence-list: <<env>>
PASS: goops.test: basic classes: class-precedence-list: <<env>>
PASS: goops.test: basic classes: class-precedence-list: <<env>>
PASS: goops.test: basic classes: class-precedence-list: <<env>>
PASS: goops.test: basic classes: class-precedence-list: <<env>>
PASS: goops.test: basic classes: class-precedence-list: <<env>>
PASS: goops.test: basic classes: class-precedence-list: <<env>>
PASS: goops.test: basic classes: class-precedence-list: <<env>>
PASS: goops.test: basic classes: class-precedence-list: <<env>>
PASS: goops.test: basic classes: class-precedence-list: <<env>>
PASS: goops.test: basic classes: class-precedence-list: <<env>>
PASS: goops.test: basic classes: class-precedence-list: <<env>>
PASS: goops.test: basic classes: class-precedence-list: <<env>>
PASS: goops.test: basic classes: class-precedence-list: <<env>>
PASS: goops.test: basic classes: class-precedence-list: <<env>>
PASS: goops.test: basic classes: class-precedence-list: <<env>>
PASS: goops.test: basic classes: class-precedence-list: <<env>>
PASS: goops.test: basic classes: class-precedence-list: <<env>>
PASS: goops.test: basic classes: class-precedence-list: <<env>>
PASS: goops.test: basic classes: class-precedence-list: <<env>>
PASS: goops.test: basic classes: class-precedence-list: <<env>>
PASS: goops.test: basic classes: class-precedence-list: <<env>>
PASS: goops.test: basic classes: class-precedence-list: <<env>>
PASS: goops.test: basic classes: class-precedence-list: <<env>>
PASS: goops.test: basic classes: class-precedence-list: <<env>>
PASS: goops.test: basic classes: class-precedence-list: <<env>>
PASS: goops.test: basic classes: class-precedence-list: <<env>>
PASS: goops.test: basic classes: class-precedence-list: <<env>>
PASS: goops.test: basic classes: class-precedence-list: <<env>>
PASS: goops.test: basic classes: class-precedence-list: <<env>>
PASS: goops.test: basic classes: class-precedence-list: <<env>>
PASS: goops.test: basic classes: class-precedence-list: <<env>>
PASS: goops.test: basic classes: class-precedence-list: <<env>>
PASS: goops.test: basic classes: class-precedence-list: <<env>>
PASS: goops.test: basic classes: class-precedence-list: <<env>>
PASS: goops.test: basic classes: class-precedence-list: <<env>>
PASS: goops.test: basic classes: class-precedence-list: <<env>>
PASS: goops.test: basic classes: class-precedence-list: <<env>>
PASS: goops.test: basic classes: class-precedence-list: <<env>>
PASS: goops.test: basic classes: class-precedence-list: <<env>>
PASS: goops.test: basic classes: class-precedence-list: <<env>>
PASS: goops.test: basic classes: class-precedence-list: <<env>>
PASS: goops.test: basic classes: class-precedence-list: <<env>>
PASS: goops.test: basic classes: class-precedence-list: <<env>>
PASS: goops.test: basic classes: class-precedence-list: <<env>>
PASS: goops.test: basic classes: class-precedence-list: <<env>>
PASS: goops.test: basic classes: class-precedence-list: <<env>>
PASS: goops.test: basic classes: class-precedence-list: <<env>>
PASS: goops.test: basic classes: class-precedence-list: <<env>>
PASS: goops.test: basic classes: class-precedence-list: <<env>>
PASS: goops.test: basic classes: class-precedence-list: <<env>>
PASS: goops.test: basic classes: class-precedence-list: <<env>>
PASS: goops.test: basic classes: class-precedence-list: <<env>>
PASS: goops.test: basic classes: class-precedence-list: <<env>>
PASS: goops.test: basic classes: class-precedence-list: <<env>>
PASS: goops.test: basic classes: class-precedence-list: <<env>>
PASS: goops.test: basic classes: class-precedence-list: <<env>>
PASS: goops.test: basic classes: class-precedence-list: <<env>>
PASS: goops.test: basic classes: class-precedence-list: <<env>>
PASS: goops.test: basic classes: class-precedence-list: <<env>>
PASS: goops.test: basic classes: class-precedence-list: <<env>>
PASS: goops.test: basic classes: class-precedence-list: <<env>>
PASS: goops.test: basic classes: class-precedence-list: <<env>>
PASS: goops.test: basic classes: class-precedence-list: <unknown>
PASS: goops.test: basic classes: class-precedence-list: <atomic-box>
PASS: goops.test: basic classes: class-precedence-list: <syntax>
PASS: goops.test: basic classes: class-precedence-list: <keyword>
PASS: goops.test: basic classes: class-precedence-list: <bitvector>
PASS: goops.test: basic classes: class-precedence-list: <array>
PASS: goops.test: basic classes: class-precedence-list: <vm-continuation>
PASS: goops.test: basic classes: class-precedence-list: <frame>
PASS: goops.test: basic classes: class-precedence-list: <dynamic-state>
PASS: goops.test: basic classes: class-precedence-list: <fluid>
PASS: goops.test: basic classes: class-precedence-list: <hashtable>
PASS: goops.test: basic classes: class-precedence-list: <foreign>
PASS: goops.test: basic classes: class-precedence-list: <vector>
PASS: goops.test: basic classes: class-precedence-list: <char>
PASS: goops.test: basic classes: class-precedence-list: <r6rs-bytevector-output-port-procedure>
PASS: goops.test: basic classes: class-precedence-list: <boot-closure>
PASS: goops.test: basic classes: class-precedence-list: <guardian>
PASS: goops.test: basic classes: class-precedence-list: <catch-handler>
PASS: goops.test: basic classes: class-precedence-list: <exception-handler>
PASS: goops.test: basic classes: class-precedence-list: <thunk>
PASS: goops.test: basic classes: class-precedence-list: <undefined>
PASS: goops.test: basic classes: class-precedence-list: <soft-output-port>
PASS: goops.test: basic classes: class-precedence-list: <string-output-port>
PASS: goops.test: basic classes: class-precedence-list: <file-output-port>
PASS: goops.test: basic classes: class-precedence-list: <r6rs-transcoded-port-output-port>
PASS: goops.test: basic classes: class-precedence-list: <r6rs-custom-binary-input/output-port-output-port>
PASS: goops.test: basic classes: class-precedence-list: <r6rs-custom-binary-output-port-output-port>
PASS: goops.test: basic classes: class-precedence-list: <r6rs-bytevector-output-port-output-port>
PASS: goops.test: basic classes: class-precedence-list: <r6rs-custom-binary-input-port-output-port>
PASS: goops.test: basic classes: class-precedence-list: <r6rs-bytevector-input-port-output-port>
PASS: goops.test: basic classes: class-precedence-list: <void-output-port>
PASS: goops.test: basic classes: class-precedence-list: <r6rs-bytevector-input-port-port>
PASS: goops.test: basic classes: class-precedence-list: <applicable>
PASS: goops.test: basic classes: class-precedence-list: <hidden-slot>
PASS: goops.test: basic classes: class-precedence-list: <js-array-object>
PASS: goops.test: basic classes: class-precedence-list: <protected-read-only-slot>
PASS: goops.test: basic classes: class-precedence-list: <opaque-slot>
PASS: goops.test: basic classes: class-precedence-list: <module>
PASS: goops.test: basic classes: class-precedence-list: <extended-accessor>
PASS: goops.test: basic classes: class-precedence-list: <accessor-method>
PASS: goops.test: basic classes: class-precedence-list: <real>
PASS: goops.test: basic classes: class-precedence-list: <fraction>
PASS: goops.test: basic classes: class-precedence-list: <js-global-object>
PASS: goops.test: basic classes: class-precedence-list: <boolean>
PASS: goops.test: basic classes: class-precedence-list: <extended-generic-with-setter>
PASS: goops.test: basic classes: class-precedence-list: <soft-port>
PASS: goops.test: basic classes: class-precedence-list: <protected-hidden-slot>
PASS: goops.test: basic classes: class-precedence-list: <object>
PASS: goops.test: basic classes: class-precedence-list: <file-port>
PASS: goops.test: basic classes: class-precedence-list: <number>
PASS: goops.test: basic classes: class-precedence-list: <uvec>
PASS: goops.test: basic classes: class-precedence-list: <slot>
PASS: goops.test: basic classes: class-precedence-list: <output-port>
PASS: goops.test: basic classes: class-precedence-list: <redefinable-class>
PASS: goops.test: basic classes: class-precedence-list: <method>
PASS: goops.test: basic classes: class-precedence-list: <applicable-struct-class>
PASS: goops.test: basic classes: class-precedence-list: <scm-slot>
PASS: goops.test: basic classes: class-precedence-list: <procedure>
PASS: goops.test: basic classes: class-precedence-list: <complex>
PASS: goops.test: basic classes: class-precedence-list: <list>
PASS: goops.test: basic classes: class-precedence-list: <integer>
PASS: goops.test: basic classes: class-precedence-list: <string>
PASS: goops.test: basic classes: class-precedence-list: <soft-input-port>
PASS: goops.test: basic classes: class-precedence-list: <string-input-port>
PASS: goops.test: basic classes: class-precedence-list: <file-input-port>
PASS: goops.test: basic classes: class-precedence-list: <r6rs-transcoded-port-input-port>
PASS: goops.test: basic classes: class-precedence-list: <r6rs-custom-binary-input/output-port-input-port>
PASS: goops.test: basic classes: class-precedence-list: <r6rs-custom-binary-output-port-input-port>
PASS: goops.test: basic classes: class-precedence-list: <r6rs-bytevector-output-port-input-port>
PASS: goops.test: basic classes: class-precedence-list: <r6rs-custom-binary-input-port-input-port>
PASS: goops.test: basic classes: class-precedence-list: <r6rs-bytevector-input-port-input-port>
PASS: goops.test: basic classes: class-precedence-list: <void-input-port>
PASS: goops.test: basic classes: class-precedence-list: <r6rs-bytevector-output-port-port>
PASS: goops.test: basic classes: class-precedence-list: <soft-input-output-port>
PASS: goops.test: basic classes: class-precedence-list: <string-input-output-port>
PASS: goops.test: basic classes: class-precedence-list: <file-input-output-port>
PASS: goops.test: basic classes: class-precedence-list: <r6rs-transcoded-port-input-output-port>
PASS: goops.test: basic classes: class-precedence-list: <r6rs-custom-binary-input/output-port-input-output-port>
PASS: goops.test: basic classes: class-precedence-list: <r6rs-custom-binary-output-port-input-output-port>
PASS: goops.test: basic classes: class-precedence-list: <r6rs-bytevector-output-port-input-output-port>
PASS: goops.test: basic classes: class-precedence-list: <r6rs-custom-binary-input-port-input-output-port>
PASS: goops.test: basic classes: class-precedence-list: <r6rs-bytevector-input-port-input-output-port>
PASS: goops.test: basic classes: class-precedence-list: <void-input-output-port>
PASS: goops.test: basic classes: class-precedence-list: <void-port>
PASS: goops.test: basic classes: class-precedence-list: <foreign-slot>
PASS: goops.test: basic classes: class-precedence-list: <procedure-class>
PASS: goops.test: basic classes: class-precedence-list: <class>
PASS: goops.test: basic classes: class-precedence-list: <r6rs-custom-binary-input-port-port>
PASS: goops.test: basic classes: class-precedence-list: <symbol>
PASS: goops.test: basic classes: class-precedence-list: <read-only-slot>
PASS: goops.test: basic classes: class-precedence-list: <input-output-port>
PASS: goops.test: basic classes: class-precedence-list: <indirect-slots-class>
PASS: goops.test: basic classes: class-precedence-list: <applicable-struct>
PASS: goops.test: basic classes: class-precedence-list: <js-program-wrapper>
PASS: goops.test: basic classes: class-precedence-list: <generic-with-setter>
PASS: goops.test: basic classes: class-precedence-list: <protected-opaque-slot>
PASS: goops.test: basic classes: class-precedence-list: <input-port>
PASS: goops.test: classes for built-in types: subr
PASS: goops.test: classes for built-in types: gsubr
PASS: goops.test: classes for built-in types: car
PASS: goops.test: classes for built-in types: string
PASS: goops.test: classes for built-in types: port
PASS: goops.test: classes for built-in types: struct vtable
PASS: goops.test: classes for built-in types: early vtable class cached
PASS: goops.test: classes for built-in types: late vtable class cached
PASS: goops.test: defining classes: define-class: creating a new binding
PASS: goops.test: defining classes: define-class: overwriting a binding to a non-class
PASS: goops.test: defining classes: define-class: bad init-thunk
PASS: goops.test: defining classes: define-class: interaction with `struct-ref'
PASS: goops.test: defining classes: define-class: interaction with `struct-set!'
PASS: goops.test: defining classes: define-class: with accessors
PASS: goops.test: defining classes: define-class: cannot redefine fields of <class>
PASS: goops.test: defining generics: define-generic: creating a new top-level binding
PASS: goops.test: defining generics: define-generic: overwriting a top-level binding to a non-generic
PASS: goops.test: defining generics: define-generic: overwriting a top-level binding to a generic
PASS: goops.test: defining generics: define-generic: getters do not have setters
PASS: goops.test: defining methods: define-method
PASS: goops.test: defining methods: method-more-specific?
PASS: goops.test: defining methods: method-more-specific? (failure)
PASS: goops.test: the method cache: defining a method with a rest arg
PASS: goops.test: defining accessors: define-accessor: creating a new top-level binding
PASS: goops.test: defining accessors: define-accessor: accessors have setters
PASS: goops.test: defining accessors: define-accessor: overwriting a top-level binding to a non-accessor
PASS: goops.test: defining accessors: define-accessor: overwriting a top-level binding to an accessor
PASS: goops.test: object update: defining class
PASS: goops.test: object update: making instance
PASS: goops.test: object update: redefining class
PASS: goops.test: object update: changing class
PASS: goops.test: object update: `hell' in `goops.c' grows as expected
PASS: goops.test: object comparison: default method
PASS: goops.test: object comparison: equal?
PASS: goops.test: object comparison: not equal?
PASS: goops.test: object comparison: =
PASS: goops.test: object comparison: not =
PASS: goops.test: active-slot: defining class with active slot
PASS: goops.test: composite-slot: creating instance with propagated slot
PASS: goops.test: composite-slot: reading propagated slot
PASS: goops.test: composite-slot: writing propagated slot
PASS: goops.test: no-applicable-method: calling generic, no methods
PASS: goops.test: no-applicable-method: calling generic, one method, applicable
PASS: goops.test: no-applicable-method: calling generic, one method, not applicable
PASS: goops.test: foreign slots: constructing, no initargs
PASS: goops.test: foreign slots: constructing, initargs
PASS: goops.test: foreign slots: getters
PASS: goops.test: foreign slots: setters
PASS: goops.test: foreign slots: out of range
PASS: goops.test: #:class slot allocation: basic class slot allocation
PASS: goops.test: #:each-subclass: (slot-ref a (quote test))
PASS: goops.test: #:each-subclass: (slot-ref b (quote test))
PASS: goops.test: #:each-subclass: (slot-ref a (quote test))
PASS: goops.test: #:each-subclass: (slot-ref b (quote test))
PASS: goops.test: #:each-subclass: (slot-ref a (quote test))
PASS: goops.test: #:each-subclass: (slot-ref b (quote test))
PASS: goops.test: #:each-subclass: (slot-ref a (quote test))
PASS: goops.test: #:each-subclass: (slot-ref b (quote test))
PASS: goops.test: #:each-subclass: (slot-ref a (quote test))
PASS: goops.test: #:each-subclass: (slot-ref b (quote test))
PASS: goops.test: #:each-subclass: (slot-ref c (quote test))
PASS: goops.test: #:each-subclass: (slot-ref c (quote test))
PASS: goops.test: #:each-subclass: (slot-ref a (quote test))
PASS: goops.test: #:each-subclass: (slot-ref b (quote test))
PASS: goops.test: #:each-subclass: (slot-ref c (quote test))
PASS: goops.test: compute-cpl: <pie>
PASS: goops.test: compute-cpl: <a>
PASS: goops.test: accessor slots: a accessor on a
PASS: goops.test: accessor slots: a accessor on ab
PASS: goops.test: accessor slots: a accessor on ba
PASS: goops.test: accessor slots: a accessor on cab
PASS: goops.test: accessor slots: a accessor on cba
PASS: goops.test: accessor slots: b accessor on a
PASS: goops.test: accessor slots: b accessor on ab
PASS: goops.test: accessor slots: b accessor on ba
PASS: goops.test: accessor slots: b accessor on cab
PASS: goops.test: accessor slots: b accessor on cba
PASS: goops.test: static slot allocation: slots of <ac>
PASS: goops.test: static slot allocation: slots of <ca>
PASS: goops.test: static slot allocation: can't make <ab>
PASS: goops.test: static slot allocation: static subclass
PASS: goops.test: static slot allocation: non-static subclass
PASS: goops.test: dispatch: multi-arity dispatch
PASS: goops.test: slot options on redefinable classes: (get-the-bar (make <foo>))
PASS: goops.test: slot options on redefinable classes: (get-the-bar (make <redefinable-foo>))
PASS: guardians.test: g2-garbage not collected yet
PASS: guardians.test: g3-garbage not collected yet
PASS: guardians.test: g3-garbage saved
PASS: guardians.test: g2-saved
PASS: guardians.test: nothing else saved
UNRESOLVED: guardians.test: g2-garbage saved
PASS: guardians.test: standard guardian functionality: make-guardian: documented?
PASS: guardians.test: standard guardian functionality: make-guardian: returns procedure
PASS: guardians.test: standard guardian functionality: make-guardian: returns new procedure each time
PASS: guardians.test: standard guardian functionality: empty guardian: returns #f
PASS: guardians.test: standard guardian functionality: empty guardian: returns always #f
PASS: guardians.test: standard guardian functionality: guarding independent objects: guarding immediate
PASS: guardians.test: standard guardian functionality: guarding independent objects: guarding non-immediate
PASS: guardians.test: standard guardian functionality: guarding independent objects: guarding two non-immediates
PASS: guardians.test: standard guardian functionality: guarding independent objects: re-guarding non-immediates
PASS: guardians.test: standard guardian functionality: guarding independent objects: guarding living non-immediate
PASS: guardians.test: standard guardian functionality: guarding weakly referenced objects: guarded weak vector element gets returned from guardian
PASS: guardians.test: standard guardian functionality: guarding weakly referenced objects: guarded element of weak vector gets eventually removed from weak vector
PASS: guardians.test: standard guardian functionality: guarding weak containers: element of guarded weak vector gets collected
PASS: guardians.test: standard guardian functionality: guarding objects more than once: guarding twice in one guardian
PASS: guardians.test: standard guardian functionality: guarding objects more than once: guarding twice in two guardians
PASS: hash.test: hash: (->bool (object-documentation hash))
PASS: hash.test: hash: hash #t -1
PASS: hash.test: hash: hash #t 0
PASS: hash.test: hash: (= 0 (hash #t 1))
PASS: hash.test: hash: (= 0 (hash #f 1))
PASS: hash.test: hash: (= 0 (hash noop 1))
PASS: hash.test: hash: (= 0 (hash +inf.0 1))
PASS: hash.test: hash: (= 0 (hash -inf.0 1))
PASS: hash.test: hash: (= 0 (hash +nan.0 1))
PASS: hash.test: hash: (= 0 (hash (quote #()) 1))
PASS: hash.test: hash: keyword: equality
PASS: hash.test: hash: keyword: inequality
PASS: hash.test: hash: cyclic vectors
PASS: hash.test: hashv: (->bool (object-documentation hashv))
PASS: hash.test: hashv: hashv #t -1
PASS: hash.test: hashv: hashv #t 0
PASS: hash.test: hashv: (= 0 (hashv #t 1))
PASS: hash.test: hashv: (= 0 (hashv #f 1))
PASS: hash.test: hashv: (= 0 (hashv noop 1))
PASS: hash.test: hashq: (->bool (object-documentation hashq))
PASS: hash.test: hashq: hashq #t -1
PASS: hash.test: hashq: hashq #t 0
PASS: hash.test: hashq: (= 0 (hashq #t 1))
PASS: hash.test: hashq: (= 0 (hashq #f 1))
PASS: hash.test: hashq: (= 0 (hashq noop 1))
PASS: hash.test: make-hash-table, hash-table?: make-hash-table -1
PASS: hash.test: make-hash-table, hash-table?: (hash-table? (make-hash-table 0))
PASS: hash.test: make-hash-table, hash-table?: (not (hash-table? (quote not-a-hash-table)))
PASS: hash.test: make-hash-table, hash-table?: (string-suffix?  0/113> (with-output-to-string (lambda () (write (make-hash-table 100)))))
PASS: hash.test: alist conversion: alist->hash-table
PASS: hash.test: alist conversion: alist->hashq-table
PASS: hash.test: alist conversion: alist->hashv-table
PASS: hash.test: alist conversion: alist->hashx-table
PASS: hash.test: hash-set and hash-ref: (let ((table (make-hash-table 1))) (hash-set! table (quote one) 1) (hash-set! table (quote two) #t) (hash-set! table (quote three) #t) (hash-set! table (quote four) #t) (hash-set! table (quote five) #t) (hash-set! table (quote six) #t) (hash-set! table (quote seven) #t) (hash-set! table (quote eight) #t) (hash-set! table (quote nine) 9) (hash-set! table (quote ten) #t) (hash-set! table (quote eleven) #t) (hash-set! table (quote twelve) #t) (hash-set! table (quote thirteen) #t) (hash-set! table (quote fourteen) #t) (hash-set! table (quote fifteen) #t) (hash-set! table (quote sixteen) #t) (hash-set! table (quote seventeen) #t) (hash-set! table 18 #t) (hash-set! table 19 #t) (hash-set! table 20 #t) (hash-set! table 21 #t) (hash-set! table 22 #t) (hash-set! table 23 #t) (hash-set! table 24 #t) (hash-set! table 25 #t) (hash-set! table 26 #t) (hash-set! table 27 #t) (hash-set! table 28 #t) (hash-set! table 29 #t) (hash-set! table 30 (quote thirty)) (hash-set! table 31 #t) (hash-set! table 32 #t) (hash-set! table 33 (quote thirty-three)) (hash-set! table 34 #t) (hash-set! table 35 #t) (hash-set! table (quote foo) (quote bar)) (and (equal? 1 (hash-ref table (quote one))) (equal? 9 (hash-ref table (quote nine))) (equal? (quote thirty) (hash-ref table 30)) (equal? (quote thirty-three) (hash-ref table 33)) (equal? (quote bar) (hash-ref table (quote foo))) (string-suffix?  36/61> (with-output-to-string (lambda () (write table))))))
PASS: hash.test: hash-set and hash-ref: (equal? (quote foo) (let ((table (make-hash-table))) (hash-set! table 1 (quote foo)) (hash-ref table 1)))
PASS: hash.test: hash-set and hash-ref: (equal? (quote foo) (let ((table (make-hash-table))) (hashv-set! table 1 (quote foo)) (hashv-ref table 1)))
PASS: hash.test: hash-set and hash-ref: (equal? (quote foo) (let ((table (make-hash-table))) (hash-set! table 1/2 (quote foo)) (hash-ref table 1/2)))
PASS: hash.test: hash-set and hash-ref: (equal? (quote foo) (let ((table (make-hash-table))) (hashv-set! table 1/2 (quote foo)) (hashv-ref table 1/2)))
PASS: hash.test: hash-set and hash-ref: (equal? (quote foo) (let ((table (make-hash-table))) (hash-set! table (list 1 2) (quote foo)) (hash-ref table (list 1 2))))
PASS: hash.test: hash-set and hash-ref: (equal? #f (let ((table (make-hash-table))) (hashv-set! table (list 1 2) (quote foo)) (hashv-ref table (list 1 2))))
PASS: hash.test: hash-set and hash-ref: (equal? #f (let ((table (make-hash-table))) (hashq-set! table (list 1 2) (quote foo)) (hashq-ref table (list 1 2))))
PASS: hash.test: hash-set and hash-ref: (equal? (quote bar) (let ((table (make-hash-table))) (hash-ref table (quote foo) (quote bar))))
PASS: hash.test: hash-set and hash-ref: (equal? (quote bar) (let ((table (make-hash-table))) (hashv-ref table (quote foo) (quote bar))))
PASS: hash.test: hash-set and hash-ref: (equal? (quote bar) (let ((table (make-hash-table))) (hashq-ref table (quote foo) (quote bar))))
PASS: hash.test: hash-set and hash-ref: (equal? (quote bar) (let ((table (make-hash-table))) (hashx-ref hash equal? table (quote foo) (quote bar))))
PASS: hash.test: hash-set and hash-ref: (hash-ref 'not-a-table 'key)
PASS: hash.test: auto-resizing hashx: (equal? (quote equal) (hash-ref table 1/2))
PASS: hash.test: auto-resizing hashx: (equal? (quote equal) (hash-ref table 1/3))
PASS: hash.test: auto-resizing hashx: (equal? (quote equal) (hash-ref table 4))
PASS: hash.test: auto-resizing hashx: (equal? (quote equal) (hashx-ref hash assoc table 1/32))
PASS: hash.test: auto-resizing hashx: (equal? (quote equal) (hashx-ref hash assoc table 1/33))
PASS: hash.test: auto-resizing hashx: (equal? (quote equal) (hashx-ref hash assoc table 34))
PASS: hash.test: auto-resizing hashx: (string-suffix?  33/61> (with-output-to-string (lambda () (write table))))
PASS: hash.test: hashx: (let ((table (make-hash-table))) (hashx-set! (lambda (k v) 1) (lambda (k al) (assoc (quote foo) al)) table (quote foo) (quote bar)) (equal? (quote bar) (hashx-ref (lambda (k v) 1) (lambda (k al) (assoc (quote foo) al)) table (quote baz))))
PASS: hash.test: hashx: (let ((table (make-hash-table 31))) (hashx-set! (lambda (k v) 1) assoc table (quote foo) (quote bar)) (equal? #f (hashx-ref (lambda (k v) 2) assoc table (quote foo))))
PASS: hash.test: hashx: (let ((table (make-hash-table))) (hashx-set! hash assoc table (quote foo) (quote bar)) (equal? #f (hashx-ref hash (lambda (k al) #f) table (quote foo))))
PASS: hash.test: hashx: hashx-set! (lambda (k s) 1) equal? table 'foo 'bar
PASS: hash.test: hashx-remove!: (->bool (object-documentation hashx-remove!))
PASS: hash.test: hashx-remove!: (let ((table (make-hash-table))) (hashx-set! hashq assq table (quote x) 123) (hashx-remove! hashq assq table (quote x)) (null? (hash-map->list noop table)))
PASS: hash.test: hashx: hashx-set! (lambda (k s) 1) (lambda (k al) #t) table 'foo 'bar
PASS: hash.test: hash-count: (equal? 3 (hash-count (const #t) table))
PASS: hash.test: hash-count: (equal? 2 (hash-count (lambda (k v) (string? v)) table))
PASS: hash.test: weak key hash table: hash-for-each after gc
PASS: hooks.test: hooks: make-hook
PASS: hooks.test: hooks: add-hook!
PASS: hooks.test: hooks: add-hook!: append
PASS: hooks.test: hooks: add-hook!: illegal proc
PASS: hooks.test: hooks: add-hook!: illegal hook
PASS: hooks.test: hooks: run-hook
PASS: hooks.test: hooks: run-hook: bad hook
PASS: hooks.test: hooks: run-hook: too many args
PASS: hooks.test: hooks: run-hook: destructive procs
PASS: hooks.test: hooks: remove-hook!: 
PASS: hooks.test: hooks: remove-hook!: empty hook
PASS: hooks.test: hooks: hook->list
PASS: hooks.test: hooks: reset-hook!
PASS: hooks.test: hooks: reset-hook!: empty hook
PASS: hooks.test: hooks: reset-hook!: bad hook
PASS: i18n.test: locale objects: make-locale (2 args)
PASS: i18n.test: locale objects: make-locale (2 args, list)
PASS: i18n.test: locale objects: make-locale (3 args)
PASS: i18n.test: locale objects: make-locale with unknown locale
PASS: i18n.test: locale objects: locale?
PASS: i18n.test: locale objects: %global-locale
PASS: i18n.test: text collation (English): string-locale<?
PASS: i18n.test: text collation (English): char-locale<?
PASS: i18n.test: text collation (English): string-locale-ci=?
PASS: i18n.test: text collation (English): string-locale-ci<?
PASS: i18n.test: text collation (English): large strings
UNRESOLVED: i18n.test: text collation (French): string-locale<?
UNRESOLVED: i18n.test: text collation (French): char-locale<?
UNRESOLVED: i18n.test: text collation (French): string-locale-ci=?
UNRESOLVED: i18n.test: text collation (French): string-locale-ci=? (2 args, wide strings)
UNRESOLVED: i18n.test: text collation (French): string-locale<?, bis
UNRESOLVED: i18n.test: text collation (French): string-locale-ci=?, bis
UNRESOLVED: i18n.test: text collation (French): string-locale-ci=? (3 args, wide strings)
UNRESOLVED: i18n.test: text collation (French): string-locale-ci<>?
UNRESOLVED: i18n.test: text collation (French): string-locale-ci<>? (wide strings)
UNRESOLVED: i18n.test: text collation (French): string-locale-ci<>? (wide and narrow strings)
UNRESOLVED: i18n.test: text collation (French): char-locale-ci<>?
UNRESOLVED: i18n.test: text collation (French): char-locale-ci<>? (wide)
UNRESOLVED: i18n.test: text collation (German): string-locale-ci=?
UNRESOLVED: i18n.test: text collation (Greek): string-locale-ci=?
UNRESOLVED: i18n.test: text collation (Czech): string-locale<? for 'ch'
PASS: i18n.test: character mapping: char-locale-downcase
PASS: i18n.test: character mapping: char-locale-upcase
PASS: i18n.test: character mapping: char-locale-titlecase
PASS: i18n.test: character mapping: char-locale-titlecase Dž
UNRESOLVED: i18n.test: character mapping: char-locale-upcase Turkish
UNRESOLVED: i18n.test: character mapping: char-locale-downcase Turkish
PASS: i18n.test: string mapping: string-locale-downcase
PASS: i18n.test: string mapping: string-locale-upcase
PASS: i18n.test: string mapping: string-locale-titlecase
PASS: i18n.test: string mapping: large strings
UNRESOLVED: i18n.test: string mapping: string-locale-upcase German
UNRESOLVED: i18n.test: string mapping: string-locale-upcase Greek
UNRESOLVED: i18n.test: string mapping: string-locale-upcase Greek (two sigmas)
UNRESOLVED: i18n.test: string mapping: string-locale-downcase Greek
UNRESOLVED: i18n.test: string mapping: string-locale-downcase Greek (two sigmas)
UNRESOLVED: i18n.test: string mapping: string-locale-upcase Turkish
UNRESOLVED: i18n.test: string mapping: string-locale-downcase Turkish
PASS: i18n.test: number parsing: locale-string->integer
PASS: i18n.test: number parsing: locale-string->inexact
UNRESOLVED: i18n.test: number parsing: locale-string->inexact (French)
PASS: i18n.test: nl-langinfo et al.: locale-day (1 arg)
PASS: i18n.test: nl-langinfo et al.: locale-day (2 args)
PASS: i18n.test: nl-langinfo et al.: locale-day (2 args, using `%global-locale')
UNRESOLVED: i18n.test: nl-langinfo et al.: locale-day (French)
UNRESOLVED: i18n.test: nl-langinfo et al.: locale-day (French, using `%global-locale')
UNRESOLVED: i18n.test: nl-langinfo et al.: default locale
PASS: i18n.test: nl-langinfo et al.: locale-am-string
UNRESOLVED: i18n.test: nl-langinfo et al.: locale-am-string (greek)
PASS: i18n.test: nl-langinfo et al.: locale-pm-string
UNRESOLVED: i18n.test: nl-langinfo et al.: locale-pm-string (Greek)
PASS: i18n.test: nl-langinfo et al.: locale-digit-grouping
UNRESOLVED: i18n.test: nl-langinfo et al.: locale-digit-grouping (French)
PASS: i18n.test: nl-langinfo et al.: locale-positive-separated-by-space?
PASS: i18n.test: nl-langinfo et al.: locale-positive-separated-by-space? (international)
PASS: i18n.test: nl-langinfo et al.: locale-monetary-grouping
UNRESOLVED: i18n.test: nl-langinfo et al.: locale-monetary-grouping (French)
PASS: i18n.test: number->locale-string: C: no thousand separator
PASS: i18n.test: number->locale-string: C: integer
PASS: i18n.test: number->locale-string: C: fraction
PASS: i18n.test: number->locale-string: C: fraction, 1 digit
PASS: i18n.test: number->locale-string: C: fraction, 10 digits
PASS: i18n.test: number->locale-string: C: trailing zeros
PASS: i18n.test: number->locale-string: C: positive inexact zero, 1 digit
UNRESOLVED: i18n.test: number->locale-string: French: integer
UNRESOLVED: i18n.test: number->locale-string: French: negative integer
UNRESOLVED: i18n.test: number->locale-string: French: fraction
UNRESOLVED: i18n.test: number->locale-string: French: fraction, 1 digit
UNRESOLVED: i18n.test: format ~h: French: 12345.678
PASS: i18n.test: format ~h: English: 12345.678
UNRESOLVED: i18n.test: monetary-amount->locale-string: French: integer
UNRESOLVED: i18n.test: monetary-amount->locale-string: French: fraction
UNRESOLVED: i18n.test: monetary-amount->locale-string: French: positive inexact zero
UNRESOLVED: i18n.test: monetary-amount->locale-string: French: one cent
UNRESOLVED: i18n.test: monetary-amount->locale-string: French: very little money
PASS: iconv.test: ascii string: to ascii bytevector
PASS: iconv.test: ascii string: to ascii bytevector (length check)
PASS: iconv.test: ascii string: from ascii bytevector
PASS: iconv.test: ascii string: to utf-8 bytevector
PASS: iconv.test: ascii string: to UTF-8 bytevector (testing encoding case sensitivity)
PASS: iconv.test: ascii string: from utf-8 bytevector
PASS: iconv.test: ascii string: to latin1 bytevector
PASS: iconv.test: ascii string: from latin1 bytevector
PASS: iconv.test: narrow non-ascii string: to latin1 bytevector
PASS: iconv.test: narrow non-ascii string: to latin1 bytevector (length check)
PASS: iconv.test: narrow non-ascii string: from latin1 bytevector
PASS: iconv.test: narrow non-ascii string: to utf-8 bytevector
PASS: iconv.test: narrow non-ascii string: from utf-8 bytevector
PASS: iconv.test: narrow non-ascii string: encode latin1 as ascii
PASS: iconv.test: narrow non-ascii string: misparse latin1 as utf8
PASS: iconv.test: narrow non-ascii string: misparse latin1 as utf8 with substitutions
PASS: iconv.test: narrow non-ascii string: misparse latin1 as ascii
PASS: iconv.test: wide non-ascii string: to utf-8 bytevector
PASS: iconv.test: wide non-ascii string: from utf-8 bytevector
PASS: iconv.test: wide non-ascii string: encode as ascii
PASS: iconv.test: wide non-ascii string: encode as latin1
PASS: iconv.test: wide non-ascii string: encode as ascii with substitutions
PASS: import.test: selective non-import
PASS: import.test: selective import
PASS: import.test: renaming import
PASS: import.test: symbol-prefic-proc import
PASS: import.test: renamer import
PASS: interp.test: Internal defines 1
PASS: interp.test: Internal defines 2
PASS: interp.test: closure bodies: eval: expansion
PASS: interp.test: closure bodies: eval: iloc escape
PASS: interp.test: closure bodies: apply: expansion
PASS: interp.test: closure bodies: apply: iloc escape
PASS: keywords.test: keywords: printing
PASS: linker.test: simple: linking succeeds
PASS: linker.test: simple: parsing succeeds
PASS: linker.test: simple: (elf-shnum elf)
PASS: linker.test: simple: .foo section checks out
PASS: list.test: list: documented?
PASS: list.test: list: apply gets fresh list
PASS: list.test: make-list: documented?
PASS: list.test: make-list: no init: 0
PASS: list.test: make-list: no init: 1
PASS: list.test: make-list: no init: 2
PASS: list.test: make-list: no init: 3
PASS: list.test: make-list: with init: 0
PASS: list.test: make-list: with init: 1
PASS: list.test: make-list: with init: 2
PASS: list.test: make-list: with init: 3
PASS: list.test: cons*: documented?
PASS: list.test: cons*: one arg: empty list
PASS: list.test: cons*: one arg: one elem list
PASS: list.test: cons*: one arg: two elem list
PASS: list.test: cons*: two args: empty list
PASS: list.test: cons*: two args: one elem list
PASS: list.test: cons*: two args: two elem list
PASS: list.test: cons*: three args: empty list
PASS: list.test: cons*: three args: one elem list
PASS: list.test: cons*: three args: two elem list
PASS: list.test: cons*: apply list unchanged
PASS: list.test: append!: documented?
PASS: list.test: append!: no arguments
PASS: list.test: append!: empty list argument
PASS: list.test: append!: some empty list arguments
PASS: list.test: append!: some empty lists with non-empty list
PASS: list.test: append!: some empty lists with improper list
PASS: list.test: append!: some empty lists with circular list
PASS: list.test: append!: some empty lists with non list object
PASS: list.test: append!: non-empty list between empty lists
PASS: list.test: append!: two one-element lists
PASS: list.test: append!: three one-element lists
PASS: list.test: append!: two two-element lists
PASS: list.test: append!: three two-element lists
PASS: list.test: append!: empty list between non-empty lists
PASS: list.test: append!: list and improper list
PASS: list.test: append!: list and circular list
PASS: list.test: append!: list and non list object
PASS: list.test: append!: several arbitrary lists
PASS: list.test: append!: list to itself
PASS: list.test: append!: wrong argument: improper list and empty list
PASS: list.test: append!: wrong argument: improper list and list
PASS: list.test: append!: wrong argument: list, improper list and list
XFAIL: list.test: append!: wrong argument: circular list and empty list
XFAIL: list.test: append!: wrong argument: circular list and list
XFAIL: list.test: append!: wrong argument: list, circular list and list
PASS: list.test: list-ref: documented?
PASS: list.test: list-ref: argument error: index out of range: empty list: index 0
PASS: list.test: list-ref: argument error: index out of range: empty list: index > 0
PASS: list.test: list-ref: argument error: index out of range: empty list: index < 0
PASS: list.test: list-ref: argument error: index out of range: non-empty list: index > length
PASS: list.test: list-ref: argument error: index out of range: non-empty list: index < 0
PASS: list.test: list-set!: documented?
PASS: list.test: list-set!: argument error: index out of range: empty list: index 0
PASS: list.test: list-set!: argument error: index out of range: empty list: index > 0
PASS: list.test: list-set!: argument error: index out of range: empty list: index < 0
PASS: list.test: list-set!: argument error: index out of range: non-empty list: index > length
PASS: list.test: list-set!: argument error: index out of range: non-empty list: index < 0
PASS: list.test: list-cdr-set!: documented?
PASS: list.test: list-cdr-set!: argument error: index out of range: empty list: index 0
PASS: list.test: list-cdr-set!: argument error: index out of range: empty list: index > 0
PASS: list.test: list-cdr-set!: argument error: index out of range: empty list: index < 0
PASS: list.test: list-cdr-set!: argument error: index out of range: non-empty list: index > length
PASS: list.test: list-cdr-set!: argument error: index out of range: non-empty list: index < 0
PASS: list.test: memq: inline (eval)
PASS: list.test: memq: inline (compile -O0)
PASS: list.test: memq: inline (compile -O2)
PASS: list.test: memq: non inline (eval)
PASS: list.test: memq: non inline (compile -O0)
PASS: list.test: memq: non inline (compile -O2)
PASS: list.test: memv: inline (eval)
PASS: list.test: memv: inline (compile -O0)
PASS: list.test: memv: inline (compile -O2)
PASS: list.test: memv: non inline (eval)
PASS: list.test: memv: non inline (compile -O0)
PASS: list.test: memv: non inline (compile -O2)
PASS: load.test: search-path for "foo.scm" yields "dir1/foo.scm"
PASS: load.test: search-path for "bar.scm" yields "dir1/bar.scm"
PASS: load.test: search-path for "baz.scm" yields "dir2/baz.scm"
PASS: load.test: search-path for "baz.ss" yields "dir2/baz.ss"
PASS: load.test: search-path for "ugly.scm" yields "dir3/ugly.scm"
PASS: load.test: search-path for "subdir1" yields #f
PASS: load.test: search-path for "foo" with extensions (".ss" ".scm" "") yields "dir1/foo.scm"
PASS: load.test: search-path for "bar" with extensions (".ss" ".scm" "") yields "dir1/bar.scm"
PASS: load.test: search-path for "baz" with extensions (".ss" ".scm" "") yields "dir2/baz.ss"
PASS: load.test: search-path for "ugly.scm" with extensions (".ss" ".scm" "") yields "dir3/ugly.scm"
PASS: load.test: search-path for "ugly.ss" with extensions (".ss" ".scm" "") yields #f
PASS: load.test: elisp-nil: search-path for "ugly.scm" with extensions (".ss" ".scm" "") yields "dir3/ugly.scm"
PASS: load.test: elisp-nil: search-path for "ugly.ss" with extensions (".ss" ".scm" "") yields #f
PASS: load.test: return value of `load': primitive-load
PASS: load.test: return value of `load': load-compiled
PASS: match.test: matches: wildcard
PASS: match.test: matches: symbol
PASS: match.test: matches: string
PASS: match.test: matches: number
PASS: match.test: matches: char
PASS: match.test: matches: sexp
PASS: match.test: matches: predicate
PASS: match.test: matches: list
PASS: match.test: matches: list rest...
PASS: match.test: matches: list . rest
PASS: match.test: matches: list ..1
PASS: match.test: matches: list ..1, with predicate
PASS: match.test: matches: list ..1, nested
PASS: match.test: matches: tree
PASS: match.test: matches: and, unique names
PASS: match.test: matches: and, same names
PASS: match.test: matches: records: all slots, bind
PASS: match.test: matches: records: all slots, literals
PASS: match.test: matches: records: 2 slots
PASS: match.test: matches: records: RTD correctly checked
PASS: match.test: matches: records: getter
PASS: match.test: matches: records: setter
PASS: match.test: doesn't match: tree
PASS: match.test: doesn't match: list ..1
PASS: match.test: doesn't match: list ..1, with predicate
PASS: match.test: doesn't match: records: not a record
PASS: match.test: doesn't match: records: too many slots
PASS: match.test: upstream tests: any
PASS: match.test: upstream tests: symbol
PASS: match.test: upstream tests: number
PASS: match.test: upstream tests: string
PASS: match.test: upstream tests: literal symbol
PASS: match.test: upstream tests: null
PASS: match.test: upstream tests: pair
PASS: match.test: upstream tests: vector
PASS: match.test: upstream tests: any doubled
PASS: match.test: upstream tests: and empty
PASS: match.test: upstream tests: and single
PASS: match.test: upstream tests: and double
PASS: match.test: upstream tests: or empty
PASS: match.test: upstream tests: or single
PASS: match.test: upstream tests: or double
PASS: match.test: upstream tests: not
PASS: match.test: upstream tests: pred
PASS: match.test: upstream tests: named pred
PASS: match.test: upstream tests: duplicate symbols pass
PASS: match.test: upstream tests: duplicate symbols fail
PASS: match.test: upstream tests: duplicate symbols samth
PASS: match.test: upstream tests: duplicate symbols bound
PASS: match.test: upstream tests: duplicate quasiquote
PASS: match.test: upstream tests: ellipses
PASS: match.test: upstream tests: real ellipses
PASS: match.test: upstream tests: vector ellipses
PASS: match.test: upstream tests: pred ellipses
PASS: match.test: upstream tests: failure continuation
PASS: match.test: upstream tests: let
PASS: match.test: upstream tests: let*
PASS: match.test: upstream tests: getter car
PASS: match.test: upstream tests: getter cdr
PASS: match.test: upstream tests: getter vector
PASS: match.test: upstream tests: setter car
PASS: match.test: upstream tests: setter cdr
PASS: match.test: upstream tests: setter vector
PASS: match.test: upstream tests: single tail
PASS: match.test: upstream tests: single tail 2
PASS: match.test: upstream tests: multiple tail
PASS: match.test: upstream tests: tail against improper list
PASS: match.test: upstream tests: Riastradh quasiquote
PASS: match.test: upstream tests: trivial tree search
PASS: match.test: upstream tests: simple tree search
PASS: match.test: upstream tests: deep tree search
PASS: match.test: upstream tests: non-tail tree search
PASS: match.test: upstream tests: restricted tree search
PASS: match.test: upstream tests: fail restricted tree search
PASS: match.test: upstream tests: sxml tree search
PASS: match.test: upstream tests: failed sxml tree search
PASS: match.test: upstream tests: collect tree search
PASS: match.test: upstream tests: anded tail pattern
PASS: match.test: upstream tests: anded search pattern
PASS: match.test: upstream tests: joined tail
PASS: match.test: upstream tests: list ..1
PASS: match.test: upstream tests: list ..1 failed
PASS: match.test: upstream tests: list ..1 with predicate
PASS: match.test: upstream tests: list ..1 with failed predicate
PASS: match.test: upstream tests: match-named-let
PASS: modules.test: foundations: modules don't remain anonymous
PASS: modules.test: foundations: module-add!
PASS: modules.test: foundations: module-define!
PASS: modules.test: foundations: module-use!
PASS: modules.test: foundations: module-use! (duplicates local binding)
PASS: modules.test: foundations: module-locally-bound?
PASS: modules.test: foundations: module-{local-,}variable
PASS: modules.test: foundations: module-import-interface
PASS: modules.test: foundations: module-reverse-lookup
PASS: modules.test: foundations: module-reverse-lookup [pre-module-obarray]
PASS: modules.test: foundations: module-reverse-lookup [wrong-type-arg]
PASS: modules.test: foundations: the-root-module
PASS: modules.test: foundations: the-scm-module
PASS: modules.test: module-use: no uses initially
PASS: modules.test: module-use: using ice-9 q
PASS: modules.test: module-use: using ice-9 q again
PASS: modules.test: module-use: using ice-9 ftw
PASS: modules.test: module-use: using ice-9 ftw again
PASS: modules.test: module-use: using ice-9 control twice
PASS: modules.test: resolve-module: #:ensure #t by default
PASS: modules.test: resolve-module: #:ensure #t explicitly
PASS: modules.test: resolve-module: #:ensure #f
PASS: modules.test: observers: weak observer invoked
PASS: modules.test: observers: all weak observers invoked
PASS: modules.test: observers: imported bindings updated
PASS: modules.test: duplicate bindings: simple duplicate handler
PASS: modules.test: lazy binder: not invoked
PASS: modules.test: lazy binder: not invoked (module-add!)
PASS: modules.test: lazy binder: invoked (module-ref)
PASS: modules.test: lazy binder: invoked (module-define!)
PASS: modules.test: lazy binder: honored (ref)
PASS: modules.test: autoload: module-autoload!
PASS: modules.test: autoload: autoloaded
PASS: modules.test: autoload: autoloaded+used
PASS: modules.test: module versions: version-matches? for matching versions
PASS: modules.test: module versions: version-matches? for non-matching versions
PASS: modules.test: module versions: version-matches? against more specified version
PASS: modules.test: module versions: version-matches? against less specified version
PASS: modules.test: circular imports: #:select
PASS: net-db.test: getaddrinfo: 127.0.0.1, any service
PASS: net-db.test: getaddrinfo: 127.0.0.1:80
PASS: net-db.test: getaddrinfo: port 80
PASS: net-db.test: getaddrinfo: port 80 with family and socket type
PASS: net-db.test: getaddrinfo: no name
PASS: net-db.test: getaddrinfo: wrong service name
PASS: numbers.test: 1+: documented? (eval)
PASS: numbers.test: 1+: documented? (compile -O0)
PASS: numbers.test: 1+: documented? (compile -O2)
PASS: numbers.test: 1+: 0 (eval)
PASS: numbers.test: 1+: 0 (compile -O0)
PASS: numbers.test: 1+: 0 (compile -O2)
PASS: numbers.test: 1+: -1 (eval)
PASS: numbers.test: 1+: -1 (compile -O0)
PASS: numbers.test: 1+: -1 (compile -O2)
PASS: numbers.test: 1+: 100 (eval)
PASS: numbers.test: 1+: 100 (compile -O0)
PASS: numbers.test: 1+: 100 (compile -O2)
PASS: numbers.test: 1+: -100 (eval)
PASS: numbers.test: 1+: -100 (compile -O0)
PASS: numbers.test: 1+: -100 (compile -O2)
PASS: numbers.test: 1+: 1+ fixnum = bignum (32-bit) (eval)
PASS: numbers.test: 1+: 1+ fixnum = bignum (32-bit) (compile -O0)
PASS: numbers.test: 1+: 1+ fixnum = bignum (32-bit) (compile -O2)
PASS: numbers.test: 1+: 1+ fixnum = bignum (64-bit) (eval)
PASS: numbers.test: 1+: 1+ fixnum = bignum (64-bit) (compile -O0)
PASS: numbers.test: 1+: 1+ fixnum = bignum (64-bit) (compile -O2)
PASS: numbers.test: 1-: documented? (eval)
PASS: numbers.test: 1-: documented? (compile -O0)
PASS: numbers.test: 1-: documented? (compile -O2)
PASS: numbers.test: 1-: 0 (eval)
PASS: numbers.test: 1-: 0 (compile -O0)
PASS: numbers.test: 1-: 0 (compile -O2)
PASS: numbers.test: 1-: 1 (eval)
PASS: numbers.test: 1-: 1 (compile -O0)
PASS: numbers.test: 1-: 1 (compile -O2)
PASS: numbers.test: 1-: 100 (eval)
PASS: numbers.test: 1-: 100 (compile -O0)
PASS: numbers.test: 1-: 100 (compile -O2)
PASS: numbers.test: 1-: -100 (eval)
PASS: numbers.test: 1-: -100 (compile -O0)
PASS: numbers.test: 1-: -100 (compile -O2)
PASS: numbers.test: 1-: 1- fixnum = bignum (32-bit) (eval)
PASS: numbers.test: 1-: 1- fixnum = bignum (32-bit) (compile -O0)
PASS: numbers.test: 1-: 1- fixnum = bignum (32-bit) (compile -O2)
PASS: numbers.test: 1-: 1- fixnum = bignum (64-bit) (eval)
PASS: numbers.test: 1-: 1- fixnum = bignum (64-bit) (compile -O0)
PASS: numbers.test: 1-: 1- fixnum = bignum (64-bit) (compile -O2)
PASS: numbers.test: exact?: documented?
PASS: numbers.test: exact?: integers: 0
PASS: numbers.test: exact?: integers: fixnum-max
PASS: numbers.test: exact?: integers: fixnum-max + 1
PASS: numbers.test: exact?: integers: fixnum-min
PASS: numbers.test: exact?: integers: fixnum-min - 1
PASS: numbers.test: exact?: reals: sqrt (fixnum-max^2 - 1)
PASS: numbers.test: exact?: reals: sqrt ((fixnum-max+1)^2 - 1)
PASS: numbers.test: exact?: reals: (not (exact? +inf.0))
PASS: numbers.test: exact?: reals: (not (exact? -inf.0))
PASS: numbers.test: exact?: reals: (not (exact? +nan.0))
PASS: numbers.test: exp: (documented? exp)
PASS: numbers.test: exp: no args
PASS: numbers.test: exp: two args
PASS: numbers.test: exp: (eqv? 0.0 (exp -inf.0))
PASS: numbers.test: exp: (eqv-loosely? 1.0 (exp 0))
PASS: numbers.test: exp: (eqv-loosely? 1.0 (exp 0.0))
PASS: numbers.test: exp: (eqv-loosely? const-e (exp 1.0))
PASS: numbers.test: exp: (eqv-loosely? const-e^2 (exp 2.0))
PASS: numbers.test: exp: (eqv-loosely? const-1/e (exp -1))
PASS: numbers.test: exp: exp(pi*i) = -1
PASS: numbers.test: exp: exp(-pi*i) = -1
PASS: numbers.test: exp: exp(2*pi*i) = +1
PASS: numbers.test: exp: exp(2-pi*i) = -e^2
PASS: numbers.test: odd?: (documented? odd?)
PASS: numbers.test: odd?: (odd? 1)
PASS: numbers.test: odd?: (odd? -1)
PASS: numbers.test: odd?: (not (odd? 0))
PASS: numbers.test: odd?: (not (odd? 2))
PASS: numbers.test: odd?: (not (odd? -2))
PASS: numbers.test: odd?: (odd? (+ (* 2 fixnum-max) 1))
PASS: numbers.test: odd?: (not (odd? (* 2 fixnum-max)))
PASS: numbers.test: odd?: (odd? (- (* 2 fixnum-min) 1))
PASS: numbers.test: odd?: (not (odd? (* 2 fixnum-min)))
PASS: numbers.test: even?: (documented? even?)
PASS: numbers.test: even?: (even? 2)
PASS: numbers.test: even?: (even? -2)
PASS: numbers.test: even?: (even? 0)
PASS: numbers.test: even?: (not (even? 1))
PASS: numbers.test: even?: (not (even? -1))
PASS: numbers.test: even?: (not (even? (+ (* 2 fixnum-max) 1)))
PASS: numbers.test: even?: (even? (* 2 fixnum-max))
PASS: numbers.test: even?: (not (even? (- (* 2 fixnum-min) 1)))
PASS: numbers.test: even?: (even? (* 2 fixnum-min))
PASS: numbers.test: finite?: (documented? finite?)
PASS: numbers.test: finite?: (not (finite? (inf)))
PASS: numbers.test: finite?: (not (finite? +inf.0))
PASS: numbers.test: finite?: (not (finite? -inf.0))
PASS: numbers.test: finite?: complex numbers not in domain of finite?
PASS: numbers.test: finite?: complex numbers not in domain of finite? (2)
PASS: numbers.test: finite?: complex numbers not in domain of finite? (3)
PASS: numbers.test: finite?: (finite? 3)
PASS: numbers.test: finite?: (not (finite? (nan)))
PASS: numbers.test: finite?: (not (finite? +nan.0))
PASS: numbers.test: finite?: (finite? 0)
PASS: numbers.test: finite?: (finite? 0.0)
PASS: numbers.test: finite?: (finite? -0.0)
PASS: numbers.test: finite?: (finite? 42.0)
PASS: numbers.test: finite?: (finite? 1/2)
PASS: numbers.test: finite?: (finite? (+ fixnum-max 1))
PASS: numbers.test: finite?: (finite? (- fixnum-min 1))
PASS: numbers.test: inf?: (documented? inf?)
PASS: numbers.test: inf?: (inf? (inf))
PASS: numbers.test: inf?: complex numbers not in domain of inf?
PASS: numbers.test: inf?: (inf? +inf.0)
PASS: numbers.test: inf?: (not (inf? 0))
PASS: numbers.test: inf?: (not (inf? 42.0))
PASS: numbers.test: inf?: (not (inf? (+ fixnum-max 1)))
PASS: numbers.test: inf?: (not (inf? (- fixnum-min 1)))
PASS: numbers.test: nan?: (documented? nan?)
PASS: numbers.test: nan?: (nan? (nan))
PASS: numbers.test: nan?: (not (nan? 0))
PASS: numbers.test: nan?: (not (nan? 42.0))
PASS: numbers.test: nan?: (not (nan? (+ fixnum-max 1)))
PASS: numbers.test: nan?: (not (nan? (- fixnum-min 1)))
PASS: numbers.test: abs: (documented? abs)
PASS: numbers.test: abs: (eqv? 0 (abs 0))
PASS: numbers.test: abs: (eqv? 1 (abs 1))
PASS: numbers.test: abs: (eqv? 1 (abs -1))
PASS: numbers.test: abs: double-negation of fixnum-min: (eqv? fixnum-min (- (abs fixnum-min)))
PASS: numbers.test: abs: (eqv? (+ fixnum-max 1) (abs (+ fixnum-max 1)))
PASS: numbers.test: abs: (eqv? (+ (- fixnum-min) 1) (abs (- fixnum-min 1)))
PASS: numbers.test: abs: (eqv? 0.0 (abs 0.0))
PASS: numbers.test: abs: (eqv? 0.0 (abs -0.0))
PASS: numbers.test: abs: (eqv? 1.0 (abs 1.0))
PASS: numbers.test: abs: (eqv? 1.0 (abs -1.0))
PASS: numbers.test: abs: (real-nan? (abs +nan.0))
PASS: numbers.test: abs: (eqv? +inf.0 (abs +inf.0))
PASS: numbers.test: abs: (eqv? +inf.0 (abs -inf.0))
PASS: numbers.test: quotient: (documented? quotient)
PASS: numbers.test: quotient: 0 / n: n = 1
PASS: numbers.test: quotient: 0 / n: n = -1
PASS: numbers.test: quotient: 0 / n: n = 2
PASS: numbers.test: quotient: 0 / n: n = fixnum-max
PASS: numbers.test: quotient: 0 / n: n = fixnum-max + 1
PASS: numbers.test: quotient: 0 / n: n = fixnum-min
PASS: numbers.test: quotient: 0 / n: n = fixnum-min - 1
PASS: numbers.test: quotient: 1 / n: n = 1
PASS: numbers.test: quotient: 1 / n: n = -1
PASS: numbers.test: quotient: 1 / n: n = 2
PASS: numbers.test: quotient: 1 / n: n = fixnum-max
PASS: numbers.test: quotient: 1 / n: n = fixnum-max + 1
PASS: numbers.test: quotient: 1 / n: n = fixnum-min
PASS: numbers.test: quotient: 1 / n: n = fixnum-min - 1
PASS: numbers.test: quotient: -1 / n: n = 1
PASS: numbers.test: quotient: -1 / n: n = -1
PASS: numbers.test: quotient: -1 / n: n = 2
PASS: numbers.test: quotient: -1 / n: n = fixnum-max
PASS: numbers.test: quotient: -1 / n: n = fixnum-max + 1
PASS: numbers.test: quotient: -1 / n: n = fixnum-min
PASS: numbers.test: quotient: -1 / n: n = fixnum-min - 1
PASS: numbers.test: quotient: fixnum-max / n: n = 1
PASS: numbers.test: quotient: fixnum-max / n: n = -1
PASS: numbers.test: quotient: fixnum-max / n: n = 2
PASS: numbers.test: quotient: fixnum-max / n: n = fixnum-max
PASS: numbers.test: quotient: fixnum-max / n: n = fixnum-max + 1
PASS: numbers.test: quotient: fixnum-max / n: n = fixnum-min
PASS: numbers.test: quotient: fixnum-max / n: n = fixnum-min - 1
PASS: numbers.test: quotient: (fixnum-max + 1) / n: n = 1
PASS: numbers.test: quotient: (fixnum-max + 1) / n: n = -1
PASS: numbers.test: quotient: (fixnum-max + 1) / n: n = 2
PASS: numbers.test: quotient: (fixnum-max + 1) / n: n = fixnum-max
PASS: numbers.test: quotient: (fixnum-max + 1) / n: n = fixnum-max + 1
PASS: numbers.test: quotient: (fixnum-max + 1) / n: n = fixnum-min
PASS: numbers.test: quotient: (fixnum-max + 1) / n: n = fixnum-min - 1
PASS: numbers.test: quotient: fixnum-min / n: n = 1
PASS: numbers.test: quotient: fixnum-min / n: n = -1
PASS: numbers.test: quotient: fixnum-min / n: n = 2
PASS: numbers.test: quotient: fixnum-min / n: n = fixnum-max
PASS: numbers.test: quotient: fixnum-min / n: n = fixnum-max + 1
PASS: numbers.test: quotient: fixnum-min / n: n = fixnum-min
PASS: numbers.test: quotient: fixnum-min / n: n = fixnum-min - 1
PASS: numbers.test: quotient: fixnum-min / n: n = - fixnum-min - 1
PASS: numbers.test: quotient: fixnum-min / n: n = - fixnum-min
PASS: numbers.test: quotient: fixnum-min / n: n = - fixnum-min + 1
PASS: numbers.test: quotient: (fixnum-min - 1) / n: n = 1
PASS: numbers.test: quotient: (fixnum-min - 1) / n: n = -1
PASS: numbers.test: quotient: (fixnum-min - 1) / n: n = 2
PASS: numbers.test: quotient: (fixnum-min - 1) / n: n = fixnum-max
PASS: numbers.test: quotient: (fixnum-min - 1) / n: n = fixnum-max + 1
PASS: numbers.test: quotient: (fixnum-min - 1) / n: n = fixnum-min
PASS: numbers.test: quotient: (fixnum-min - 1) / n: n = fixnum-min - 1
PASS: numbers.test: quotient: (eqv? 5.0 (quotient 35.0 7.0))
PASS: numbers.test: quotient: (eqv? 5.0 (quotient 35 7.0))
PASS: numbers.test: quotient: (eqv? 5.0 (quotient 35.0 7))
PASS: numbers.test: quotient: 35 / 7
PASS: numbers.test: quotient: -35 / 7
PASS: numbers.test: quotient: 35 / -7
PASS: numbers.test: quotient: -35 / -7
PASS: numbers.test: quotient: division by zero: (quotient 1 0)
PASS: numbers.test: quotient: division by zero: (quotient bignum 0)
PASS: numbers.test: remainder: (documented? remainder)
PASS: numbers.test: remainder: 0 / n: n = 1
PASS: numbers.test: remainder: 0 / n: n = -1
PASS: numbers.test: remainder: 0 / n: n = fixnum-max
PASS: numbers.test: remainder: 0 / n: n = fixnum-max + 1
PASS: numbers.test: remainder: 0 / n: n = fixnum-min
PASS: numbers.test: remainder: 0 / n: n = fixnum-min - 1
PASS: numbers.test: remainder: 1 / n: n = 1
PASS: numbers.test: remainder: 1 / n: n = -1
PASS: numbers.test: remainder: 1 / n: n = fixnum-max
PASS: numbers.test: remainder: 1 / n: n = fixnum-max + 1
PASS: numbers.test: remainder: 1 / n: n = fixnum-min
PASS: numbers.test: remainder: 1 / n: n = fixnum-min - 1
PASS: numbers.test: remainder: -1 / n: n = 1
PASS: numbers.test: remainder: -1 / n: n = -1
PASS: numbers.test: remainder: -1 / n: n = fixnum-max
PASS: numbers.test: remainder: -1 / n: n = fixnum-max + 1
PASS: numbers.test: remainder: -1 / n: n = fixnum-min
PASS: numbers.test: remainder: -1 / n: n = fixnum-min - 1
PASS: numbers.test: remainder: fixnum-max / n: n = 1
PASS: numbers.test: remainder: fixnum-max / n: n = -1
PASS: numbers.test: remainder: fixnum-max / n: n = fixnum-max
PASS: numbers.test: remainder: fixnum-max / n: n = fixnum-max + 1
PASS: numbers.test: remainder: fixnum-max / n: n = fixnum-min
PASS: numbers.test: remainder: fixnum-max / n: n = fixnum-min - 1
PASS: numbers.test: remainder: (fixnum-max + 1) / n: n = 1
PASS: numbers.test: remainder: (fixnum-max + 1) / n: n = -1
PASS: numbers.test: remainder: (fixnum-max + 1) / n: n = fixnum-max
PASS: numbers.test: remainder: (fixnum-max + 1) / n: n = fixnum-max + 1
PASS: numbers.test: remainder: (fixnum-max + 1) / n: n = fixnum-min
PASS: numbers.test: remainder: (fixnum-max + 1) / n: n = fixnum-min - 1
PASS: numbers.test: remainder: fixnum-min / n: n = 1
PASS: numbers.test: remainder: fixnum-min / n: n = -1
PASS: numbers.test: remainder: fixnum-min / n: n = fixnum-max
PASS: numbers.test: remainder: fixnum-min / n: n = fixnum-max + 1
PASS: numbers.test: remainder: fixnum-min / n: n = fixnum-min
PASS: numbers.test: remainder: fixnum-min / n: n = fixnum-min - 1
PASS: numbers.test: remainder: fixnum-min / n: n = - fixnum-min - 1
PASS: numbers.test: remainder: fixnum-min / n: n = - fixnum-min
PASS: numbers.test: remainder: fixnum-min / n: n = - fixnum-min + 1
PASS: numbers.test: remainder: (fixnum-min - 1) / n: n = 1
PASS: numbers.test: remainder: (fixnum-min - 1) / n: n = -1
PASS: numbers.test: remainder: (fixnum-min - 1) / n: n = fixnum-max
PASS: numbers.test: remainder: (fixnum-min - 1) / n: n = fixnum-max + 1
PASS: numbers.test: remainder: (fixnum-min - 1) / n: n = fixnum-min
PASS: numbers.test: remainder: (fixnum-min - 1) / n: n = fixnum-min - 1
PASS: numbers.test: remainder: (eqv? 2.0 (remainder 37.0 7.0))
PASS: numbers.test: remainder: (eqv? 2.0 (remainder 37 7.0))
PASS: numbers.test: remainder: (eqv? 2.0 (remainder 37.0 7))
PASS: numbers.test: remainder: 35 / 7
PASS: numbers.test: remainder: -35 / 7
PASS: numbers.test: remainder: 35 / -7
PASS: numbers.test: remainder: -35 / -7
PASS: numbers.test: remainder: division by zero: (remainder 1 0)
PASS: numbers.test: remainder: division by zero: (remainder bignum 0)
PASS: numbers.test: modulo: (documented? modulo)
PASS: numbers.test: modulo: 0 % n: n = 1
PASS: numbers.test: modulo: 0 % n: n = -1
PASS: numbers.test: modulo: 0 % n: n = fixnum-max
PASS: numbers.test: modulo: 0 % n: n = fixnum-max + 1
PASS: numbers.test: modulo: 0 % n: n = fixnum-min
PASS: numbers.test: modulo: 0 % n: n = fixnum-min - 1
PASS: numbers.test: modulo: 1 % n: n = 1
PASS: numbers.test: modulo: 1 % n: n = -1
PASS: numbers.test: modulo: 1 % n: n = fixnum-max
PASS: numbers.test: modulo: 1 % n: n = fixnum-max + 1
PASS: numbers.test: modulo: 1 % n: n = fixnum-min
PASS: numbers.test: modulo: 1 % n: n = fixnum-min - 1
PASS: numbers.test: modulo: -1 % n: n = 1
PASS: numbers.test: modulo: -1 % n: n = -1
PASS: numbers.test: modulo: -1 % n: n = fixnum-max
PASS: numbers.test: modulo: -1 % n: n = fixnum-max + 1
PASS: numbers.test: modulo: -1 % n: n = fixnum-min
PASS: numbers.test: modulo: -1 % n: n = fixnum-min - 1
PASS: numbers.test: modulo: fixnum-max % n: n = 1
PASS: numbers.test: modulo: fixnum-max % n: n = -1
PASS: numbers.test: modulo: fixnum-max % n: n = fixnum-max
PASS: numbers.test: modulo: fixnum-max % n: n = fixnum-max + 1
PASS: numbers.test: modulo: fixnum-max % n: n = fixnum-min
PASS: numbers.test: modulo: fixnum-max % n: n = fixnum-min - 1
PASS: numbers.test: modulo: (fixnum-max + 1) % n: n = 1
PASS: numbers.test: modulo: (fixnum-max + 1) % n: n = -1
PASS: numbers.test: modulo: (fixnum-max + 1) % n: n = fixnum-max
PASS: numbers.test: modulo: (fixnum-max + 1) % n: n = fixnum-max + 1
PASS: numbers.test: modulo: (fixnum-max + 1) % n: n = fixnum-min
PASS: numbers.test: modulo: (fixnum-max + 1) % n: n = fixnum-min - 1
PASS: numbers.test: modulo: fixnum-min % n: n = 1
PASS: numbers.test: modulo: fixnum-min % n: n = -1
PASS: numbers.test: modulo: fixnum-min % n: n = fixnum-max
PASS: numbers.test: modulo: fixnum-min % n: n = fixnum-max + 1
PASS: numbers.test: modulo: fixnum-min % n: n = fixnum-min
PASS: numbers.test: modulo: fixnum-min % n: n = fixnum-min - 1
PASS: numbers.test: modulo: (fixnum-min - 1) % n: n = 1
PASS: numbers.test: modulo: (fixnum-min - 1) % n: n = -1
PASS: numbers.test: modulo: (fixnum-min - 1) % n: n = fixnum-max
PASS: numbers.test: modulo: (fixnum-min - 1) % n: n = fixnum-max + 1
PASS: numbers.test: modulo: (fixnum-min - 1) % n: n = fixnum-min
PASS: numbers.test: modulo: (fixnum-min - 1) % n: n = fixnum-min - 1
PASS: numbers.test: modulo: (eqv? 1.0 (modulo 13.0 4.0))
PASS: numbers.test: modulo: (eqv? 1.0 (modulo 13 4.0))
PASS: numbers.test: modulo: (eqv? 1.0 (modulo 13.0 4))
PASS: numbers.test: modulo: 13 % 4
PASS: numbers.test: modulo: 2177452800 % 86400
PASS: numbers.test: modulo: -13 % 4
PASS: numbers.test: modulo: -2177452800 % 86400
PASS: numbers.test: modulo: 13 % -4
PASS: numbers.test: modulo: 2177452800 % -86400
PASS: numbers.test: modulo: -13 % -4
PASS: numbers.test: modulo: -2177452800 % -86400
PASS: numbers.test: modulo: division by zero: (modulo 1 0)
PASS: numbers.test: modulo: division by zero: (modulo bignum 0)
PASS: numbers.test: modulo-expt: (= 1 (modulo-expt 17 23 47))
PASS: numbers.test: modulo-expt: (= 1 (modulo-expt 17 -23 47))
PASS: numbers.test: modulo-expt: (= 17 (modulo-expt 17 -22 47))
PASS: numbers.test: modulo-expt: (= 36 (modulo-expt 17 22 47))
PASS: numbers.test: modulo-expt: (= 183658794479969134816674175082294846241553725240 (modulo-expt 111122223333444455556666 111122223333444455556666 1153478690012629968439432872520758982731022934717))
PASS: numbers.test: modulo-expt: Proper exception with 0 modulus
PASS: numbers.test: modulo-expt: Proper exception when result not invertible
PASS: numbers.test: modulo-expt: Proper exception with wrong type argument
PASS: numbers.test: modulo-expt: Proper exception with wrong type argument
PASS: numbers.test: modulo-expt: Proper exception with wrong type argument
PASS: numbers.test: numerator: 0
PASS: numbers.test: numerator: 1
PASS: numbers.test: numerator: 2
PASS: numbers.test: numerator: -1
PASS: numbers.test: numerator: -2
PASS: numbers.test: numerator: 0.0
PASS: numbers.test: numerator: 1.0
PASS: numbers.test: numerator: 2.0
PASS: numbers.test: numerator: -0.0
PASS: numbers.test: numerator: -1.0
PASS: numbers.test: numerator: -2.0
PASS: numbers.test: numerator: 0.5
PASS: numbers.test: numerator: 0.25
PASS: numbers.test: numerator: 0.75
PASS: numbers.test: numerator: +inf.0
PASS: numbers.test: numerator: -inf.0
PASS: numbers.test: denominator: 0
PASS: numbers.test: denominator: 1
PASS: numbers.test: denominator: 2
PASS: numbers.test: denominator: -1
PASS: numbers.test: denominator: -2
PASS: numbers.test: denominator: 0.0
PASS: numbers.test: denominator: 1.0
PASS: numbers.test: denominator: 2.0
PASS: numbers.test: denominator: -0.0
PASS: numbers.test: denominator: -1.0
PASS: numbers.test: denominator: -2.0
PASS: numbers.test: denominator: 0.5
PASS: numbers.test: denominator: 0.25
PASS: numbers.test: denominator: 0.75
PASS: numbers.test: denominator: +inf.0
PASS: numbers.test: denominator: -inf.0
PASS: numbers.test: gcd: documented?
PASS: numbers.test: gcd: (n): n = -2
PASS: numbers.test: gcd: (0 n): n = 0
PASS: numbers.test: gcd: (0 n): n = 1
PASS: numbers.test: gcd: (0 n): n = -1
PASS: numbers.test: gcd: (0 n): n = fixnum-max
PASS: numbers.test: gcd: (0 n): n = fixnum-max + 1
PASS: numbers.test: gcd: (0 n): n = fixnum-min
PASS: numbers.test: gcd: (0 n): n = fixnum-min - 1
PASS: numbers.test: gcd: (n 0): n = 2^128 * fixnum-max
PASS: numbers.test: gcd: (1 n): n = 0
PASS: numbers.test: gcd: (1 n): n = 1
PASS: numbers.test: gcd: (1 n): n = -1
PASS: numbers.test: gcd: (1 n): n = fixnum-max
PASS: numbers.test: gcd: (1 n): n = fixnum-max + 1
PASS: numbers.test: gcd: (1 n): n = fixnum-min
PASS: numbers.test: gcd: (1 n): n = fixnum-min - 1
PASS: numbers.test: gcd: (-1 n): n = 0
PASS: numbers.test: gcd: (-1 n): n = 1
PASS: numbers.test: gcd: (-1 n): n = -1
PASS: numbers.test: gcd: (-1 n): n = fixnum-max
PASS: numbers.test: gcd: (-1 n): n = fixnum-max + 1
PASS: numbers.test: gcd: (-1 n): n = fixnum-min
PASS: numbers.test: gcd: (-1 n): n = fixnum-min - 1
PASS: numbers.test: gcd: (fixnum-max n): n = 0
PASS: numbers.test: gcd: (fixnum-max n): n = 1
PASS: numbers.test: gcd: (fixnum-max n): n = -1
PASS: numbers.test: gcd: (fixnum-max n): n = fixnum-max
PASS: numbers.test: gcd: (fixnum-max n): n = fixnum-max + 1
PASS: numbers.test: gcd: (fixnum-max n): n = fixnum-min
PASS: numbers.test: gcd: (fixnum-max n): n = fixnum-min - 1
PASS: numbers.test: gcd: ((+ fixnum-max 1) n): n = 0
PASS: numbers.test: gcd: ((+ fixnum-max 1) n): n = 1
PASS: numbers.test: gcd: ((+ fixnum-max 1) n): n = -1
PASS: numbers.test: gcd: ((+ fixnum-max 1) n): n = fixnum-max
PASS: numbers.test: gcd: ((+ fixnum-max 1) n): n = fixnum-max + 1
PASS: numbers.test: gcd: ((+ fixnum-max 1) n): n = fixnum-min
PASS: numbers.test: gcd: ((+ fixnum-max 1) n): n = fixnum-min - 1
PASS: numbers.test: gcd: (fixnum-min n): n = 0
PASS: numbers.test: gcd: (fixnum-min n): n = 1
PASS: numbers.test: gcd: (fixnum-min n): n = -1
PASS: numbers.test: gcd: (fixnum-min n): n = fixnum-max
PASS: numbers.test: gcd: (fixnum-min n): n = fixnum-max + 1
PASS: numbers.test: gcd: (fixnum-min n): n = fixnum-min
PASS: numbers.test: gcd: (fixnum-min n): n = fixnum-min - 1
PASS: numbers.test: gcd: ((- fixnum-min 1) n): n = 0
PASS: numbers.test: gcd: ((- fixnum-min 1) n): n = 1
PASS: numbers.test: gcd: ((- fixnum-min 1) n): n = -1
PASS: numbers.test: gcd: ((- fixnum-min 1) n): n = fixnum-max
PASS: numbers.test: gcd: ((- fixnum-min 1) n): n = fixnum-max + 1
PASS: numbers.test: gcd: ((- fixnum-min 1) n): n = fixnum-min
PASS: numbers.test: gcd: ((- fixnum-min 1) n): n = fixnum-min - 1
PASS: numbers.test: gcd: flonum arguments: flonum
PASS: numbers.test: gcd: flonum arguments: flonum/flonum
PASS: numbers.test: gcd: flonum arguments: flonum/fixnum
PASS: numbers.test: gcd: flonum arguments: fixnum/flonum
PASS: numbers.test: gcd: flonum arguments: flonum/bignum
PASS: numbers.test: gcd: flonum arguments: bignum/flonum
PASS: numbers.test: lcm: (documented? lcm)
PASS: numbers.test: lcm: (lcm)
PASS: numbers.test: lcm: (lcm -15)
PASS: numbers.test: lcm: (lcm 32 -36)
PASS: numbers.test: lcm: flonum arguments: flonum
PASS: numbers.test: lcm: flonum arguments: flonum/flonum
PASS: numbers.test: lcm: flonum arguments: flonum/fixnum
PASS: numbers.test: lcm: flonum arguments: fixnum/flonum
PASS: numbers.test: lcm: flonum arguments: flonum/bignum
PASS: numbers.test: lcm: flonum arguments: bignum/flonum
PASS: numbers.test: lcm: (= lcm-of-big-n-and-11 (lcm big-n 11))
PASS: numbers.test: lcm: (= lcm-of-big-n-and-11 (lcm 11 big-n 11))
PASS: numbers.test: rationalize: (documented? rationalize)
PASS: numbers.test: rationalize: (eqv? 2 (rationalize 4 2))
PASS: numbers.test: rationalize: (eqv? -2 (rationalize -4 2))
PASS: numbers.test: rationalize: (eqv? 2.0 (rationalize 4 2.0))
PASS: numbers.test: rationalize: (eqv? -2.0 (rationalize -4.0 2))
PASS: numbers.test: rationalize: (eqv? 0 (rationalize 4 8))
PASS: numbers.test: rationalize: (eqv? 0 (rationalize -4 8))
PASS: numbers.test: rationalize: (eqv? 0.0 (rationalize 4 8.0))
PASS: numbers.test: rationalize: (eqv? 0.0 (rationalize -4.0 8))
PASS: numbers.test: rationalize: (eqv? 0.0 (rationalize 3 +inf.0))
PASS: numbers.test: rationalize: (eqv? 0.0 (rationalize -3 +inf.0))
PASS: numbers.test: rationalize: (real-nan? (rationalize +inf.0 +inf.0))
PASS: numbers.test: rationalize: (real-nan? (rationalize +nan.0 +inf.0))
PASS: numbers.test: rationalize: (real-nan? (rationalize +nan.0 4))
PASS: numbers.test: rationalize: (eqv? +inf.0 (rationalize +inf.0 3))
PASS: numbers.test: rationalize: (eqv? 3/10 (rationalize 3/10 0))
PASS: numbers.test: rationalize: (eqv? -3/10 (rationalize -3/10 0))
PASS: numbers.test: rationalize: (eqv? 1/3 (rationalize 3/10 1/10))
PASS: numbers.test: rationalize: (eqv? -1/3 (rationalize -3/10 1/10))
PASS: numbers.test: rationalize: (eqv? 1/3 (rationalize 3/10 -1/10))
PASS: numbers.test: rationalize: (eqv? -1/3 (rationalize -3/10 -1/10))
PASS: numbers.test: rationalize: (eqv? 1/2 (rationalize 67/100 1/4))
PASS: numbers.test: rationalize: (eqv? -1/2 (rationalize -67/100 1/4))
PASS: numbers.test: rationalize: (eqv? 1 (rationalize 67/100 1/3))
PASS: numbers.test: rationalize: (eqv? -1 (rationalize -67/100 1/3))
PASS: numbers.test: rationalize: (eqv? 1/2 (rationalize 33/50 1/3))
PASS: numbers.test: rationalize: (eqv? -1/2 (rationalize -33/50 1/3))
PASS: numbers.test: rationalize: (eqv? 1 (rationalize 67/100 2/3))
PASS: numbers.test: rationalize: (eqv? -1 (rationalize -67/100 2/3))
PASS: numbers.test: rationalize: (eqv? 0 (rationalize 33/50 2/3))
PASS: numbers.test: rationalize: (eqv? 0 (rationalize -33/50 2/3))
PASS: numbers.test: rationalize: pi: (eqv? 16/5 (rationalize *pi* 1/10))
PASS: numbers.test: rationalize: pi: (eqv? 201/64 (rationalize *pi* 1/1000))
PASS: numbers.test: rationalize: pi: (eqv? 75948/24175 (rationalize *pi* (expt 10 -7)))
PASS: numbers.test: rationalize: pi: (eqv? 100798/32085 (rationalize *pi* (expt 10 -8)))
PASS: numbers.test: rationalize: pi: (eqv? 58466453/18610450 (rationalize *pi* (expt 10 -14)))
PASS: numbers.test: rationalize: pi: (eqv? 2307954651196778721982809475299879198775111361078/734644782339796933783743757007944508986600750685 (rationalize *pi* (expt 10 -95)))
PASS: numbers.test: rationalize: (test-eqv? (/ 1.0 3) (rationalize 0.3 1/10))
PASS: numbers.test: rationalize: (test-eqv? (/ -1.0 3) (rationalize -0.3 1/10))
PASS: numbers.test: rationalize: (test-eqv? (/ 1.0 3) (rationalize 0.3 -1/10))
PASS: numbers.test: rationalize: (test-eqv? (/ -1.0 3) (rationalize -0.3 -1/10))
PASS: numbers.test: number->string: (documented? number->string)
PASS: numbers.test: number->string: (string=? (number->string 0) 0)
PASS: numbers.test: number->string: (string=? (number->string 171) 171)
PASS: numbers.test: number->string: (= (+ fixnum-max 1) (num->str->num (+ fixnum-max 1) 10))
PASS: numbers.test: number->string: (= (- fixnum-min 1) (num->str->num (- fixnum-min 1) 10))
PASS: numbers.test: number->string: (+inf.0 pos)
PASS: numbers.test: number->string: (+inf.0 neg)
PASS: numbers.test: number->string: (1.3 pos)
PASS: numbers.test: number->string: (1.3 neg)
PASS: numbers.test: number->string: (3.141592653589793 pos)
PASS: numbers.test: number->string: (3.141592653589793 neg)
PASS: numbers.test: number->string: (2.718281828459045 pos)
PASS: numbers.test: number->string: (2.718281828459045 neg)
PASS: numbers.test: number->string: (0.3333333333333333 pos)
PASS: numbers.test: number->string: (0.3333333333333333 neg)
PASS: numbers.test: number->string: (0.14285714285714285 pos)
PASS: numbers.test: number->string: (0.14285714285714285 neg)
PASS: numbers.test: number->string: (2.225073858507201e-308 pos)
PASS: numbers.test: number->string: (2.225073858507201e-308 neg)
PASS: numbers.test: number->string: (2.2250738585072014e-308 pos)
PASS: numbers.test: number->string: (2.2250738585072014e-308 neg)
PASS: numbers.test: number->string: (1.7976931348623157e308 pos)
PASS: numbers.test: number->string: (1.7976931348623157e308 neg)
PASS: numbers.test: number->string: (string=? 0.0 (number->string 0.0))
PASS: numbers.test: number->string: (or (eqv? 0.0 -0.0) (string=? -0.0 (number->string -0.0)))
PASS: numbers.test: number->string: (string=? (number->string 35.25 36) z.9)
PASS: numbers.test: number->string: (string=? (number->string 0.25 2) 0.01)
PASS: numbers.test: number->string: (string=? (number->string 255.0625 16) ff.1)
PASS: numbers.test: number->string: (string=? (number->string (/ 1 3) 3) 1/10)
PASS: numbers.test: number->string: (string=? (number->string 10) 10)
PASS: numbers.test: number->string: (string=? (number->string 10 11) a)
PASS: numbers.test: number->string: (string=? (number->string 36 36) 10)
PASS: numbers.test: number->string: (= (num->str->num 36 36) 36)
PASS: numbers.test: number->string: (= (string->number z 36) 35)
PASS: numbers.test: number->string: (= (string->number Z 36) 35)
PASS: numbers.test: number->string: (not (string->number Z 35))
PASS: numbers.test: number->string: (string=? (number->string 35 36) z)
PASS: numbers.test: number->string: (= (num->str->num 35 36) 35)
PASS: numbers.test: number->string: (string=? (number->string 1.234234234e13) 1.234234234e13)
PASS: numbers.test: number->string: (string=? (number->string 1234234234000.0) 1234234234000.0)
PASS: numbers.test: number->string: (string=? (number->string 1240000.0) 1240000.0)
PASS: numbers.test: number->string: powers of radix: (2 -20 pos)
PASS: numbers.test: number->string: powers of radix: (2 -20 neg)
PASS: numbers.test: number->string: powers of radix: (2 -19 pos)
PASS: numbers.test: number->string: powers of radix: (2 -19 neg)
PASS: numbers.test: number->string: powers of radix: (2 -18 pos)
PASS: numbers.test: number->string: powers of radix: (2 -18 neg)
PASS: numbers.test: number->string: powers of radix: (2 -17 pos)
PASS: numbers.test: number->string: powers of radix: (2 -17 neg)
PASS: numbers.test: number->string: powers of radix: (2 -16 pos)
PASS: numbers.test: number->string: powers of radix: (2 -16 neg)
PASS: numbers.test: number->string: powers of radix: (2 -15 pos)
PASS: numbers.test: number->string: powers of radix: (2 -15 neg)
PASS: numbers.test: number->string: powers of radix: (2 -14 pos)
PASS: numbers.test: number->string: powers of radix: (2 -14 neg)
PASS: numbers.test: number->string: powers of radix: (2 -13 pos)
PASS: numbers.test: number->string: powers of radix: (2 -13 neg)
PASS: numbers.test: number->string: powers of radix: (2 -12 pos)
PASS: numbers.test: number->string: powers of radix: (2 -12 neg)
PASS: numbers.test: number->string: powers of radix: (2 -11 pos)
PASS: numbers.test: number->string: powers of radix: (2 -11 neg)
PASS: numbers.test: number->string: powers of radix: (2 -10 pos)
PASS: numbers.test: number->string: powers of radix: (2 -10 neg)
PASS: numbers.test: number->string: powers of radix: (2 -9 pos)
PASS: numbers.test: number->string: powers of radix: (2 -9 neg)
PASS: numbers.test: number->string: powers of radix: (2 -8 pos)
PASS: numbers.test: number->string: powers of radix: (2 -8 neg)
PASS: numbers.test: number->string: powers of radix: (2 -7 pos)
PASS: numbers.test: number->string: powers of radix: (2 -7 neg)
PASS: numbers.test: number->string: powers of radix: (2 -6 pos)
PASS: numbers.test: number->string: powers of radix: (2 -6 neg)
PASS: numbers.test: number->string: powers of radix: (2 -5 pos)
PASS: numbers.test: number->string: powers of radix: (2 -5 neg)
PASS: numbers.test: number->string: powers of radix: (2 -4 pos)
PASS: numbers.test: number->string: powers of radix: (2 -4 neg)
PASS: numbers.test: number->string: powers of radix: (2 -3 pos)
PASS: numbers.test: number->string: powers of radix: (2 -3 neg)
PASS: numbers.test: number->string: powers of radix: (2 -2 pos)
PASS: numbers.test: number->string: powers of radix: (2 -2 neg)
PASS: numbers.test: number->string: powers of radix: (2 -1 pos)
PASS: numbers.test: number->string: powers of radix: (2 -1 neg)
PASS: numbers.test: number->string: powers of radix: (2 0 pos)
PASS: numbers.test: number->string: powers of radix: (2 0 neg)
PASS: numbers.test: number->string: powers of radix: (2 1 pos)
PASS: numbers.test: number->string: powers of radix: (2 1 neg)
PASS: numbers.test: number->string: powers of radix: (2 2 pos)
PASS: numbers.test: number->string: powers of radix: (2 2 neg)
PASS: numbers.test: number->string: powers of radix: (2 3 pos)
PASS: numbers.test: number->string: powers of radix: (2 3 neg)
PASS: numbers.test: number->string: powers of radix: (2 4 pos)
PASS: numbers.test: number->string: powers of radix: (2 4 neg)
PASS: numbers.test: number->string: powers of radix: (2 5 pos)
PASS: numbers.test: number->string: powers of radix: (2 5 neg)
PASS: numbers.test: number->string: powers of radix: (2 6 pos)
PASS: numbers.test: number->string: powers of radix: (2 6 neg)
PASS: numbers.test: number->string: powers of radix: (2 7 pos)
PASS: numbers.test: number->string: powers of radix: (2 7 neg)
PASS: numbers.test: number->string: powers of radix: (2 8 pos)
PASS: numbers.test: number->string: powers of radix: (2 8 neg)
PASS: numbers.test: number->string: powers of radix: (2 9 pos)
PASS: numbers.test: number->string: powers of radix: (2 9 neg)
PASS: numbers.test: number->string: powers of radix: (2 10 pos)
PASS: numbers.test: number->string: powers of radix: (2 10 neg)
PASS: numbers.test: number->string: powers of radix: (2 11 pos)
PASS: numbers.test: number->string: powers of radix: (2 11 neg)
PASS: numbers.test: number->string: powers of radix: (2 12 pos)
PASS: numbers.test: number->string: powers of radix: (2 12 neg)
PASS: numbers.test: number->string: powers of radix: (2 13 pos)
PASS: numbers.test: number->string: powers of radix: (2 13 neg)
PASS: numbers.test: number->string: powers of radix: (2 14 pos)
PASS: numbers.test: number->string: powers of radix: (2 14 neg)
PASS: numbers.test: number->string: powers of radix: (2 15 pos)
PASS: numbers.test: number->string: powers of radix: (2 15 neg)
PASS: numbers.test: number->string: powers of radix: (2 16 pos)
PASS: numbers.test: number->string: powers of radix: (2 16 neg)
PASS: numbers.test: number->string: powers of radix: (2 17 pos)
PASS: numbers.test: number->string: powers of radix: (2 17 neg)
PASS: numbers.test: number->string: powers of radix: (2 18 pos)
PASS: numbers.test: number->string: powers of radix: (2 18 neg)
PASS: numbers.test: number->string: powers of radix: (2 19 pos)
PASS: numbers.test: number->string: powers of radix: (2 19 neg)
PASS: numbers.test: number->string: powers of radix: (2 20 pos)
PASS: numbers.test: number->string: powers of radix: (2 20 neg)
PASS: numbers.test: number->string: powers of radix: (3 -20 pos)
PASS: numbers.test: number->string: powers of radix: (3 -20 neg)
PASS: numbers.test: number->string: powers of radix: (3 -19 pos)
PASS: numbers.test: number->string: powers of radix: (3 -19 neg)
PASS: numbers.test: number->string: powers of radix: (3 -18 pos)
PASS: numbers.test: number->string: powers of radix: (3 -18 neg)
PASS: numbers.test: number->string: powers of radix: (3 -17 pos)
PASS: numbers.test: number->string: powers of radix: (3 -17 neg)
PASS: numbers.test: number->string: powers of radix: (3 -16 pos)
PASS: numbers.test: number->string: powers of radix: (3 -16 neg)
PASS: numbers.test: number->string: powers of radix: (3 -15 pos)
PASS: numbers.test: number->string: powers of radix: (3 -15 neg)
PASS: numbers.test: number->string: powers of radix: (3 -14 pos)
PASS: numbers.test: number->string: powers of radix: (3 -14 neg)
PASS: numbers.test: number->string: powers of radix: (3 -13 pos)
PASS: numbers.test: number->string: powers of radix: (3 -13 neg)
PASS: numbers.test: number->string: powers of radix: (3 -12 pos)
PASS: numbers.test: number->string: powers of radix: (3 -12 neg)
PASS: numbers.test: number->string: powers of radix: (3 -11 pos)
PASS: numbers.test: number->string: powers of radix: (3 -11 neg)
PASS: numbers.test: number->string: powers of radix: (3 -10 pos)
PASS: numbers.test: number->string: powers of radix: (3 -10 neg)
PASS: numbers.test: number->string: powers of radix: (3 -9 pos)
PASS: numbers.test: number->string: powers of radix: (3 -9 neg)
PASS: numbers.test: number->string: powers of radix: (3 -8 pos)
PASS: numbers.test: number->string: powers of radix: (3 -8 neg)
PASS: numbers.test: number->string: powers of radix: (3 -7 pos)
PASS: numbers.test: number->string: powers of radix: (3 -7 neg)
PASS: numbers.test: number->string: powers of radix: (3 -6 pos)
PASS: numbers.test: number->string: powers of radix: (3 -6 neg)
PASS: numbers.test: number->string: powers of radix: (3 -5 pos)
PASS: numbers.test: number->string: powers of radix: (3 -5 neg)
PASS: numbers.test: number->string: powers of radix: (3 -4 pos)
PASS: numbers.test: number->string: powers of radix: (3 -4 neg)
PASS: numbers.test: number->string: powers of radix: (3 -3 pos)
PASS: numbers.test: number->string: powers of radix: (3 -3 neg)
PASS: numbers.test: number->string: powers of radix: (3 -2 pos)
PASS: numbers.test: number->string: powers of radix: (3 -2 neg)
PASS: numbers.test: number->string: powers of radix: (3 -1 pos)
PASS: numbers.test: number->string: powers of radix: (3 -1 neg)
PASS: numbers.test: number->string: powers of radix: (3 0 pos)
PASS: numbers.test: number->string: powers of radix: (3 0 neg)
PASS: numbers.test: number->string: powers of radix: (3 1 pos)
PASS: numbers.test: number->string: powers of radix: (3 1 neg)
PASS: numbers.test: number->string: powers of radix: (3 2 pos)
PASS: numbers.test: number->string: powers of radix: (3 2 neg)
PASS: numbers.test: number->string: powers of radix: (3 3 pos)
PASS: numbers.test: number->string: powers of radix: (3 3 neg)
PASS: numbers.test: number->string: powers of radix: (3 4 pos)
PASS: numbers.test: number->string: powers of radix: (3 4 neg)
PASS: numbers.test: number->string: powers of radix: (3 5 pos)
PASS: numbers.test: number->string: powers of radix: (3 5 neg)
PASS: numbers.test: number->string: powers of radix: (3 6 pos)
PASS: numbers.test: number->string: powers of radix: (3 6 neg)
PASS: numbers.test: number->string: powers of radix: (3 7 pos)
PASS: numbers.test: number->string: powers of radix: (3 7 neg)
PASS: numbers.test: number->string: powers of radix: (3 8 pos)
PASS: numbers.test: number->string: powers of radix: (3 8 neg)
PASS: numbers.test: number->string: powers of radix: (3 9 pos)
PASS: numbers.test: number->string: powers of radix: (3 9 neg)
PASS: numbers.test: number->string: powers of radix: (3 10 pos)
PASS: numbers.test: number->string: powers of radix: (3 10 neg)
PASS: numbers.test: number->string: powers of radix: (3 11 pos)
PASS: numbers.test: number->string: powers of radix: (3 11 neg)
PASS: numbers.test: number->string: powers of radix: (3 12 pos)
PASS: numbers.test: number->string: powers of radix: (3 12 neg)
PASS: numbers.test: number->string: powers of radix: (3 13 pos)
PASS: numbers.test: number->string: powers of radix: (3 13 neg)
PASS: numbers.test: number->string: powers of radix: (3 14 pos)
PASS: numbers.test: number->string: powers of radix: (3 14 neg)
PASS: numbers.test: number->string: powers of radix: (3 15 pos)
PASS: numbers.test: number->string: powers of radix: (3 15 neg)
PASS: numbers.test: number->string: powers of radix: (3 16 pos)
PASS: numbers.test: number->string: powers of radix: (3 16 neg)
PASS: numbers.test: number->string: powers of radix: (3 17 pos)
PASS: numbers.test: number->string: powers of radix: (3 17 neg)
PASS: numbers.test: number->string: powers of radix: (3 18 pos)
PASS: numbers.test: number->string: powers of radix: (3 18 neg)
PASS: numbers.test: number->string: powers of radix: (3 19 pos)
PASS: numbers.test: number->string: powers of radix: (3 19 neg)
PASS: numbers.test: number->string: powers of radix: (3 20 pos)
PASS: numbers.test: number->string: powers of radix: (3 20 neg)
PASS: numbers.test: number->string: powers of radix: (4 -20 pos)
PASS: numbers.test: number->string: powers of radix: (4 -20 neg)
PASS: numbers.test: number->string: powers of radix: (4 -19 pos)
PASS: numbers.test: number->string: powers of radix: (4 -19 neg)
PASS: numbers.test: number->string: powers of radix: (4 -18 pos)
PASS: numbers.test: number->string: powers of radix: (4 -18 neg)
PASS: numbers.test: number->string: powers of radix: (4 -17 pos)
PASS: numbers.test: number->string: powers of radix: (4 -17 neg)
PASS: numbers.test: number->string: powers of radix: (4 -16 pos)
PASS: numbers.test: number->string: powers of radix: (4 -16 neg)
PASS: numbers.test: number->string: powers of radix: (4 -15 pos)
PASS: numbers.test: number->string: powers of radix: (4 -15 neg)
PASS: numbers.test: number->string: powers of radix: (4 -14 pos)
PASS: numbers.test: number->string: powers of radix: (4 -14 neg)
PASS: numbers.test: number->string: powers of radix: (4 -13 pos)
PASS: numbers.test: number->string: powers of radix: (4 -13 neg)
PASS: numbers.test: number->string: powers of radix: (4 -12 pos)
PASS: numbers.test: number->string: powers of radix: (4 -12 neg)
PASS: numbers.test: number->string: powers of radix: (4 -11 pos)
PASS: numbers.test: number->string: powers of radix: (4 -11 neg)
PASS: numbers.test: number->string: powers of radix: (4 -10 pos)
PASS: numbers.test: number->string: powers of radix: (4 -10 neg)
PASS: numbers.test: number->string: powers of radix: (4 -9 pos)
PASS: numbers.test: number->string: powers of radix: (4 -9 neg)
PASS: numbers.test: number->string: powers of radix: (4 -8 pos)
PASS: numbers.test: number->string: powers of radix: (4 -8 neg)
PASS: numbers.test: number->string: powers of radix: (4 -7 pos)
PASS: numbers.test: number->string: powers of radix: (4 -7 neg)
PASS: numbers.test: number->string: powers of radix: (4 -6 pos)
PASS: numbers.test: number->string: powers of radix: (4 -6 neg)
PASS: numbers.test: number->string: powers of radix: (4 -5 pos)
PASS: numbers.test: number->string: powers of radix: (4 -5 neg)
PASS: numbers.test: number->string: powers of radix: (4 -4 pos)
PASS: numbers.test: number->string: powers of radix: (4 -4 neg)
PASS: numbers.test: number->string: powers of radix: (4 -3 pos)
PASS: numbers.test: number->string: powers of radix: (4 -3 neg)
PASS: numbers.test: number->string: powers of radix: (4 -2 pos)
PASS: numbers.test: number->string: powers of radix: (4 -2 neg)
PASS: numbers.test: number->string: powers of radix: (4 -1 pos)
PASS: numbers.test: number->string: powers of radix: (4 -1 neg)
PASS: numbers.test: number->string: powers of radix: (4 0 pos)
PASS: numbers.test: number->string: powers of radix: (4 0 neg)
PASS: numbers.test: number->string: powers of radix: (4 1 pos)
PASS: numbers.test: number->string: powers of radix: (4 1 neg)
PASS: numbers.test: number->string: powers of radix: (4 2 pos)
PASS: numbers.test: number->string: powers of radix: (4 2 neg)
PASS: numbers.test: number->string: powers of radix: (4 3 pos)
PASS: numbers.test: number->string: powers of radix: (4 3 neg)
PASS: numbers.test: number->string: powers of radix: (4 4 pos)
PASS: numbers.test: number->string: powers of radix: (4 4 neg)
PASS: numbers.test: number->string: powers of radix: (4 5 pos)
PASS: numbers.test: number->string: powers of radix: (4 5 neg)
PASS: numbers.test: number->string: powers of radix: (4 6 pos)
PASS: numbers.test: number->string: powers of radix: (4 6 neg)
PASS: numbers.test: number->string: powers of radix: (4 7 pos)
PASS: numbers.test: number->string: powers of radix: (4 7 neg)
PASS: numbers.test: number->string: powers of radix: (4 8 pos)
PASS: numbers.test: number->string: powers of radix: (4 8 neg)
PASS: numbers.test: number->string: powers of radix: (4 9 pos)
PASS: numbers.test: number->string: powers of radix: (4 9 neg)
PASS: numbers.test: number->string: powers of radix: (4 10 pos)
PASS: numbers.test: number->string: powers of radix: (4 10 neg)
PASS: numbers.test: number->string: powers of radix: (4 11 pos)
PASS: numbers.test: number->string: powers of radix: (4 11 neg)
PASS: numbers.test: number->string: powers of radix: (4 12 pos)
PASS: numbers.test: number->string: powers of radix: (4 12 neg)
PASS: numbers.test: number->string: powers of radix: (4 13 pos)
PASS: numbers.test: number->string: powers of radix: (4 13 neg)
PASS: numbers.test: number->string: powers of radix: (4 14 pos)
PASS: numbers.test: number->string: powers of radix: (4 14 neg)
PASS: numbers.test: number->string: powers of radix: (4 15 pos)
PASS: numbers.test: number->string: powers of radix: (4 15 neg)
PASS: numbers.test: number->string: powers of radix: (4 16 pos)
PASS: numbers.test: number->string: powers of radix: (4 16 neg)
PASS: numbers.test: number->string: powers of radix: (4 17 pos)
PASS: numbers.test: number->string: powers of radix: (4 17 neg)
PASS: numbers.test: number->string: powers of radix: (4 18 pos)
PASS: numbers.test: number->string: powers of radix: (4 18 neg)
PASS: numbers.test: number->string: powers of radix: (4 19 pos)
PASS: numbers.test: number->string: powers of radix: (4 19 neg)
PASS: numbers.test: number->string: powers of radix: (4 20 pos)
PASS: numbers.test: number->string: powers of radix: (4 20 neg)
PASS: numbers.test: number->string: powers of radix: (5 -20 pos)
PASS: numbers.test: number->string: powers of radix: (5 -20 neg)
PASS: numbers.test: number->string: powers of radix: (5 -19 pos)
PASS: numbers.test: number->string: powers of radix: (5 -19 neg)
PASS: numbers.test: number->string: powers of radix: (5 -18 pos)
PASS: numbers.test: number->string: powers of radix: (5 -18 neg)
PASS: numbers.test: number->string: powers of radix: (5 -17 pos)
PASS: numbers.test: number->string: powers of radix: (5 -17 neg)
PASS: numbers.test: number->string: powers of radix: (5 -16 pos)
PASS: numbers.test: number->string: powers of radix: (5 -16 neg)
PASS: numbers.test: number->string: powers of radix: (5 -15 pos)
PASS: numbers.test: number->string: powers of radix: (5 -15 neg)
PASS: numbers.test: number->string: powers of radix: (5 -14 pos)
PASS: numbers.test: number->string: powers of radix: (5 -14 neg)
PASS: numbers.test: number->string: powers of radix: (5 -13 pos)
PASS: numbers.test: number->string: powers of radix: (5 -13 neg)
PASS: numbers.test: number->string: powers of radix: (5 -12 pos)
PASS: numbers.test: number->string: powers of radix: (5 -12 neg)
PASS: numbers.test: number->string: powers of radix: (5 -11 pos)
PASS: numbers.test: number->string: powers of radix: (5 -11 neg)
PASS: numbers.test: number->string: powers of radix: (5 -10 pos)
PASS: numbers.test: number->string: powers of radix: (5 -10 neg)
PASS: numbers.test: number->string: powers of radix: (5 -9 pos)
PASS: numbers.test: number->string: powers of radix: (5 -9 neg)
PASS: numbers.test: number->string: powers of radix: (5 -8 pos)
PASS: numbers.test: number->string: powers of radix: (5 -8 neg)
PASS: numbers.test: number->string: powers of radix: (5 -7 pos)
PASS: numbers.test: number->string: powers of radix: (5 -7 neg)
PASS: numbers.test: number->string: powers of radix: (5 -6 pos)
PASS: numbers.test: number->string: powers of radix: (5 -6 neg)
PASS: numbers.test: number->string: powers of radix: (5 -5 pos)
PASS: numbers.test: number->string: powers of radix: (5 -5 neg)
PASS: numbers.test: number->string: powers of radix: (5 -4 pos)
PASS: numbers.test: number->string: powers of radix: (5 -4 neg)
PASS: numbers.test: number->string: powers of radix: (5 -3 pos)
PASS: numbers.test: number->string: powers of radix: (5 -3 neg)
PASS: numbers.test: number->string: powers of radix: (5 -2 pos)
PASS: numbers.test: number->string: powers of radix: (5 -2 neg)
PASS: numbers.test: number->string: powers of radix: (5 -1 pos)
PASS: numbers.test: number->string: powers of radix: (5 -1 neg)
PASS: numbers.test: number->string: powers of radix: (5 0 pos)
PASS: numbers.test: number->string: powers of radix: (5 0 neg)
PASS: numbers.test: number->string: powers of radix: (5 1 pos)
PASS: numbers.test: number->string: powers of radix: (5 1 neg)
PASS: numbers.test: number->string: powers of radix: (5 2 pos)
PASS: numbers.test: number->string: powers of radix: (5 2 neg)
PASS: numbers.test: number->string: powers of radix: (5 3 pos)
PASS: numbers.test: number->string: powers of radix: (5 3 neg)
PASS: numbers.test: number->string: powers of radix: (5 4 pos)
PASS: numbers.test: number->string: powers of radix: (5 4 neg)
PASS: numbers.test: number->string: powers of radix: (5 5 pos)
PASS: numbers.test: number->string: powers of radix: (5 5 neg)
PASS: numbers.test: number->string: powers of radix: (5 6 pos)
PASS: numbers.test: number->string: powers of radix: (5 6 neg)
PASS: numbers.test: number->string: powers of radix: (5 7 pos)
PASS: numbers.test: number->string: powers of radix: (5 7 neg)
PASS: numbers.test: number->string: powers of radix: (5 8 pos)
PASS: numbers.test: number->string: powers of radix: (5 8 neg)
PASS: numbers.test: number->string: powers of radix: (5 9 pos)
PASS: numbers.test: number->string: powers of radix: (5 9 neg)
PASS: numbers.test: number->string: powers of radix: (5 10 pos)
PASS: numbers.test: number->string: powers of radix: (5 10 neg)
PASS: numbers.test: number->string: powers of radix: (5 11 pos)
PASS: numbers.test: number->string: powers of radix: (5 11 neg)
PASS: numbers.test: number->string: powers of radix: (5 12 pos)
PASS: numbers.test: number->string: powers of radix: (5 12 neg)
PASS: numbers.test: number->string: powers of radix: (5 13 pos)
PASS: numbers.test: number->string: powers of radix: (5 13 neg)
PASS: numbers.test: number->string: powers of radix: (5 14 pos)
PASS: numbers.test: number->string: powers of radix: (5 14 neg)
PASS: numbers.test: number->string: powers of radix: (5 15 pos)
PASS: numbers.test: number->string: powers of radix: (5 15 neg)
PASS: numbers.test: number->string: powers of radix: (5 16 pos)
PASS: numbers.test: number->string: powers of radix: (5 16 neg)
PASS: numbers.test: number->string: powers of radix: (5 17 pos)
PASS: numbers.test: number->string: powers of radix: (5 17 neg)
PASS: numbers.test: number->string: powers of radix: (5 18 pos)
PASS: numbers.test: number->string: powers of radix: (5 18 neg)
PASS: numbers.test: number->string: powers of radix: (5 19 pos)
PASS: numbers.test: number->string: powers of radix: (5 19 neg)
PASS: numbers.test: number->string: powers of radix: (5 20 pos)
PASS: numbers.test: number->string: powers of radix: (5 20 neg)
PASS: numbers.test: number->string: powers of radix: (6 -20 pos)
PASS: numbers.test: number->string: powers of radix: (6 -20 neg)
PASS: numbers.test: number->string: powers of radix: (6 -19 pos)
PASS: numbers.test: number->string: powers of radix: (6 -19 neg)
PASS: numbers.test: number->string: powers of radix: (6 -18 pos)
PASS: numbers.test: number->string: powers of radix: (6 -18 neg)
PASS: numbers.test: number->string: powers of radix: (6 -17 pos)
PASS: numbers.test: number->string: powers of radix: (6 -17 neg)
PASS: numbers.test: number->string: powers of radix: (6 -16 pos)
PASS: numbers.test: number->string: powers of radix: (6 -16 neg)
PASS: numbers.test: number->string: powers of radix: (6 -15 pos)
PASS: numbers.test: number->string: powers of radix: (6 -15 neg)
PASS: numbers.test: number->string: powers of radix: (6 -14 pos)
PASS: numbers.test: number->string: powers of radix: (6 -14 neg)
PASS: numbers.test: number->string: powers of radix: (6 -13 pos)
PASS: numbers.test: number->string: powers of radix: (6 -13 neg)
PASS: numbers.test: number->string: powers of radix: (6 -12 pos)
PASS: numbers.test: number->string: powers of radix: (6 -12 neg)
PASS: numbers.test: number->string: powers of radix: (6 -11 pos)
PASS: numbers.test: number->string: powers of radix: (6 -11 neg)
PASS: numbers.test: number->string: powers of radix: (6 -10 pos)
PASS: numbers.test: number->string: powers of radix: (6 -10 neg)
PASS: numbers.test: number->string: powers of radix: (6 -9 pos)
PASS: numbers.test: number->string: powers of radix: (6 -9 neg)
PASS: numbers.test: number->string: powers of radix: (6 -8 pos)
PASS: numbers.test: number->string: powers of radix: (6 -8 neg)
PASS: numbers.test: number->string: powers of radix: (6 -7 pos)
PASS: numbers.test: number->string: powers of radix: (6 -7 neg)
PASS: numbers.test: number->string: powers of radix: (6 -6 pos)
PASS: numbers.test: number->string: powers of radix: (6 -6 neg)
PASS: numbers.test: number->string: powers of radix: (6 -5 pos)
PASS: numbers.test: number->string: powers of radix: (6 -5 neg)
PASS: numbers.test: number->string: powers of radix: (6 -4 pos)
PASS: numbers.test: number->string: powers of radix: (6 -4 neg)
PASS: numbers.test: number->string: powers of radix: (6 -3 pos)
PASS: numbers.test: number->string: powers of radix: (6 -3 neg)
PASS: numbers.test: number->string: powers of radix: (6 -2 pos)
PASS: numbers.test: number->string: powers of radix: (6 -2 neg)
PASS: numbers.test: number->string: powers of radix: (6 -1 pos)
PASS: numbers.test: number->string: powers of radix: (6 -1 neg)
PASS: numbers.test: number->string: powers of radix: (6 0 pos)
PASS: numbers.test: number->string: powers of radix: (6 0 neg)
PASS: numbers.test: number->string: powers of radix: (6 1 pos)
PASS: numbers.test: number->string: powers of radix: (6 1 neg)
PASS: numbers.test: number->string: powers of radix: (6 2 pos)
PASS: numbers.test: number->string: powers of radix: (6 2 neg)
PASS: numbers.test: number->string: powers of radix: (6 3 pos)
PASS: numbers.test: number->string: powers of radix: (6 3 neg)
PASS: numbers.test: number->string: powers of radix: (6 4 pos)
PASS: numbers.test: number->string: powers of radix: (6 4 neg)
PASS: numbers.test: number->string: powers of radix: (6 5 pos)
PASS: numbers.test: number->string: powers of radix: (6 5 neg)
PASS: numbers.test: number->string: powers of radix: (6 6 pos)
PASS: numbers.test: number->string: powers of radix: (6 6 neg)
PASS: numbers.test: number->string: powers of radix: (6 7 pos)
PASS: numbers.test: number->string: powers of radix: (6 7 neg)
PASS: numbers.test: number->string: powers of radix: (6 8 pos)
PASS: numbers.test: number->string: powers of radix: (6 8 neg)
PASS: numbers.test: number->string: powers of radix: (6 9 pos)
PASS: numbers.test: number->string: powers of radix: (6 9 neg)
PASS: numbers.test: number->string: powers of radix: (6 10 pos)
PASS: numbers.test: number->string: powers of radix: (6 10 neg)
PASS: numbers.test: number->string: powers of radix: (6 11 pos)
PASS: numbers.test: number->string: powers of radix: (6 11 neg)
PASS: numbers.test: number->string: powers of radix: (6 12 pos)
PASS: numbers.test: number->string: powers of radix: (6 12 neg)
PASS: numbers.test: number->string: powers of radix: (6 13 pos)
PASS: numbers.test: number->string: powers of radix: (6 13 neg)
PASS: numbers.test: number->string: powers of radix: (6 14 pos)
PASS: numbers.test: number->string: powers of radix: (6 14 neg)
PASS: numbers.test: number->string: powers of radix: (6 15 pos)
PASS: numbers.test: number->string: powers of radix: (6 15 neg)
PASS: numbers.test: number->string: powers of radix: (6 16 pos)
PASS: numbers.test: number->string: powers of radix: (6 16 neg)
PASS: numbers.test: number->string: powers of radix: (6 17 pos)
PASS: numbers.test: number->string: powers of radix: (6 17 neg)
PASS: numbers.test: number->string: powers of radix: (6 18 pos)
PASS: numbers.test: number->string: powers of radix: (6 18 neg)
PASS: numbers.test: number->string: powers of radix: (6 19 pos)
PASS: numbers.test: number->string: powers of radix: (6 19 neg)
PASS: numbers.test: number->string: powers of radix: (6 20 pos)
PASS: numbers.test: number->string: powers of radix: (6 20 neg)
PASS: numbers.test: number->string: powers of radix: (7 -20 pos)
PASS: numbers.test: number->string: powers of radix: (7 -20 neg)
PASS: numbers.test: number->string: powers of radix: (7 -19 pos)
PASS: numbers.test: number->string: powers of radix: (7 -19 neg)
PASS: numbers.test: number->string: powers of radix: (7 -18 pos)
PASS: numbers.test: number->string: powers of radix: (7 -18 neg)
PASS: numbers.test: number->string: powers of radix: (7 -17 pos)
PASS: numbers.test: number->string: powers of radix: (7 -17 neg)
PASS: numbers.test: number->string: powers of radix: (7 -16 pos)
PASS: numbers.test: number->string: powers of radix: (7 -16 neg)
PASS: numbers.test: number->string: powers of radix: (7 -15 pos)
PASS: numbers.test: number->string: powers of radix: (7 -15 neg)
PASS: numbers.test: number->string: powers of radix: (7 -14 pos)
PASS: numbers.test: number->string: powers of radix: (7 -14 neg)
PASS: numbers.test: number->string: powers of radix: (7 -13 pos)
PASS: numbers.test: number->string: powers of radix: (7 -13 neg)
PASS: numbers.test: number->string: powers of radix: (7 -12 pos)
PASS: numbers.test: number->string: powers of radix: (7 -12 neg)
PASS: numbers.test: number->string: powers of radix: (7 -11 pos)
PASS: numbers.test: number->string: powers of radix: (7 -11 neg)
PASS: numbers.test: number->string: powers of radix: (7 -10 pos)
PASS: numbers.test: number->string: powers of radix: (7 -10 neg)
PASS: numbers.test: number->string: powers of radix: (7 -9 pos)
PASS: numbers.test: number->string: powers of radix: (7 -9 neg)
PASS: numbers.test: number->string: powers of radix: (7 -8 pos)
PASS: numbers.test: number->string: powers of radix: (7 -8 neg)
PASS: numbers.test: number->string: powers of radix: (7 -7 pos)
PASS: numbers.test: number->string: powers of radix: (7 -7 neg)
PASS: numbers.test: number->string: powers of radix: (7 -6 pos)
PASS: numbers.test: number->string: powers of radix: (7 -6 neg)
PASS: numbers.test: number->string: powers of radix: (7 -5 pos)
PASS: numbers.test: number->string: powers of radix: (7 -5 neg)
PASS: numbers.test: number->string: powers of radix: (7 -4 pos)
PASS: numbers.test: number->string: powers of radix: (7 -4 neg)
PASS: numbers.test: number->string: powers of radix: (7 -3 pos)
PASS: numbers.test: number->string: powers of radix: (7 -3 neg)
PASS: numbers.test: number->string: powers of radix: (7 -2 pos)
PASS: numbers.test: number->string: powers of radix: (7 -2 neg)
PASS: numbers.test: number->string: powers of radix: (7 -1 pos)
PASS: numbers.test: number->string: powers of radix: (7 -1 neg)
PASS: numbers.test: number->string: powers of radix: (7 0 pos)
PASS: numbers.test: number->string: powers of radix: (7 0 neg)
PASS: numbers.test: number->string: powers of radix: (7 1 pos)
PASS: numbers.test: number->string: powers of radix: (7 1 neg)
PASS: numbers.test: number->string: powers of radix: (7 2 pos)
PASS: numbers.test: number->string: powers of radix: (7 2 neg)
PASS: numbers.test: number->string: powers of radix: (7 3 pos)
PASS: numbers.test: number->string: powers of radix: (7 3 neg)
PASS: numbers.test: number->string: powers of radix: (7 4 pos)
PASS: numbers.test: number->string: powers of radix: (7 4 neg)
PASS: numbers.test: number->string: powers of radix: (7 5 pos)
PASS: numbers.test: number->string: powers of radix: (7 5 neg)
PASS: numbers.test: number->string: powers of radix: (7 6 pos)
PASS: numbers.test: number->string: powers of radix: (7 6 neg)
PASS: numbers.test: number->string: powers of radix: (7 7 pos)
PASS: numbers.test: number->string: powers of radix: (7 7 neg)
PASS: numbers.test: number->string: powers of radix: (7 8 pos)
PASS: numbers.test: number->string: powers of radix: (7 8 neg)
PASS: numbers.test: number->string: powers of radix: (7 9 pos)
PASS: numbers.test: number->string: powers of radix: (7 9 neg)
PASS: numbers.test: number->string: powers of radix: (7 10 pos)
PASS: numbers.test: number->string: powers of radix: (7 10 neg)
PASS: numbers.test: number->string: powers of radix: (7 11 pos)
PASS: numbers.test: number->string: powers of radix: (7 11 neg)
PASS: numbers.test: number->string: powers of radix: (7 12 pos)
PASS: numbers.test: number->string: powers of radix: (7 12 neg)
PASS: numbers.test: number->string: powers of radix: (7 13 pos)
PASS: numbers.test: number->string: powers of radix: (7 13 neg)
PASS: numbers.test: number->string: powers of radix: (7 14 pos)
PASS: numbers.test: number->string: powers of radix: (7 14 neg)
PASS: numbers.test: number->string: powers of radix: (7 15 pos)
PASS: numbers.test: number->string: powers of radix: (7 15 neg)
PASS: numbers.test: number->string: powers of radix: (7 16 pos)
PASS: numbers.test: number->string: powers of radix: (7 16 neg)
PASS: numbers.test: number->string: powers of radix: (7 17 pos)
PASS: numbers.test: number->string: powers of radix: (7 17 neg)
PASS: numbers.test: number->string: powers of radix: (7 18 pos)
PASS: numbers.test: number->string: powers of radix: (7 18 neg)
PASS: numbers.test: number->string: powers of radix: (7 19 pos)
PASS: numbers.test: number->string: powers of radix: (7 19 neg)
PASS: numbers.test: number->string: powers of radix: (7 20 pos)
PASS: numbers.test: number->string: powers of radix: (7 20 neg)
PASS: numbers.test: number->string: powers of radix: (8 -20 pos)
PASS: numbers.test: number->string: powers of radix: (8 -20 neg)
PASS: numbers.test: number->string: powers of radix: (8 -19 pos)
PASS: numbers.test: number->string: powers of radix: (8 -19 neg)
PASS: numbers.test: number->string: powers of radix: (8 -18 pos)
PASS: numbers.test: number->string: powers of radix: (8 -18 neg)
PASS: numbers.test: number->string: powers of radix: (8 -17 pos)
PASS: numbers.test: number->string: powers of radix: (8 -17 neg)
PASS: numbers.test: number->string: powers of radix: (8 -16 pos)
PASS: numbers.test: number->string: powers of radix: (8 -16 neg)
PASS: numbers.test: number->string: powers of radix: (8 -15 pos)
PASS: numbers.test: number->string: powers of radix: (8 -15 neg)
PASS: numbers.test: number->string: powers of radix: (8 -14 pos)
PASS: numbers.test: number->string: powers of radix: (8 -14 neg)
PASS: numbers.test: number->string: powers of radix: (8 -13 pos)
PASS: numbers.test: number->string: powers of radix: (8 -13 neg)
PASS: numbers.test: number->string: powers of radix: (8 -12 pos)
PASS: numbers.test: number->string: powers of radix: (8 -12 neg)
PASS: numbers.test: number->string: powers of radix: (8 -11 pos)
PASS: numbers.test: number->string: powers of radix: (8 -11 neg)
PASS: numbers.test: number->string: powers of radix: (8 -10 pos)
PASS: numbers.test: number->string: powers of radix: (8 -10 neg)
PASS: numbers.test: number->string: powers of radix: (8 -9 pos)
PASS: numbers.test: number->string: powers of radix: (8 -9 neg)
PASS: numbers.test: number->string: powers of radix: (8 -8 pos)
PASS: numbers.test: number->string: powers of radix: (8 -8 neg)
PASS: numbers.test: number->string: powers of radix: (8 -7 pos)
PASS: numbers.test: number->string: powers of radix: (8 -7 neg)
PASS: numbers.test: number->string: powers of radix: (8 -6 pos)
PASS: numbers.test: number->string: powers of radix: (8 -6 neg)
PASS: numbers.test: number->string: powers of radix: (8 -5 pos)
PASS: numbers.test: number->string: powers of radix: (8 -5 neg)
PASS: numbers.test: number->string: powers of radix: (8 -4 pos)
PASS: numbers.test: number->string: powers of radix: (8 -4 neg)
PASS: numbers.test: number->string: powers of radix: (8 -3 pos)
PASS: numbers.test: number->string: powers of radix: (8 -3 neg)
PASS: numbers.test: number->string: powers of radix: (8 -2 pos)
PASS: numbers.test: number->string: powers of radix: (8 -2 neg)
PASS: numbers.test: number->string: powers of radix: (8 -1 pos)
PASS: numbers.test: number->string: powers of radix: (8 -1 neg)
PASS: numbers.test: number->string: powers of radix: (8 0 pos)
PASS: numbers.test: number->string: powers of radix: (8 0 neg)
PASS: numbers.test: number->string: powers of radix: (8 1 pos)
PASS: numbers.test: number->string: powers of radix: (8 1 neg)
PASS: numbers.test: number->string: powers of radix: (8 2 pos)
PASS: numbers.test: number->string: powers of radix: (8 2 neg)
PASS: numbers.test: number->string: powers of radix: (8 3 pos)
PASS: numbers.test: number->string: powers of radix: (8 3 neg)
PASS: numbers.test: number->string: powers of radix: (8 4 pos)
PASS: numbers.test: number->string: powers of radix: (8 4 neg)
PASS: numbers.test: number->string: powers of radix: (8 5 pos)
PASS: numbers.test: number->string: powers of radix: (8 5 neg)
PASS: numbers.test: number->string: powers of radix: (8 6 pos)
PASS: numbers.test: number->string: powers of radix: (8 6 neg)
PASS: numbers.test: number->string: powers of radix: (8 7 pos)
PASS: numbers.test: number->string: powers of radix: (8 7 neg)
PASS: numbers.test: number->string: powers of radix: (8 8 pos)
PASS: numbers.test: number->string: powers of radix: (8 8 neg)
PASS: numbers.test: number->string: powers of radix: (8 9 pos)
PASS: numbers.test: number->string: powers of radix: (8 9 neg)
PASS: numbers.test: number->string: powers of radix: (8 10 pos)
PASS: numbers.test: number->string: powers of radix: (8 10 neg)
PASS: numbers.test: number->string: powers of radix: (8 11 pos)
PASS: numbers.test: number->string: powers of radix: (8 11 neg)
PASS: numbers.test: number->string: powers of radix: (8 12 pos)
PASS: numbers.test: number->string: powers of radix: (8 12 neg)
PASS: numbers.test: number->string: powers of radix: (8 13 pos)
PASS: numbers.test: number->string: powers of radix: (8 13 neg)
PASS: numbers.test: number->string: powers of radix: (8 14 pos)
PASS: numbers.test: number->string: powers of radix: (8 14 neg)
PASS: numbers.test: number->string: powers of radix: (8 15 pos)
PASS: numbers.test: number->string: powers of radix: (8 15 neg)
PASS: numbers.test: number->string: powers of radix: (8 16 pos)
PASS: numbers.test: number->string: powers of radix: (8 16 neg)
PASS: numbers.test: number->string: powers of radix: (8 17 pos)
PASS: numbers.test: number->string: powers of radix: (8 17 neg)
PASS: numbers.test: number->string: powers of radix: (8 18 pos)
PASS: numbers.test: number->string: powers of radix: (8 18 neg)
PASS: numbers.test: number->string: powers of radix: (8 19 pos)
PASS: numbers.test: number->string: powers of radix: (8 19 neg)
PASS: numbers.test: number->string: powers of radix: (8 20 pos)
PASS: numbers.test: number->string: powers of radix: (8 20 neg)
PASS: numbers.test: number->string: powers of radix: (9 -20 pos)
PASS: numbers.test: number->string: powers of radix: (9 -20 neg)
PASS: numbers.test: number->string: powers of radix: (9 -19 pos)
PASS: numbers.test: number->string: powers of radix: (9 -19 neg)
PASS: numbers.test: number->string: powers of radix: (9 -18 pos)
PASS: numbers.test: number->string: powers of radix: (9 -18 neg)
PASS: numbers.test: number->string: powers of radix: (9 -17 pos)
PASS: numbers.test: number->string: powers of radix: (9 -17 neg)
PASS: numbers.test: number->string: powers of radix: (9 -16 pos)
PASS: numbers.test: number->string: powers of radix: (9 -16 neg)
PASS: numbers.test: number->string: powers of radix: (9 -15 pos)
PASS: numbers.test: number->string: powers of radix: (9 -15 neg)
PASS: numbers.test: number->string: powers of radix: (9 -14 pos)
PASS: numbers.test: number->string: powers of radix: (9 -14 neg)
PASS: numbers.test: number->string: powers of radix: (9 -13 pos)
PASS: numbers.test: number->string: powers of radix: (9 -13 neg)
PASS: numbers.test: number->string: powers of radix: (9 -12 pos)
PASS: numbers.test: number->string: powers of radix: (9 -12 neg)
PASS: numbers.test: number->string: powers of radix: (9 -11 pos)
PASS: numbers.test: number->string: powers of radix: (9 -11 neg)
PASS: numbers.test: number->string: powers of radix: (9 -10 pos)
PASS: numbers.test: number->string: powers of radix: (9 -10 neg)
PASS: numbers.test: number->string: powers of radix: (9 -9 pos)
PASS: numbers.test: number->string: powers of radix: (9 -9 neg)
PASS: numbers.test: number->string: powers of radix: (9 -8 pos)
PASS: numbers.test: number->string: powers of radix: (9 -8 neg)
PASS: numbers.test: number->string: powers of radix: (9 -7 pos)
PASS: numbers.test: number->string: powers of radix: (9 -7 neg)
PASS: numbers.test: number->string: powers of radix: (9 -6 pos)
PASS: numbers.test: number->string: powers of radix: (9 -6 neg)
PASS: numbers.test: number->string: powers of radix: (9 -5 pos)
PASS: numbers.test: number->string: powers of radix: (9 -5 neg)
PASS: numbers.test: number->string: powers of radix: (9 -4 pos)
PASS: numbers.test: number->string: powers of radix: (9 -4 neg)
PASS: numbers.test: number->string: powers of radix: (9 -3 pos)
PASS: numbers.test: number->string: powers of radix: (9 -3 neg)
PASS: numbers.test: number->string: powers of radix: (9 -2 pos)
PASS: numbers.test: number->string: powers of radix: (9 -2 neg)
PASS: numbers.test: number->string: powers of radix: (9 -1 pos)
PASS: numbers.test: number->string: powers of radix: (9 -1 neg)
PASS: numbers.test: number->string: powers of radix: (9 0 pos)
PASS: numbers.test: number->string: powers of radix: (9 0 neg)
PASS: numbers.test: number->string: powers of radix: (9 1 pos)
PASS: numbers.test: number->string: powers of radix: (9 1 neg)
PASS: numbers.test: number->string: powers of radix: (9 2 pos)
PASS: numbers.test: number->string: powers of radix: (9 2 neg)
PASS: numbers.test: number->string: powers of radix: (9 3 pos)
PASS: numbers.test: number->string: powers of radix: (9 3 neg)
PASS: numbers.test: number->string: powers of radix: (9 4 pos)
PASS: numbers.test: number->string: powers of radix: (9 4 neg)
PASS: numbers.test: number->string: powers of radix: (9 5 pos)
PASS: numbers.test: number->string: powers of radix: (9 5 neg)
PASS: numbers.test: number->string: powers of radix: (9 6 pos)
PASS: numbers.test: number->string: powers of radix: (9 6 neg)
PASS: numbers.test: number->string: powers of radix: (9 7 pos)
PASS: numbers.test: number->string: powers of radix: (9 7 neg)
PASS: numbers.test: number->string: powers of radix: (9 8 pos)
PASS: numbers.test: number->string: powers of radix: (9 8 neg)
PASS: numbers.test: number->string: powers of radix: (9 9 pos)
PASS: numbers.test: number->string: powers of radix: (9 9 neg)
PASS: numbers.test: number->string: powers of radix: (9 10 pos)
PASS: numbers.test: number->string: powers of radix: (9 10 neg)
PASS: numbers.test: number->string: powers of radix: (9 11 pos)
PASS: numbers.test: number->string: powers of radix: (9 11 neg)
PASS: numbers.test: number->string: powers of radix: (9 12 pos)
PASS: numbers.test: number->string: powers of radix: (9 12 neg)
PASS: numbers.test: number->string: powers of radix: (9 13 pos)
PASS: numbers.test: number->string: powers of radix: (9 13 neg)
PASS: numbers.test: number->string: powers of radix: (9 14 pos)
PASS: numbers.test: number->string: powers of radix: (9 14 neg)
PASS: numbers.test: number->string: powers of radix: (9 15 pos)
PASS: numbers.test: number->string: powers of radix: (9 15 neg)
PASS: numbers.test: number->string: powers of radix: (9 16 pos)
PASS: numbers.test: number->string: powers of radix: (9 16 neg)
PASS: numbers.test: number->string: powers of radix: (9 17 pos)
PASS: numbers.test: number->string: powers of radix: (9 17 neg)
PASS: numbers.test: number->string: powers of radix: (9 18 pos)
PASS: numbers.test: number->string: powers of radix: (9 18 neg)
PASS: numbers.test: number->string: powers of radix: (9 19 pos)
PASS: numbers.test: number->string: powers of radix: (9 19 neg)
PASS: numbers.test: number->string: powers of radix: (9 20 pos)
PASS: numbers.test: number->string: powers of radix: (9 20 neg)
PASS: numbers.test: number->string: powers of radix: (10 -20 pos)
PASS: numbers.test: number->string: powers of radix: (10 -20 neg)
PASS: numbers.test: number->string: powers of radix: (10 -19 pos)
PASS: numbers.test: number->string: powers of radix: (10 -19 neg)
PASS: numbers.test: number->string: powers of radix: (10 -18 pos)
PASS: numbers.test: number->string: powers of radix: (10 -18 neg)
PASS: numbers.test: number->string: powers of radix: (10 -17 pos)
PASS: numbers.test: number->string: powers of radix: (10 -17 neg)
PASS: numbers.test: number->string: powers of radix: (10 -16 pos)
PASS: numbers.test: number->string: powers of radix: (10 -16 neg)
PASS: numbers.test: number->string: powers of radix: (10 -15 pos)
PASS: numbers.test: number->string: powers of radix: (10 -15 neg)
PASS: numbers.test: number->string: powers of radix: (10 -14 pos)
PASS: numbers.test: number->string: powers of radix: (10 -14 neg)
PASS: numbers.test: number->string: powers of radix: (10 -13 pos)
PASS: numbers.test: number->string: powers of radix: (10 -13 neg)
PASS: numbers.test: number->string: powers of radix: (10 -12 pos)
PASS: numbers.test: number->string: powers of radix: (10 -12 neg)
PASS: numbers.test: number->string: powers of radix: (10 -11 pos)
PASS: numbers.test: number->string: powers of radix: (10 -11 neg)
PASS: numbers.test: number->string: powers of radix: (10 -10 pos)
PASS: numbers.test: number->string: powers of radix: (10 -10 neg)
PASS: numbers.test: number->string: powers of radix: (10 -9 pos)
PASS: numbers.test: number->string: powers of radix: (10 -9 neg)
PASS: numbers.test: number->string: powers of radix: (10 -8 pos)
PASS: numbers.test: number->string: powers of radix: (10 -8 neg)
PASS: numbers.test: number->string: powers of radix: (10 -7 pos)
PASS: numbers.test: number->string: powers of radix: (10 -7 neg)
PASS: numbers.test: number->string: powers of radix: (10 -6 pos)
PASS: numbers.test: number->string: powers of radix: (10 -6 neg)
PASS: numbers.test: number->string: powers of radix: (10 -5 pos)
PASS: numbers.test: number->string: powers of radix: (10 -5 neg)
PASS: numbers.test: number->string: powers of radix: (10 -4 pos)
PASS: numbers.test: number->string: powers of radix: (10 -4 neg)
PASS: numbers.test: number->string: powers of radix: (10 -3 pos)
PASS: numbers.test: number->string: powers of radix: (10 -3 neg)
PASS: numbers.test: number->string: powers of radix: (10 -2 pos)
PASS: numbers.test: number->string: powers of radix: (10 -2 neg)
PASS: numbers.test: number->string: powers of radix: (10 -1 pos)
PASS: numbers.test: number->string: powers of radix: (10 -1 neg)
PASS: numbers.test: number->string: powers of radix: (10 0 pos)
PASS: numbers.test: number->string: powers of radix: (10 0 neg)
PASS: numbers.test: number->string: powers of radix: (10 1 pos)
PASS: numbers.test: number->string: powers of radix: (10 1 neg)
PASS: numbers.test: number->string: powers of radix: (10 2 pos)
PASS: numbers.test: number->string: powers of radix: (10 2 neg)
PASS: numbers.test: number->string: powers of radix: (10 3 pos)
PASS: numbers.test: number->string: powers of radix: (10 3 neg)
PASS: numbers.test: number->string: powers of radix: (10 4 pos)
PASS: numbers.test: number->string: powers of radix: (10 4 neg)
PASS: numbers.test: number->string: powers of radix: (10 5 pos)
PASS: numbers.test: number->string: powers of radix: (10 5 neg)
PASS: numbers.test: number->string: powers of radix: (10 6 pos)
PASS: numbers.test: number->string: powers of radix: (10 6 neg)
PASS: numbers.test: number->string: powers of radix: (10 7 pos)
PASS: numbers.test: number->string: powers of radix: (10 7 neg)
PASS: numbers.test: number->string: powers of radix: (10 8 pos)
PASS: numbers.test: number->string: powers of radix: (10 8 neg)
PASS: numbers.test: number->string: powers of radix: (10 9 pos)
PASS: numbers.test: number->string: powers of radix: (10 9 neg)
PASS: numbers.test: number->string: powers of radix: (10 10 pos)
PASS: numbers.test: number->string: powers of radix: (10 10 neg)
PASS: numbers.test: number->string: powers of radix: (10 11 pos)
PASS: numbers.test: number->string: powers of radix: (10 11 neg)
PASS: numbers.test: number->string: powers of radix: (10 12 pos)
PASS: numbers.test: number->string: powers of radix: (10 12 neg)
PASS: numbers.test: number->string: powers of radix: (10 13 pos)
PASS: numbers.test: number->string: powers of radix: (10 13 neg)
PASS: numbers.test: number->string: powers of radix: (10 14 pos)
PASS: numbers.test: number->string: powers of radix: (10 14 neg)
PASS: numbers.test: number->string: powers of radix: (10 15 pos)
PASS: numbers.test: number->string: powers of radix: (10 15 neg)
PASS: numbers.test: number->string: powers of radix: (10 16 pos)
PASS: numbers.test: number->string: powers of radix: (10 16 neg)
PASS: numbers.test: number->string: powers of radix: (10 17 pos)
PASS: numbers.test: number->string: powers of radix: (10 17 neg)
PASS: numbers.test: number->string: powers of radix: (10 18 pos)
PASS: numbers.test: number->string: powers of radix: (10 18 neg)
PASS: numbers.test: number->string: powers of radix: (10 19 pos)
PASS: numbers.test: number->string: powers of radix: (10 19 neg)
PASS: numbers.test: number->string: powers of radix: (10 20 pos)
PASS: numbers.test: number->string: powers of radix: (10 20 neg)
PASS: numbers.test: number->string: powers of radix: (11 -20 pos)
PASS: numbers.test: number->string: powers of radix: (11 -20 neg)
PASS: numbers.test: number->string: powers of radix: (11 -19 pos)
PASS: numbers.test: number->string: powers of radix: (11 -19 neg)
PASS: numbers.test: number->string: powers of radix: (11 -18 pos)
PASS: numbers.test: number->string: powers of radix: (11 -18 neg)
PASS: numbers.test: number->string: powers of radix: (11 -17 pos)
PASS: numbers.test: number->string: powers of radix: (11 -17 neg)
PASS: numbers.test: number->string: powers of radix: (11 -16 pos)
PASS: numbers.test: number->string: powers of radix: (11 -16 neg)
PASS: numbers.test: number->string: powers of radix: (11 -15 pos)
PASS: numbers.test: number->string: powers of radix: (11 -15 neg)
PASS: numbers.test: number->string: powers of radix: (11 -14 pos)
PASS: numbers.test: number->string: powers of radix: (11 -14 neg)
PASS: numbers.test: number->string: powers of radix: (11 -13 pos)
PASS: numbers.test: number->string: powers of radix: (11 -13 neg)
PASS: numbers.test: number->string: powers of radix: (11 -12 pos)
PASS: numbers.test: number->string: powers of radix: (11 -12 neg)
PASS: numbers.test: number->string: powers of radix: (11 -11 pos)
PASS: numbers.test: number->string: powers of radix: (11 -11 neg)
PASS: numbers.test: number->string: powers of radix: (11 -10 pos)
PASS: numbers.test: number->string: powers of radix: (11 -10 neg)
PASS: numbers.test: number->string: powers of radix: (11 -9 pos)
PASS: numbers.test: number->string: powers of radix: (11 -9 neg)
PASS: numbers.test: number->string: powers of radix: (11 -8 pos)
PASS: numbers.test: number->string: powers of radix: (11 -8 neg)
PASS: numbers.test: number->string: powers of radix: (11 -7 pos)
PASS: numbers.test: number->string: powers of radix: (11 -7 neg)
PASS: numbers.test: number->string: powers of radix: (11 -6 pos)
PASS: numbers.test: number->string: powers of radix: (11 -6 neg)
PASS: numbers.test: number->string: powers of radix: (11 -5 pos)
PASS: numbers.test: number->string: powers of radix: (11 -5 neg)
PASS: numbers.test: number->string: powers of radix: (11 -4 pos)
PASS: numbers.test: number->string: powers of radix: (11 -4 neg)
PASS: numbers.test: number->string: powers of radix: (11 -3 pos)
PASS: numbers.test: number->string: powers of radix: (11 -3 neg)
PASS: numbers.test: number->string: powers of radix: (11 -2 pos)
PASS: numbers.test: number->string: powers of radix: (11 -2 neg)
PASS: numbers.test: number->string: powers of radix: (11 -1 pos)
PASS: numbers.test: number->string: powers of radix: (11 -1 neg)
PASS: numbers.test: number->string: powers of radix: (11 0 pos)
PASS: numbers.test: number->string: powers of radix: (11 0 neg)
PASS: numbers.test: number->string: powers of radix: (11 1 pos)
PASS: numbers.test: number->string: powers of radix: (11 1 neg)
PASS: numbers.test: number->string: powers of radix: (11 2 pos)
PASS: numbers.test: number->string: powers of radix: (11 2 neg)
PASS: numbers.test: number->string: powers of radix: (11 3 pos)
PASS: numbers.test: number->string: powers of radix: (11 3 neg)
PASS: numbers.test: number->string: powers of radix: (11 4 pos)
PASS: numbers.test: number->string: powers of radix: (11 4 neg)
PASS: numbers.test: number->string: powers of radix: (11 5 pos)
PASS: numbers.test: number->string: powers of radix: (11 5 neg)
PASS: numbers.test: number->string: powers of radix: (11 6 pos)
PASS: numbers.test: number->string: powers of radix: (11 6 neg)
PASS: numbers.test: number->string: powers of radix: (11 7 pos)
PASS: numbers.test: number->string: powers of radix: (11 7 neg)
PASS: numbers.test: number->string: powers of radix: (11 8 pos)
PASS: numbers.test: number->string: powers of radix: (11 8 neg)
PASS: numbers.test: number->string: powers of radix: (11 9 pos)
PASS: numbers.test: number->string: powers of radix: (11 9 neg)
PASS: numbers.test: number->string: powers of radix: (11 10 pos)
PASS: numbers.test: number->string: powers of radix: (11 10 neg)
PASS: numbers.test: number->string: powers of radix: (11 11 pos)
PASS: numbers.test: number->string: powers of radix: (11 11 neg)
PASS: numbers.test: number->string: powers of radix: (11 12 pos)
PASS: numbers.test: number->string: powers of radix: (11 12 neg)
PASS: numbers.test: number->string: powers of radix: (11 13 pos)
PASS: numbers.test: number->string: powers of radix: (11 13 neg)
PASS: numbers.test: number->string: powers of radix: (11 14 pos)
PASS: numbers.test: number->string: powers of radix: (11 14 neg)
PASS: numbers.test: number->string: powers of radix: (11 15 pos)
PASS: numbers.test: number->string: powers of radix: (11 15 neg)
PASS: numbers.test: number->string: powers of radix: (11 16 pos)
PASS: numbers.test: number->string: powers of radix: (11 16 neg)
PASS: numbers.test: number->string: powers of radix: (11 17 pos)
PASS: numbers.test: number->string: powers of radix: (11 17 neg)
PASS: numbers.test: number->string: powers of radix: (11 18 pos)
PASS: numbers.test: number->string: powers of radix: (11 18 neg)
PASS: numbers.test: number->string: powers of radix: (11 19 pos)
PASS: numbers.test: number->string: powers of radix: (11 19 neg)
PASS: numbers.test: number->string: powers of radix: (11 20 pos)
PASS: numbers.test: number->string: powers of radix: (11 20 neg)
PASS: numbers.test: number->string: powers of radix: (12 -20 pos)
PASS: numbers.test: number->string: powers of radix: (12 -20 neg)
PASS: numbers.test: number->string: powers of radix: (12 -19 pos)
PASS: numbers.test: number->string: powers of radix: (12 -19 neg)
PASS: numbers.test: number->string: powers of radix: (12 -18 pos)
PASS: numbers.test: number->string: powers of radix: (12 -18 neg)
PASS: numbers.test: number->string: powers of radix: (12 -17 pos)
PASS: numbers.test: number->string: powers of radix: (12 -17 neg)
PASS: numbers.test: number->string: powers of radix: (12 -16 pos)
PASS: numbers.test: number->string: powers of radix: (12 -16 neg)
PASS: numbers.test: number->string: powers of radix: (12 -15 pos)
PASS: numbers.test: number->string: powers of radix: (12 -15 neg)
PASS: numbers.test: number->string: powers of radix: (12 -14 pos)
PASS: numbers.test: number->string: powers of radix: (12 -14 neg)
PASS: numbers.test: number->string: powers of radix: (12 -13 pos)
PASS: numbers.test: number->string: powers of radix: (12 -13 neg)
PASS: numbers.test: number->string: powers of radix: (12 -12 pos)
PASS: numbers.test: number->string: powers of radix: (12 -12 neg)
PASS: numbers.test: number->string: powers of radix: (12 -11 pos)
PASS: numbers.test: number->string: powers of radix: (12 -11 neg)
PASS: numbers.test: number->string: powers of radix: (12 -10 pos)
PASS: numbers.test: number->string: powers of radix: (12 -10 neg)
PASS: numbers.test: number->string: powers of radix: (12 -9 pos)
PASS: numbers.test: number->string: powers of radix: (12 -9 neg)
PASS: numbers.test: number->string: powers of radix: (12 -8 pos)
PASS: numbers.test: number->string: powers of radix: (12 -8 neg)
PASS: numbers.test: number->string: powers of radix: (12 -7 pos)
PASS: numbers.test: number->string: powers of radix: (12 -7 neg)
PASS: numbers.test: number->string: powers of radix: (12 -6 pos)
PASS: numbers.test: number->string: powers of radix: (12 -6 neg)
PASS: numbers.test: number->string: powers of radix: (12 -5 pos)
PASS: numbers.test: number->string: powers of radix: (12 -5 neg)
PASS: numbers.test: number->string: powers of radix: (12 -4 pos)
PASS: numbers.test: number->string: powers of radix: (12 -4 neg)
PASS: numbers.test: number->string: powers of radix: (12 -3 pos)
PASS: numbers.test: number->string: powers of radix: (12 -3 neg)
PASS: numbers.test: number->string: powers of radix: (12 -2 pos)
PASS: numbers.test: number->string: powers of radix: (12 -2 neg)
PASS: numbers.test: number->string: powers of radix: (12 -1 pos)
PASS: numbers.test: number->string: powers of radix: (12 -1 neg)
PASS: numbers.test: number->string: powers of radix: (12 0 pos)
PASS: numbers.test: number->string: powers of radix: (12 0 neg)
PASS: numbers.test: number->string: powers of radix: (12 1 pos)
PASS: numbers.test: number->string: powers of radix: (12 1 neg)
PASS: numbers.test: number->string: powers of radix: (12 2 pos)
PASS: numbers.test: number->string: powers of radix: (12 2 neg)
PASS: numbers.test: number->string: powers of radix: (12 3 pos)
PASS: numbers.test: number->string: powers of radix: (12 3 neg)
PASS: numbers.test: number->string: powers of radix: (12 4 pos)
PASS: numbers.test: number->string: powers of radix: (12 4 neg)
PASS: numbers.test: number->string: powers of radix: (12 5 pos)
PASS: numbers.test: number->string: powers of radix: (12 5 neg)
PASS: numbers.test: number->string: powers of radix: (12 6 pos)
PASS: numbers.test: number->string: powers of radix: (12 6 neg)
PASS: numbers.test: number->string: powers of radix: (12 7 pos)
PASS: numbers.test: number->string: powers of radix: (12 7 neg)
PASS: numbers.test: number->string: powers of radix: (12 8 pos)
PASS: numbers.test: number->string: powers of radix: (12 8 neg)
PASS: numbers.test: number->string: powers of radix: (12 9 pos)
PASS: numbers.test: number->string: powers of radix: (12 9 neg)
PASS: numbers.test: number->string: powers of radix: (12 10 pos)
PASS: numbers.test: number->string: powers of radix: (12 10 neg)
PASS: numbers.test: number->string: powers of radix: (12 11 pos)
PASS: numbers.test: number->string: powers of radix: (12 11 neg)
PASS: numbers.test: number->string: powers of radix: (12 12 pos)
PASS: numbers.test: number->string: powers of radix: (12 12 neg)
PASS: numbers.test: number->string: powers of radix: (12 13 pos)
PASS: numbers.test: number->string: powers of radix: (12 13 neg)
PASS: numbers.test: number->string: powers of radix: (12 14 pos)
PASS: numbers.test: number->string: powers of radix: (12 14 neg)
PASS: numbers.test: number->string: powers of radix: (12 15 pos)
PASS: numbers.test: number->string: powers of radix: (12 15 neg)
PASS: numbers.test: number->string: powers of radix: (12 16 pos)
PASS: numbers.test: number->string: powers of radix: (12 16 neg)
PASS: numbers.test: number->string: powers of radix: (12 17 pos)
PASS: numbers.test: number->string: powers of radix: (12 17 neg)
PASS: numbers.test: number->string: powers of radix: (12 18 pos)
PASS: numbers.test: number->string: powers of radix: (12 18 neg)
PASS: numbers.test: number->string: powers of radix: (12 19 pos)
PASS: numbers.test: number->string: powers of radix: (12 19 neg)
PASS: numbers.test: number->string: powers of radix: (12 20 pos)
PASS: numbers.test: number->string: powers of radix: (12 20 neg)
PASS: numbers.test: number->string: powers of radix: (13 -20 pos)
PASS: numbers.test: number->string: powers of radix: (13 -20 neg)
PASS: numbers.test: number->string: powers of radix: (13 -19 pos)
PASS: numbers.test: number->string: powers of radix: (13 -19 neg)
PASS: numbers.test: number->string: powers of radix: (13 -18 pos)
PASS: numbers.test: number->string: powers of radix: (13 -18 neg)
PASS: numbers.test: number->string: powers of radix: (13 -17 pos)
PASS: numbers.test: number->string: powers of radix: (13 -17 neg)
PASS: numbers.test: number->string: powers of radix: (13 -16 pos)
PASS: numbers.test: number->string: powers of radix: (13 -16 neg)
PASS: numbers.test: number->string: powers of radix: (13 -15 pos)
PASS: numbers.test: number->string: powers of radix: (13 -15 neg)
PASS: numbers.test: number->string: powers of radix: (13 -14 pos)
PASS: numbers.test: number->string: powers of radix: (13 -14 neg)
PASS: numbers.test: number->string: powers of radix: (13 -13 pos)
PASS: numbers.test: number->string: powers of radix: (13 -13 neg)
PASS: numbers.test: number->string: powers of radix: (13 -12 pos)
PASS: numbers.test: number->string: powers of radix: (13 -12 neg)
PASS: numbers.test: number->string: powers of radix: (13 -11 pos)
PASS: numbers.test: number->string: powers of radix: (13 -11 neg)
PASS: numbers.test: number->string: powers of radix: (13 -10 pos)
PASS: numbers.test: number->string: powers of radix: (13 -10 neg)
PASS: numbers.test: number->string: powers of radix: (13 -9 pos)
PASS: numbers.test: number->string: powers of radix: (13 -9 neg)
PASS: numbers.test: number->string: powers of radix: (13 -8 pos)
PASS: numbers.test: number->string: powers of radix: (13 -8 neg)
PASS: numbers.test: number->string: powers of radix: (13 -7 pos)
PASS: numbers.test: number->string: powers of radix: (13 -7 neg)
PASS: numbers.test: number->string: powers of radix: (13 -6 pos)
PASS: numbers.test: number->string: powers of radix: (13 -6 neg)
PASS: numbers.test: number->string: powers of radix: (13 -5 pos)
PASS: numbers.test: number->string: powers of radix: (13 -5 neg)
PASS: numbers.test: number->string: powers of radix: (13 -4 pos)
PASS: numbers.test: number->string: powers of radix: (13 -4 neg)
PASS: numbers.test: number->string: powers of radix: (13 -3 pos)
PASS: numbers.test: number->string: powers of radix: (13 -3 neg)
PASS: numbers.test: number->string: powers of radix: (13 -2 pos)
PASS: numbers.test: number->string: powers of radix: (13 -2 neg)
PASS: numbers.test: number->string: powers of radix: (13 -1 pos)
PASS: numbers.test: number->string: powers of radix: (13 -1 neg)
PASS: numbers.test: number->string: powers of radix: (13 0 pos)
PASS: numbers.test: number->string: powers of radix: (13 0 neg)
PASS: numbers.test: number->string: powers of radix: (13 1 pos)
PASS: numbers.test: number->string: powers of radix: (13 1 neg)
PASS: numbers.test: number->string: powers of radix: (13 2 pos)
PASS: numbers.test: number->string: powers of radix: (13 2 neg)
PASS: numbers.test: number->string: powers of radix: (13 3 pos)
PASS: numbers.test: number->string: powers of radix: (13 3 neg)
PASS: numbers.test: number->string: powers of radix: (13 4 pos)
PASS: numbers.test: number->string: powers of radix: (13 4 neg)
PASS: numbers.test: number->string: powers of radix: (13 5 pos)
PASS: numbers.test: number->string: powers of radix: (13 5 neg)
PASS: numbers.test: number->string: powers of radix: (13 6 pos)
PASS: numbers.test: number->string: powers of radix: (13 6 neg)
PASS: numbers.test: number->string: powers of radix: (13 7 pos)
PASS: numbers.test: number->string: powers of radix: (13 7 neg)
PASS: numbers.test: number->string: powers of radix: (13 8 pos)
PASS: numbers.test: number->string: powers of radix: (13 8 neg)
PASS: numbers.test: number->string: powers of radix: (13 9 pos)
PASS: numbers.test: number->string: powers of radix: (13 9 neg)
PASS: numbers.test: number->string: powers of radix: (13 10 pos)
PASS: numbers.test: number->string: powers of radix: (13 10 neg)
PASS: numbers.test: number->string: powers of radix: (13 11 pos)
PASS: numbers.test: number->string: powers of radix: (13 11 neg)
PASS: numbers.test: number->string: powers of radix: (13 12 pos)
PASS: numbers.test: number->string: powers of radix: (13 12 neg)
PASS: numbers.test: number->string: powers of radix: (13 13 pos)
PASS: numbers.test: number->string: powers of radix: (13 13 neg)
PASS: numbers.test: number->string: powers of radix: (13 14 pos)
PASS: numbers.test: number->string: powers of radix: (13 14 neg)
PASS: numbers.test: number->string: powers of radix: (13 15 pos)
PASS: numbers.test: number->string: powers of radix: (13 15 neg)
PASS: numbers.test: number->string: powers of radix: (13 16 pos)
PASS: numbers.test: number->string: powers of radix: (13 16 neg)
PASS: numbers.test: number->string: powers of radix: (13 17 pos)
PASS: numbers.test: number->string: powers of radix: (13 17 neg)
PASS: numbers.test: number->string: powers of radix: (13 18 pos)
PASS: numbers.test: number->string: powers of radix: (13 18 neg)
PASS: numbers.test: number->string: powers of radix: (13 19 pos)
PASS: numbers.test: number->string: powers of radix: (13 19 neg)
PASS: numbers.test: number->string: powers of radix: (13 20 pos)
PASS: numbers.test: number->string: powers of radix: (13 20 neg)
PASS: numbers.test: number->string: powers of radix: (14 -20 pos)
PASS: numbers.test: number->string: powers of radix: (14 -20 neg)
PASS: numbers.test: number->string: powers of radix: (14 -19 pos)
PASS: numbers.test: number->string: powers of radix: (14 -19 neg)
PASS: numbers.test: number->string: powers of radix: (14 -18 pos)
PASS: numbers.test: number->string: powers of radix: (14 -18 neg)
PASS: numbers.test: number->string: powers of radix: (14 -17 pos)
PASS: numbers.test: number->string: powers of radix: (14 -17 neg)
PASS: numbers.test: number->string: powers of radix: (14 -16 pos)
PASS: numbers.test: number->string: powers of radix: (14 -16 neg)
PASS: numbers.test: number->string: powers of radix: (14 -15 pos)
PASS: numbers.test: number->string: powers of radix: (14 -15 neg)
PASS: numbers.test: number->string: powers of radix: (14 -14 pos)
PASS: numbers.test: number->string: powers of radix: (14 -14 neg)
PASS: numbers.test: number->string: powers of radix: (14 -13 pos)
PASS: numbers.test: number->string: powers of radix: (14 -13 neg)
PASS: numbers.test: number->string: powers of radix: (14 -12 pos)
PASS: numbers.test: number->string: powers of radix: (14 -12 neg)
PASS: numbers.test: number->string: powers of radix: (14 -11 pos)
PASS: numbers.test: number->string: powers of radix: (14 -11 neg)
PASS: numbers.test: number->string: powers of radix: (14 -10 pos)
PASS: numbers.test: number->string: powers of radix: (14 -10 neg)
PASS: numbers.test: number->string: powers of radix: (14 -9 pos)
PASS: numbers.test: number->string: powers of radix: (14 -9 neg)
PASS: numbers.test: number->string: powers of radix: (14 -8 pos)
PASS: numbers.test: number->string: powers of radix: (14 -8 neg)
PASS: numbers.test: number->string: powers of radix: (14 -7 pos)
PASS: numbers.test: number->string: powers of radix: (14 -7 neg)
PASS: numbers.test: number->string: powers of radix: (14 -6 pos)
PASS: numbers.test: number->string: powers of radix: (14 -6 neg)
PASS: numbers.test: number->string: powers of radix: (14 -5 pos)
PASS: numbers.test: number->string: powers of radix: (14 -5 neg)
PASS: numbers.test: number->string: powers of radix: (14 -4 pos)
PASS: numbers.test: number->string: powers of radix: (14 -4 neg)
PASS: numbers.test: number->string: powers of radix: (14 -3 pos)
PASS: numbers.test: number->string: powers of radix: (14 -3 neg)
PASS: numbers.test: number->string: powers of radix: (14 -2 pos)
PASS: numbers.test: number->string: powers of radix: (14 -2 neg)
PASS: numbers.test: number->string: powers of radix: (14 -1 pos)
PASS: numbers.test: number->string: powers of radix: (14 -1 neg)
PASS: numbers.test: number->string: powers of radix: (14 0 pos)
PASS: numbers.test: number->string: powers of radix: (14 0 neg)
PASS: numbers.test: number->string: powers of radix: (14 1 pos)
PASS: numbers.test: number->string: powers of radix: (14 1 neg)
PASS: numbers.test: number->string: powers of radix: (14 2 pos)
PASS: numbers.test: number->string: powers of radix: (14 2 neg)
PASS: numbers.test: number->string: powers of radix: (14 3 pos)
PASS: numbers.test: number->string: powers of radix: (14 3 neg)
PASS: numbers.test: number->string: powers of radix: (14 4 pos)
PASS: numbers.test: number->string: powers of radix: (14 4 neg)
PASS: numbers.test: number->string: powers of radix: (14 5 pos)
PASS: numbers.test: number->string: powers of radix: (14 5 neg)
PASS: numbers.test: number->string: powers of radix: (14 6 pos)
PASS: numbers.test: number->string: powers of radix: (14 6 neg)
PASS: numbers.test: number->string: powers of radix: (14 7 pos)
PASS: numbers.test: number->string: powers of radix: (14 7 neg)
PASS: numbers.test: number->string: powers of radix: (14 8 pos)
PASS: numbers.test: number->string: powers of radix: (14 8 neg)
PASS: numbers.test: number->string: powers of radix: (14 9 pos)
PASS: numbers.test: number->string: powers of radix: (14 9 neg)
PASS: numbers.test: number->string: powers of radix: (14 10 pos)
PASS: numbers.test: number->string: powers of radix: (14 10 neg)
PASS: numbers.test: number->string: powers of radix: (14 11 pos)
PASS: numbers.test: number->string: powers of radix: (14 11 neg)
PASS: numbers.test: number->string: powers of radix: (14 12 pos)
PASS: numbers.test: number->string: powers of radix: (14 12 neg)
PASS: numbers.test: number->string: powers of radix: (14 13 pos)
PASS: numbers.test: number->string: powers of radix: (14 13 neg)
PASS: numbers.test: number->string: powers of radix: (14 14 pos)
PASS: numbers.test: number->string: powers of radix: (14 14 neg)
PASS: numbers.test: number->string: powers of radix: (14 15 pos)
PASS: numbers.test: number->string: powers of radix: (14 15 neg)
PASS: numbers.test: number->string: powers of radix: (14 16 pos)
PASS: numbers.test: number->string: powers of radix: (14 16 neg)
PASS: numbers.test: number->string: powers of radix: (14 17 pos)
PASS: numbers.test: number->string: powers of radix: (14 17 neg)
PASS: numbers.test: number->string: powers of radix: (14 18 pos)
PASS: numbers.test: number->string: powers of radix: (14 18 neg)
PASS: numbers.test: number->string: powers of radix: (14 19 pos)
PASS: numbers.test: number->string: powers of radix: (14 19 neg)
PASS: numbers.test: number->string: powers of radix: (14 20 pos)
PASS: numbers.test: number->string: powers of radix: (14 20 neg)
PASS: numbers.test: number->string: powers of radix: (15 -20 pos)
PASS: numbers.test: number->string: powers of radix: (15 -20 neg)
PASS: numbers.test: number->string: powers of radix: (15 -19 pos)
PASS: numbers.test: number->string: powers of radix: (15 -19 neg)
PASS: numbers.test: number->string: powers of radix: (15 -18 pos)
PASS: numbers.test: number->string: powers of radix: (15 -18 neg)
PASS: numbers.test: number->string: powers of radix: (15 -17 pos)
PASS: numbers.test: number->string: powers of radix: (15 -17 neg)
PASS: numbers.test: number->string: powers of radix: (15 -16 pos)
PASS: numbers.test: number->string: powers of radix: (15 -16 neg)
PASS: numbers.test: number->string: powers of radix: (15 -15 pos)
PASS: numbers.test: number->string: powers of radix: (15 -15 neg)
PASS: numbers.test: number->string: powers of radix: (15 -14 pos)
PASS: numbers.test: number->string: powers of radix: (15 -14 neg)
PASS: numbers.test: number->string: powers of radix: (15 -13 pos)
PASS: numbers.test: number->string: powers of radix: (15 -13 neg)
PASS: numbers.test: number->string: powers of radix: (15 -12 pos)
PASS: numbers.test: number->string: powers of radix: (15 -12 neg)
PASS: numbers.test: number->string: powers of radix: (15 -11 pos)
PASS: numbers.test: number->string: powers of radix: (15 -11 neg)
PASS: numbers.test: number->string: powers of radix: (15 -10 pos)
PASS: numbers.test: number->string: powers of radix: (15 -10 neg)
PASS: numbers.test: number->string: powers of radix: (15 -9 pos)
PASS: numbers.test: number->string: powers of radix: (15 -9 neg)
PASS: numbers.test: number->string: powers of radix: (15 -8 pos)
PASS: numbers.test: number->string: powers of radix: (15 -8 neg)
PASS: numbers.test: number->string: powers of radix: (15 -7 pos)
PASS: numbers.test: number->string: powers of radix: (15 -7 neg)
PASS: numbers.test: number->string: powers of radix: (15 -6 pos)
PASS: numbers.test: number->string: powers of radix: (15 -6 neg)
PASS: numbers.test: number->string: powers of radix: (15 -5 pos)
PASS: numbers.test: number->string: powers of radix: (15 -5 neg)
PASS: numbers.test: number->string: powers of radix: (15 -4 pos)
PASS: numbers.test: number->string: powers of radix: (15 -4 neg)
PASS: numbers.test: number->string: powers of radix: (15 -3 pos)
PASS: numbers.test: number->string: powers of radix: (15 -3 neg)
PASS: numbers.test: number->string: powers of radix: (15 -2 pos)
PASS: numbers.test: number->string: powers of radix: (15 -2 neg)
PASS: numbers.test: number->string: powers of radix: (15 -1 pos)
PASS: numbers.test: number->string: powers of radix: (15 -1 neg)
PASS: numbers.test: number->string: powers of radix: (15 0 pos)
PASS: numbers.test: number->string: powers of radix: (15 0 neg)
PASS: numbers.test: number->string: powers of radix: (15 1 pos)
PASS: numbers.test: number->string: powers of radix: (15 1 neg)
PASS: numbers.test: number->string: powers of radix: (15 2 pos)
PASS: numbers.test: number->string: powers of radix: (15 2 neg)
PASS: numbers.test: number->string: powers of radix: (15 3 pos)
PASS: numbers.test: number->string: powers of radix: (15 3 neg)
PASS: numbers.test: number->string: powers of radix: (15 4 pos)
PASS: numbers.test: number->string: powers of radix: (15 4 neg)
PASS: numbers.test: number->string: powers of radix: (15 5 pos)
PASS: numbers.test: number->string: powers of radix: (15 5 neg)
PASS: numbers.test: number->string: powers of radix: (15 6 pos)
PASS: numbers.test: number->string: powers of radix: (15 6 neg)
PASS: numbers.test: number->string: powers of radix: (15 7 pos)
PASS: numbers.test: number->string: powers of radix: (15 7 neg)
PASS: numbers.test: number->string: powers of radix: (15 8 pos)
PASS: numbers.test: number->string: powers of radix: (15 8 neg)
PASS: numbers.test: number->string: powers of radix: (15 9 pos)
PASS: numbers.test: number->string: powers of radix: (15 9 neg)
PASS: numbers.test: number->string: powers of radix: (15 10 pos)
PASS: numbers.test: number->string: powers of radix: (15 10 neg)
PASS: numbers.test: number->string: powers of radix: (15 11 pos)
PASS: numbers.test: number->string: powers of radix: (15 11 neg)
PASS: numbers.test: number->string: powers of radix: (15 12 pos)
PASS: numbers.test: number->string: powers of radix: (15 12 neg)
PASS: numbers.test: number->string: powers of radix: (15 13 pos)
PASS: numbers.test: number->string: powers of radix: (15 13 neg)
PASS: numbers.test: number->string: powers of radix: (15 14 pos)
PASS: numbers.test: number->string: powers of radix: (15 14 neg)
PASS: numbers.test: number->string: powers of radix: (15 15 pos)
PASS: numbers.test: number->string: powers of radix: (15 15 neg)
PASS: numbers.test: number->string: powers of radix: (15 16 pos)
PASS: numbers.test: number->string: powers of radix: (15 16 neg)
PASS: numbers.test: number->string: powers of radix: (15 17 pos)
PASS: numbers.test: number->string: powers of radix: (15 17 neg)
PASS: numbers.test: number->string: powers of radix: (15 18 pos)
PASS: numbers.test: number->string: powers of radix: (15 18 neg)
PASS: numbers.test: number->string: powers of radix: (15 19 pos)
PASS: numbers.test: number->string: powers of radix: (15 19 neg)
PASS: numbers.test: number->string: powers of radix: (15 20 pos)
PASS: numbers.test: number->string: powers of radix: (15 20 neg)
PASS: numbers.test: number->string: powers of radix: (16 -20 pos)
PASS: numbers.test: number->string: powers of radix: (16 -20 neg)
PASS: numbers.test: number->string: powers of radix: (16 -19 pos)
PASS: numbers.test: number->string: powers of radix: (16 -19 neg)
PASS: numbers.test: number->string: powers of radix: (16 -18 pos)
PASS: numbers.test: number->string: powers of radix: (16 -18 neg)
PASS: numbers.test: number->string: powers of radix: (16 -17 pos)
PASS: numbers.test: number->string: powers of radix: (16 -17 neg)
PASS: numbers.test: number->string: powers of radix: (16 -16 pos)
PASS: numbers.test: number->string: powers of radix: (16 -16 neg)
PASS: numbers.test: number->string: powers of radix: (16 -15 pos)
PASS: numbers.test: number->string: powers of radix: (16 -15 neg)
PASS: numbers.test: number->string: powers of radix: (16 -14 pos)
PASS: numbers.test: number->string: powers of radix: (16 -14 neg)
PASS: numbers.test: number->string: powers of radix: (16 -13 pos)
PASS: numbers.test: number->string: powers of radix: (16 -13 neg)
PASS: numbers.test: number->string: powers of radix: (16 -12 pos)
PASS: numbers.test: number->string: powers of radix: (16 -12 neg)
PASS: numbers.test: number->string: powers of radix: (16 -11 pos)
PASS: numbers.test: number->string: powers of radix: (16 -11 neg)
PASS: numbers.test: number->string: powers of radix: (16 -10 pos)
PASS: numbers.test: number->string: powers of radix: (16 -10 neg)
PASS: numbers.test: number->string: powers of radix: (16 -9 pos)
PASS: numbers.test: number->string: powers of radix: (16 -9 neg)
PASS: numbers.test: number->string: powers of radix: (16 -8 pos)
PASS: numbers.test: number->string: powers of radix: (16 -8 neg)
PASS: numbers.test: number->string: powers of radix: (16 -7 pos)
PASS: numbers.test: number->string: powers of radix: (16 -7 neg)
PASS: numbers.test: number->string: powers of radix: (16 -6 pos)
PASS: numbers.test: number->string: powers of radix: (16 -6 neg)
PASS: numbers.test: number->string: powers of radix: (16 -5 pos)
PASS: numbers.test: number->string: powers of radix: (16 -5 neg)
PASS: numbers.test: number->string: powers of radix: (16 -4 pos)
PASS: numbers.test: number->string: powers of radix: (16 -4 neg)
PASS: numbers.test: number->string: powers of radix: (16 -3 pos)
PASS: numbers.test: number->string: powers of radix: (16 -3 neg)
PASS: numbers.test: number->string: powers of radix: (16 -2 pos)
PASS: numbers.test: number->string: powers of radix: (16 -2 neg)
PASS: numbers.test: number->string: powers of radix: (16 -1 pos)
PASS: numbers.test: number->string: powers of radix: (16 -1 neg)
PASS: numbers.test: number->string: powers of radix: (16 0 pos)
PASS: numbers.test: number->string: powers of radix: (16 0 neg)
PASS: numbers.test: number->string: powers of radix: (16 1 pos)
PASS: numbers.test: number->string: powers of radix: (16 1 neg)
PASS: numbers.test: number->string: powers of radix: (16 2 pos)
PASS: numbers.test: number->string: powers of radix: (16 2 neg)
PASS: numbers.test: number->string: powers of radix: (16 3 pos)
PASS: numbers.test: number->string: powers of radix: (16 3 neg)
PASS: numbers.test: number->string: powers of radix: (16 4 pos)
PASS: numbers.test: number->string: powers of radix: (16 4 neg)
PASS: numbers.test: number->string: powers of radix: (16 5 pos)
PASS: numbers.test: number->string: powers of radix: (16 5 neg)
PASS: numbers.test: number->string: powers of radix: (16 6 pos)
PASS: numbers.test: number->string: powers of radix: (16 6 neg)
PASS: numbers.test: number->string: powers of radix: (16 7 pos)
PASS: numbers.test: number->string: powers of radix: (16 7 neg)
PASS: numbers.test: number->string: powers of radix: (16 8 pos)
PASS: numbers.test: number->string: powers of radix: (16 8 neg)
PASS: numbers.test: number->string: powers of radix: (16 9 pos)
PASS: numbers.test: number->string: powers of radix: (16 9 neg)
PASS: numbers.test: number->string: powers of radix: (16 10 pos)
PASS: numbers.test: number->string: powers of radix: (16 10 neg)
PASS: numbers.test: number->string: powers of radix: (16 11 pos)
PASS: numbers.test: number->string: powers of radix: (16 11 neg)
PASS: numbers.test: number->string: powers of radix: (16 12 pos)
PASS: numbers.test: number->string: powers of radix: (16 12 neg)
PASS: numbers.test: number->string: powers of radix: (16 13 pos)
PASS: numbers.test: number->string: powers of radix: (16 13 neg)
PASS: numbers.test: number->string: powers of radix: (16 14 pos)
PASS: numbers.test: number->string: powers of radix: (16 14 neg)
PASS: numbers.test: number->string: powers of radix: (16 15 pos)
PASS: numbers.test: number->string: powers of radix: (16 15 neg)
PASS: numbers.test: number->string: powers of radix: (16 16 pos)
PASS: numbers.test: number->string: powers of radix: (16 16 neg)
PASS: numbers.test: number->string: powers of radix: (16 17 pos)
PASS: numbers.test: number->string: powers of radix: (16 17 neg)
PASS: numbers.test: number->string: powers of radix: (16 18 pos)
PASS: numbers.test: number->string: powers of radix: (16 18 neg)
PASS: numbers.test: number->string: powers of radix: (16 19 pos)
PASS: numbers.test: number->string: powers of radix: (16 19 neg)
PASS: numbers.test: number->string: powers of radix: (16 20 pos)
PASS: numbers.test: number->string: powers of radix: (16 20 neg)
PASS: numbers.test: number->string: powers of radix: (17 -20 pos)
PASS: numbers.test: number->string: powers of radix: (17 -20 neg)
PASS: numbers.test: number->string: powers of radix: (17 -19 pos)
PASS: numbers.test: number->string: powers of radix: (17 -19 neg)
PASS: numbers.test: number->string: powers of radix: (17 -18 pos)
PASS: numbers.test: number->string: powers of radix: (17 -18 neg)
PASS: numbers.test: number->string: powers of radix: (17 -17 pos)
PASS: numbers.test: number->string: powers of radix: (17 -17 neg)
PASS: numbers.test: number->string: powers of radix: (17 -16 pos)
PASS: numbers.test: number->string: powers of radix: (17 -16 neg)
PASS: numbers.test: number->string: powers of radix: (17 -15 pos)
PASS: numbers.test: number->string: powers of radix: (17 -15 neg)
PASS: numbers.test: number->string: powers of radix: (17 -14 pos)
PASS: numbers.test: number->string: powers of radix: (17 -14 neg)
PASS: numbers.test: number->string: powers of radix: (17 -13 pos)
PASS: numbers.test: number->string: powers of radix: (17 -13 neg)
PASS: numbers.test: number->string: powers of radix: (17 -12 pos)
PASS: numbers.test: number->string: powers of radix: (17 -12 neg)
PASS: numbers.test: number->string: powers of radix: (17 -11 pos)
PASS: numbers.test: number->string: powers of radix: (17 -11 neg)
PASS: numbers.test: number->string: powers of radix: (17 -10 pos)
PASS: numbers.test: number->string: powers of radix: (17 -10 neg)
PASS: numbers.test: number->string: powers of radix: (17 -9 pos)
PASS: numbers.test: number->string: powers of radix: (17 -9 neg)
PASS: numbers.test: number->string: powers of radix: (17 -8 pos)
PASS: numbers.test: number->string: powers of radix: (17 -8 neg)
PASS: numbers.test: number->string: powers of radix: (17 -7 pos)
PASS: numbers.test: number->string: powers of radix: (17 -7 neg)
PASS: numbers.test: number->string: powers of radix: (17 -6 pos)
PASS: numbers.test: number->string: powers of radix: (17 -6 neg)
PASS: numbers.test: number->string: powers of radix: (17 -5 pos)
PASS: numbers.test: number->string: powers of radix: (17 -5 neg)
PASS: numbers.test: number->string: powers of radix: (17 -4 pos)
PASS: numbers.test: number->string: powers of radix: (17 -4 neg)
PASS: numbers.test: number->string: powers of radix: (17 -3 pos)
PASS: numbers.test: number->string: powers of radix: (17 -3 neg)
PASS: numbers.test: number->string: powers of radix: (17 -2 pos)
PASS: numbers.test: number->string: powers of radix: (17 -2 neg)
PASS: numbers.test: number->string: powers of radix: (17 -1 pos)
PASS: numbers.test: number->string: powers of radix: (17 -1 neg)
PASS: numbers.test: number->string: powers of radix: (17 0 pos)
PASS: numbers.test: number->string: powers of radix: (17 0 neg)
PASS: numbers.test: number->string: powers of radix: (17 1 pos)
PASS: numbers.test: number->string: powers of radix: (17 1 neg)
PASS: numbers.test: number->string: powers of radix: (17 2 pos)
PASS: numbers.test: number->string: powers of radix: (17 2 neg)
PASS: numbers.test: number->string: powers of radix: (17 3 pos)
PASS: numbers.test: number->string: powers of radix: (17 3 neg)
PASS: numbers.test: number->string: powers of radix: (17 4 pos)
PASS: numbers.test: number->string: powers of radix: (17 4 neg)
PASS: numbers.test: number->string: powers of radix: (17 5 pos)
PASS: numbers.test: number->string: powers of radix: (17 5 neg)
PASS: numbers.test: number->string: powers of radix: (17 6 pos)
PASS: numbers.test: number->string: powers of radix: (17 6 neg)
PASS: numbers.test: number->string: powers of radix: (17 7 pos)
PASS: numbers.test: number->string: powers of radix: (17 7 neg)
PASS: numbers.test: number->string: powers of radix: (17 8 pos)
PASS: numbers.test: number->string: powers of radix: (17 8 neg)
PASS: numbers.test: number->string: powers of radix: (17 9 pos)
PASS: numbers.test: number->string: powers of radix: (17 9 neg)
PASS: numbers.test: number->string: powers of radix: (17 10 pos)
PASS: numbers.test: number->string: powers of radix: (17 10 neg)
PASS: numbers.test: number->string: powers of radix: (17 11 pos)
PASS: numbers.test: number->string: powers of radix: (17 11 neg)
PASS: numbers.test: number->string: powers of radix: (17 12 pos)
PASS: numbers.test: number->string: powers of radix: (17 12 neg)
PASS: numbers.test: number->string: powers of radix: (17 13 pos)
PASS: numbers.test: number->string: powers of radix: (17 13 neg)
PASS: numbers.test: number->string: powers of radix: (17 14 pos)
PASS: numbers.test: number->string: powers of radix: (17 14 neg)
PASS: numbers.test: number->string: powers of radix: (17 15 pos)
PASS: numbers.test: number->string: powers of radix: (17 15 neg)
PASS: numbers.test: number->string: powers of radix: (17 16 pos)
PASS: numbers.test: number->string: powers of radix: (17 16 neg)
PASS: numbers.test: number->string: powers of radix: (17 17 pos)
PASS: numbers.test: number->string: powers of radix: (17 17 neg)
PASS: numbers.test: number->string: powers of radix: (17 18 pos)
PASS: numbers.test: number->string: powers of radix: (17 18 neg)
PASS: numbers.test: number->string: powers of radix: (17 19 pos)
PASS: numbers.test: number->string: powers of radix: (17 19 neg)
PASS: numbers.test: number->string: powers of radix: (17 20 pos)
PASS: numbers.test: number->string: powers of radix: (17 20 neg)
PASS: numbers.test: number->string: powers of radix: (18 -20 pos)
PASS: numbers.test: number->string: powers of radix: (18 -20 neg)
PASS: numbers.test: number->string: powers of radix: (18 -19 pos)
PASS: numbers.test: number->string: powers of radix: (18 -19 neg)
PASS: numbers.test: number->string: powers of radix: (18 -18 pos)
PASS: numbers.test: number->string: powers of radix: (18 -18 neg)
PASS: numbers.test: number->string: powers of radix: (18 -17 pos)
PASS: numbers.test: number->string: powers of radix: (18 -17 neg)
PASS: numbers.test: number->string: powers of radix: (18 -16 pos)
PASS: numbers.test: number->string: powers of radix: (18 -16 neg)
PASS: numbers.test: number->string: powers of radix: (18 -15 pos)
PASS: numbers.test: number->string: powers of radix: (18 -15 neg)
PASS: numbers.test: number->string: powers of radix: (18 -14 pos)
PASS: numbers.test: number->string: powers of radix: (18 -14 neg)
PASS: numbers.test: number->string: powers of radix: (18 -13 pos)
PASS: numbers.test: number->string: powers of radix: (18 -13 neg)
PASS: numbers.test: number->string: powers of radix: (18 -12 pos)
PASS: numbers.test: number->string: powers of radix: (18 -12 neg)
PASS: numbers.test: number->string: powers of radix: (18 -11 pos)
PASS: numbers.test: number->string: powers of radix: (18 -11 neg)
PASS: numbers.test: number->string: powers of radix: (18 -10 pos)
PASS: numbers.test: number->string: powers of radix: (18 -10 neg)
PASS: numbers.test: number->string: powers of radix: (18 -9 pos)
PASS: numbers.test: number->string: powers of radix: (18 -9 neg)
PASS: numbers.test: number->string: powers of radix: (18 -8 pos)
PASS: numbers.test: number->string: powers of radix: (18 -8 neg)
PASS: numbers.test: number->string: powers of radix: (18 -7 pos)
PASS: numbers.test: number->string: powers of radix: (18 -7 neg)
PASS: numbers.test: number->string: powers of radix: (18 -6 pos)
PASS: numbers.test: number->string: powers of radix: (18 -6 neg)
PASS: numbers.test: number->string: powers of radix: (18 -5 pos)
PASS: numbers.test: number->string: powers of radix: (18 -5 neg)
PASS: numbers.test: number->string: powers of radix: (18 -4 pos)
PASS: numbers.test: number->string: powers of radix: (18 -4 neg)
PASS: numbers.test: number->string: powers of radix: (18 -3 pos)
PASS: numbers.test: number->string: powers of radix: (18 -3 neg)
PASS: numbers.test: number->string: powers of radix: (18 -2 pos)
PASS: numbers.test: number->string: powers of radix: (18 -2 neg)
PASS: numbers.test: number->string: powers of radix: (18 -1 pos)
PASS: numbers.test: number->string: powers of radix: (18 -1 neg)
PASS: numbers.test: number->string: powers of radix: (18 0 pos)
PASS: numbers.test: number->string: powers of radix: (18 0 neg)
PASS: numbers.test: number->string: powers of radix: (18 1 pos)
PASS: numbers.test: number->string: powers of radix: (18 1 neg)
PASS: numbers.test: number->string: powers of radix: (18 2 pos)
PASS: numbers.test: number->string: powers of radix: (18 2 neg)
PASS: numbers.test: number->string: powers of radix: (18 3 pos)
PASS: numbers.test: number->string: powers of radix: (18 3 neg)
PASS: numbers.test: number->string: powers of radix: (18 4 pos)
PASS: numbers.test: number->string: powers of radix: (18 4 neg)
PASS: numbers.test: number->string: powers of radix: (18 5 pos)
PASS: numbers.test: number->string: powers of radix: (18 5 neg)
PASS: numbers.test: number->string: powers of radix: (18 6 pos)
PASS: numbers.test: number->string: powers of radix: (18 6 neg)
PASS: numbers.test: number->string: powers of radix: (18 7 pos)
PASS: numbers.test: number->string: powers of radix: (18 7 neg)
PASS: numbers.test: number->string: powers of radix: (18 8 pos)
PASS: numbers.test: number->string: powers of radix: (18 8 neg)
PASS: numbers.test: number->string: powers of radix: (18 9 pos)
PASS: numbers.test: number->string: powers of radix: (18 9 neg)
PASS: numbers.test: number->string: powers of radix: (18 10 pos)
PASS: numbers.test: number->string: powers of radix: (18 10 neg)
PASS: numbers.test: number->string: powers of radix: (18 11 pos)
PASS: numbers.test: number->string: powers of radix: (18 11 neg)
PASS: numbers.test: number->string: powers of radix: (18 12 pos)
PASS: numbers.test: number->string: powers of radix: (18 12 neg)
PASS: numbers.test: number->string: powers of radix: (18 13 pos)
PASS: numbers.test: number->string: powers of radix: (18 13 neg)
PASS: numbers.test: number->string: powers of radix: (18 14 pos)
PASS: numbers.test: number->string: powers of radix: (18 14 neg)
PASS: numbers.test: number->string: powers of radix: (18 15 pos)
PASS: numbers.test: number->string: powers of radix: (18 15 neg)
PASS: numbers.test: number->string: powers of radix: (18 16 pos)
PASS: numbers.test: number->string: powers of radix: (18 16 neg)
PASS: numbers.test: number->string: powers of radix: (18 17 pos)
PASS: numbers.test: number->string: powers of radix: (18 17 neg)
PASS: numbers.test: number->string: powers of radix: (18 18 pos)
PASS: numbers.test: number->string: powers of radix: (18 18 neg)
PASS: numbers.test: number->string: powers of radix: (18 19 pos)
PASS: numbers.test: number->string: powers of radix: (18 19 neg)
PASS: numbers.test: number->string: powers of radix: (18 20 pos)
PASS: numbers.test: number->string: powers of radix: (18 20 neg)
PASS: numbers.test: number->string: powers of radix: (19 -20 pos)
PASS: numbers.test: number->string: powers of radix: (19 -20 neg)
PASS: numbers.test: number->string: powers of radix: (19 -19 pos)
PASS: numbers.test: number->string: powers of radix: (19 -19 neg)
PASS: numbers.test: number->string: powers of radix: (19 -18 pos)
PASS: numbers.test: number->string: powers of radix: (19 -18 neg)
PASS: numbers.test: number->string: powers of radix: (19 -17 pos)
PASS: numbers.test: number->string: powers of radix: (19 -17 neg)
PASS: numbers.test: number->string: powers of radix: (19 -16 pos)
PASS: numbers.test: number->string: powers of radix: (19 -16 neg)
PASS: numbers.test: number->string: powers of radix: (19 -15 pos)
PASS: numbers.test: number->string: powers of radix: (19 -15 neg)
PASS: numbers.test: number->string: powers of radix: (19 -14 pos)
PASS: numbers.test: number->string: powers of radix: (19 -14 neg)
PASS: numbers.test: number->string: powers of radix: (19 -13 pos)
PASS: numbers.test: number->string: powers of radix: (19 -13 neg)
PASS: numbers.test: number->string: powers of radix: (19 -12 pos)
PASS: numbers.test: number->string: powers of radix: (19 -12 neg)
PASS: numbers.test: number->string: powers of radix: (19 -11 pos)
PASS: numbers.test: number->string: powers of radix: (19 -11 neg)
PASS: numbers.test: number->string: powers of radix: (19 -10 pos)
PASS: numbers.test: number->string: powers of radix: (19 -10 neg)
PASS: numbers.test: number->string: powers of radix: (19 -9 pos)
PASS: numbers.test: number->string: powers of radix: (19 -9 neg)
PASS: numbers.test: number->string: powers of radix: (19 -8 pos)
PASS: numbers.test: number->string: powers of radix: (19 -8 neg)
PASS: numbers.test: number->string: powers of radix: (19 -7 pos)
PASS: numbers.test: number->string: powers of radix: (19 -7 neg)
PASS: numbers.test: number->string: powers of radix: (19 -6 pos)
PASS: numbers.test: number->string: powers of radix: (19 -6 neg)
PASS: numbers.test: number->string: powers of radix: (19 -5 pos)
PASS: numbers.test: number->string: powers of radix: (19 -5 neg)
PASS: numbers.test: number->string: powers of radix: (19 -4 pos)
PASS: numbers.test: number->string: powers of radix: (19 -4 neg)
PASS: numbers.test: number->string: powers of radix: (19 -3 pos)
PASS: numbers.test: number->string: powers of radix: (19 -3 neg)
PASS: numbers.test: number->string: powers of radix: (19 -2 pos)
PASS: numbers.test: number->string: powers of radix: (19 -2 neg)
PASS: numbers.test: number->string: powers of radix: (19 -1 pos)
PASS: numbers.test: number->string: powers of radix: (19 -1 neg)
PASS: numbers.test: number->string: powers of radix: (19 0 pos)
PASS: numbers.test: number->string: powers of radix: (19 0 neg)
PASS: numbers.test: number->string: powers of radix: (19 1 pos)
PASS: numbers.test: number->string: powers of radix: (19 1 neg)
PASS: numbers.test: number->string: powers of radix: (19 2 pos)
PASS: numbers.test: number->string: powers of radix: (19 2 neg)
PASS: numbers.test: number->string: powers of radix: (19 3 pos)
PASS: numbers.test: number->string: powers of radix: (19 3 neg)
PASS: numbers.test: number->string: powers of radix: (19 4 pos)
PASS: numbers.test: number->string: powers of radix: (19 4 neg)
PASS: numbers.test: number->string: powers of radix: (19 5 pos)
PASS: numbers.test: number->string: powers of radix: (19 5 neg)
PASS: numbers.test: number->string: powers of radix: (19 6 pos)
PASS: numbers.test: number->string: powers of radix: (19 6 neg)
PASS: numbers.test: number->string: powers of radix: (19 7 pos)
PASS: numbers.test: number->string: powers of radix: (19 7 neg)
PASS: numbers.test: number->string: powers of radix: (19 8 pos)
PASS: numbers.test: number->string: powers of radix: (19 8 neg)
PASS: numbers.test: number->string: powers of radix: (19 9 pos)
PASS: numbers.test: number->string: powers of radix: (19 9 neg)
PASS: numbers.test: number->string: powers of radix: (19 10 pos)
PASS: numbers.test: number->string: powers of radix: (19 10 neg)
PASS: numbers.test: number->string: powers of radix: (19 11 pos)
PASS: numbers.test: number->string: powers of radix: (19 11 neg)
PASS: numbers.test: number->string: powers of radix: (19 12 pos)
PASS: numbers.test: number->string: powers of radix: (19 12 neg)
PASS: numbers.test: number->string: powers of radix: (19 13 pos)
PASS: numbers.test: number->string: powers of radix: (19 13 neg)
PASS: numbers.test: number->string: powers of radix: (19 14 pos)
PASS: numbers.test: number->string: powers of radix: (19 14 neg)
PASS: numbers.test: number->string: powers of radix: (19 15 pos)
PASS: numbers.test: number->string: powers of radix: (19 15 neg)
PASS: numbers.test: number->string: powers of radix: (19 16 pos)
PASS: numbers.test: number->string: powers of radix: (19 16 neg)
PASS: numbers.test: number->string: powers of radix: (19 17 pos)
PASS: numbers.test: number->string: powers of radix: (19 17 neg)
PASS: numbers.test: number->string: powers of radix: (19 18 pos)
PASS: numbers.test: number->string: powers of radix: (19 18 neg)
PASS: numbers.test: number->string: powers of radix: (19 19 pos)
PASS: numbers.test: number->string: powers of radix: (19 19 neg)
PASS: numbers.test: number->string: powers of radix: (19 20 pos)
PASS: numbers.test: number->string: powers of radix: (19 20 neg)
PASS: numbers.test: number->string: powers of radix: (20 -20 pos)
PASS: numbers.test: number->string: powers of radix: (20 -20 neg)
PASS: numbers.test: number->string: powers of radix: (20 -19 pos)
PASS: numbers.test: number->string: powers of radix: (20 -19 neg)
PASS: numbers.test: number->string: powers of radix: (20 -18 pos)
PASS: numbers.test: number->string: powers of radix: (20 -18 neg)
PASS: numbers.test: number->string: powers of radix: (20 -17 pos)
PASS: numbers.test: number->string: powers of radix: (20 -17 neg)
PASS: numbers.test: number->string: powers of radix: (20 -16 pos)
PASS: numbers.test: number->string: powers of radix: (20 -16 neg)
PASS: numbers.test: number->string: powers of radix: (20 -15 pos)
PASS: numbers.test: number->string: powers of radix: (20 -15 neg)
PASS: numbers.test: number->string: powers of radix: (20 -14 pos)
PASS: numbers.test: number->string: powers of radix: (20 -14 neg)
PASS: numbers.test: number->string: powers of radix: (20 -13 pos)
PASS: numbers.test: number->string: powers of radix: (20 -13 neg)
PASS: numbers.test: number->string: powers of radix: (20 -12 pos)
PASS: numbers.test: number->string: powers of radix: (20 -12 neg)
PASS: numbers.test: number->string: powers of radix: (20 -11 pos)
PASS: numbers.test: number->string: powers of radix: (20 -11 neg)
PASS: numbers.test: number->string: powers of radix: (20 -10 pos)
PASS: numbers.test: number->string: powers of radix: (20 -10 neg)
PASS: numbers.test: number->string: powers of radix: (20 -9 pos)
PASS: numbers.test: number->string: powers of radix: (20 -9 neg)
PASS: numbers.test: number->string: powers of radix: (20 -8 pos)
PASS: numbers.test: number->string: powers of radix: (20 -8 neg)
PASS: numbers.test: number->string: powers of radix: (20 -7 pos)
PASS: numbers.test: number->string: powers of radix: (20 -7 neg)
PASS: numbers.test: number->string: powers of radix: (20 -6 pos)
PASS: numbers.test: number->string: powers of radix: (20 -6 neg)
PASS: numbers.test: number->string: powers of radix: (20 -5 pos)
PASS: numbers.test: number->string: powers of radix: (20 -5 neg)
PASS: numbers.test: number->string: powers of radix: (20 -4 pos)
PASS: numbers.test: number->string: powers of radix: (20 -4 neg)
PASS: numbers.test: number->string: powers of radix: (20 -3 pos)
PASS: numbers.test: number->string: powers of radix: (20 -3 neg)
PASS: numbers.test: number->string: powers of radix: (20 -2 pos)
PASS: numbers.test: number->string: powers of radix: (20 -2 neg)
PASS: numbers.test: number->string: powers of radix: (20 -1 pos)
PASS: numbers.test: number->string: powers of radix: (20 -1 neg)
PASS: numbers.test: number->string: powers of radix: (20 0 pos)
PASS: numbers.test: number->string: powers of radix: (20 0 neg)
PASS: numbers.test: number->string: powers of radix: (20 1 pos)
PASS: numbers.test: number->string: powers of radix: (20 1 neg)
PASS: numbers.test: number->string: powers of radix: (20 2 pos)
PASS: numbers.test: number->string: powers of radix: (20 2 neg)
PASS: numbers.test: number->string: powers of radix: (20 3 pos)
PASS: numbers.test: number->string: powers of radix: (20 3 neg)
PASS: numbers.test: number->string: powers of radix: (20 4 pos)
PASS: numbers.test: number->string: powers of radix: (20 4 neg)
PASS: numbers.test: number->string: powers of radix: (20 5 pos)
PASS: numbers.test: number->string: powers of radix: (20 5 neg)
PASS: numbers.test: number->string: powers of radix: (20 6 pos)
PASS: numbers.test: number->string: powers of radix: (20 6 neg)
PASS: numbers.test: number->string: powers of radix: (20 7 pos)
PASS: numbers.test: number->string: powers of radix: (20 7 neg)
PASS: numbers.test: number->string: powers of radix: (20 8 pos)
PASS: numbers.test: number->string: powers of radix: (20 8 neg)
PASS: numbers.test: number->string: powers of radix: (20 9 pos)
PASS: numbers.test: number->string: powers of radix: (20 9 neg)
PASS: numbers.test: number->string: powers of radix: (20 10 pos)
PASS: numbers.test: number->string: powers of radix: (20 10 neg)
PASS: numbers.test: number->string: powers of radix: (20 11 pos)
PASS: numbers.test: number->string: powers of radix: (20 11 neg)
PASS: numbers.test: number->string: powers of radix: (20 12 pos)
PASS: numbers.test: number->string: powers of radix: (20 12 neg)
PASS: numbers.test: number->string: powers of radix: (20 13 pos)
PASS: numbers.test: number->string: powers of radix: (20 13 neg)
PASS: numbers.test: number->string: powers of radix: (20 14 pos)
PASS: numbers.test: number->string: powers of radix: (20 14 neg)
PASS: numbers.test: number->string: powers of radix: (20 15 pos)
PASS: numbers.test: number->string: powers of radix: (20 15 neg)
PASS: numbers.test: number->string: powers of radix: (20 16 pos)
PASS: numbers.test: number->string: powers of radix: (20 16 neg)
PASS: numbers.test: number->string: powers of radix: (20 17 pos)
PASS: numbers.test: number->string: powers of radix: (20 17 neg)
PASS: numbers.test: number->string: powers of radix: (20 18 pos)
PASS: numbers.test: number->string: powers of radix: (20 18 neg)
PASS: numbers.test: number->string: powers of radix: (20 19 pos)
PASS: numbers.test: number->string: powers of radix: (20 19 neg)
PASS: numbers.test: number->string: powers of radix: (20 20 pos)
PASS: numbers.test: number->string: powers of radix: (20 20 neg)
PASS: numbers.test: number->string: powers of radix: (21 -20 pos)
PASS: numbers.test: number->string: powers of radix: (21 -20 neg)
PASS: numbers.test: number->string: powers of radix: (21 -19 pos)
PASS: numbers.test: number->string: powers of radix: (21 -19 neg)
PASS: numbers.test: number->string: powers of radix: (21 -18 pos)
PASS: numbers.test: number->string: powers of radix: (21 -18 neg)
PASS: numbers.test: number->string: powers of radix: (21 -17 pos)
PASS: numbers.test: number->string: powers of radix: (21 -17 neg)
PASS: numbers.test: number->string: powers of radix: (21 -16 pos)
PASS: numbers.test: number->string: powers of radix: (21 -16 neg)
PASS: numbers.test: number->string: powers of radix: (21 -15 pos)
PASS: numbers.test: number->string: powers of radix: (21 -15 neg)
PASS: numbers.test: number->string: powers of radix: (21 -14 pos)
PASS: numbers.test: number->string: powers of radix: (21 -14 neg)
PASS: numbers.test: number->string: powers of radix: (21 -13 pos)
PASS: numbers.test: number->string: powers of radix: (21 -13 neg)
PASS: numbers.test: number->string: powers of radix: (21 -12 pos)
PASS: numbers.test: number->string: powers of radix: (21 -12 neg)
PASS: numbers.test: number->string: powers of radix: (21 -11 pos)
PASS: numbers.test: number->string: powers of radix: (21 -11 neg)
PASS: numbers.test: number->string: powers of radix: (21 -10 pos)
PASS: numbers.test: number->string: powers of radix: (21 -10 neg)
PASS: numbers.test: number->string: powers of radix: (21 -9 pos)
PASS: numbers.test: number->string: powers of radix: (21 -9 neg)
PASS: numbers.test: number->string: powers of radix: (21 -8 pos)
PASS: numbers.test: number->string: powers of radix: (21 -8 neg)
PASS: numbers.test: number->string: powers of radix: (21 -7 pos)
PASS: numbers.test: number->string: powers of radix: (21 -7 neg)
PASS: numbers.test: number->string: powers of radix: (21 -6 pos)
PASS: numbers.test: number->string: powers of radix: (21 -6 neg)
PASS: numbers.test: number->string: powers of radix: (21 -5 pos)
PASS: numbers.test: number->string: powers of radix: (21 -5 neg)
PASS: numbers.test: number->string: powers of radix: (21 -4 pos)
PASS: numbers.test: number->string: powers of radix: (21 -4 neg)
PASS: numbers.test: number->string: powers of radix: (21 -3 pos)
PASS: numbers.test: number->string: powers of radix: (21 -3 neg)
PASS: numbers.test: number->string: powers of radix: (21 -2 pos)
PASS: numbers.test: number->string: powers of radix: (21 -2 neg)
PASS: numbers.test: number->string: powers of radix: (21 -1 pos)
PASS: numbers.test: number->string: powers of radix: (21 -1 neg)
PASS: numbers.test: number->string: powers of radix: (21 0 pos)
PASS: numbers.test: number->string: powers of radix: (21 0 neg)
PASS: numbers.test: number->string: powers of radix: (21 1 pos)
PASS: numbers.test: number->string: powers of radix: (21 1 neg)
PASS: numbers.test: number->string: powers of radix: (21 2 pos)
PASS: numbers.test: number->string: powers of radix: (21 2 neg)
PASS: numbers.test: number->string: powers of radix: (21 3 pos)
PASS: numbers.test: number->string: powers of radix: (21 3 neg)
PASS: numbers.test: number->string: powers of radix: (21 4 pos)
PASS: numbers.test: number->string: powers of radix: (21 4 neg)
PASS: numbers.test: number->string: powers of radix: (21 5 pos)
PASS: numbers.test: number->string: powers of radix: (21 5 neg)
PASS: numbers.test: number->string: powers of radix: (21 6 pos)
PASS: numbers.test: number->string: powers of radix: (21 6 neg)
PASS: numbers.test: number->string: powers of radix: (21 7 pos)
PASS: numbers.test: number->string: powers of radix: (21 7 neg)
PASS: numbers.test: number->string: powers of radix: (21 8 pos)
PASS: numbers.test: number->string: powers of radix: (21 8 neg)
PASS: numbers.test: number->string: powers of radix: (21 9 pos)
PASS: numbers.test: number->string: powers of radix: (21 9 neg)
PASS: numbers.test: number->string: powers of radix: (21 10 pos)
PASS: numbers.test: number->string: powers of radix: (21 10 neg)
PASS: numbers.test: number->string: powers of radix: (21 11 pos)
PASS: numbers.test: number->string: powers of radix: (21 11 neg)
PASS: numbers.test: number->string: powers of radix: (21 12 pos)
PASS: numbers.test: number->string: powers of radix: (21 12 neg)
PASS: numbers.test: number->string: powers of radix: (21 13 pos)
PASS: numbers.test: number->string: powers of radix: (21 13 neg)
PASS: numbers.test: number->string: powers of radix: (21 14 pos)
PASS: numbers.test: number->string: powers of radix: (21 14 neg)
PASS: numbers.test: number->string: powers of radix: (21 15 pos)
PASS: numbers.test: number->string: powers of radix: (21 15 neg)
PASS: numbers.test: number->string: powers of radix: (21 16 pos)
PASS: numbers.test: number->string: powers of radix: (21 16 neg)
PASS: numbers.test: number->string: powers of radix: (21 17 pos)
PASS: numbers.test: number->string: powers of radix: (21 17 neg)
PASS: numbers.test: number->string: powers of radix: (21 18 pos)
PASS: numbers.test: number->string: powers of radix: (21 18 neg)
PASS: numbers.test: number->string: powers of radix: (21 19 pos)
PASS: numbers.test: number->string: powers of radix: (21 19 neg)
PASS: numbers.test: number->string: powers of radix: (21 20 pos)
PASS: numbers.test: number->string: powers of radix: (21 20 neg)
PASS: numbers.test: number->string: powers of radix: (22 -20 pos)
PASS: numbers.test: number->string: powers of radix: (22 -20 neg)
PASS: numbers.test: number->string: powers of radix: (22 -19 pos)
PASS: numbers.test: number->string: powers of radix: (22 -19 neg)
PASS: numbers.test: number->string: powers of radix: (22 -18 pos)
PASS: numbers.test: number->string: powers of radix: (22 -18 neg)
PASS: numbers.test: number->string: powers of radix: (22 -17 pos)
PASS: numbers.test: number->string: powers of radix: (22 -17 neg)
PASS: numbers.test: number->string: powers of radix: (22 -16 pos)
PASS: numbers.test: number->string: powers of radix: (22 -16 neg)
PASS: numbers.test: number->string: powers of radix: (22 -15 pos)
PASS: numbers.test: number->string: powers of radix: (22 -15 neg)
PASS: numbers.test: number->string: powers of radix: (22 -14 pos)
PASS: numbers.test: number->string: powers of radix: (22 -14 neg)
PASS: numbers.test: number->string: powers of radix: (22 -13 pos)
PASS: numbers.test: number->string: powers of radix: (22 -13 neg)
PASS: numbers.test: number->string: powers of radix: (22 -12 pos)
PASS: numbers.test: number->string: powers of radix: (22 -12 neg)
PASS: numbers.test: number->string: powers of radix: (22 -11 pos)
PASS: numbers.test: number->string: powers of radix: (22 -11 neg)
PASS: numbers.test: number->string: powers of radix: (22 -10 pos)
PASS: numbers.test: number->string: powers of radix: (22 -10 neg)
PASS: numbers.test: number->string: powers of radix: (22 -9 pos)
PASS: numbers.test: number->string: powers of radix: (22 -9 neg)
PASS: numbers.test: number->string: powers of radix: (22 -8 pos)
PASS: numbers.test: number->string: powers of radix: (22 -8 neg)
PASS: numbers.test: number->string: powers of radix: (22 -7 pos)
PASS: numbers.test: number->string: powers of radix: (22 -7 neg)
PASS: numbers.test: number->string: powers of radix: (22 -6 pos)
PASS: numbers.test: number->string: powers of radix: (22 -6 neg)
PASS: numbers.test: number->string: powers of radix: (22 -5 pos)
PASS: numbers.test: number->string: powers of radix: (22 -5 neg)
PASS: numbers.test: number->string: powers of radix: (22 -4 pos)
PASS: numbers.test: number->string: powers of radix: (22 -4 neg)
PASS: numbers.test: number->string: powers of radix: (22 -3 pos)
PASS: numbers.test: number->string: powers of radix: (22 -3 neg)
PASS: numbers.test: number->string: powers of radix: (22 -2 pos)
PASS: numbers.test: number->string: powers of radix: (22 -2 neg)
PASS: numbers.test: number->string: powers of radix: (22 -1 pos)
PASS: numbers.test: number->string: powers of radix: (22 -1 neg)
PASS: numbers.test: number->string: powers of radix: (22 0 pos)
PASS: numbers.test: number->string: powers of radix: (22 0 neg)
PASS: numbers.test: number->string: powers of radix: (22 1 pos)
PASS: numbers.test: number->string: powers of radix: (22 1 neg)
PASS: numbers.test: number->string: powers of radix: (22 2 pos)
PASS: numbers.test: number->string: powers of radix: (22 2 neg)
PASS: numbers.test: number->string: powers of radix: (22 3 pos)
PASS: numbers.test: number->string: powers of radix: (22 3 neg)
PASS: numbers.test: number->string: powers of radix: (22 4 pos)
PASS: numbers.test: number->string: powers of radix: (22 4 neg)
PASS: numbers.test: number->string: powers of radix: (22 5 pos)
PASS: numbers.test: number->string: powers of radix: (22 5 neg)
PASS: numbers.test: number->string: powers of radix: (22 6 pos)
PASS: numbers.test: number->string: powers of radix: (22 6 neg)
PASS: numbers.test: number->string: powers of radix: (22 7 pos)
PASS: numbers.test: number->string: powers of radix: (22 7 neg)
PASS: numbers.test: number->string: powers of radix: (22 8 pos)
PASS: numbers.test: number->string: powers of radix: (22 8 neg)
PASS: numbers.test: number->string: powers of radix: (22 9 pos)
PASS: numbers.test: number->string: powers of radix: (22 9 neg)
PASS: numbers.test: number->string: powers of radix: (22 10 pos)
PASS: numbers.test: number->string: powers of radix: (22 10 neg)
PASS: numbers.test: number->string: powers of radix: (22 11 pos)
PASS: numbers.test: number->string: powers of radix: (22 11 neg)
PASS: numbers.test: number->string: powers of radix: (22 12 pos)
PASS: numbers.test: number->string: powers of radix: (22 12 neg)
PASS: numbers.test: number->string: powers of radix: (22 13 pos)
PASS: numbers.test: number->string: powers of radix: (22 13 neg)
PASS: numbers.test: number->string: powers of radix: (22 14 pos)
PASS: numbers.test: number->string: powers of radix: (22 14 neg)
PASS: numbers.test: number->string: powers of radix: (22 15 pos)
PASS: numbers.test: number->string: powers of radix: (22 15 neg)
PASS: numbers.test: number->string: powers of radix: (22 16 pos)
PASS: numbers.test: number->string: powers of radix: (22 16 neg)
PASS: numbers.test: number->string: powers of radix: (22 17 pos)
PASS: numbers.test: number->string: powers of radix: (22 17 neg)
PASS: numbers.test: number->string: powers of radix: (22 18 pos)
PASS: numbers.test: number->string: powers of radix: (22 18 neg)
PASS: numbers.test: number->string: powers of radix: (22 19 pos)
PASS: numbers.test: number->string: powers of radix: (22 19 neg)
PASS: numbers.test: number->string: powers of radix: (22 20 pos)
PASS: numbers.test: number->string: powers of radix: (22 20 neg)
PASS: numbers.test: number->string: powers of radix: (23 -20 pos)
PASS: numbers.test: number->string: powers of radix: (23 -20 neg)
PASS: numbers.test: number->string: powers of radix: (23 -19 pos)
PASS: numbers.test: number->string: powers of radix: (23 -19 neg)
PASS: numbers.test: number->string: powers of radix: (23 -18 pos)
PASS: numbers.test: number->string: powers of radix: (23 -18 neg)
PASS: numbers.test: number->string: powers of radix: (23 -17 pos)
PASS: numbers.test: number->string: powers of radix: (23 -17 neg)
PASS: numbers.test: number->string: powers of radix: (23 -16 pos)
PASS: numbers.test: number->string: powers of radix: (23 -16 neg)
PASS: numbers.test: number->string: powers of radix: (23 -15 pos)
PASS: numbers.test: number->string: powers of radix: (23 -15 neg)
PASS: numbers.test: number->string: powers of radix: (23 -14 pos)
PASS: numbers.test: number->string: powers of radix: (23 -14 neg)
PASS: numbers.test: number->string: powers of radix: (23 -13 pos)
PASS: numbers.test: number->string: powers of radix: (23 -13 neg)
PASS: numbers.test: number->string: powers of radix: (23 -12 pos)
PASS: numbers.test: number->string: powers of radix: (23 -12 neg)
PASS: numbers.test: number->string: powers of radix: (23 -11 pos)
PASS: numbers.test: number->string: powers of radix: (23 -11 neg)
PASS: numbers.test: number->string: powers of radix: (23 -10 pos)
PASS: numbers.test: number->string: powers of radix: (23 -10 neg)
PASS: numbers.test: number->string: powers of radix: (23 -9 pos)
PASS: numbers.test: number->string: powers of radix: (23 -9 neg)
PASS: numbers.test: number->string: powers of radix: (23 -8 pos)
PASS: numbers.test: number->string: powers of radix: (23 -8 neg)
PASS: numbers.test: number->string: powers of radix: (23 -7 pos)
PASS: numbers.test: number->string: powers of radix: (23 -7 neg)
PASS: numbers.test: number->string: powers of radix: (23 -6 pos)
PASS: numbers.test: number->string: powers of radix: (23 -6 neg)
PASS: numbers.test: number->string: powers of radix: (23 -5 pos)
PASS: numbers.test: number->string: powers of radix: (23 -5 neg)
PASS: numbers.test: number->string: powers of radix: (23 -4 pos)
PASS: numbers.test: number->string: powers of radix: (23 -4 neg)
PASS: numbers.test: number->string: powers of radix: (23 -3 pos)
PASS: numbers.test: number->string: powers of radix: (23 -3 neg)
PASS: numbers.test: number->string: powers of radix: (23 -2 pos)
PASS: numbers.test: number->string: powers of radix: (23 -2 neg)
PASS: numbers.test: number->string: powers of radix: (23 -1 pos)
PASS: numbers.test: number->string: powers of radix: (23 -1 neg)
PASS: numbers.test: number->string: powers of radix: (23 0 pos)
PASS: numbers.test: number->string: powers of radix: (23 0 neg)
PASS: numbers.test: number->string: powers of radix: (23 1 pos)
PASS: numbers.test: number->string: powers of radix: (23 1 neg)
PASS: numbers.test: number->string: powers of radix: (23 2 pos)
PASS: numbers.test: number->string: powers of radix: (23 2 neg)
PASS: numbers.test: number->string: powers of radix: (23 3 pos)
PASS: numbers.test: number->string: powers of radix: (23 3 neg)
PASS: numbers.test: number->string: powers of radix: (23 4 pos)
PASS: numbers.test: number->string: powers of radix: (23 4 neg)
PASS: numbers.test: number->string: powers of radix: (23 5 pos)
PASS: numbers.test: number->string: powers of radix: (23 5 neg)
PASS: numbers.test: number->string: powers of radix: (23 6 pos)
PASS: numbers.test: number->string: powers of radix: (23 6 neg)
PASS: numbers.test: number->string: powers of radix: (23 7 pos)
PASS: numbers.test: number->string: powers of radix: (23 7 neg)
PASS: numbers.test: number->string: powers of radix: (23 8 pos)
PASS: numbers.test: number->string: powers of radix: (23 8 neg)
PASS: numbers.test: number->string: powers of radix: (23 9 pos)
PASS: numbers.test: number->string: powers of radix: (23 9 neg)
PASS: numbers.test: number->string: powers of radix: (23 10 pos)
PASS: numbers.test: number->string: powers of radix: (23 10 neg)
PASS: numbers.test: number->string: powers of radix: (23 11 pos)
PASS: numbers.test: number->string: powers of radix: (23 11 neg)
PASS: numbers.test: number->string: powers of radix: (23 12 pos)
PASS: numbers.test: number->string: powers of radix: (23 12 neg)
PASS: numbers.test: number->string: powers of radix: (23 13 pos)
PASS: numbers.test: number->string: powers of radix: (23 13 neg)
PASS: numbers.test: number->string: powers of radix: (23 14 pos)
PASS: numbers.test: number->string: powers of radix: (23 14 neg)
PASS: numbers.test: number->string: powers of radix: (23 15 pos)
PASS: numbers.test: number->string: powers of radix: (23 15 neg)
PASS: numbers.test: number->string: powers of radix: (23 16 pos)
PASS: numbers.test: number->string: powers of radix: (23 16 neg)
PASS: numbers.test: number->string: powers of radix: (23 17 pos)
PASS: numbers.test: number->string: powers of radix: (23 17 neg)
PASS: numbers.test: number->string: powers of radix: (23 18 pos)
PASS: numbers.test: number->string: powers of radix: (23 18 neg)
PASS: numbers.test: number->string: powers of radix: (23 19 pos)
PASS: numbers.test: number->string: powers of radix: (23 19 neg)
PASS: numbers.test: number->string: powers of radix: (23 20 pos)
PASS: numbers.test: number->string: powers of radix: (23 20 neg)
PASS: numbers.test: number->string: powers of radix: (24 -20 pos)
PASS: numbers.test: number->string: powers of radix: (24 -20 neg)
PASS: numbers.test: number->string: powers of radix: (24 -19 pos)
PASS: numbers.test: number->string: powers of radix: (24 -19 neg)
PASS: numbers.test: number->string: powers of radix: (24 -18 pos)
PASS: numbers.test: number->string: powers of radix: (24 -18 neg)
PASS: numbers.test: number->string: powers of radix: (24 -17 pos)
PASS: numbers.test: number->string: powers of radix: (24 -17 neg)
PASS: numbers.test: number->string: powers of radix: (24 -16 pos)
PASS: numbers.test: number->string: powers of radix: (24 -16 neg)
PASS: numbers.test: number->string: powers of radix: (24 -15 pos)
PASS: numbers.test: number->string: powers of radix: (24 -15 neg)
PASS: numbers.test: number->string: powers of radix: (24 -14 pos)
PASS: numbers.test: number->string: powers of radix: (24 -14 neg)
PASS: numbers.test: number->string: powers of radix: (24 -13 pos)
PASS: numbers.test: number->string: powers of radix: (24 -13 neg)
PASS: numbers.test: number->string: powers of radix: (24 -12 pos)
PASS: numbers.test: number->string: powers of radix: (24 -12 neg)
PASS: numbers.test: number->string: powers of radix: (24 -11 pos)
PASS: numbers.test: number->string: powers of radix: (24 -11 neg)
PASS: numbers.test: number->string: powers of radix: (24 -10 pos)
PASS: numbers.test: number->string: powers of radix: (24 -10 neg)
PASS: numbers.test: number->string: powers of radix: (24 -9 pos)
PASS: numbers.test: number->string: powers of radix: (24 -9 neg)
PASS: numbers.test: number->string: powers of radix: (24 -8 pos)
PASS: numbers.test: number->string: powers of radix: (24 -8 neg)
PASS: numbers.test: number->string: powers of radix: (24 -7 pos)
PASS: numbers.test: number->string: powers of radix: (24 -7 neg)
PASS: numbers.test: number->string: powers of radix: (24 -6 pos)
PASS: numbers.test: number->string: powers of radix: (24 -6 neg)
PASS: numbers.test: number->string: powers of radix: (24 -5 pos)
PASS: numbers.test: number->string: powers of radix: (24 -5 neg)
PASS: numbers.test: number->string: powers of radix: (24 -4 pos)
PASS: numbers.test: number->string: powers of radix: (24 -4 neg)
PASS: numbers.test: number->string: powers of radix: (24 -3 pos)
PASS: numbers.test: number->string: powers of radix: (24 -3 neg)
PASS: numbers.test: number->string: powers of radix: (24 -2 pos)
PASS: numbers.test: number->string: powers of radix: (24 -2 neg)
PASS: numbers.test: number->string: powers of radix: (24 -1 pos)
PASS: numbers.test: number->string: powers of radix: (24 -1 neg)
PASS: numbers.test: number->string: powers of radix: (24 0 pos)
PASS: numbers.test: number->string: powers of radix: (24 0 neg)
PASS: numbers.test: number->string: powers of radix: (24 1 pos)
PASS: numbers.test: number->string: powers of radix: (24 1 neg)
PASS: numbers.test: number->string: powers of radix: (24 2 pos)
PASS: numbers.test: number->string: powers of radix: (24 2 neg)
PASS: numbers.test: number->string: powers of radix: (24 3 pos)
PASS: numbers.test: number->string: powers of radix: (24 3 neg)
PASS: numbers.test: number->string: powers of radix: (24 4 pos)
PASS: numbers.test: number->string: powers of radix: (24 4 neg)
PASS: numbers.test: number->string: powers of radix: (24 5 pos)
PASS: numbers.test: number->string: powers of radix: (24 5 neg)
PASS: numbers.test: number->string: powers of radix: (24 6 pos)
PASS: numbers.test: number->string: powers of radix: (24 6 neg)
PASS: numbers.test: number->string: powers of radix: (24 7 pos)
PASS: numbers.test: number->string: powers of radix: (24 7 neg)
PASS: numbers.test: number->string: powers of radix: (24 8 pos)
PASS: numbers.test: number->string: powers of radix: (24 8 neg)
PASS: numbers.test: number->string: powers of radix: (24 9 pos)
PASS: numbers.test: number->string: powers of radix: (24 9 neg)
PASS: numbers.test: number->string: powers of radix: (24 10 pos)
PASS: numbers.test: number->string: powers of radix: (24 10 neg)
PASS: numbers.test: number->string: powers of radix: (24 11 pos)
PASS: numbers.test: number->string: powers of radix: (24 11 neg)
PASS: numbers.test: number->string: powers of radix: (24 12 pos)
PASS: numbers.test: number->string: powers of radix: (24 12 neg)
PASS: numbers.test: number->string: powers of radix: (24 13 pos)
PASS: numbers.test: number->string: powers of radix: (24 13 neg)
PASS: numbers.test: number->string: powers of radix: (24 14 pos)
PASS: numbers.test: number->string: powers of radix: (24 14 neg)
PASS: numbers.test: number->string: powers of radix: (24 15 pos)
PASS: numbers.test: number->string: powers of radix: (24 15 neg)
PASS: numbers.test: number->string: powers of radix: (24 16 pos)
PASS: numbers.test: number->string: powers of radix: (24 16 neg)
PASS: numbers.test: number->string: powers of radix: (24 17 pos)
PASS: numbers.test: number->string: powers of radix: (24 17 neg)
PASS: numbers.test: number->string: powers of radix: (24 18 pos)
PASS: numbers.test: number->string: powers of radix: (24 18 neg)
PASS: numbers.test: number->string: powers of radix: (24 19 pos)
PASS: numbers.test: number->string: powers of radix: (24 19 neg)
PASS: numbers.test: number->string: powers of radix: (24 20 pos)
PASS: numbers.test: number->string: powers of radix: (24 20 neg)
PASS: numbers.test: number->string: powers of radix: (25 -20 pos)
PASS: numbers.test: number->string: powers of radix: (25 -20 neg)
PASS: numbers.test: number->string: powers of radix: (25 -19 pos)
PASS: numbers.test: number->string: powers of radix: (25 -19 neg)
PASS: numbers.test: number->string: powers of radix: (25 -18 pos)
PASS: numbers.test: number->string: powers of radix: (25 -18 neg)
PASS: numbers.test: number->string: powers of radix: (25 -17 pos)
PASS: numbers.test: number->string: powers of radix: (25 -17 neg)
PASS: numbers.test: number->string: powers of radix: (25 -16 pos)
PASS: numbers.test: number->string: powers of radix: (25 -16 neg)
PASS: numbers.test: number->string: powers of radix: (25 -15 pos)
PASS: numbers.test: number->string: powers of radix: (25 -15 neg)
PASS: numbers.test: number->string: powers of radix: (25 -14 pos)
PASS: numbers.test: number->string: powers of radix: (25 -14 neg)
PASS: numbers.test: number->string: powers of radix: (25 -13 pos)
PASS: numbers.test: number->string: powers of radix: (25 -13 neg)
PASS: numbers.test: number->string: powers of radix: (25 -12 pos)
PASS: numbers.test: number->string: powers of radix: (25 -12 neg)
PASS: numbers.test: number->string: powers of radix: (25 -11 pos)
PASS: numbers.test: number->string: powers of radix: (25 -11 neg)
PASS: numbers.test: number->string: powers of radix: (25 -10 pos)
PASS: numbers.test: number->string: powers of radix: (25 -10 neg)
PASS: numbers.test: number->string: powers of radix: (25 -9 pos)
PASS: numbers.test: number->string: powers of radix: (25 -9 neg)
PASS: numbers.test: number->string: powers of radix: (25 -8 pos)
PASS: numbers.test: number->string: powers of radix: (25 -8 neg)
PASS: numbers.test: number->string: powers of radix: (25 -7 pos)
PASS: numbers.test: number->string: powers of radix: (25 -7 neg)
PASS: numbers.test: number->string: powers of radix: (25 -6 pos)
PASS: numbers.test: number->string: powers of radix: (25 -6 neg)
PASS: numbers.test: number->string: powers of radix: (25 -5 pos)
PASS: numbers.test: number->string: powers of radix: (25 -5 neg)
PASS: numbers.test: number->string: powers of radix: (25 -4 pos)
PASS: numbers.test: number->string: powers of radix: (25 -4 neg)
PASS: numbers.test: number->string: powers of radix: (25 -3 pos)
PASS: numbers.test: number->string: powers of radix: (25 -3 neg)
PASS: numbers.test: number->string: powers of radix: (25 -2 pos)
PASS: numbers.test: number->string: powers of radix: (25 -2 neg)
PASS: numbers.test: number->string: powers of radix: (25 -1 pos)
PASS: numbers.test: number->string: powers of radix: (25 -1 neg)
PASS: numbers.test: number->string: powers of radix: (25 0 pos)
PASS: numbers.test: number->string: powers of radix: (25 0 neg)
PASS: numbers.test: number->string: powers of radix: (25 1 pos)
PASS: numbers.test: number->string: powers of radix: (25 1 neg)
PASS: numbers.test: number->string: powers of radix: (25 2 pos)
PASS: numbers.test: number->string: powers of radix: (25 2 neg)
PASS: numbers.test: number->string: powers of radix: (25 3 pos)
PASS: numbers.test: number->string: powers of radix: (25 3 neg)
PASS: numbers.test: number->string: powers of radix: (25 4 pos)
PASS: numbers.test: number->string: powers of radix: (25 4 neg)
PASS: numbers.test: number->string: powers of radix: (25 5 pos)
PASS: numbers.test: number->string: powers of radix: (25 5 neg)
PASS: numbers.test: number->string: powers of radix: (25 6 pos)
PASS: numbers.test: number->string: powers of radix: (25 6 neg)
PASS: numbers.test: number->string: powers of radix: (25 7 pos)
PASS: numbers.test: number->string: powers of radix: (25 7 neg)
PASS: numbers.test: number->string: powers of radix: (25 8 pos)
PASS: numbers.test: number->string: powers of radix: (25 8 neg)
PASS: numbers.test: number->string: powers of radix: (25 9 pos)
PASS: numbers.test: number->string: powers of radix: (25 9 neg)
PASS: numbers.test: number->string: powers of radix: (25 10 pos)
PASS: numbers.test: number->string: powers of radix: (25 10 neg)
PASS: numbers.test: number->string: powers of radix: (25 11 pos)
PASS: numbers.test: number->string: powers of radix: (25 11 neg)
PASS: numbers.test: number->string: powers of radix: (25 12 pos)
PASS: numbers.test: number->string: powers of radix: (25 12 neg)
PASS: numbers.test: number->string: powers of radix: (25 13 pos)
PASS: numbers.test: number->string: powers of radix: (25 13 neg)
PASS: numbers.test: number->string: powers of radix: (25 14 pos)
PASS: numbers.test: number->string: powers of radix: (25 14 neg)
PASS: numbers.test: number->string: powers of radix: (25 15 pos)
PASS: numbers.test: number->string: powers of radix: (25 15 neg)
PASS: numbers.test: number->string: powers of radix: (25 16 pos)
PASS: numbers.test: number->string: powers of radix: (25 16 neg)
PASS: numbers.test: number->string: powers of radix: (25 17 pos)
PASS: numbers.test: number->string: powers of radix: (25 17 neg)
PASS: numbers.test: number->string: powers of radix: (25 18 pos)
PASS: numbers.test: number->string: powers of radix: (25 18 neg)
PASS: numbers.test: number->string: powers of radix: (25 19 pos)
PASS: numbers.test: number->string: powers of radix: (25 19 neg)
PASS: numbers.test: number->string: powers of radix: (25 20 pos)
PASS: numbers.test: number->string: powers of radix: (25 20 neg)
PASS: numbers.test: number->string: powers of radix: (26 -20 pos)
PASS: numbers.test: number->string: powers of radix: (26 -20 neg)
PASS: numbers.test: number->string: powers of radix: (26 -19 pos)
PASS: numbers.test: number->string: powers of radix: (26 -19 neg)
PASS: numbers.test: number->string: powers of radix: (26 -18 pos)
PASS: numbers.test: number->string: powers of radix: (26 -18 neg)
PASS: numbers.test: number->string: powers of radix: (26 -17 pos)
PASS: numbers.test: number->string: powers of radix: (26 -17 neg)
PASS: numbers.test: number->string: powers of radix: (26 -16 pos)
PASS: numbers.test: number->string: powers of radix: (26 -16 neg)
PASS: numbers.test: number->string: powers of radix: (26 -15 pos)
PASS: numbers.test: number->string: powers of radix: (26 -15 neg)
PASS: numbers.test: number->string: powers of radix: (26 -14 pos)
PASS: numbers.test: number->string: powers of radix: (26 -14 neg)
PASS: numbers.test: number->string: powers of radix: (26 -13 pos)
PASS: numbers.test: number->string: powers of radix: (26 -13 neg)
PASS: numbers.test: number->string: powers of radix: (26 -12 pos)
PASS: numbers.test: number->string: powers of radix: (26 -12 neg)
PASS: numbers.test: number->string: powers of radix: (26 -11 pos)
PASS: numbers.test: number->string: powers of radix: (26 -11 neg)
PASS: numbers.test: number->string: powers of radix: (26 -10 pos)
PASS: numbers.test: number->string: powers of radix: (26 -10 neg)
PASS: numbers.test: number->string: powers of radix: (26 -9 pos)
PASS: numbers.test: number->string: powers of radix: (26 -9 neg)
PASS: numbers.test: number->string: powers of radix: (26 -8 pos)
PASS: numbers.test: number->string: powers of radix: (26 -8 neg)
PASS: numbers.test: number->string: powers of radix: (26 -7 pos)
PASS: numbers.test: number->string: powers of radix: (26 -7 neg)
PASS: numbers.test: number->string: powers of radix: (26 -6 pos)
PASS: numbers.test: number->string: powers of radix: (26 -6 neg)
PASS: numbers.test: number->string: powers of radix: (26 -5 pos)
PASS: numbers.test: number->string: powers of radix: (26 -5 neg)
PASS: numbers.test: number->string: powers of radix: (26 -4 pos)
PASS: numbers.test: number->string: powers of radix: (26 -4 neg)
PASS: numbers.test: number->string: powers of radix: (26 -3 pos)
PASS: numbers.test: number->string: powers of radix: (26 -3 neg)
PASS: numbers.test: number->string: powers of radix: (26 -2 pos)
PASS: numbers.test: number->string: powers of radix: (26 -2 neg)
PASS: numbers.test: number->string: powers of radix: (26 -1 pos)
PASS: numbers.test: number->string: powers of radix: (26 -1 neg)
PASS: numbers.test: number->string: powers of radix: (26 0 pos)
PASS: numbers.test: number->string: powers of radix: (26 0 neg)
PASS: numbers.test: number->string: powers of radix: (26 1 pos)
PASS: numbers.test: number->string: powers of radix: (26 1 neg)
PASS: numbers.test: number->string: powers of radix: (26 2 pos)
PASS: numbers.test: number->string: powers of radix: (26 2 neg)
PASS: numbers.test: number->string: powers of radix: (26 3 pos)
PASS: numbers.test: number->string: powers of radix: (26 3 neg)
PASS: numbers.test: number->string: powers of radix: (26 4 pos)
PASS: numbers.test: number->string: powers of radix: (26 4 neg)
PASS: numbers.test: number->string: powers of radix: (26 5 pos)
PASS: numbers.test: number->string: powers of radix: (26 5 neg)
PASS: numbers.test: number->string: powers of radix: (26 6 pos)
PASS: numbers.test: number->string: powers of radix: (26 6 neg)
PASS: numbers.test: number->string: powers of radix: (26 7 pos)
PASS: numbers.test: number->string: powers of radix: (26 7 neg)
PASS: numbers.test: number->string: powers of radix: (26 8 pos)
PASS: numbers.test: number->string: powers of radix: (26 8 neg)
PASS: numbers.test: number->string: powers of radix: (26 9 pos)
PASS: numbers.test: number->string: powers of radix: (26 9 neg)
PASS: numbers.test: number->string: powers of radix: (26 10 pos)
PASS: numbers.test: number->string: powers of radix: (26 10 neg)
PASS: numbers.test: number->string: powers of radix: (26 11 pos)
PASS: numbers.test: number->string: powers of radix: (26 11 neg)
PASS: numbers.test: number->string: powers of radix: (26 12 pos)
PASS: numbers.test: number->string: powers of radix: (26 12 neg)
PASS: numbers.test: number->string: powers of radix: (26 13 pos)
PASS: numbers.test: number->string: powers of radix: (26 13 neg)
PASS: numbers.test: number->string: powers of radix: (26 14 pos)
PASS: numbers.test: number->string: powers of radix: (26 14 neg)
PASS: numbers.test: number->string: powers of radix: (26 15 pos)
PASS: numbers.test: number->string: powers of radix: (26 15 neg)
PASS: numbers.test: number->string: powers of radix: (26 16 pos)
PASS: numbers.test: number->string: powers of radix: (26 16 neg)
PASS: numbers.test: number->string: powers of radix: (26 17 pos)
PASS: numbers.test: number->string: powers of radix: (26 17 neg)
PASS: numbers.test: number->string: powers of radix: (26 18 pos)
PASS: numbers.test: number->string: powers of radix: (26 18 neg)
PASS: numbers.test: number->string: powers of radix: (26 19 pos)
PASS: numbers.test: number->string: powers of radix: (26 19 neg)
PASS: numbers.test: number->string: powers of radix: (26 20 pos)
PASS: numbers.test: number->string: powers of radix: (26 20 neg)
PASS: numbers.test: number->string: powers of radix: (27 -20 pos)
PASS: numbers.test: number->string: powers of radix: (27 -20 neg)
PASS: numbers.test: number->string: powers of radix: (27 -19 pos)
PASS: numbers.test: number->string: powers of radix: (27 -19 neg)
PASS: numbers.test: number->string: powers of radix: (27 -18 pos)
PASS: numbers.test: number->string: powers of radix: (27 -18 neg)
PASS: numbers.test: number->string: powers of radix: (27 -17 pos)
PASS: numbers.test: number->string: powers of radix: (27 -17 neg)
PASS: numbers.test: number->string: powers of radix: (27 -16 pos)
PASS: numbers.test: number->string: powers of radix: (27 -16 neg)
PASS: numbers.test: number->string: powers of radix: (27 -15 pos)
PASS: numbers.test: number->string: powers of radix: (27 -15 neg)
PASS: numbers.test: number->string: powers of radix: (27 -14 pos)
PASS: numbers.test: number->string: powers of radix: (27 -14 neg)
PASS: numbers.test: number->string: powers of radix: (27 -13 pos)
PASS: numbers.test: number->string: powers of radix: (27 -13 neg)
PASS: numbers.test: number->string: powers of radix: (27 -12 pos)
PASS: numbers.test: number->string: powers of radix: (27 -12 neg)
PASS: numbers.test: number->string: powers of radix: (27 -11 pos)
PASS: numbers.test: number->string: powers of radix: (27 -11 neg)
PASS: numbers.test: number->string: powers of radix: (27 -10 pos)
PASS: numbers.test: number->string: powers of radix: (27 -10 neg)
PASS: numbers.test: number->string: powers of radix: (27 -9 pos)
PASS: numbers.test: number->string: powers of radix: (27 -9 neg)
PASS: numbers.test: number->string: powers of radix: (27 -8 pos)
PASS: numbers.test: number->string: powers of radix: (27 -8 neg)
PASS: numbers.test: number->string: powers of radix: (27 -7 pos)
PASS: numbers.test: number->string: powers of radix: (27 -7 neg)
PASS: numbers.test: number->string: powers of radix: (27 -6 pos)
PASS: numbers.test: number->string: powers of radix: (27 -6 neg)
PASS: numbers.test: number->string: powers of radix: (27 -5 pos)
PASS: numbers.test: number->string: powers of radix: (27 -5 neg)
PASS: numbers.test: number->string: powers of radix: (27 -4 pos)
PASS: numbers.test: number->string: powers of radix: (27 -4 neg)
PASS: numbers.test: number->string: powers of radix: (27 -3 pos)
PASS: numbers.test: number->string: powers of radix: (27 -3 neg)
PASS: numbers.test: number->string: powers of radix: (27 -2 pos)
PASS: numbers.test: number->string: powers of radix: (27 -2 neg)
PASS: numbers.test: number->string: powers of radix: (27 -1 pos)
PASS: numbers.test: number->string: powers of radix: (27 -1 neg)
PASS: numbers.test: number->string: powers of radix: (27 0 pos)
PASS: numbers.test: number->string: powers of radix: (27 0 neg)
PASS: numbers.test: number->string: powers of radix: (27 1 pos)
PASS: numbers.test: number->string: powers of radix: (27 1 neg)
PASS: numbers.test: number->string: powers of radix: (27 2 pos)
PASS: numbers.test: number->string: powers of radix: (27 2 neg)
PASS: numbers.test: number->string: powers of radix: (27 3 pos)
PASS: numbers.test: number->string: powers of radix: (27 3 neg)
PASS: numbers.test: number->string: powers of radix: (27 4 pos)
PASS: numbers.test: number->string: powers of radix: (27 4 neg)
PASS: numbers.test: number->string: powers of radix: (27 5 pos)
PASS: numbers.test: number->string: powers of radix: (27 5 neg)
PASS: numbers.test: number->string: powers of radix: (27 6 pos)
PASS: numbers.test: number->string: powers of radix: (27 6 neg)
PASS: numbers.test: number->string: powers of radix: (27 7 pos)
PASS: numbers.test: number->string: powers of radix: (27 7 neg)
PASS: numbers.test: number->string: powers of radix: (27 8 pos)
PASS: numbers.test: number->string: powers of radix: (27 8 neg)
PASS: numbers.test: number->string: powers of radix: (27 9 pos)
PASS: numbers.test: number->string: powers of radix: (27 9 neg)
PASS: numbers.test: number->string: powers of radix: (27 10 pos)
PASS: numbers.test: number->string: powers of radix: (27 10 neg)
PASS: numbers.test: number->string: powers of radix: (27 11 pos)
PASS: numbers.test: number->string: powers of radix: (27 11 neg)
PASS: numbers.test: number->string: powers of radix: (27 12 pos)
PASS: numbers.test: number->string: powers of radix: (27 12 neg)
PASS: numbers.test: number->string: powers of radix: (27 13 pos)
PASS: numbers.test: number->string: powers of radix: (27 13 neg)
PASS: numbers.test: number->string: powers of radix: (27 14 pos)
PASS: numbers.test: number->string: powers of radix: (27 14 neg)
PASS: numbers.test: number->string: powers of radix: (27 15 pos)
PASS: numbers.test: number->string: powers of radix: (27 15 neg)
PASS: numbers.test: number->string: powers of radix: (27 16 pos)
PASS: numbers.test: number->string: powers of radix: (27 16 neg)
PASS: numbers.test: number->string: powers of radix: (27 17 pos)
PASS: numbers.test: number->string: powers of radix: (27 17 neg)
PASS: numbers.test: number->string: powers of radix: (27 18 pos)
PASS: numbers.test: number->string: powers of radix: (27 18 neg)
PASS: numbers.test: number->string: powers of radix: (27 19 pos)
PASS: numbers.test: number->string: powers of radix: (27 19 neg)
PASS: numbers.test: number->string: powers of radix: (27 20 pos)
PASS: numbers.test: number->string: powers of radix: (27 20 neg)
PASS: numbers.test: number->string: powers of radix: (28 -20 pos)
PASS: numbers.test: number->string: powers of radix: (28 -20 neg)
PASS: numbers.test: number->string: powers of radix: (28 -19 pos)
PASS: numbers.test: number->string: powers of radix: (28 -19 neg)
PASS: numbers.test: number->string: powers of radix: (28 -18 pos)
PASS: numbers.test: number->string: powers of radix: (28 -18 neg)
PASS: numbers.test: number->string: powers of radix: (28 -17 pos)
PASS: numbers.test: number->string: powers of radix: (28 -17 neg)
PASS: numbers.test: number->string: powers of radix: (28 -16 pos)
PASS: numbers.test: number->string: powers of radix: (28 -16 neg)
PASS: numbers.test: number->string: powers of radix: (28 -15 pos)
PASS: numbers.test: number->string: powers of radix: (28 -15 neg)
PASS: numbers.test: number->string: powers of radix: (28 -14 pos)
PASS: numbers.test: number->string: powers of radix: (28 -14 neg)
PASS: numbers.test: number->string: powers of radix: (28 -13 pos)
PASS: numbers.test: number->string: powers of radix: (28 -13 neg)
PASS: numbers.test: number->string: powers of radix: (28 -12 pos)
PASS: numbers.test: number->string: powers of radix: (28 -12 neg)
PASS: numbers.test: number->string: powers of radix: (28 -11 pos)
PASS: numbers.test: number->string: powers of radix: (28 -11 neg)
PASS: numbers.test: number->string: powers of radix: (28 -10 pos)
PASS: numbers.test: number->string: powers of radix: (28 -10 neg)
PASS: numbers.test: number->string: powers of radix: (28 -9 pos)
PASS: numbers.test: number->string: powers of radix: (28 -9 neg)
PASS: numbers.test: number->string: powers of radix: (28 -8 pos)
PASS: numbers.test: number->string: powers of radix: (28 -8 neg)
PASS: numbers.test: number->string: powers of radix: (28 -7 pos)
PASS: numbers.test: number->string: powers of radix: (28 -7 neg)
PASS: numbers.test: number->string: powers of radix: (28 -6 pos)
PASS: numbers.test: number->string: powers of radix: (28 -6 neg)
PASS: numbers.test: number->string: powers of radix: (28 -5 pos)
PASS: numbers.test: number->string: powers of radix: (28 -5 neg)
PASS: numbers.test: number->string: powers of radix: (28 -4 pos)
PASS: numbers.test: number->string: powers of radix: (28 -4 neg)
PASS: numbers.test: number->string: powers of radix: (28 -3 pos)
PASS: numbers.test: number->string: powers of radix: (28 -3 neg)
PASS: numbers.test: number->string: powers of radix: (28 -2 pos)
PASS: numbers.test: number->string: powers of radix: (28 -2 neg)
PASS: numbers.test: number->string: powers of radix: (28 -1 pos)
PASS: numbers.test: number->string: powers of radix: (28 -1 neg)
PASS: numbers.test: number->string: powers of radix: (28 0 pos)
PASS: numbers.test: number->string: powers of radix: (28 0 neg)
PASS: numbers.test: number->string: powers of radix: (28 1 pos)
PASS: numbers.test: number->string: powers of radix: (28 1 neg)
PASS: numbers.test: number->string: powers of radix: (28 2 pos)
PASS: numbers.test: number->string: powers of radix: (28 2 neg)
PASS: numbers.test: number->string: powers of radix: (28 3 pos)
PASS: numbers.test: number->string: powers of radix: (28 3 neg)
PASS: numbers.test: number->string: powers of radix: (28 4 pos)
PASS: numbers.test: number->string: powers of radix: (28 4 neg)
PASS: numbers.test: number->string: powers of radix: (28 5 pos)
PASS: numbers.test: number->string: powers of radix: (28 5 neg)
PASS: numbers.test: number->string: powers of radix: (28 6 pos)
PASS: numbers.test: number->string: powers of radix: (28 6 neg)
PASS: numbers.test: number->string: powers of radix: (28 7 pos)
PASS: numbers.test: number->string: powers of radix: (28 7 neg)
PASS: numbers.test: number->string: powers of radix: (28 8 pos)
PASS: numbers.test: number->string: powers of radix: (28 8 neg)
PASS: numbers.test: number->string: powers of radix: (28 9 pos)
PASS: numbers.test: number->string: powers of radix: (28 9 neg)
PASS: numbers.test: number->string: powers of radix: (28 10 pos)
PASS: numbers.test: number->string: powers of radix: (28 10 neg)
PASS: numbers.test: number->string: powers of radix: (28 11 pos)
PASS: numbers.test: number->string: powers of radix: (28 11 neg)
PASS: numbers.test: number->string: powers of radix: (28 12 pos)
PASS: numbers.test: number->string: powers of radix: (28 12 neg)
PASS: numbers.test: number->string: powers of radix: (28 13 pos)
PASS: numbers.test: number->string: powers of radix: (28 13 neg)
PASS: numbers.test: number->string: powers of radix: (28 14 pos)
PASS: numbers.test: number->string: powers of radix: (28 14 neg)
PASS: numbers.test: number->string: powers of radix: (28 15 pos)
PASS: numbers.test: number->string: powers of radix: (28 15 neg)
PASS: numbers.test: number->string: powers of radix: (28 16 pos)
PASS: numbers.test: number->string: powers of radix: (28 16 neg)
PASS: numbers.test: number->string: powers of radix: (28 17 pos)
PASS: numbers.test: number->string: powers of radix: (28 17 neg)
PASS: numbers.test: number->string: powers of radix: (28 18 pos)
PASS: numbers.test: number->string: powers of radix: (28 18 neg)
PASS: numbers.test: number->string: powers of radix: (28 19 pos)
PASS: numbers.test: number->string: powers of radix: (28 19 neg)
PASS: numbers.test: number->string: powers of radix: (28 20 pos)
PASS: numbers.test: number->string: powers of radix: (28 20 neg)
PASS: numbers.test: number->string: powers of radix: (29 -20 pos)
PASS: numbers.test: number->string: powers of radix: (29 -20 neg)
PASS: numbers.test: number->string: powers of radix: (29 -19 pos)
PASS: numbers.test: number->string: powers of radix: (29 -19 neg)
PASS: numbers.test: number->string: powers of radix: (29 -18 pos)
PASS: numbers.test: number->string: powers of radix: (29 -18 neg)
PASS: numbers.test: number->string: powers of radix: (29 -17 pos)
PASS: numbers.test: number->string: powers of radix: (29 -17 neg)
PASS: numbers.test: number->string: powers of radix: (29 -16 pos)
PASS: numbers.test: number->string: powers of radix: (29 -16 neg)
PASS: numbers.test: number->string: powers of radix: (29 -15 pos)
PASS: numbers.test: number->string: powers of radix: (29 -15 neg)
PASS: numbers.test: number->string: powers of radix: (29 -14 pos)
PASS: numbers.test: number->string: powers of radix: (29 -14 neg)
PASS: numbers.test: number->string: powers of radix: (29 -13 pos)
PASS: numbers.test: number->string: powers of radix: (29 -13 neg)
PASS: numbers.test: number->string: powers of radix: (29 -12 pos)
PASS: numbers.test: number->string: powers of radix: (29 -12 neg)
PASS: numbers.test: number->string: powers of radix: (29 -11 pos)
PASS: numbers.test: number->string: powers of radix: (29 -11 neg)
PASS: numbers.test: number->string: powers of radix: (29 -10 pos)
PASS: numbers.test: number->string: powers of radix: (29 -10 neg)
PASS: numbers.test: number->string: powers of radix: (29 -9 pos)
PASS: numbers.test: number->string: powers of radix: (29 -9 neg)
PASS: numbers.test: number->string: powers of radix: (29 -8 pos)
PASS: numbers.test: number->string: powers of radix: (29 -8 neg)
PASS: numbers.test: number->string: powers of radix: (29 -7 pos)
PASS: numbers.test: number->string: powers of radix: (29 -7 neg)
PASS: numbers.test: number->string: powers of radix: (29 -6 pos)
PASS: numbers.test: number->string: powers of radix: (29 -6 neg)
PASS: numbers.test: number->string: powers of radix: (29 -5 pos)
PASS: numbers.test: number->string: powers of radix: (29 -5 neg)
PASS: numbers.test: number->string: powers of radix: (29 -4 pos)
PASS: numbers.test: number->string: powers of radix: (29 -4 neg)
PASS: numbers.test: number->string: powers of radix: (29 -3 pos)
PASS: numbers.test: number->string: powers of radix: (29 -3 neg)
PASS: numbers.test: number->string: powers of radix: (29 -2 pos)
PASS: numbers.test: number->string: powers of radix: (29 -2 neg)
PASS: numbers.test: number->string: powers of radix: (29 -1 pos)
PASS: numbers.test: number->string: powers of radix: (29 -1 neg)
PASS: numbers.test: number->string: powers of radix: (29 0 pos)
PASS: numbers.test: number->string: powers of radix: (29 0 neg)
PASS: numbers.test: number->string: powers of radix: (29 1 pos)
PASS: numbers.test: number->string: powers of radix: (29 1 neg)
PASS: numbers.test: number->string: powers of radix: (29 2 pos)
PASS: numbers.test: number->string: powers of radix: (29 2 neg)
PASS: numbers.test: number->string: powers of radix: (29 3 pos)
PASS: numbers.test: number->string: powers of radix: (29 3 neg)
PASS: numbers.test: number->string: powers of radix: (29 4 pos)
PASS: numbers.test: number->string: powers of radix: (29 4 neg)
PASS: numbers.test: number->string: powers of radix: (29 5 pos)
PASS: numbers.test: number->string: powers of radix: (29 5 neg)
PASS: numbers.test: number->string: powers of radix: (29 6 pos)
PASS: numbers.test: number->string: powers of radix: (29 6 neg)
PASS: numbers.test: number->string: powers of radix: (29 7 pos)
PASS: numbers.test: number->string: powers of radix: (29 7 neg)
PASS: numbers.test: number->string: powers of radix: (29 8 pos)
PASS: numbers.test: number->string: powers of radix: (29 8 neg)
PASS: numbers.test: number->string: powers of radix: (29 9 pos)
PASS: numbers.test: number->string: powers of radix: (29 9 neg)
PASS: numbers.test: number->string: powers of radix: (29 10 pos)
PASS: numbers.test: number->string: powers of radix: (29 10 neg)
PASS: numbers.test: number->string: powers of radix: (29 11 pos)
PASS: numbers.test: number->string: powers of radix: (29 11 neg)
PASS: numbers.test: number->string: powers of radix: (29 12 pos)
PASS: numbers.test: number->string: powers of radix: (29 12 neg)
PASS: numbers.test: number->string: powers of radix: (29 13 pos)
PASS: numbers.test: number->string: powers of radix: (29 13 neg)
PASS: numbers.test: number->string: powers of radix: (29 14 pos)
PASS: numbers.test: number->string: powers of radix: (29 14 neg)
PASS: numbers.test: number->string: powers of radix: (29 15 pos)
PASS: numbers.test: number->string: powers of radix: (29 15 neg)
PASS: numbers.test: number->string: powers of radix: (29 16 pos)
PASS: numbers.test: number->string: powers of radix: (29 16 neg)
PASS: numbers.test: number->string: powers of radix: (29 17 pos)
PASS: numbers.test: number->string: powers of radix: (29 17 neg)
PASS: numbers.test: number->string: powers of radix: (29 18 pos)
PASS: numbers.test: number->string: powers of radix: (29 18 neg)
PASS: numbers.test: number->string: powers of radix: (29 19 pos)
PASS: numbers.test: number->string: powers of radix: (29 19 neg)
PASS: numbers.test: number->string: powers of radix: (29 20 pos)
PASS: numbers.test: number->string: powers of radix: (29 20 neg)
PASS: numbers.test: number->string: powers of radix: (30 -20 pos)
PASS: numbers.test: number->string: powers of radix: (30 -20 neg)
PASS: numbers.test: number->string: powers of radix: (30 -19 pos)
PASS: numbers.test: number->string: powers of radix: (30 -19 neg)
PASS: numbers.test: number->string: powers of radix: (30 -18 pos)
PASS: numbers.test: number->string: powers of radix: (30 -18 neg)
PASS: numbers.test: number->string: powers of radix: (30 -17 pos)
PASS: numbers.test: number->string: powers of radix: (30 -17 neg)
PASS: numbers.test: number->string: powers of radix: (30 -16 pos)
PASS: numbers.test: number->string: powers of radix: (30 -16 neg)
PASS: numbers.test: number->string: powers of radix: (30 -15 pos)
PASS: numbers.test: number->string: powers of radix: (30 -15 neg)
PASS: numbers.test: number->string: powers of radix: (30 -14 pos)
PASS: numbers.test: number->string: powers of radix: (30 -14 neg)
PASS: numbers.test: number->string: powers of radix: (30 -13 pos)
PASS: numbers.test: number->string: powers of radix: (30 -13 neg)
PASS: numbers.test: number->string: powers of radix: (30 -12 pos)
PASS: numbers.test: number->string: powers of radix: (30 -12 neg)
PASS: numbers.test: number->string: powers of radix: (30 -11 pos)
PASS: numbers.test: number->string: powers of radix: (30 -11 neg)
PASS: numbers.test: number->string: powers of radix: (30 -10 pos)
PASS: numbers.test: number->string: powers of radix: (30 -10 neg)
PASS: numbers.test: number->string: powers of radix: (30 -9 pos)
PASS: numbers.test: number->string: powers of radix: (30 -9 neg)
PASS: numbers.test: number->string: powers of radix: (30 -8 pos)
PASS: numbers.test: number->string: powers of radix: (30 -8 neg)
PASS: numbers.test: number->string: powers of radix: (30 -7 pos)
PASS: numbers.test: number->string: powers of radix: (30 -7 neg)
PASS: numbers.test: number->string: powers of radix: (30 -6 pos)
PASS: numbers.test: number->string: powers of radix: (30 -6 neg)
PASS: numbers.test: number->string: powers of radix: (30 -5 pos)
PASS: numbers.test: number->string: powers of radix: (30 -5 neg)
PASS: numbers.test: number->string: powers of radix: (30 -4 pos)
PASS: numbers.test: number->string: powers of radix: (30 -4 neg)
PASS: numbers.test: number->string: powers of radix: (30 -3 pos)
PASS: numbers.test: number->string: powers of radix: (30 -3 neg)
PASS: numbers.test: number->string: powers of radix: (30 -2 pos)
PASS: numbers.test: number->string: powers of radix: (30 -2 neg)
PASS: numbers.test: number->string: powers of radix: (30 -1 pos)
PASS: numbers.test: number->string: powers of radix: (30 -1 neg)
PASS: numbers.test: number->string: powers of radix: (30 0 pos)
PASS: numbers.test: number->string: powers of radix: (30 0 neg)
PASS: numbers.test: number->string: powers of radix: (30 1 pos)
PASS: numbers.test: number->string: powers of radix: (30 1 neg)
PASS: numbers.test: number->string: powers of radix: (30 2 pos)
PASS: numbers.test: number->string: powers of radix: (30 2 neg)
PASS: numbers.test: number->string: powers of radix: (30 3 pos)
PASS: numbers.test: number->string: powers of radix: (30 3 neg)
PASS: numbers.test: number->string: powers of radix: (30 4 pos)
PASS: numbers.test: number->string: powers of radix: (30 4 neg)
PASS: numbers.test: number->string: powers of radix: (30 5 pos)
PASS: numbers.test: number->string: powers of radix: (30 5 neg)
PASS: numbers.test: number->string: powers of radix: (30 6 pos)
PASS: numbers.test: number->string: powers of radix: (30 6 neg)
PASS: numbers.test: number->string: powers of radix: (30 7 pos)
PASS: numbers.test: number->string: powers of radix: (30 7 neg)
PASS: numbers.test: number->string: powers of radix: (30 8 pos)
PASS: numbers.test: number->string: powers of radix: (30 8 neg)
PASS: numbers.test: number->string: powers of radix: (30 9 pos)
PASS: numbers.test: number->string: powers of radix: (30 9 neg)
PASS: numbers.test: number->string: powers of radix: (30 10 pos)
PASS: numbers.test: number->string: powers of radix: (30 10 neg)
PASS: numbers.test: number->string: powers of radix: (30 11 pos)
PASS: numbers.test: number->string: powers of radix: (30 11 neg)
PASS: numbers.test: number->string: powers of radix: (30 12 pos)
PASS: numbers.test: number->string: powers of radix: (30 12 neg)
PASS: numbers.test: number->string: powers of radix: (30 13 pos)
PASS: numbers.test: number->string: powers of radix: (30 13 neg)
PASS: numbers.test: number->string: powers of radix: (30 14 pos)
PASS: numbers.test: number->string: powers of radix: (30 14 neg)
PASS: numbers.test: number->string: powers of radix: (30 15 pos)
PASS: numbers.test: number->string: powers of radix: (30 15 neg)
PASS: numbers.test: number->string: powers of radix: (30 16 pos)
PASS: numbers.test: number->string: powers of radix: (30 16 neg)
PASS: numbers.test: number->string: powers of radix: (30 17 pos)
PASS: numbers.test: number->string: powers of radix: (30 17 neg)
PASS: numbers.test: number->string: powers of radix: (30 18 pos)
PASS: numbers.test: number->string: powers of radix: (30 18 neg)
PASS: numbers.test: number->string: powers of radix: (30 19 pos)
PASS: numbers.test: number->string: powers of radix: (30 19 neg)
PASS: numbers.test: number->string: powers of radix: (30 20 pos)
PASS: numbers.test: number->string: powers of radix: (30 20 neg)
PASS: numbers.test: number->string: powers of radix: (31 -20 pos)
PASS: numbers.test: number->string: powers of radix: (31 -20 neg)
PASS: numbers.test: number->string: powers of radix: (31 -19 pos)
PASS: numbers.test: number->string: powers of radix: (31 -19 neg)
PASS: numbers.test: number->string: powers of radix: (31 -18 pos)
PASS: numbers.test: number->string: powers of radix: (31 -18 neg)
PASS: numbers.test: number->string: powers of radix: (31 -17 pos)
PASS: numbers.test: number->string: powers of radix: (31 -17 neg)
PASS: numbers.test: number->string: powers of radix: (31 -16 pos)
PASS: numbers.test: number->string: powers of radix: (31 -16 neg)
PASS: numbers.test: number->string: powers of radix: (31 -15 pos)
PASS: numbers.test: number->string: powers of radix: (31 -15 neg)
PASS: numbers.test: number->string: powers of radix: (31 -14 pos)
PASS: numbers.test: number->string: powers of radix: (31 -14 neg)
PASS: numbers.test: number->string: powers of radix: (31 -13 pos)
PASS: numbers.test: number->string: powers of radix: (31 -13 neg)
PASS: numbers.test: number->string: powers of radix: (31 -12 pos)
PASS: numbers.test: number->string: powers of radix: (31 -12 neg)
PASS: numbers.test: number->string: powers of radix: (31 -11 pos)
PASS: numbers.test: number->string: powers of radix: (31 -11 neg)
PASS: numbers.test: number->string: powers of radix: (31 -10 pos)
PASS: numbers.test: number->string: powers of radix: (31 -10 neg)
PASS: numbers.test: number->string: powers of radix: (31 -9 pos)
PASS: numbers.test: number->string: powers of radix: (31 -9 neg)
PASS: numbers.test: number->string: powers of radix: (31 -8 pos)
PASS: numbers.test: number->string: powers of radix: (31 -8 neg)
PASS: numbers.test: number->string: powers of radix: (31 -7 pos)
PASS: numbers.test: number->string: powers of radix: (31 -7 neg)
PASS: numbers.test: number->string: powers of radix: (31 -6 pos)
PASS: numbers.test: number->string: powers of radix: (31 -6 neg)
PASS: numbers.test: number->string: powers of radix: (31 -5 pos)
PASS: numbers.test: number->string: powers of radix: (31 -5 neg)
PASS: numbers.test: number->string: powers of radix: (31 -4 pos)
PASS: numbers.test: number->string: powers of radix: (31 -4 neg)
PASS: numbers.test: number->string: powers of radix: (31 -3 pos)
PASS: numbers.test: number->string: powers of radix: (31 -3 neg)
PASS: numbers.test: number->string: powers of radix: (31 -2 pos)
PASS: numbers.test: number->string: powers of radix: (31 -2 neg)
PASS: numbers.test: number->string: powers of radix: (31 -1 pos)
PASS: numbers.test: number->string: powers of radix: (31 -1 neg)
PASS: numbers.test: number->string: powers of radix: (31 0 pos)
PASS: numbers.test: number->string: powers of radix: (31 0 neg)
PASS: numbers.test: number->string: powers of radix: (31 1 pos)
PASS: numbers.test: number->string: powers of radix: (31 1 neg)
PASS: numbers.test: number->string: powers of radix: (31 2 pos)
PASS: numbers.test: number->string: powers of radix: (31 2 neg)
PASS: numbers.test: number->string: powers of radix: (31 3 pos)
PASS: numbers.test: number->string: powers of radix: (31 3 neg)
PASS: numbers.test: number->string: powers of radix: (31 4 pos)
PASS: numbers.test: number->string: powers of radix: (31 4 neg)
PASS: numbers.test: number->string: powers of radix: (31 5 pos)
PASS: numbers.test: number->string: powers of radix: (31 5 neg)
PASS: numbers.test: number->string: powers of radix: (31 6 pos)
PASS: numbers.test: number->string: powers of radix: (31 6 neg)
PASS: numbers.test: number->string: powers of radix: (31 7 pos)
PASS: numbers.test: number->string: powers of radix: (31 7 neg)
PASS: numbers.test: number->string: powers of radix: (31 8 pos)
PASS: numbers.test: number->string: powers of radix: (31 8 neg)
PASS: numbers.test: number->string: powers of radix: (31 9 pos)
PASS: numbers.test: number->string: powers of radix: (31 9 neg)
PASS: numbers.test: number->string: powers of radix: (31 10 pos)
PASS: numbers.test: number->string: powers of radix: (31 10 neg)
PASS: numbers.test: number->string: powers of radix: (31 11 pos)
PASS: numbers.test: number->string: powers of radix: (31 11 neg)
PASS: numbers.test: number->string: powers of radix: (31 12 pos)
PASS: numbers.test: number->string: powers of radix: (31 12 neg)
PASS: numbers.test: number->string: powers of radix: (31 13 pos)
PASS: numbers.test: number->string: powers of radix: (31 13 neg)
PASS: numbers.test: number->string: powers of radix: (31 14 pos)
PASS: numbers.test: number->string: powers of radix: (31 14 neg)
PASS: numbers.test: number->string: powers of radix: (31 15 pos)
PASS: numbers.test: number->string: powers of radix: (31 15 neg)
PASS: numbers.test: number->string: powers of radix: (31 16 pos)
PASS: numbers.test: number->string: powers of radix: (31 16 neg)
PASS: numbers.test: number->string: powers of radix: (31 17 pos)
PASS: numbers.test: number->string: powers of radix: (31 17 neg)
PASS: numbers.test: number->string: powers of radix: (31 18 pos)
PASS: numbers.test: number->string: powers of radix: (31 18 neg)
PASS: numbers.test: number->string: powers of radix: (31 19 pos)
PASS: numbers.test: number->string: powers of radix: (31 19 neg)
PASS: numbers.test: number->string: powers of radix: (31 20 pos)
PASS: numbers.test: number->string: powers of radix: (31 20 neg)
PASS: numbers.test: number->string: powers of radix: (32 -20 pos)
PASS: numbers.test: number->string: powers of radix: (32 -20 neg)
PASS: numbers.test: number->string: powers of radix: (32 -19 pos)
PASS: numbers.test: number->string: powers of radix: (32 -19 neg)
PASS: numbers.test: number->string: powers of radix: (32 -18 pos)
PASS: numbers.test: number->string: powers of radix: (32 -18 neg)
PASS: numbers.test: number->string: powers of radix: (32 -17 pos)
PASS: numbers.test: number->string: powers of radix: (32 -17 neg)
PASS: numbers.test: number->string: powers of radix: (32 -16 pos)
PASS: numbers.test: number->string: powers of radix: (32 -16 neg)
PASS: numbers.test: number->string: powers of radix: (32 -15 pos)
PASS: numbers.test: number->string: powers of radix: (32 -15 neg)
PASS: numbers.test: number->string: powers of radix: (32 -14 pos)
PASS: numbers.test: number->string: powers of radix: (32 -14 neg)
PASS: numbers.test: number->string: powers of radix: (32 -13 pos)
PASS: numbers.test: number->string: powers of radix: (32 -13 neg)
PASS: numbers.test: number->string: powers of radix: (32 -12 pos)
PASS: numbers.test: number->string: powers of radix: (32 -12 neg)
PASS: numbers.test: number->string: powers of radix: (32 -11 pos)
PASS: numbers.test: number->string: powers of radix: (32 -11 neg)
PASS: numbers.test: number->string: powers of radix: (32 -10 pos)
PASS: numbers.test: number->string: powers of radix: (32 -10 neg)
PASS: numbers.test: number->string: powers of radix: (32 -9 pos)
PASS: numbers.test: number->string: powers of radix: (32 -9 neg)
PASS: numbers.test: number->string: powers of radix: (32 -8 pos)
PASS: numbers.test: number->string: powers of radix: (32 -8 neg)
PASS: numbers.test: number->string: powers of radix: (32 -7 pos)
PASS: numbers.test: number->string: powers of radix: (32 -7 neg)
PASS: numbers.test: number->string: powers of radix: (32 -6 pos)
PASS: numbers.test: number->string: powers of radix: (32 -6 neg)
PASS: numbers.test: number->string: powers of radix: (32 -5 pos)
PASS: numbers.test: number->string: powers of radix: (32 -5 neg)
PASS: numbers.test: number->string: powers of radix: (32 -4 pos)
PASS: numbers.test: number->string: powers of radix: (32 -4 neg)
PASS: numbers.test: number->string: powers of radix: (32 -3 pos)
PASS: numbers.test: number->string: powers of radix: (32 -3 neg)
PASS: numbers.test: number->string: powers of radix: (32 -2 pos)
PASS: numbers.test: number->string: powers of radix: (32 -2 neg)
PASS: numbers.test: number->string: powers of radix: (32 -1 pos)
PASS: numbers.test: number->string: powers of radix: (32 -1 neg)
PASS: numbers.test: number->string: powers of radix: (32 0 pos)
PASS: numbers.test: number->string: powers of radix: (32 0 neg)
PASS: numbers.test: number->string: powers of radix: (32 1 pos)
PASS: numbers.test: number->string: powers of radix: (32 1 neg)
PASS: numbers.test: number->string: powers of radix: (32 2 pos)
PASS: numbers.test: number->string: powers of radix: (32 2 neg)
PASS: numbers.test: number->string: powers of radix: (32 3 pos)
PASS: numbers.test: number->string: powers of radix: (32 3 neg)
PASS: numbers.test: number->string: powers of radix: (32 4 pos)
PASS: numbers.test: number->string: powers of radix: (32 4 neg)
PASS: numbers.test: number->string: powers of radix: (32 5 pos)
PASS: numbers.test: number->string: powers of radix: (32 5 neg)
PASS: numbers.test: number->string: powers of radix: (32 6 pos)
PASS: numbers.test: number->string: powers of radix: (32 6 neg)
PASS: numbers.test: number->string: powers of radix: (32 7 pos)
PASS: numbers.test: number->string: powers of radix: (32 7 neg)
PASS: numbers.test: number->string: powers of radix: (32 8 pos)
PASS: numbers.test: number->string: powers of radix: (32 8 neg)
PASS: numbers.test: number->string: powers of radix: (32 9 pos)
PASS: numbers.test: number->string: powers of radix: (32 9 neg)
PASS: numbers.test: number->string: powers of radix: (32 10 pos)
PASS: numbers.test: number->string: powers of radix: (32 10 neg)
PASS: numbers.test: number->string: powers of radix: (32 11 pos)
PASS: numbers.test: number->string: powers of radix: (32 11 neg)
PASS: numbers.test: number->string: powers of radix: (32 12 pos)
PASS: numbers.test: number->string: powers of radix: (32 12 neg)
PASS: numbers.test: number->string: powers of radix: (32 13 pos)
PASS: numbers.test: number->string: powers of radix: (32 13 neg)
PASS: numbers.test: number->string: powers of radix: (32 14 pos)
PASS: numbers.test: number->string: powers of radix: (32 14 neg)
PASS: numbers.test: number->string: powers of radix: (32 15 pos)
PASS: numbers.test: number->string: powers of radix: (32 15 neg)
PASS: numbers.test: number->string: powers of radix: (32 16 pos)
PASS: numbers.test: number->string: powers of radix: (32 16 neg)
PASS: numbers.test: number->string: powers of radix: (32 17 pos)
PASS: numbers.test: number->string: powers of radix: (32 17 neg)
PASS: numbers.test: number->string: powers of radix: (32 18 pos)
PASS: numbers.test: number->string: powers of radix: (32 18 neg)
PASS: numbers.test: number->string: powers of radix: (32 19 pos)
PASS: numbers.test: number->string: powers of radix: (32 19 neg)
PASS: numbers.test: number->string: powers of radix: (32 20 pos)
PASS: numbers.test: number->string: powers of radix: (32 20 neg)
PASS: numbers.test: number->string: powers of radix: (33 -20 pos)
PASS: numbers.test: number->string: powers of radix: (33 -20 neg)
PASS: numbers.test: number->string: powers of radix: (33 -19 pos)
PASS: numbers.test: number->string: powers of radix: (33 -19 neg)
PASS: numbers.test: number->string: powers of radix: (33 -18 pos)
PASS: numbers.test: number->string: powers of radix: (33 -18 neg)
PASS: numbers.test: number->string: powers of radix: (33 -17 pos)
PASS: numbers.test: number->string: powers of radix: (33 -17 neg)
PASS: numbers.test: number->string: powers of radix: (33 -16 pos)
PASS: numbers.test: number->string: powers of radix: (33 -16 neg)
PASS: numbers.test: number->string: powers of radix: (33 -15 pos)
PASS: numbers.test: number->string: powers of radix: (33 -15 neg)
PASS: numbers.test: number->string: powers of radix: (33 -14 pos)
PASS: numbers.test: number->string: powers of radix: (33 -14 neg)
PASS: numbers.test: number->string: powers of radix: (33 -13 pos)
PASS: numbers.test: number->string: powers of radix: (33 -13 neg)
PASS: numbers.test: number->string: powers of radix: (33 -12 pos)
PASS: numbers.test: number->string: powers of radix: (33 -12 neg)
PASS: numbers.test: number->string: powers of radix: (33 -11 pos)
PASS: numbers.test: number->string: powers of radix: (33 -11 neg)
PASS: numbers.test: number->string: powers of radix: (33 -10 pos)
PASS: numbers.test: number->string: powers of radix: (33 -10 neg)
PASS: numbers.test: number->string: powers of radix: (33 -9 pos)
PASS: numbers.test: number->string: powers of radix: (33 -9 neg)
PASS: numbers.test: number->string: powers of radix: (33 -8 pos)
PASS: numbers.test: number->string: powers of radix: (33 -8 neg)
PASS: numbers.test: number->string: powers of radix: (33 -7 pos)
PASS: numbers.test: number->string: powers of radix: (33 -7 neg)
PASS: numbers.test: number->string: powers of radix: (33 -6 pos)
PASS: numbers.test: number->string: powers of radix: (33 -6 neg)
PASS: numbers.test: number->string: powers of radix: (33 -5 pos)
PASS: numbers.test: number->string: powers of radix: (33 -5 neg)
PASS: numbers.test: number->string: powers of radix: (33 -4 pos)
PASS: numbers.test: number->string: powers of radix: (33 -4 neg)
PASS: numbers.test: number->string: powers of radix: (33 -3 pos)
PASS: numbers.test: number->string: powers of radix: (33 -3 neg)
PASS: numbers.test: number->string: powers of radix: (33 -2 pos)
PASS: numbers.test: number->string: powers of radix: (33 -2 neg)
PASS: numbers.test: number->string: powers of radix: (33 -1 pos)
PASS: numbers.test: number->string: powers of radix: (33 -1 neg)
PASS: numbers.test: number->string: powers of radix: (33 0 pos)
PASS: numbers.test: number->string: powers of radix: (33 0 neg)
PASS: numbers.test: number->string: powers of radix: (33 1 pos)
PASS: numbers.test: number->string: powers of radix: (33 1 neg)
PASS: numbers.test: number->string: powers of radix: (33 2 pos)
PASS: numbers.test: number->string: powers of radix: (33 2 neg)
PASS: numbers.test: number->string: powers of radix: (33 3 pos)
PASS: numbers.test: number->string: powers of radix: (33 3 neg)
PASS: numbers.test: number->string: powers of radix: (33 4 pos)
PASS: numbers.test: number->string: powers of radix: (33 4 neg)
PASS: numbers.test: number->string: powers of radix: (33 5 pos)
PASS: numbers.test: number->string: powers of radix: (33 5 neg)
PASS: numbers.test: number->string: powers of radix: (33 6 pos)
PASS: numbers.test: number->string: powers of radix: (33 6 neg)
PASS: numbers.test: number->string: powers of radix: (33 7 pos)
PASS: numbers.test: number->string: powers of radix: (33 7 neg)
PASS: numbers.test: number->string: powers of radix: (33 8 pos)
PASS: numbers.test: number->string: powers of radix: (33 8 neg)
PASS: numbers.test: number->string: powers of radix: (33 9 pos)
PASS: numbers.test: number->string: powers of radix: (33 9 neg)
PASS: numbers.test: number->string: powers of radix: (33 10 pos)
PASS: numbers.test: number->string: powers of radix: (33 10 neg)
PASS: numbers.test: number->string: powers of radix: (33 11 pos)
PASS: numbers.test: number->string: powers of radix: (33 11 neg)
PASS: numbers.test: number->string: powers of radix: (33 12 pos)
PASS: numbers.test: number->string: powers of radix: (33 12 neg)
PASS: numbers.test: number->string: powers of radix: (33 13 pos)
PASS: numbers.test: number->string: powers of radix: (33 13 neg)
PASS: numbers.test: number->string: powers of radix: (33 14 pos)
PASS: numbers.test: number->string: powers of radix: (33 14 neg)
PASS: numbers.test: number->string: powers of radix: (33 15 pos)
PASS: numbers.test: number->string: powers of radix: (33 15 neg)
PASS: numbers.test: number->string: powers of radix: (33 16 pos)
PASS: numbers.test: number->string: powers of radix: (33 16 neg)
PASS: numbers.test: number->string: powers of radix: (33 17 pos)
PASS: numbers.test: number->string: powers of radix: (33 17 neg)
PASS: numbers.test: number->string: powers of radix: (33 18 pos)
PASS: numbers.test: number->string: powers of radix: (33 18 neg)
PASS: numbers.test: number->string: powers of radix: (33 19 pos)
PASS: numbers.test: number->string: powers of radix: (33 19 neg)
PASS: numbers.test: number->string: powers of radix: (33 20 pos)
PASS: numbers.test: number->string: powers of radix: (33 20 neg)
PASS: numbers.test: number->string: powers of radix: (34 -20 pos)
PASS: numbers.test: number->string: powers of radix: (34 -20 neg)
PASS: numbers.test: number->string: powers of radix: (34 -19 pos)
PASS: numbers.test: number->string: powers of radix: (34 -19 neg)
PASS: numbers.test: number->string: powers of radix: (34 -18 pos)
PASS: numbers.test: number->string: powers of radix: (34 -18 neg)
PASS: numbers.test: number->string: powers of radix: (34 -17 pos)
PASS: numbers.test: number->string: powers of radix: (34 -17 neg)
PASS: numbers.test: number->string: powers of radix: (34 -16 pos)
PASS: numbers.test: number->string: powers of radix: (34 -16 neg)
PASS: numbers.test: number->string: powers of radix: (34 -15 pos)
PASS: numbers.test: number->string: powers of radix: (34 -15 neg)
PASS: numbers.test: number->string: powers of radix: (34 -14 pos)
PASS: numbers.test: number->string: powers of radix: (34 -14 neg)
PASS: numbers.test: number->string: powers of radix: (34 -13 pos)
PASS: numbers.test: number->string: powers of radix: (34 -13 neg)
PASS: numbers.test: number->string: powers of radix: (34 -12 pos)
PASS: numbers.test: number->string: powers of radix: (34 -12 neg)
PASS: numbers.test: number->string: powers of radix: (34 -11 pos)
PASS: numbers.test: number->string: powers of radix: (34 -11 neg)
PASS: numbers.test: number->string: powers of radix: (34 -10 pos)
PASS: numbers.test: number->string: powers of radix: (34 -10 neg)
PASS: numbers.test: number->string: powers of radix: (34 -9 pos)
PASS: numbers.test: number->string: powers of radix: (34 -9 neg)
PASS: numbers.test: number->string: powers of radix: (34 -8 pos)
PASS: numbers.test: number->string: powers of radix: (34 -8 neg)
PASS: numbers.test: number->string: powers of radix: (34 -7 pos)
PASS: numbers.test: number->string: powers of radix: (34 -7 neg)
PASS: numbers.test: number->string: powers of radix: (34 -6 pos)
PASS: numbers.test: number->string: powers of radix: (34 -6 neg)
PASS: numbers.test: number->string: powers of radix: (34 -5 pos)
PASS: numbers.test: number->string: powers of radix: (34 -5 neg)
PASS: numbers.test: number->string: powers of radix: (34 -4 pos)
PASS: numbers.test: number->string: powers of radix: (34 -4 neg)
PASS: numbers.test: number->string: powers of radix: (34 -3 pos)
PASS: numbers.test: number->string: powers of radix: (34 -3 neg)
PASS: numbers.test: number->string: powers of radix: (34 -2 pos)
PASS: numbers.test: number->string: powers of radix: (34 -2 neg)
PASS: numbers.test: number->string: powers of radix: (34 -1 pos)
PASS: numbers.test: number->string: powers of radix: (34 -1 neg)
PASS: numbers.test: number->string: powers of radix: (34 0 pos)
PASS: numbers.test: number->string: powers of radix: (34 0 neg)
PASS: numbers.test: number->string: powers of radix: (34 1 pos)
PASS: numbers.test: number->string: powers of radix: (34 1 neg)
PASS: numbers.test: number->string: powers of radix: (34 2 pos)
PASS: numbers.test: number->string: powers of radix: (34 2 neg)
PASS: numbers.test: number->string: powers of radix: (34 3 pos)
PASS: numbers.test: number->string: powers of radix: (34 3 neg)
PASS: numbers.test: number->string: powers of radix: (34 4 pos)
PASS: numbers.test: number->string: powers of radix: (34 4 neg)
PASS: numbers.test: number->string: powers of radix: (34 5 pos)
PASS: numbers.test: number->string: powers of radix: (34 5 neg)
PASS: numbers.test: number->string: powers of radix: (34 6 pos)
PASS: numbers.test: number->string: powers of radix: (34 6 neg)
PASS: numbers.test: number->string: powers of radix: (34 7 pos)
PASS: numbers.test: number->string: powers of radix: (34 7 neg)
PASS: numbers.test: number->string: powers of radix: (34 8 pos)
PASS: numbers.test: number->string: powers of radix: (34 8 neg)
PASS: numbers.test: number->string: powers of radix: (34 9 pos)
PASS: numbers.test: number->string: powers of radix: (34 9 neg)
PASS: numbers.test: number->string: powers of radix: (34 10 pos)
PASS: numbers.test: number->string: powers of radix: (34 10 neg)
PASS: numbers.test: number->string: powers of radix: (34 11 pos)
PASS: numbers.test: number->string: powers of radix: (34 11 neg)
PASS: numbers.test: number->string: powers of radix: (34 12 pos)
PASS: numbers.test: number->string: powers of radix: (34 12 neg)
PASS: numbers.test: number->string: powers of radix: (34 13 pos)
PASS: numbers.test: number->string: powers of radix: (34 13 neg)
PASS: numbers.test: number->string: powers of radix: (34 14 pos)
PASS: numbers.test: number->string: powers of radix: (34 14 neg)
PASS: numbers.test: number->string: powers of radix: (34 15 pos)
PASS: numbers.test: number->string: powers of radix: (34 15 neg)
PASS: numbers.test: number->string: powers of radix: (34 16 pos)
PASS: numbers.test: number->string: powers of radix: (34 16 neg)
PASS: numbers.test: number->string: powers of radix: (34 17 pos)
PASS: numbers.test: number->string: powers of radix: (34 17 neg)
PASS: numbers.test: number->string: powers of radix: (34 18 pos)
PASS: numbers.test: number->string: powers of radix: (34 18 neg)
PASS: numbers.test: number->string: powers of radix: (34 19 pos)
PASS: numbers.test: number->string: powers of radix: (34 19 neg)
PASS: numbers.test: number->string: powers of radix: (34 20 pos)
PASS: numbers.test: number->string: powers of radix: (34 20 neg)
PASS: numbers.test: number->string: powers of radix: (35 -20 pos)
PASS: numbers.test: number->string: powers of radix: (35 -20 neg)
PASS: numbers.test: number->string: powers of radix: (35 -19 pos)
PASS: numbers.test: number->string: powers of radix: (35 -19 neg)
PASS: numbers.test: number->string: powers of radix: (35 -18 pos)
PASS: numbers.test: number->string: powers of radix: (35 -18 neg)
PASS: numbers.test: number->string: powers of radix: (35 -17 pos)
PASS: numbers.test: number->string: powers of radix: (35 -17 neg)
PASS: numbers.test: number->string: powers of radix: (35 -16 pos)
PASS: numbers.test: number->string: powers of radix: (35 -16 neg)
PASS: numbers.test: number->string: powers of radix: (35 -15 pos)
PASS: numbers.test: number->string: powers of radix: (35 -15 neg)
PASS: numbers.test: number->string: powers of radix: (35 -14 pos)
PASS: numbers.test: number->string: powers of radix: (35 -14 neg)
PASS: numbers.test: number->string: powers of radix: (35 -13 pos)
PASS: numbers.test: number->string: powers of radix: (35 -13 neg)
PASS: numbers.test: number->string: powers of radix: (35 -12 pos)
PASS: numbers.test: number->string: powers of radix: (35 -12 neg)
PASS: numbers.test: number->string: powers of radix: (35 -11 pos)
PASS: numbers.test: number->string: powers of radix: (35 -11 neg)
PASS: numbers.test: number->string: powers of radix: (35 -10 pos)
PASS: numbers.test: number->string: powers of radix: (35 -10 neg)
PASS: numbers.test: number->string: powers of radix: (35 -9 pos)
PASS: numbers.test: number->string: powers of radix: (35 -9 neg)
PASS: numbers.test: number->string: powers of radix: (35 -8 pos)
PASS: numbers.test: number->string: powers of radix: (35 -8 neg)
PASS: numbers.test: number->string: powers of radix: (35 -7 pos)
PASS: numbers.test: number->string: powers of radix: (35 -7 neg)
PASS: numbers.test: number->string: powers of radix: (35 -6 pos)
PASS: numbers.test: number->string: powers of radix: (35 -6 neg)
PASS: numbers.test: number->string: powers of radix: (35 -5 pos)
PASS: numbers.test: number->string: powers of radix: (35 -5 neg)
PASS: numbers.test: number->string: powers of radix: (35 -4 pos)
PASS: numbers.test: number->string: powers of radix: (35 -4 neg)
PASS: numbers.test: number->string: powers of radix: (35 -3 pos)
PASS: numbers.test: number->string: powers of radix: (35 -3 neg)
PASS: numbers.test: number->string: powers of radix: (35 -2 pos)
PASS: numbers.test: number->string: powers of radix: (35 -2 neg)
PASS: numbers.test: number->string: powers of radix: (35 -1 pos)
PASS: numbers.test: number->string: powers of radix: (35 -1 neg)
PASS: numbers.test: number->string: powers of radix: (35 0 pos)
PASS: numbers.test: number->string: powers of radix: (35 0 neg)
PASS: numbers.test: number->string: powers of radix: (35 1 pos)
PASS: numbers.test: number->string: powers of radix: (35 1 neg)
PASS: numbers.test: number->string: powers of radix: (35 2 pos)
PASS: numbers.test: number->string: powers of radix: (35 2 neg)
PASS: numbers.test: number->string: powers of radix: (35 3 pos)
PASS: numbers.test: number->string: powers of radix: (35 3 neg)
PASS: numbers.test: number->string: powers of radix: (35 4 pos)
PASS: numbers.test: number->string: powers of radix: (35 4 neg)
PASS: numbers.test: number->string: powers of radix: (35 5 pos)
PASS: numbers.test: number->string: powers of radix: (35 5 neg)
PASS: numbers.test: number->string: powers of radix: (35 6 pos)
PASS: numbers.test: number->string: powers of radix: (35 6 neg)
PASS: numbers.test: number->string: powers of radix: (35 7 pos)
PASS: numbers.test: number->string: powers of radix: (35 7 neg)
PASS: numbers.test: number->string: powers of radix: (35 8 pos)
PASS: numbers.test: number->string: powers of radix: (35 8 neg)
PASS: numbers.test: number->string: powers of radix: (35 9 pos)
PASS: numbers.test: number->string: powers of radix: (35 9 neg)
PASS: numbers.test: number->string: powers of radix: (35 10 pos)
PASS: numbers.test: number->string: powers of radix: (35 10 neg)
PASS: numbers.test: number->string: powers of radix: (35 11 pos)
PASS: numbers.test: number->string: powers of radix: (35 11 neg)
PASS: numbers.test: number->string: powers of radix: (35 12 pos)
PASS: numbers.test: number->string: powers of radix: (35 12 neg)
PASS: numbers.test: number->string: powers of radix: (35 13 pos)
PASS: numbers.test: number->string: powers of radix: (35 13 neg)
PASS: numbers.test: number->string: powers of radix: (35 14 pos)
PASS: numbers.test: number->string: powers of radix: (35 14 neg)
PASS: numbers.test: number->string: powers of radix: (35 15 pos)
PASS: numbers.test: number->string: powers of radix: (35 15 neg)
PASS: numbers.test: number->string: powers of radix: (35 16 pos)
PASS: numbers.test: number->string: powers of radix: (35 16 neg)
PASS: numbers.test: number->string: powers of radix: (35 17 pos)
PASS: numbers.test: number->string: powers of radix: (35 17 neg)
PASS: numbers.test: number->string: powers of radix: (35 18 pos)
PASS: numbers.test: number->string: powers of radix: (35 18 neg)
PASS: numbers.test: number->string: powers of radix: (35 19 pos)
PASS: numbers.test: number->string: powers of radix: (35 19 neg)
PASS: numbers.test: number->string: powers of radix: (35 20 pos)
PASS: numbers.test: number->string: powers of radix: (35 20 neg)
PASS: numbers.test: number->string: powers of radix: (36 -20 pos)
PASS: numbers.test: number->string: powers of radix: (36 -20 neg)
PASS: numbers.test: number->string: powers of radix: (36 -19 pos)
PASS: numbers.test: number->string: powers of radix: (36 -19 neg)
PASS: numbers.test: number->string: powers of radix: (36 -18 pos)
PASS: numbers.test: number->string: powers of radix: (36 -18 neg)
PASS: numbers.test: number->string: powers of radix: (36 -17 pos)
PASS: numbers.test: number->string: powers of radix: (36 -17 neg)
PASS: numbers.test: number->string: powers of radix: (36 -16 pos)
PASS: numbers.test: number->string: powers of radix: (36 -16 neg)
PASS: numbers.test: number->string: powers of radix: (36 -15 pos)
PASS: numbers.test: number->string: powers of radix: (36 -15 neg)
PASS: numbers.test: number->string: powers of radix: (36 -14 pos)
PASS: numbers.test: number->string: powers of radix: (36 -14 neg)
PASS: numbers.test: number->string: powers of radix: (36 -13 pos)
PASS: numbers.test: number->string: powers of radix: (36 -13 neg)
PASS: numbers.test: number->string: powers of radix: (36 -12 pos)
PASS: numbers.test: number->string: powers of radix: (36 -12 neg)
PASS: numbers.test: number->string: powers of radix: (36 -11 pos)
PASS: numbers.test: number->string: powers of radix: (36 -11 neg)
PASS: numbers.test: number->string: powers of radix: (36 -10 pos)
PASS: numbers.test: number->string: powers of radix: (36 -10 neg)
PASS: numbers.test: number->string: powers of radix: (36 -9 pos)
PASS: numbers.test: number->string: powers of radix: (36 -9 neg)
PASS: numbers.test: number->string: powers of radix: (36 -8 pos)
PASS: numbers.test: number->string: powers of radix: (36 -8 neg)
PASS: numbers.test: number->string: powers of radix: (36 -7 pos)
PASS: numbers.test: number->string: powers of radix: (36 -7 neg)
PASS: numbers.test: number->string: powers of radix: (36 -6 pos)
PASS: numbers.test: number->string: powers of radix: (36 -6 neg)
PASS: numbers.test: number->string: powers of radix: (36 -5 pos)
PASS: numbers.test: number->string: powers of radix: (36 -5 neg)
PASS: numbers.test: number->string: powers of radix: (36 -4 pos)
PASS: numbers.test: number->string: powers of radix: (36 -4 neg)
PASS: numbers.test: number->string: powers of radix: (36 -3 pos)
PASS: numbers.test: number->string: powers of radix: (36 -3 neg)
PASS: numbers.test: number->string: powers of radix: (36 -2 pos)
PASS: numbers.test: number->string: powers of radix: (36 -2 neg)
PASS: numbers.test: number->string: powers of radix: (36 -1 pos)
PASS: numbers.test: number->string: powers of radix: (36 -1 neg)
PASS: numbers.test: number->string: powers of radix: (36 0 pos)
PASS: numbers.test: number->string: powers of radix: (36 0 neg)
PASS: numbers.test: number->string: powers of radix: (36 1 pos)
PASS: numbers.test: number->string: powers of radix: (36 1 neg)
PASS: numbers.test: number->string: powers of radix: (36 2 pos)
PASS: numbers.test: number->string: powers of radix: (36 2 neg)
PASS: numbers.test: number->string: powers of radix: (36 3 pos)
PASS: numbers.test: number->string: powers of radix: (36 3 neg)
PASS: numbers.test: number->string: powers of radix: (36 4 pos)
PASS: numbers.test: number->string: powers of radix: (36 4 neg)
PASS: numbers.test: number->string: powers of radix: (36 5 pos)
PASS: numbers.test: number->string: powers of radix: (36 5 neg)
PASS: numbers.test: number->string: powers of radix: (36 6 pos)
PASS: numbers.test: number->string: powers of radix: (36 6 neg)
PASS: numbers.test: number->string: powers of radix: (36 7 pos)
PASS: numbers.test: number->string: powers of radix: (36 7 neg)
PASS: numbers.test: number->string: powers of radix: (36 8 pos)
PASS: numbers.test: number->string: powers of radix: (36 8 neg)
PASS: numbers.test: number->string: powers of radix: (36 9 pos)
PASS: numbers.test: number->string: powers of radix: (36 9 neg)
PASS: numbers.test: number->string: powers of radix: (36 10 pos)
PASS: numbers.test: number->string: powers of radix: (36 10 neg)
PASS: numbers.test: number->string: powers of radix: (36 11 pos)
PASS: numbers.test: number->string: powers of radix: (36 11 neg)
PASS: numbers.test: number->string: powers of radix: (36 12 pos)
PASS: numbers.test: number->string: powers of radix: (36 12 neg)
PASS: numbers.test: number->string: powers of radix: (36 13 pos)
PASS: numbers.test: number->string: powers of radix: (36 13 neg)
PASS: numbers.test: number->string: powers of radix: (36 14 pos)
PASS: numbers.test: number->string: powers of radix: (36 14 neg)
PASS: numbers.test: number->string: powers of radix: (36 15 pos)
PASS: numbers.test: number->string: powers of radix: (36 15 neg)
PASS: numbers.test: number->string: powers of radix: (36 16 pos)
PASS: numbers.test: number->string: powers of radix: (36 16 neg)
PASS: numbers.test: number->string: powers of radix: (36 17 pos)
PASS: numbers.test: number->string: powers of radix: (36 17 neg)
PASS: numbers.test: number->string: powers of radix: (36 18 pos)
PASS: numbers.test: number->string: powers of radix: (36 18 neg)
PASS: numbers.test: number->string: powers of radix: (36 19 pos)
PASS: numbers.test: number->string: powers of radix: (36 19 neg)
PASS: numbers.test: number->string: powers of radix: (36 20 pos)
PASS: numbers.test: number->string: powers of radix: (36 20 neg)
PASS: numbers.test: number->string: multiples of smallest inexact: (5.0e-324 pos)
PASS: numbers.test: number->string: multiples of smallest inexact: (5.0e-324 neg)
PASS: numbers.test: number->string: multiples of smallest inexact: (1.0e-323 pos)
PASS: numbers.test: number->string: multiples of smallest inexact: (1.0e-323 neg)
PASS: numbers.test: number->string: multiples of smallest inexact: (1.5e-323 pos)
PASS: numbers.test: number->string: multiples of smallest inexact: (1.5e-323 neg)
PASS: numbers.test: number->string: multiples of smallest inexact: (2.0e-323 pos)
PASS: numbers.test: number->string: multiples of smallest inexact: (2.0e-323 neg)
PASS: numbers.test: number->string: multiples of smallest inexact: (2.5e-323 pos)
PASS: numbers.test: number->string: multiples of smallest inexact: (2.5e-323 neg)
PASS: numbers.test: number->string: multiples of smallest inexact: (3.0e-323 pos)
PASS: numbers.test: number->string: multiples of smallest inexact: (3.0e-323 neg)
PASS: numbers.test: number->string: multiples of smallest inexact: (3.5e-323 pos)
PASS: numbers.test: number->string: multiples of smallest inexact: (3.5e-323 neg)
PASS: numbers.test: number->string: multiples of smallest inexact: (4.0e-323 pos)
PASS: numbers.test: number->string: multiples of smallest inexact: (4.0e-323 neg)
PASS: numbers.test: number->string: multiples of smallest inexact: (4.4e-323 pos)
PASS: numbers.test: number->string: multiples of smallest inexact: (4.4e-323 neg)
PASS: numbers.test: number->string: multiples of smallest inexact: (5.0e-323 pos)
PASS: numbers.test: number->string: multiples of smallest inexact: (5.0e-323 neg)
PASS: numbers.test: number->string: multiples of smallest inexact: (5.4e-323 pos)
PASS: numbers.test: number->string: multiples of smallest inexact: (5.4e-323 neg)
PASS: numbers.test: number->string: multiples of smallest inexact: (6.0e-323 pos)
PASS: numbers.test: number->string: multiples of smallest inexact: (6.0e-323 neg)
PASS: numbers.test: number->string: multiples of smallest inexact: (6.4e-323 pos)
PASS: numbers.test: number->string: multiples of smallest inexact: (6.4e-323 neg)
PASS: numbers.test: number->string: multiples of smallest inexact: (7.0e-323 pos)
PASS: numbers.test: number->string: multiples of smallest inexact: (7.0e-323 neg)
PASS: numbers.test: number->string: multiples of smallest inexact: (7.4e-323 pos)
PASS: numbers.test: number->string: multiples of smallest inexact: (7.4e-323 neg)
PASS: numbers.test: number->string: multiples of smallest inexact: (8.0e-323 pos)
PASS: numbers.test: number->string: multiples of smallest inexact: (8.0e-323 neg)
PASS: numbers.test: number->string: multiples of smallest inexact: (8.4e-323 pos)
PASS: numbers.test: number->string: multiples of smallest inexact: (8.4e-323 neg)
PASS: numbers.test: number->string: multiples of smallest inexact: (9.0e-323 pos)
PASS: numbers.test: number->string: multiples of smallest inexact: (9.0e-323 neg)
PASS: numbers.test: number->string: multiples of smallest inexact: (9.4e-323 pos)
PASS: numbers.test: number->string: multiples of smallest inexact: (9.4e-323 neg)
PASS: numbers.test: number->string: multiples of smallest inexact: (1.0e-322 pos)
PASS: numbers.test: number->string: multiples of smallest inexact: (1.0e-322 neg)
PASS: numbers.test: number->string: multiples of smallest inexact: (1.04e-322 pos)
PASS: numbers.test: number->string: multiples of smallest inexact: (1.04e-322 neg)
PASS: numbers.test: number->string: multiples of smallest inexact: (1.1e-322 pos)
PASS: numbers.test: number->string: multiples of smallest inexact: (1.1e-322 neg)
PASS: numbers.test: number->string: multiples of smallest inexact: (1.14e-322 pos)
PASS: numbers.test: number->string: multiples of smallest inexact: (1.14e-322 neg)
PASS: numbers.test: number->string: multiples of smallest inexact: (1.2e-322 pos)
PASS: numbers.test: number->string: multiples of smallest inexact: (1.2e-322 neg)
PASS: numbers.test: number->string: multiples of smallest inexact: (1.24e-322 pos)
PASS: numbers.test: number->string: multiples of smallest inexact: (1.24e-322 neg)
PASS: numbers.test: number->string: multiples of smallest inexact: (1.3e-322 pos)
PASS: numbers.test: number->string: multiples of smallest inexact: (1.3e-322 neg)
PASS: numbers.test: number->string: multiples of smallest inexact: (1.33e-322 pos)
PASS: numbers.test: number->string: multiples of smallest inexact: (1.33e-322 neg)
PASS: numbers.test: number->string: multiples of smallest inexact: (1.4e-322 pos)
PASS: numbers.test: number->string: multiples of smallest inexact: (1.4e-322 neg)
PASS: numbers.test: number->string: multiples of smallest inexact: (1.43e-322 pos)
PASS: numbers.test: number->string: multiples of smallest inexact: (1.43e-322 neg)
PASS: numbers.test: number->string: multiples of smallest inexact: (1.5e-322 pos)
PASS: numbers.test: number->string: multiples of smallest inexact: (1.5e-322 neg)
PASS: numbers.test: number->string: multiples of smallest inexact: (1.53e-322 pos)
PASS: numbers.test: number->string: multiples of smallest inexact: (1.53e-322 neg)
PASS: numbers.test: number->string: multiples of smallest inexact: (1.6e-322 pos)
PASS: numbers.test: number->string: multiples of smallest inexact: (1.6e-322 neg)
PASS: numbers.test: number->string: multiples of smallest inexact: (1.63e-322 pos)
PASS: numbers.test: number->string: multiples of smallest inexact: (1.63e-322 neg)
PASS: numbers.test: number->string: multiples of smallest inexact: (1.7e-322 pos)
PASS: numbers.test: number->string: multiples of smallest inexact: (1.7e-322 neg)
PASS: numbers.test: number->string: multiples of smallest inexact: (1.73e-322 pos)
PASS: numbers.test: number->string: multiples of smallest inexact: (1.73e-322 neg)
PASS: numbers.test: number->string: multiples of smallest inexact: (1.8e-322 pos)
PASS: numbers.test: number->string: multiples of smallest inexact: (1.8e-322 neg)
PASS: numbers.test: number->string: multiples of smallest inexact: (1.83e-322 pos)
PASS: numbers.test: number->string: multiples of smallest inexact: (1.83e-322 neg)
PASS: numbers.test: number->string: multiples of smallest inexact: (1.9e-322 pos)
PASS: numbers.test: number->string: multiples of smallest inexact: (1.9e-322 neg)
PASS: numbers.test: number->string: multiples of smallest inexact: (1.93e-322 pos)
PASS: numbers.test: number->string: multiples of smallest inexact: (1.93e-322 neg)
PASS: numbers.test: number->string: multiples of smallest inexact: (2.0e-322 pos)
PASS: numbers.test: number->string: multiples of smallest inexact: (2.0e-322 neg)
PASS: numbers.test: number->string: one plus multiples of epsilon: (1.0000000000000002 pos)
PASS: numbers.test: number->string: one plus multiples of epsilon: (1.0000000000000002 neg)
PASS: numbers.test: number->string: one plus multiples of epsilon: (1.0000000000000004 pos)
PASS: numbers.test: number->string: one plus multiples of epsilon: (1.0000000000000004 neg)
PASS: numbers.test: number->string: one plus multiples of epsilon: (1.0000000000000007 pos)
PASS: numbers.test: number->string: one plus multiples of epsilon: (1.0000000000000007 neg)
PASS: numbers.test: number->string: one plus multiples of epsilon: (1.0000000000000009 pos)
PASS: numbers.test: number->string: one plus multiples of epsilon: (1.0000000000000009 neg)
PASS: numbers.test: number->string: one plus multiples of epsilon: (1.000000000000001 pos)
PASS: numbers.test: number->string: one plus multiples of epsilon: (1.000000000000001 neg)
PASS: numbers.test: number->string: one plus multiples of epsilon: (1.0000000000000013 pos)
PASS: numbers.test: number->string: one plus multiples of epsilon: (1.0000000000000013 neg)
PASS: numbers.test: number->string: one plus multiples of epsilon: (1.0000000000000016 pos)
PASS: numbers.test: number->string: one plus multiples of epsilon: (1.0000000000000016 neg)
PASS: numbers.test: number->string: one plus multiples of epsilon: (1.0000000000000018 pos)
PASS: numbers.test: number->string: one plus multiples of epsilon: (1.0000000000000018 neg)
PASS: numbers.test: number->string: one plus multiples of epsilon: (1.000000000000002 pos)
PASS: numbers.test: number->string: one plus multiples of epsilon: (1.000000000000002 neg)
PASS: numbers.test: number->string: one plus multiples of epsilon: (1.0000000000000022 pos)
PASS: numbers.test: number->string: one plus multiples of epsilon: (1.0000000000000022 neg)
PASS: numbers.test: number->string: one plus multiples of epsilon: (1.0000000000000024 pos)
PASS: numbers.test: number->string: one plus multiples of epsilon: (1.0000000000000024 neg)
PASS: numbers.test: number->string: one plus multiples of epsilon: (1.0000000000000027 pos)
PASS: numbers.test: number->string: one plus multiples of epsilon: (1.0000000000000027 neg)
PASS: numbers.test: number->string: one plus multiples of epsilon: (1.0000000000000029 pos)
PASS: numbers.test: number->string: one plus multiples of epsilon: (1.0000000000000029 neg)
PASS: numbers.test: number->string: one plus multiples of epsilon: (1.000000000000003 pos)
PASS: numbers.test: number->string: one plus multiples of epsilon: (1.000000000000003 neg)
PASS: numbers.test: number->string: one plus multiples of epsilon: (1.0000000000000033 pos)
PASS: numbers.test: number->string: one plus multiples of epsilon: (1.0000000000000033 neg)
PASS: numbers.test: number->string: one plus multiples of epsilon: (1.0000000000000036 pos)
PASS: numbers.test: number->string: one plus multiples of epsilon: (1.0000000000000036 neg)
PASS: numbers.test: number->string: one plus multiples of epsilon: (1.0000000000000038 pos)
PASS: numbers.test: number->string: one plus multiples of epsilon: (1.0000000000000038 neg)
PASS: numbers.test: number->string: one plus multiples of epsilon: (1.000000000000004 pos)
PASS: numbers.test: number->string: one plus multiples of epsilon: (1.000000000000004 neg)
PASS: numbers.test: number->string: one plus multiples of epsilon: (1.0000000000000042 pos)
PASS: numbers.test: number->string: one plus multiples of epsilon: (1.0000000000000042 neg)
PASS: numbers.test: number->string: one plus multiples of epsilon: (1.0000000000000044 pos)
PASS: numbers.test: number->string: one plus multiples of epsilon: (1.0000000000000044 neg)
PASS: numbers.test: number->string: one plus multiples of epsilon: (1.0000000000000047 pos)
PASS: numbers.test: number->string: one plus multiples of epsilon: (1.0000000000000047 neg)
PASS: numbers.test: number->string: one plus multiples of epsilon: (1.0000000000000049 pos)
PASS: numbers.test: number->string: one plus multiples of epsilon: (1.0000000000000049 neg)
PASS: numbers.test: number->string: one plus multiples of epsilon: (1.000000000000005 pos)
PASS: numbers.test: number->string: one plus multiples of epsilon: (1.000000000000005 neg)
PASS: numbers.test: number->string: one plus multiples of epsilon: (1.0000000000000053 pos)
PASS: numbers.test: number->string: one plus multiples of epsilon: (1.0000000000000053 neg)
PASS: numbers.test: number->string: one plus multiples of epsilon: (1.0000000000000056 pos)
PASS: numbers.test: number->string: one plus multiples of epsilon: (1.0000000000000056 neg)
PASS: numbers.test: number->string: one plus multiples of epsilon: (1.0000000000000058 pos)
PASS: numbers.test: number->string: one plus multiples of epsilon: (1.0000000000000058 neg)
PASS: numbers.test: number->string: one plus multiples of epsilon: (1.000000000000006 pos)
PASS: numbers.test: number->string: one plus multiples of epsilon: (1.000000000000006 neg)
PASS: numbers.test: number->string: one plus multiples of epsilon: (1.0000000000000062 pos)
PASS: numbers.test: number->string: one plus multiples of epsilon: (1.0000000000000062 neg)
PASS: numbers.test: number->string: one plus multiples of epsilon: (1.0000000000000064 pos)
PASS: numbers.test: number->string: one plus multiples of epsilon: (1.0000000000000064 neg)
PASS: numbers.test: number->string: one plus multiples of epsilon: (1.0000000000000067 pos)
PASS: numbers.test: number->string: one plus multiples of epsilon: (1.0000000000000067 neg)
PASS: numbers.test: number->string: one plus multiples of epsilon: (1.0000000000000069 pos)
PASS: numbers.test: number->string: one plus multiples of epsilon: (1.0000000000000069 neg)
PASS: numbers.test: number->string: one plus multiples of epsilon: (1.000000000000007 pos)
PASS: numbers.test: number->string: one plus multiples of epsilon: (1.000000000000007 neg)
PASS: numbers.test: number->string: one plus multiples of epsilon: (1.0000000000000073 pos)
PASS: numbers.test: number->string: one plus multiples of epsilon: (1.0000000000000073 neg)
PASS: numbers.test: number->string: one plus multiples of epsilon: (1.0000000000000075 pos)
PASS: numbers.test: number->string: one plus multiples of epsilon: (1.0000000000000075 neg)
PASS: numbers.test: number->string: one plus multiples of epsilon: (1.0000000000000078 pos)
PASS: numbers.test: number->string: one plus multiples of epsilon: (1.0000000000000078 neg)
PASS: numbers.test: number->string: one plus multiples of epsilon: (1.000000000000008 pos)
PASS: numbers.test: number->string: one plus multiples of epsilon: (1.000000000000008 neg)
PASS: numbers.test: number->string: one plus multiples of epsilon: (1.0000000000000082 pos)
PASS: numbers.test: number->string: one plus multiples of epsilon: (1.0000000000000082 neg)
PASS: numbers.test: number->string: one plus multiples of epsilon: (1.0000000000000084 pos)
PASS: numbers.test: number->string: one plus multiples of epsilon: (1.0000000000000084 neg)
PASS: numbers.test: number->string: one plus multiples of epsilon: (1.0000000000000087 pos)
PASS: numbers.test: number->string: one plus multiples of epsilon: (1.0000000000000087 neg)
PASS: numbers.test: number->string: one plus multiples of epsilon: (1.0000000000000089 pos)
PASS: numbers.test: number->string: one plus multiples of epsilon: (1.0000000000000089 neg)
PASS: numbers.test: number->string: one minus multiples of 1/2 epsilon: (0.9999999999999999 pos)
PASS: numbers.test: number->string: one minus multiples of 1/2 epsilon: (0.9999999999999999 neg)
PASS: numbers.test: number->string: one minus multiples of 1/2 epsilon: (0.9999999999999998 pos)
PASS: numbers.test: number->string: one minus multiples of 1/2 epsilon: (0.9999999999999998 neg)
PASS: numbers.test: number->string: one minus multiples of 1/2 epsilon: (0.9999999999999997 pos)
PASS: numbers.test: number->string: one minus multiples of 1/2 epsilon: (0.9999999999999997 neg)
PASS: numbers.test: number->string: one minus multiples of 1/2 epsilon: (0.9999999999999996 pos)
PASS: numbers.test: number->string: one minus multiples of 1/2 epsilon: (0.9999999999999996 neg)
PASS: numbers.test: number->string: one minus multiples of 1/2 epsilon: (0.9999999999999994 pos)
PASS: numbers.test: number->string: one minus multiples of 1/2 epsilon: (0.9999999999999994 neg)
PASS: numbers.test: number->string: one minus multiples of 1/2 epsilon: (0.9999999999999993 pos)
PASS: numbers.test: number->string: one minus multiples of 1/2 epsilon: (0.9999999999999993 neg)
PASS: numbers.test: number->string: one minus multiples of 1/2 epsilon: (0.9999999999999992 pos)
PASS: numbers.test: number->string: one minus multiples of 1/2 epsilon: (0.9999999999999992 neg)
PASS: numbers.test: number->string: one minus multiples of 1/2 epsilon: (0.9999999999999991 pos)
PASS: numbers.test: number->string: one minus multiples of 1/2 epsilon: (0.9999999999999991 neg)
PASS: numbers.test: number->string: one minus multiples of 1/2 epsilon: (0.999999999999999 pos)
PASS: numbers.test: number->string: one minus multiples of 1/2 epsilon: (0.999999999999999 neg)
PASS: numbers.test: number->string: one minus multiples of 1/2 epsilon: (0.9999999999999989 pos)
PASS: numbers.test: number->string: one minus multiples of 1/2 epsilon: (0.9999999999999989 neg)
PASS: numbers.test: number->string: one minus multiples of 1/2 epsilon: (0.9999999999999988 pos)
PASS: numbers.test: number->string: one minus multiples of 1/2 epsilon: (0.9999999999999988 neg)
PASS: numbers.test: number->string: one minus multiples of 1/2 epsilon: (0.9999999999999987 pos)
PASS: numbers.test: number->string: one minus multiples of 1/2 epsilon: (0.9999999999999987 neg)
PASS: numbers.test: number->string: one minus multiples of 1/2 epsilon: (0.9999999999999986 pos)
PASS: numbers.test: number->string: one minus multiples of 1/2 epsilon: (0.9999999999999986 neg)
PASS: numbers.test: number->string: one minus multiples of 1/2 epsilon: (0.9999999999999984 pos)
PASS: numbers.test: number->string: one minus multiples of 1/2 epsilon: (0.9999999999999984 neg)
PASS: numbers.test: number->string: one minus multiples of 1/2 epsilon: (0.9999999999999983 pos)
PASS: numbers.test: number->string: one minus multiples of 1/2 epsilon: (0.9999999999999983 neg)
PASS: numbers.test: number->string: one minus multiples of 1/2 epsilon: (0.9999999999999982 pos)
PASS: numbers.test: number->string: one minus multiples of 1/2 epsilon: (0.9999999999999982 neg)
PASS: numbers.test: number->string: one minus multiples of 1/2 epsilon: (0.9999999999999981 pos)
PASS: numbers.test: number->string: one minus multiples of 1/2 epsilon: (0.9999999999999981 neg)
PASS: numbers.test: number->string: one minus multiples of 1/2 epsilon: (0.999999999999998 pos)
PASS: numbers.test: number->string: one minus multiples of 1/2 epsilon: (0.999999999999998 neg)
PASS: numbers.test: number->string: one minus multiples of 1/2 epsilon: (0.9999999999999979 pos)
PASS: numbers.test: number->string: one minus multiples of 1/2 epsilon: (0.9999999999999979 neg)
PASS: numbers.test: number->string: one minus multiples of 1/2 epsilon: (0.9999999999999978 pos)
PASS: numbers.test: number->string: one minus multiples of 1/2 epsilon: (0.9999999999999978 neg)
PASS: numbers.test: number->string: one minus multiples of 1/2 epsilon: (0.9999999999999977 pos)
PASS: numbers.test: number->string: one minus multiples of 1/2 epsilon: (0.9999999999999977 neg)
PASS: numbers.test: number->string: one minus multiples of 1/2 epsilon: (0.9999999999999976 pos)
PASS: numbers.test: number->string: one minus multiples of 1/2 epsilon: (0.9999999999999976 neg)
PASS: numbers.test: number->string: one minus multiples of 1/2 epsilon: (0.9999999999999974 pos)
PASS: numbers.test: number->string: one minus multiples of 1/2 epsilon: (0.9999999999999974 neg)
PASS: numbers.test: number->string: one minus multiples of 1/2 epsilon: (0.9999999999999973 pos)
PASS: numbers.test: number->string: one minus multiples of 1/2 epsilon: (0.9999999999999973 neg)
PASS: numbers.test: number->string: one minus multiples of 1/2 epsilon: (0.9999999999999972 pos)
PASS: numbers.test: number->string: one minus multiples of 1/2 epsilon: (0.9999999999999972 neg)
PASS: numbers.test: number->string: one minus multiples of 1/2 epsilon: (0.9999999999999971 pos)
PASS: numbers.test: number->string: one minus multiples of 1/2 epsilon: (0.9999999999999971 neg)
PASS: numbers.test: number->string: one minus multiples of 1/2 epsilon: (0.999999999999997 pos)
PASS: numbers.test: number->string: one minus multiples of 1/2 epsilon: (0.999999999999997 neg)
PASS: numbers.test: number->string: one minus multiples of 1/2 epsilon: (0.9999999999999969 pos)
PASS: numbers.test: number->string: one minus multiples of 1/2 epsilon: (0.9999999999999969 neg)
PASS: numbers.test: number->string: one minus multiples of 1/2 epsilon: (0.9999999999999968 pos)
PASS: numbers.test: number->string: one minus multiples of 1/2 epsilon: (0.9999999999999968 neg)
PASS: numbers.test: number->string: one minus multiples of 1/2 epsilon: (0.9999999999999967 pos)
PASS: numbers.test: number->string: one minus multiples of 1/2 epsilon: (0.9999999999999967 neg)
PASS: numbers.test: number->string: one minus multiples of 1/2 epsilon: (0.9999999999999966 pos)
PASS: numbers.test: number->string: one minus multiples of 1/2 epsilon: (0.9999999999999966 neg)
PASS: numbers.test: number->string: one minus multiples of 1/2 epsilon: (0.9999999999999964 pos)
PASS: numbers.test: number->string: one minus multiples of 1/2 epsilon: (0.9999999999999964 neg)
PASS: numbers.test: number->string: one minus multiples of 1/2 epsilon: (0.9999999999999963 pos)
PASS: numbers.test: number->string: one minus multiples of 1/2 epsilon: (0.9999999999999963 neg)
PASS: numbers.test: number->string: one minus multiples of 1/2 epsilon: (0.9999999999999962 pos)
PASS: numbers.test: number->string: one minus multiples of 1/2 epsilon: (0.9999999999999962 neg)
PASS: numbers.test: number->string: one minus multiples of 1/2 epsilon: (0.9999999999999961 pos)
PASS: numbers.test: number->string: one minus multiples of 1/2 epsilon: (0.9999999999999961 neg)
PASS: numbers.test: number->string: one minus multiples of 1/2 epsilon: (0.999999999999996 pos)
PASS: numbers.test: number->string: one minus multiples of 1/2 epsilon: (0.999999999999996 neg)
PASS: numbers.test: number->string: one minus multiples of 1/2 epsilon: (0.9999999999999959 pos)
PASS: numbers.test: number->string: one minus multiples of 1/2 epsilon: (0.9999999999999959 neg)
PASS: numbers.test: number->string: one minus multiples of 1/2 epsilon: (0.9999999999999958 pos)
PASS: numbers.test: number->string: one minus multiples of 1/2 epsilon: (0.9999999999999958 neg)
PASS: numbers.test: number->string: one minus multiples of 1/2 epsilon: (0.9999999999999957 pos)
PASS: numbers.test: number->string: one minus multiples of 1/2 epsilon: (0.9999999999999957 neg)
PASS: numbers.test: number->string: one minus multiples of 1/2 epsilon: (0.9999999999999956 pos)
PASS: numbers.test: number->string: one minus multiples of 1/2 epsilon: (0.9999999999999956 neg)
PASS: numbers.test: number->string: (eqv? (string->number #e1e-10) 1/10000000000)
PASS: numbers.test: number->string: (string=? (number->string 11.333333333333334 12) b.4)
PASS: numbers.test: number->string: (string=? (number->string 1.324e44 16) 5.efe0a14fafdf8e24)
PASS: numbers.test: string->number: documented?
PASS: numbers.test: string->number: non number strings
PASS: numbers.test: string->number: valid number strings
PASS: numbers.test: string->number: valid complex number strings
PASS: numbers.test: string->number: exponent too big
PASS: numbers.test: string->number: 1@a
PASS: numbers.test: number?: (documented? number?)
PASS: numbers.test: number?: (number? 0)
PASS: numbers.test: number?: (number? 7)
PASS: numbers.test: number?: (number? -7)
PASS: numbers.test: number?: (number? 1.3)
PASS: numbers.test: number?: (number? (+ 1 fixnum-max))
PASS: numbers.test: number?: (number? (- 1 fixnum-min))
PASS: numbers.test: number?: (number? 3.0+4.0i)
PASS: numbers.test: number?: (not (number? a))
PASS: numbers.test: number?: (not (number? a))
PASS: numbers.test: number?: (not (number? (make-vector 0)))
PASS: numbers.test: number?: (not (number? (cons 1 2)))
PASS: numbers.test: number?: (not (number? #t))
PASS: numbers.test: number?: (not (number? (lambda () #t)))
PASS: numbers.test: number?: (not (number? (current-input-port)))
PASS: numbers.test: complex?: (documented? complex?)
PASS: numbers.test: complex?: (complex? 0)
PASS: numbers.test: complex?: (complex? 7)
PASS: numbers.test: complex?: (complex? -7)
PASS: numbers.test: complex?: (complex? (+ 1 fixnum-max))
PASS: numbers.test: complex?: (complex? (- 1 fixnum-min))
PASS: numbers.test: complex?: (complex? 1.3)
PASS: numbers.test: complex?: (complex? 3.0+4.0i)
PASS: numbers.test: complex?: (not (complex? a))
PASS: numbers.test: complex?: (not (complex? a))
PASS: numbers.test: complex?: (not (complex? (make-vector 0)))
PASS: numbers.test: complex?: (not (complex? (cons 1 2)))
PASS: numbers.test: complex?: (not (complex? #t))
PASS: numbers.test: complex?: (not (complex? (lambda () #t)))
PASS: numbers.test: complex?: (not (complex? (current-input-port)))
PASS: numbers.test: real?: (documented? real?)
PASS: numbers.test: real?: (real? 0)
PASS: numbers.test: real?: (real? 7)
PASS: numbers.test: real?: (real? -7)
PASS: numbers.test: real?: (real? (+ 1 fixnum-max))
PASS: numbers.test: real?: (real? (- 1 fixnum-min))
PASS: numbers.test: real?: (real? 1.3)
PASS: numbers.test: real?: (real? +inf.0)
PASS: numbers.test: real?: (real? -inf.0)
PASS: numbers.test: real?: (real? +nan.0)
PASS: numbers.test: real?: (not (real? +inf.0-inf.0i))
PASS: numbers.test: real?: (not (real? +nan.0+nan.0i))
PASS: numbers.test: real?: (not (real? 3.0+4.0i))
PASS: numbers.test: real?: (not (real? a))
PASS: numbers.test: real?: (not (real? a))
PASS: numbers.test: real?: (not (real? (make-vector 0)))
PASS: numbers.test: real?: (not (real? (cons 1 2)))
PASS: numbers.test: real?: (not (real? #t))
PASS: numbers.test: real?: (not (real? (lambda () #t)))
PASS: numbers.test: real?: (not (real? (current-input-port)))
PASS: numbers.test: rational?: (documented? rational?)
PASS: numbers.test: rational?: (rational? 0)
PASS: numbers.test: rational?: (rational? 7)
PASS: numbers.test: rational?: (rational? -7)
PASS: numbers.test: rational?: (rational? (+ 1 fixnum-max))
PASS: numbers.test: rational?: (rational? (- 1 fixnum-min))
PASS: numbers.test: rational?: (rational? 1.3)
PASS: numbers.test: rational?: (not (rational? +inf.0))
PASS: numbers.test: rational?: (not (rational? -inf.0))
PASS: numbers.test: rational?: (not (rational? +nan.0))
PASS: numbers.test: rational?: (not (rational? +inf.0-inf.0i))
PASS: numbers.test: rational?: (not (rational? +nan.0+nan.0i))
PASS: numbers.test: rational?: (not (rational? 3.0+4.0i))
PASS: numbers.test: rational?: (not (rational? a))
PASS: numbers.test: rational?: (not (rational? a))
PASS: numbers.test: rational?: (not (rational? (make-vector 0)))
PASS: numbers.test: rational?: (not (rational? (cons 1 2)))
PASS: numbers.test: rational?: (not (rational? #t))
PASS: numbers.test: rational?: (not (rational? (lambda () #t)))
PASS: numbers.test: rational?: (not (rational? (current-input-port)))
PASS: numbers.test: integer?: (documented? integer?)
PASS: numbers.test: integer?: (integer? 0)
PASS: numbers.test: integer?: (integer? 7)
PASS: numbers.test: integer?: (integer? -7)
PASS: numbers.test: integer?: (integer? (+ 1 fixnum-max))
PASS: numbers.test: integer?: (integer? (- 1 fixnum-min))
PASS: numbers.test: integer?: (and (= 3 (round 3)) (integer? 3))
PASS: numbers.test: integer?: (and (= 1.0 (round 1.0)) (integer? 1.0))
PASS: numbers.test: integer?: (not (integer? 1.3))
PASS: numbers.test: integer?: (not (integer? +inf.0))
PASS: numbers.test: integer?: (not (integer? -inf.0))
PASS: numbers.test: integer?: (not (integer? +nan.0))
PASS: numbers.test: integer?: (not (integer? +inf.0-inf.0i))
PASS: numbers.test: integer?: (not (integer? +nan.0+nan.0i))
PASS: numbers.test: integer?: (not (integer? 3.0+4.0i))
PASS: numbers.test: integer?: (not (integer? a))
PASS: numbers.test: integer?: (not (integer? a))
PASS: numbers.test: integer?: (not (integer? (make-vector 0)))
PASS: numbers.test: integer?: (not (integer? (cons 1 2)))
PASS: numbers.test: integer?: (not (integer? #t))
PASS: numbers.test: integer?: (not (integer? (lambda () #t)))
PASS: numbers.test: integer?: (not (integer? (current-input-port)))
PASS: numbers.test: exact-integer?: (documented? exact-integer?)
PASS: numbers.test: exact-integer?: (exact-integer? 0)
PASS: numbers.test: exact-integer?: (exact-integer? 7)
PASS: numbers.test: exact-integer?: (exact-integer? -7)
PASS: numbers.test: exact-integer?: (exact-integer? (+ 1 fixnum-max))
PASS: numbers.test: exact-integer?: (exact-integer? (- 1 fixnum-min))
PASS: numbers.test: exact-integer?: (and (= 1.0 (round 1.0)) (not (exact-integer? 1.0)))
PASS: numbers.test: exact-integer?: (not (exact-integer? 1.3))
PASS: numbers.test: exact-integer?: (not (exact-integer? +inf.0))
PASS: numbers.test: exact-integer?: (not (exact-integer? -inf.0))
PASS: numbers.test: exact-integer?: (not (exact-integer? +nan.0))
PASS: numbers.test: exact-integer?: (not (exact-integer? +inf.0-inf.0i))
PASS: numbers.test: exact-integer?: (not (exact-integer? +nan.0+nan.0i))
PASS: numbers.test: exact-integer?: (not (exact-integer? 3.0+4.0i))
PASS: numbers.test: exact-integer?: (not (exact-integer? a))
PASS: numbers.test: exact-integer?: (not (exact-integer? a))
PASS: numbers.test: exact-integer?: (not (exact-integer? (make-vector 0)))
PASS: numbers.test: exact-integer?: (not (exact-integer? (cons 1 2)))
PASS: numbers.test: exact-integer?: (not (exact-integer? #t))
PASS: numbers.test: exact-integer?: (not (exact-integer? (lambda () #t)))
PASS: numbers.test: exact-integer?: (not (exact-integer? (current-input-port)))
PASS: numbers.test: inexact?: (documented? inexact?)
PASS: numbers.test: inexact?: (not (inexact? 0))
PASS: numbers.test: inexact?: (not (inexact? 7))
PASS: numbers.test: inexact?: (not (inexact? -7))
PASS: numbers.test: inexact?: (not (inexact? (+ 1 fixnum-max)))
PASS: numbers.test: inexact?: (not (inexact? (- 1 fixnum-min)))
PASS: numbers.test: inexact?: (inexact? 1.3)
PASS: numbers.test: inexact?: (inexact? 3.1+4.2i)
PASS: numbers.test: inexact?: (inexact? +inf.0)
PASS: numbers.test: inexact?: (inexact? -inf.0)
PASS: numbers.test: inexact?: (inexact? +nan.0)
PASS: numbers.test: inexact?: char
PASS: numbers.test: inexact?: string
PASS: numbers.test: inexact?: vector
PASS: numbers.test: inexact?: cons
PASS: numbers.test: inexact?: bool
PASS: numbers.test: inexact?: procedure
PASS: numbers.test: inexact?: port
PASS: numbers.test: equal?: (documented? equal?)
PASS: numbers.test: equal?: (not (equal? 0.0 -0.0))
PASS: numbers.test: equal?: (equal? 0 0)
PASS: numbers.test: equal?: (equal? 7 7)
PASS: numbers.test: equal?: (equal? -7 -7)
PASS: numbers.test: equal?: (equal? (+ 1 fixnum-max) (+ 1 fixnum-max))
PASS: numbers.test: equal?: (equal? (- fixnum-min 1) (- fixnum-min 1))
PASS: numbers.test: equal?: (equal? 0.0 0.0)
PASS: numbers.test: equal?: (equal? -0.0 -0.0)
PASS: numbers.test: equal?: (equal? 0.0+0.0i 0.0+0.0i)
PASS: numbers.test: equal?: (equal? 0.0-0.0i 0.0-0.0i)
PASS: numbers.test: equal?: (equal? -0.0+0.0i -0.0+0.0i)
PASS: numbers.test: equal?: (not (equal? 0 1))
PASS: numbers.test: equal?: (not (equal? 0 0.0))
PASS: numbers.test: equal?: (not (equal? 1 1.0))
PASS: numbers.test: equal?: (not (equal? 0.0 0))
PASS: numbers.test: equal?: (not (equal? 1.0 1))
PASS: numbers.test: equal?: (not (equal? -1.0 -1))
PASS: numbers.test: equal?: (not (equal? 1.0 1.0+0.0i))
PASS: numbers.test: equal?: (not (equal? 0.0 0.0+0.0i))
PASS: numbers.test: equal?: (not (equal? 0.0+0.0i 0.0-0.0i))
PASS: numbers.test: equal?: (not (equal? 0.0+0.0i -0.0+0.0i))
PASS: numbers.test: equal?: (not (equal? fixnum-max (+ 1 fixnum-max)))
PASS: numbers.test: equal?: (not (equal? (+ 1 fixnum-max) fixnum-max))
PASS: numbers.test: equal?: (not (equal? (+ 1 fixnum-max) (+ 2 fixnum-max)))
PASS: numbers.test: equal?: (not (equal? fixnum-min (- fixnum-min 1)))
PASS: numbers.test: equal?: (not (equal? (- fixnum-min 1) fixnum-min))
PASS: numbers.test: equal?: (not (equal? (- fixnum-min 1) (- fixnum-min 2)))
PASS: numbers.test: equal?: (not (equal? (+ fixnum-max 1) (- fixnum-min 1)))
PASS: numbers.test: equal?: (not (equal? (ash 1 256) +inf.0))
PASS: numbers.test: equal?: (not (equal? +inf.0 (ash 1 256)))
PASS: numbers.test: equal?: (not (equal? (ash 1 256) -inf.0))
PASS: numbers.test: equal?: (not (equal? -inf.0 (ash 1 256)))
PASS: numbers.test: equal?: (not (equal? (ash 1 1024) +inf.0))
PASS: numbers.test: equal?: (not (equal? +inf.0 (ash 1 1024)))
PASS: numbers.test: equal?: (not (equal? (- (ash 1 1024)) -inf.0))
PASS: numbers.test: equal?: (not (equal? -inf.0 (- (ash 1 1024))))
PASS: numbers.test: equal?: (equal? +nan.0 +nan.0)
PASS: numbers.test: equal?: (equal? +nan.0 +nan.0)
PASS: numbers.test: equal?: (not (equal? +nan.0 0.0+nan.0i))
PASS: numbers.test: equal?: (not (equal? 0 +nan.0))
PASS: numbers.test: equal?: (not (equal? +nan.0 0))
PASS: numbers.test: equal?: (not (equal? 1 +nan.0))
PASS: numbers.test: equal?: (not (equal? +nan.0 1))
PASS: numbers.test: equal?: (not (equal? -1 +nan.0))
PASS: numbers.test: equal?: (not (equal? +nan.0 -1))
PASS: numbers.test: equal?: (not (equal? (ash 1 256) +nan.0))
PASS: numbers.test: equal?: (not (equal? +nan.0 (ash 1 256)))
PASS: numbers.test: equal?: (not (equal? (- (ash 1 256)) +nan.0))
PASS: numbers.test: equal?: (not (equal? +nan.0 (- (ash 1 256))))
PASS: numbers.test: equal?: (not (equal? (ash 1 8192) +nan.0))
PASS: numbers.test: equal?: (not (equal? +nan.0 (ash 1 8192)))
PASS: numbers.test: equal?: (not (equal? (- (ash 1 8192)) +nan.0))
PASS: numbers.test: equal?: (not (equal? +nan.0 (- (ash 1 8192))))
PASS: numbers.test: equal?: (not (equal? (ash 3 1023) +nan.0))
PASS: numbers.test: equal?: (not (equal? +nan.0 (ash 3 1023)))
PASS: numbers.test: eqv?: (documented? eqv?)
PASS: numbers.test: eqv?: (not (eqv? 0.0 -0.0))
PASS: numbers.test: eqv?: (eqv? 0 0)
PASS: numbers.test: eqv?: (eqv? 7 7)
PASS: numbers.test: eqv?: (eqv? -7 -7)
PASS: numbers.test: eqv?: (eqv? (+ 1 fixnum-max) (+ 1 fixnum-max))
PASS: numbers.test: eqv?: (eqv? (- fixnum-min 1) (- fixnum-min 1))
PASS: numbers.test: eqv?: (eqv? 0.0 0.0)
PASS: numbers.test: eqv?: (eqv? -0.0 -0.0)
PASS: numbers.test: eqv?: (eqv? 0.0+0.0i 0.0+0.0i)
PASS: numbers.test: eqv?: (eqv? 0.0-0.0i 0.0-0.0i)
PASS: numbers.test: eqv?: (eqv? -0.0+0.0i -0.0+0.0i)
PASS: numbers.test: eqv?: (not (eqv? 0.0 -0.0))
PASS: numbers.test: eqv?: (not (eqv? 0.0 0.0+0.0i))
PASS: numbers.test: eqv?: (not (eqv? 0.0+0.0i 0.0-0.0i))
PASS: numbers.test: eqv?: (not (eqv? 0.0+0.0i -0.0+0.0i))
PASS: numbers.test: eqv?: (not (eqv? 0 1))
PASS: numbers.test: eqv?: (not (eqv? 0 0.0))
PASS: numbers.test: eqv?: (not (eqv? 1 1.0))
PASS: numbers.test: eqv?: (not (eqv? 0.0 0))
PASS: numbers.test: eqv?: (not (eqv? 1.0 1))
PASS: numbers.test: eqv?: (not (eqv? -1.0 -1))
PASS: numbers.test: eqv?: (not (eqv? 1.0 1.0+0.0i))
PASS: numbers.test: eqv?: (not (eqv? 0.0 0.0+0.0i))
PASS: numbers.test: eqv?: (not (eqv? fixnum-max (+ 1 fixnum-max)))
PASS: numbers.test: eqv?: (not (eqv? (+ 1 fixnum-max) fixnum-max))
PASS: numbers.test: eqv?: (not (eqv? (+ 1 fixnum-max) (+ 2 fixnum-max)))
PASS: numbers.test: eqv?: (not (eqv? fixnum-min (- fixnum-min 1)))
PASS: numbers.test: eqv?: (not (eqv? (- fixnum-min 1) fixnum-min))
PASS: numbers.test: eqv?: (not (eqv? (- fixnum-min 1) (- fixnum-min 2)))
PASS: numbers.test: eqv?: (not (eqv? (+ fixnum-max 1) (- fixnum-min 1)))
PASS: numbers.test: eqv?: (not (eqv? (ash 1 256) +inf.0))
PASS: numbers.test: eqv?: (not (eqv? +inf.0 (ash 1 256)))
PASS: numbers.test: eqv?: (not (eqv? (ash 1 256) -inf.0))
PASS: numbers.test: eqv?: (not (eqv? -inf.0 (ash 1 256)))
PASS: numbers.test: eqv?: (not (eqv? (ash 1 1024) +inf.0))
PASS: numbers.test: eqv?: (not (eqv? +inf.0 (ash 1 1024)))
PASS: numbers.test: eqv?: (not (eqv? (- (ash 1 1024)) -inf.0))
PASS: numbers.test: eqv?: (not (eqv? -inf.0 (- (ash 1 1024))))
PASS: numbers.test: eqv?: (eqv? +nan.0 +nan.0)
PASS: numbers.test: eqv?: (not (eqv? +nan.0 0.0+nan.0i))
PASS: numbers.test: eqv?: (not (eqv? 0 +nan.0))
PASS: numbers.test: eqv?: (not (eqv? +nan.0 0))
PASS: numbers.test: eqv?: (not (eqv? 1 +nan.0))
PASS: numbers.test: eqv?: (not (eqv? +nan.0 1))
PASS: numbers.test: eqv?: (not (eqv? -1 +nan.0))
PASS: numbers.test: eqv?: (not (eqv? +nan.0 -1))
PASS: numbers.test: eqv?: (not (eqv? (ash 1 256) +nan.0))
PASS: numbers.test: eqv?: (not (eqv? +nan.0 (ash 1 256)))
PASS: numbers.test: eqv?: (not (eqv? (- (ash 1 256)) +nan.0))
PASS: numbers.test: eqv?: (not (eqv? +nan.0 (- (ash 1 256))))
PASS: numbers.test: eqv?: (not (eqv? (ash 1 8192) +nan.0))
PASS: numbers.test: eqv?: (not (eqv? +nan.0 (ash 1 8192)))
PASS: numbers.test: eqv?: (not (eqv? (- (ash 1 8192)) +nan.0))
PASS: numbers.test: eqv?: (not (eqv? +nan.0 (- (ash 1 8192))))
PASS: numbers.test: eqv?: (not (eqv? (ash 3 1023) +nan.0))
PASS: numbers.test: eqv?: (not (eqv? +nan.0 (ash 3 1023)))
PASS: numbers.test: =: (documented? =)
PASS: numbers.test: =: (= 7 7)
PASS: numbers.test: =: (= -7 -7)
PASS: numbers.test: =: (= 1.0 1)
PASS: numbers.test: =: (= 1 1.0)
PASS: numbers.test: =: (= -1 -1.0)
PASS: numbers.test: =: (= 0.0 0.0)
PASS: numbers.test: =: (= 0.0 -0.0)
PASS: numbers.test: =: (= 1 1.0+0.0i)
PASS: numbers.test: =: (= 0 0)
PASS: numbers.test: =: (= 0 0.0)
PASS: numbers.test: =: (= 0 -0.0)
PASS: numbers.test: =: (= 0 0.0+0.0i)
PASS: numbers.test: =: (= 0 0.0-0.0i)
PASS: numbers.test: =: (= 0 0.0+0.0i)
PASS: numbers.test: =: (= 0 -0.0-0.0i)
PASS: numbers.test: =: (= 0 0)
PASS: numbers.test: =: (= 0.0 0)
PASS: numbers.test: =: (= -0.0 0)
PASS: numbers.test: =: (= 0.0+0.0i 0)
PASS: numbers.test: =: (= 0.0-0.0i 0)
PASS: numbers.test: =: (= 0.0+0.0i 0)
PASS: numbers.test: =: (= -0.0-0.0i 0)
PASS: numbers.test: =: (= 0.0+0.0i 0.0-0.0i)
PASS: numbers.test: =: (= 0.0+0.0i -0.0+0.0i)
PASS: numbers.test: =: (= (+ 1 fixnum-max) (+ 1 fixnum-max))
PASS: numbers.test: =: (= (- fixnum-min 1) (- fixnum-min 1))
PASS: numbers.test: =: (not (= 0 1))
PASS: numbers.test: =: (not (= fixnum-max (+ 1 fixnum-max)))
PASS: numbers.test: =: (not (= (+ 1 fixnum-max) fixnum-max))
PASS: numbers.test: =: (not (= (+ 1 fixnum-max) (+ 2 fixnum-max)))
PASS: numbers.test: =: (not (= fixnum-min (- fixnum-min 1)))
PASS: numbers.test: =: (not (= (- fixnum-min 1) fixnum-min))
PASS: numbers.test: =: (not (= (- fixnum-min 1) (- fixnum-min 2)))
PASS: numbers.test: =: (not (= (+ fixnum-max 1) (- fixnum-min 1)))
PASS: numbers.test: =: (not (= (ash 1 256) +inf.0))
PASS: numbers.test: =: (not (= +inf.0 (ash 1 256)))
PASS: numbers.test: =: (not (= (ash 1 256) -inf.0))
PASS: numbers.test: =: (not (= -inf.0 (ash 1 256)))
PASS: numbers.test: =: (not (= (ash 1 1024) +inf.0))
PASS: numbers.test: =: (not (= +inf.0 (ash 1 1024)))
PASS: numbers.test: =: (not (= (- (ash 1 1024)) -inf.0))
PASS: numbers.test: =: (not (= -inf.0 (- (ash 1 1024))))
PASS: numbers.test: =: (not (= +nan.0 +nan.0))
PASS: numbers.test: =: (not (= 0 +nan.0))
PASS: numbers.test: =: (not (= +nan.0 0))
PASS: numbers.test: =: (not (= 1 +nan.0))
PASS: numbers.test: =: (not (= +nan.0 1))
PASS: numbers.test: =: (not (= -1 +nan.0))
PASS: numbers.test: =: (not (= +nan.0 -1))
PASS: numbers.test: =: (not (= (ash 1 256) +nan.0))
PASS: numbers.test: =: (not (= +nan.0 (ash 1 256)))
PASS: numbers.test: =: (not (= (- (ash 1 256)) +nan.0))
PASS: numbers.test: =: (not (= +nan.0 (- (ash 1 256))))
PASS: numbers.test: =: (not (= (ash 1 8192) +nan.0))
PASS: numbers.test: =: (not (= +nan.0 (ash 1 8192)))
PASS: numbers.test: =: (not (= (- (ash 1 8192)) +nan.0))
PASS: numbers.test: =: (not (= +nan.0 (- (ash 1 8192))))
PASS: numbers.test: =: (not (= (ash 3 1023) +nan.0))
PASS: numbers.test: =: (not (= +nan.0 (ash 3 1023)))
PASS: numbers.test: =: (= 1/2 0.5)
PASS: numbers.test: =: (not (= 1/3 0.3333333333333333))
PASS: numbers.test: =: (not (= 2/3 0.5))
PASS: numbers.test: =: (not (= 0.5 (+ 1/2 (/ 1 (ash 1 1000)))))
PASS: numbers.test: =: (= 1/2 0.5)
PASS: numbers.test: =: (not (= 0.3333333333333333 1/3))
PASS: numbers.test: =: (not (= 2/3 0.5))
PASS: numbers.test: =: (not (= 1/2 0.0+0.5i))
PASS: numbers.test: =: (= 0.5 1/2)
PASS: numbers.test: =: (not (= 0.5 2/3))
PASS: numbers.test: =: (not (= (+ 1/2 (/ 1 (ash 1 1000))) 0.5))
PASS: numbers.test: =: (= 0.5 1/2)
PASS: numbers.test: =: (not (= 0.5 2/3))
PASS: numbers.test: =: (not (= 0.0+0.5i 1/2))
PASS: numbers.test: =: (= (ash-flo 1.0 58) (ash 1 58))
PASS: numbers.test: =: (not (= (ash-flo 1.0 58) (#{1+}# (ash 1 58))))
PASS: numbers.test: =: (not (= (ash-flo 1.0 58) (#{1-}# (ash 1 58))))
PASS: numbers.test: =: (= (ash 1 58) (ash-flo 1.0 58))
PASS: numbers.test: =: (not (= (#{1+}# (ash 1 58)) (ash-flo 1.0 58)))
PASS: numbers.test: =: (not (= (#{1-}# (ash 1 58)) (ash-flo 1.0 58)))
PASS: numbers.test: =: (= (+ 0.0+0.0i (ash-flo 1.0 58)) (ash 1 58))
PASS: numbers.test: =: (not (= (+ 0.0+0.0i (ash-flo 1.0 58)) (#{1+}# (ash 1 58))))
PASS: numbers.test: =: (not (= (+ 0.0+0.0i (ash-flo 1.0 58)) (#{1-}# (ash 1 58))))
PASS: numbers.test: =: (= (ash 1 58) (+ 0.0+0.0i (ash-flo 1.0 58)))
PASS: numbers.test: =: (not (= (#{1+}# (ash 1 58)) (+ 0.0+0.0i (ash-flo 1.0 58))))
PASS: numbers.test: =: (not (= (#{1-}# (ash 1 58)) (+ 0.0+0.0i (ash-flo 1.0 58))))
PASS: numbers.test: =: (not (= 1/2 +inf.0))
PASS: numbers.test: =: (not (= 1/2 -inf.0))
PASS: numbers.test: =: (not (= +inf.0 1/2))
PASS: numbers.test: =: (not (= -inf.0 1/2))
PASS: numbers.test: =: (not (= 1/2 +inf.0+0.0i))
PASS: numbers.test: =: (not (= 1/2 -inf.0+0.0i))
PASS: numbers.test: =: (not (= +inf.0+0.0i 1/2))
PASS: numbers.test: =: (not (= -inf.0+0.0i 1/2))
PASS: numbers.test: <: documented?
PASS: numbers.test: <: (< 0 n): n = 0
PASS: numbers.test: <: (< 0 n): n = 0.0
PASS: numbers.test: <: (< 0 n): n = 1
PASS: numbers.test: <: (< 0 n): n = 1.0
PASS: numbers.test: <: (< 0 n): n = -1
PASS: numbers.test: <: (< 0 n): n = -1.0
PASS: numbers.test: <: (< 0 n): n = fixnum-max
PASS: numbers.test: <: (< 0 n): n = fixnum-max + 1
PASS: numbers.test: <: (< 0 n): n = fixnum-min
PASS: numbers.test: <: (< 0 n): n = fixnum-min - 1
PASS: numbers.test: <: (< 0.0 n): n = 0
PASS: numbers.test: <: (< 0.0 n): n = 0.0
PASS: numbers.test: <: (< 0.0 n): n = -0.0
PASS: numbers.test: <: (< 0.0 n): n = 1
PASS: numbers.test: <: (< 0.0 n): n = 1.0
PASS: numbers.test: <: (< 0.0 n): n = -1
PASS: numbers.test: <: (< 0.0 n): n = -1.0
PASS: numbers.test: <: (< 0.0 n): n = fixnum-max
PASS: numbers.test: <: (< 0.0 n): n = fixnum-max + 1
PASS: numbers.test: <: (< 0.0 n): n = fixnum-min
PASS: numbers.test: <: (< 0.0 n): n = fixnum-min - 1
PASS: numbers.test: <: (not (< -0.0 0.0))
PASS: numbers.test: <: (not (< -0.0 -0.0))
PASS: numbers.test: <: (< 1 n): n = 0
PASS: numbers.test: <: (< 1 n): n = 0.0
PASS: numbers.test: <: (< 1 n): n = 1
PASS: numbers.test: <: (< 1 n): n = 1.0
PASS: numbers.test: <: (< 1 n): n = -1
PASS: numbers.test: <: (< 1 n): n = -1.0
PASS: numbers.test: <: (< 1 n): n = fixnum-max
PASS: numbers.test: <: (< 1 n): n = fixnum-max + 1
PASS: numbers.test: <: (< 1 n): n = fixnum-min
PASS: numbers.test: <: (< 1 n): n = fixnum-min - 1
PASS: numbers.test: <: (< 1.0 n): n = 0
PASS: numbers.test: <: (< 1.0 n): n = 0.0
PASS: numbers.test: <: (< 1.0 n): n = 1
PASS: numbers.test: <: (< 1.0 n): n = 1.0
PASS: numbers.test: <: (< 1.0 n): n = -1
PASS: numbers.test: <: (< 1.0 n): n = -1.0
PASS: numbers.test: <: (< 1.0 n): n = fixnum-max
PASS: numbers.test: <: (< 1.0 n): n = fixnum-max + 1
PASS: numbers.test: <: (< 1.0 n): n = fixnum-min
PASS: numbers.test: <: (< 1.0 n): n = fixnum-min - 1
PASS: numbers.test: <: (< -1 n): n = 0
PASS: numbers.test: <: (< -1 n): n = 0.0
PASS: numbers.test: <: (< -1 n): n = 1
PASS: numbers.test: <: (< -1 n): n = 1.0
PASS: numbers.test: <: (< -1 n): n = -1
PASS: numbers.test: <: (< -1 n): n = -1.0
PASS: numbers.test: <: (< -1 n): n = fixnum-max
PASS: numbers.test: <: (< -1 n): n = fixnum-max + 1
PASS: numbers.test: <: (< -1 n): n = fixnum-min
PASS: numbers.test: <: (< -1 n): n = fixnum-min - 1
PASS: numbers.test: <: (< -1.0 n): n = 0
PASS: numbers.test: <: (< -1.0 n): n = 0.0
PASS: numbers.test: <: (< -1.0 n): n = 1
PASS: numbers.test: <: (< -1.0 n): n = 1.0
PASS: numbers.test: <: (< -1.0 n): n = -1
PASS: numbers.test: <: (< -1.0 n): n = -1.0
PASS: numbers.test: <: (< -1.0 n): n = fixnum-max
PASS: numbers.test: <: (< -1.0 n): n = fixnum-max + 1
PASS: numbers.test: <: (< -1.0 n): n = fixnum-min
PASS: numbers.test: <: (< -1.0 n): n = fixnum-min - 1
PASS: numbers.test: <: (< fixnum-max n): n = 0
PASS: numbers.test: <: (< fixnum-max n): n = 0.0
PASS: numbers.test: <: (< fixnum-max n): n = 1
PASS: numbers.test: <: (< fixnum-max n): n = 1.0
PASS: numbers.test: <: (< fixnum-max n): n = -1
PASS: numbers.test: <: (< fixnum-max n): n = -1.0
PASS: numbers.test: <: (< fixnum-max n): n = fixnum-max
PASS: numbers.test: <: (< fixnum-max n): n = fixnum-max + 1
PASS: numbers.test: <: (< fixnum-max n): n = fixnum-min
PASS: numbers.test: <: (< fixnum-max n): n = fixnum-min - 1
PASS: numbers.test: <: (< (+ fixnum-max 1) n): n = 0
PASS: numbers.test: <: (< (+ fixnum-max 1) n): n = 0.0
PASS: numbers.test: <: (< (+ fixnum-max 1) n): n = 1
PASS: numbers.test: <: (< (+ fixnum-max 1) n): n = 1.0
PASS: numbers.test: <: (< (+ fixnum-max 1) n): n = -1
PASS: numbers.test: <: (< (+ fixnum-max 1) n): n = -1.0
PASS: numbers.test: <: (< (+ fixnum-max 1) n): n = fixnum-max
PASS: numbers.test: <: (< (+ fixnum-max 1) n): n = fixnum-max + 1
PASS: numbers.test: <: (< (+ fixnum-max 1) n): n = fixnum-min
PASS: numbers.test: <: (< (+ fixnum-max 1) n): n = fixnum-min - 1
PASS: numbers.test: <: (< fixnum-min n): n = 0
PASS: numbers.test: <: (< fixnum-min n): n = 0.0
PASS: numbers.test: <: (< fixnum-min n): n = 1
PASS: numbers.test: <: (< fixnum-min n): n = 1.0
PASS: numbers.test: <: (< fixnum-min n): n = -1
PASS: numbers.test: <: (< fixnum-min n): n = -1.0
PASS: numbers.test: <: (< fixnum-min n): n = fixnum-max
PASS: numbers.test: <: (< fixnum-min n): n = fixnum-max + 1
PASS: numbers.test: <: (< fixnum-min n): n = fixnum-min
PASS: numbers.test: <: (< fixnum-min n): n = fixnum-min - 1
PASS: numbers.test: <: (< (- fixnum-min 1) n): n = 0
PASS: numbers.test: <: (< (- fixnum-min 1) n): n = 0.0
PASS: numbers.test: <: (< (- fixnum-min 1) n): n = 1
PASS: numbers.test: <: (< (- fixnum-min 1) n): n = 1.0
PASS: numbers.test: <: (< (- fixnum-min 1) n): n = -1
PASS: numbers.test: <: (< (- fixnum-min 1) n): n = -1.0
PASS: numbers.test: <: (< (- fixnum-min 1) n): n = fixnum-max
PASS: numbers.test: <: (< (- fixnum-min 1) n): n = fixnum-max + 1
PASS: numbers.test: <: (< (- fixnum-min 1) n): n = fixnum-min
PASS: numbers.test: <: (< (- fixnum-min 1) n): n = fixnum-min - 1
PASS: numbers.test: <: (< (ash 1 256) +inf.0)
PASS: numbers.test: <: (not (< +inf.0 (ash 1 256)))
PASS: numbers.test: <: (not (< (ash 1 256) -inf.0))
PASS: numbers.test: <: (< -inf.0 (ash 1 256))
PASS: numbers.test: <: (< (#{1-}# (ash 1 1024)) +inf.0)
PASS: numbers.test: <: (< (ash 1 1024) +inf.0)
PASS: numbers.test: <: (< (#{1+}# (ash 1 1024)) +inf.0)
PASS: numbers.test: <: (not (< +inf.0 (#{1-}# (ash 1 1024))))
PASS: numbers.test: <: (not (< +inf.0 (ash 1 1024)))
PASS: numbers.test: <: (not (< +inf.0 (#{1+}# (ash 1 1024))))
PASS: numbers.test: <: (< -inf.0 (- (#{1-}# (ash 1 1024))))
PASS: numbers.test: <: (< -inf.0 (- (ash 1 1024)))
PASS: numbers.test: <: (< -inf.0 (- (#{1+}# (ash 1 1024))))
PASS: numbers.test: <: (not (< (- (#{1-}# (ash 1 1024))) -inf.0))
PASS: numbers.test: <: (not (< (- (ash 1 1024)) -inf.0))
PASS: numbers.test: <: (not (< (- (#{1+}# (ash 1 1024))) -inf.0))
PASS: numbers.test: <: (not (< +nan.0 +nan.0))
PASS: numbers.test: <: (not (< 0 +nan.0))
PASS: numbers.test: <: (not (< +nan.0 0))
PASS: numbers.test: <: (not (< 1 +nan.0))
PASS: numbers.test: <: (not (< +nan.0 1))
PASS: numbers.test: <: (not (< -1 +nan.0))
PASS: numbers.test: <: (not (< +nan.0 -1))
PASS: numbers.test: <: (not (< (ash 1 256) +nan.0))
PASS: numbers.test: <: (not (< +nan.0 (ash 1 256)))
PASS: numbers.test: <: (not (< (- (ash 1 256)) +nan.0))
PASS: numbers.test: <: (not (< +nan.0 (- (ash 1 256))))
PASS: numbers.test: <: (not (< (ash 1 8192) +nan.0))
PASS: numbers.test: <: (not (< +nan.0 (ash 1 8192)))
PASS: numbers.test: <: (not (< (- (ash 1 8192)) +nan.0))
PASS: numbers.test: <: (not (< +nan.0 (- (ash 1 8192))))
PASS: numbers.test: <: (not (< (ash 3 1023) +nan.0))
PASS: numbers.test: <: (not (< (#{1+}# (ash 3 1023)) +nan.0))
PASS: numbers.test: <: (not (< (#{1-}# (ash 3 1023)) +nan.0))
PASS: numbers.test: <: (not (< +nan.0 (ash 3 1023)))
PASS: numbers.test: <: (not (< +nan.0 (#{1+}# (ash 3 1023))))
PASS: numbers.test: <: (not (< +nan.0 (#{1-}# (ash 3 1023))))
PASS: numbers.test: <: inum/frac: (< 2 9/4)
PASS: numbers.test: <: inum/frac: (< -2 9/4)
PASS: numbers.test: <: inum/frac: (< -2 7/4)
PASS: numbers.test: <: inum/frac: (< -2 -7/4)
PASS: numbers.test: <: inum/frac: (eq? #f (< 2 7/4))
PASS: numbers.test: <: inum/frac: (eq? #f (< 2 -7/4))
PASS: numbers.test: <: inum/frac: (eq? #f (< 2 -9/4))
PASS: numbers.test: <: inum/frac: (eq? #f (< -2 -9/4))
PASS: numbers.test: <: bignum/frac: (< x (* 4/3 x))
PASS: numbers.test: <: bignum/frac: (< (- x) (* 4/3 x))
PASS: numbers.test: <: bignum/frac: (< (- x) (* 2/3 x))
PASS: numbers.test: <: bignum/frac: (< (- x) (* -2/3 x))
PASS: numbers.test: <: bignum/frac: (eq? #f (< x (* 2/3 x)))
PASS: numbers.test: <: bignum/frac: (eq? #f (< x (* -2/3 x)))
PASS: numbers.test: <: bignum/frac: (eq? #f (< x (* -4/3 x)))
PASS: numbers.test: <: bignum/frac: (eq? #f (< (- x) (* -4/3 x)))
PASS: numbers.test: <: inum/flonum: (< 4 4.5)
PASS: numbers.test: <: inum/flonum: (< 4.5 5)
PASS: numbers.test: <: inum/flonum: (< -5 -4.5)
PASS: numbers.test: <: inum/flonum: (< -4.5 4)
PASS: numbers.test: <: inum/flonum: (not (< 4.5 4))
PASS: numbers.test: <: inum/flonum: (not (< 5 4.5))
PASS: numbers.test: <: inum/flonum: (not (< -4.5 -5))
PASS: numbers.test: <: inum/flonum: (not (< 4 -4.5))
PASS: numbers.test: <: inum/flonum: (< 4 +inf.0)
PASS: numbers.test: <: inum/flonum: (< -4 +inf.0)
PASS: numbers.test: <: inum/flonum: (< -inf.0 4)
PASS: numbers.test: <: inum/flonum: (< -inf.0 -4)
PASS: numbers.test: <: inum/flonum: (not (< +inf.0 4))
PASS: numbers.test: <: inum/flonum: (not (< +inf.0 -4))
PASS: numbers.test: <: inum/flonum: (not (< 4 -inf.0))
PASS: numbers.test: <: inum/flonum: (not (< -4 -inf.0))
PASS: numbers.test: <: inum/flonum: (not (< +nan.0 4))
PASS: numbers.test: <: inum/flonum: (not (< +nan.0 -4))
PASS: numbers.test: <: inum/flonum: (not (< 4 +nan.0))
PASS: numbers.test: <: inum/flonum: (not (< -4 +nan.0))
PASS: numbers.test: <: inum/flonum: (< most-positive-fixnum (expt 2.0 fixnum-bit))
PASS: numbers.test: <: inum/flonum: (not (< (expt 2.0 fixnum-bit) most-positive-fixnum))
PASS: numbers.test: <: inum/flonum: (< (- (expt 2.0 fixnum-bit)) most-negative-fixnum)
PASS: numbers.test: <: inum/flonum: (not (< most-negative-fixnum (- (expt 2.0 fixnum-bit))))
PASS: numbers.test: <: inum/flonum: (< most-positive-fixnum (exact->inexact (+ 1 most-positive-fixnum)))
PASS: numbers.test: <: inum/flonum: (< (exact->inexact (- (+ 1 most-positive-fixnum))) (- most-positive-fixnum))
PASS: numbers.test: <: flonum/frac: (< 0.75 4/3)
PASS: numbers.test: <: flonum/frac: (< -0.75 4/3)
PASS: numbers.test: <: flonum/frac: (< -0.75 2/3)
PASS: numbers.test: <: flonum/frac: (< -0.75 -2/3)
PASS: numbers.test: <: flonum/frac: (eq? #f (< 0.75 2/3))
PASS: numbers.test: <: flonum/frac: (eq? #f (< 0.75 -2/3))
PASS: numbers.test: <: flonum/frac: (eq? #f (< 0.75 -4/3))
PASS: numbers.test: <: flonum/frac: (eq? #f (< -0.75 -4/3))
PASS: numbers.test: <: flonum/frac: (< -inf.0 4/3)
PASS: numbers.test: <: flonum/frac: (< -inf.0 -4/3)
PASS: numbers.test: <: flonum/frac: (eq? #f (< +inf.0 4/3))
PASS: numbers.test: <: flonum/frac: (eq? #f (< +inf.0 -4/3))
PASS: numbers.test: <: flonum/frac: (eq? #f (< +nan.0 4/3))
PASS: numbers.test: <: flonum/frac: (eq? #f (< +nan.0 -4/3))
PASS: numbers.test: <: frac/inum: (< 7/4 2)
PASS: numbers.test: <: frac/inum: (< -7/4 2)
PASS: numbers.test: <: frac/inum: (< -9/4 2)
PASS: numbers.test: <: frac/inum: (< -9/4 -2)
PASS: numbers.test: <: frac/inum: (eq? #f (< 9/4 2))
PASS: numbers.test: <: frac/inum: (eq? #f (< 9/4 -2))
PASS: numbers.test: <: frac/inum: (eq? #f (< 7/4 -2))
PASS: numbers.test: <: frac/inum: (eq? #f (< -7/4 -2))
PASS: numbers.test: <: frac/bignum: (< (* 2/3 x) x)
PASS: numbers.test: <: frac/bignum: (< (* -2/3 x) x)
PASS: numbers.test: <: frac/bignum: (< (* -4/3 x) x)
PASS: numbers.test: <: frac/bignum: (< (* -4/3 x) (- x))
PASS: numbers.test: <: frac/bignum: (eq? #f (< (* 4/3 x) x))
PASS: numbers.test: <: frac/bignum: (eq? #f (< (* 4/3 x) (- x)))
PASS: numbers.test: <: frac/bignum: (eq? #f (< (* 2/3 x) (- x)))
PASS: numbers.test: <: frac/bignum: (eq? #f (< (* -2/3 x) (- x)))
PASS: numbers.test: <: frac/flonum: (< 2/3 0.75)
PASS: numbers.test: <: frac/flonum: (< -2/3 0.75)
PASS: numbers.test: <: frac/flonum: (< -4/3 0.75)
PASS: numbers.test: <: frac/flonum: (< -4/3 -0.75)
PASS: numbers.test: <: frac/flonum: (eq? #f (< 4/3 0.75))
PASS: numbers.test: <: frac/flonum: (eq? #f (< 4/3 -0.75))
PASS: numbers.test: <: frac/flonum: (eq? #f (< 2/3 -0.75))
PASS: numbers.test: <: frac/flonum: (eq? #f (< -2/3 -0.75))
PASS: numbers.test: <: frac/flonum: (< 4/3 +inf.0)
PASS: numbers.test: <: frac/flonum: (< -4/3 +inf.0)
PASS: numbers.test: <: frac/flonum: (eq? #f (< 4/3 -inf.0))
PASS: numbers.test: <: frac/flonum: (eq? #f (< -4/3 -inf.0))
PASS: numbers.test: <: frac/flonum: (eq? #f (< 4/3 +nan.0))
PASS: numbers.test: <: frac/flonum: (eq? #f (< -4/3 +nan.0))
PASS: numbers.test: <: frac/frac: (< 2/3 6/7)
PASS: numbers.test: <: frac/frac: (< -2/3 6/7)
PASS: numbers.test: <: frac/frac: (< -4/3 6/7)
PASS: numbers.test: <: frac/frac: (< -4/3 -6/7)
PASS: numbers.test: <: frac/frac: (eq? #f (< 4/3 6/7))
PASS: numbers.test: <: frac/frac: (eq? #f (< 4/3 -6/7))
PASS: numbers.test: <: frac/frac: (eq? #f (< 2/3 -6/7))
PASS: numbers.test: <: frac/frac: (eq? #f (< -2/3 -6/7))
PASS: numbers.test: zero?: (documented? zero?)
PASS: numbers.test: zero?: (zero? 0)
PASS: numbers.test: zero?: (zero? 0.0)
PASS: numbers.test: zero?: (zero? -0.0)
PASS: numbers.test: zero?: (zero? 0.0+0.0i)
PASS: numbers.test: zero?: (zero? 0.0-0.0i)
PASS: numbers.test: zero?: (zero? 0.0+0.0i)
PASS: numbers.test: zero?: (zero? -0.0-0.0i)
PASS: numbers.test: zero?: (not (zero? 7))
PASS: numbers.test: zero?: (not (zero? -7))
PASS: numbers.test: zero?: (not (zero? 1/7))
PASS: numbers.test: zero?: (not (zero? -inf.0))
PASS: numbers.test: zero?: (not (zero? +inf.0))
PASS: numbers.test: zero?: (not (zero? +nan.0))
PASS: numbers.test: zero?: (not (zero? (+ 1 fixnum-max)))
PASS: numbers.test: zero?: (not (zero? (- 1 fixnum-min)))
PASS: numbers.test: zero?: (not (zero? 1.3))
PASS: numbers.test: zero?: (not (zero? 3.1+4.2i))
PASS: numbers.test: zero?: (not (zero? 1.0+0.0i))
PASS: numbers.test: zero?: (not (zero? 0.0-1.0i))
PASS: numbers.test: positive?: (documented? positive?)
PASS: numbers.test: positive?: (positive? 1)
PASS: numbers.test: positive?: (positive? (+ fixnum-max 1))
PASS: numbers.test: positive?: (positive? 1.3)
PASS: numbers.test: positive?: (not (positive? 0))
PASS: numbers.test: positive?: (not (positive? -1))
PASS: numbers.test: positive?: (not (positive? (- fixnum-min 1)))
PASS: numbers.test: positive?: (not (positive? -1.3))
PASS: numbers.test: negative?: (documented? negative?)
PASS: numbers.test: negative?: (not (negative? 1))
PASS: numbers.test: negative?: (not (negative? (+ fixnum-max 1)))
PASS: numbers.test: negative?: (not (negative? 1.3))
PASS: numbers.test: negative?: (not (negative? 0))
PASS: numbers.test: negative?: (negative? -1)
PASS: numbers.test: negative?: (negative? (- fixnum-min 1))
PASS: numbers.test: negative?: (negative? -1.3)
PASS: numbers.test: max: no args
PASS: numbers.test: max: one complex
PASS: numbers.test: max: inum/complex
PASS: numbers.test: max: big/complex
PASS: numbers.test: max: real/complex
PASS: numbers.test: max: frac/complex
PASS: numbers.test: max: complex/inum
PASS: numbers.test: max: complex/big
PASS: numbers.test: max: complex/real
PASS: numbers.test: max: complex/frac
PASS: numbers.test: max: inum / frac: (eqv? 3 (max 3 5/2))
PASS: numbers.test: max: inum / frac: (eqv? 5/2 (max 2 5/2))
PASS: numbers.test: max: frac / inum: (eqv? 3 (max 5/2 3))
PASS: numbers.test: max: frac / inum: (eqv? 5/2 (max 5/2 2))
PASS: numbers.test: max: infinities and NaNs: (eqv? +inf.0 (max +inf.0 123))
PASS: numbers.test: max: infinities and NaNs: (eqv? +inf.0 (max 123 +inf.0))
PASS: numbers.test: max: infinities and NaNs: (eqv? +inf.0 (max +inf.0 -123.3))
PASS: numbers.test: max: infinities and NaNs: (eqv? +inf.0 (max -123.3 +inf.0))
PASS: numbers.test: max: infinities and NaNs: (eqv? +inf.0 (max +inf.0 -7/2))
PASS: numbers.test: max: infinities and NaNs: (eqv? +inf.0 (max -7/2 +inf.0))
PASS: numbers.test: max: infinities and NaNs: (eqv? +inf.0 (max +inf.0 -1.0e20))
PASS: numbers.test: max: infinities and NaNs: (eqv? +inf.0 (max -1.0e20 +inf.0))
PASS: numbers.test: max: infinities and NaNs: (eqv? +inf.0 (max +inf.0 (- big*2)))
PASS: numbers.test: max: infinities and NaNs: (eqv? +inf.0 (max (- big*2) +inf.0))
PASS: numbers.test: max: infinities and NaNs: (eqv? +inf.0 (max +inf.0 +inf.0))
PASS: numbers.test: max: infinities and NaNs: (eqv? +inf.0 (max +inf.0 +inf.0))
PASS: numbers.test: max: infinities and NaNs: (eqv? +inf.0 (max +inf.0 +inf.0))
PASS: numbers.test: max: infinities and NaNs: (real-nan? (max +nan.0 123))
PASS: numbers.test: max: infinities and NaNs: (real-nan? (max 123 +nan.0))
PASS: numbers.test: max: infinities and NaNs: (real-nan? (max +nan.0 123.3))
PASS: numbers.test: max: infinities and NaNs: (real-nan? (max 123.3 +nan.0))
PASS: numbers.test: max: infinities and NaNs: (real-nan? (max +nan.0 -7/2))
PASS: numbers.test: max: infinities and NaNs: (real-nan? (max -7/2 +nan.0))
PASS: numbers.test: max: infinities and NaNs: (real-nan? (max +nan.0 -1.0e20))
PASS: numbers.test: max: infinities and NaNs: (real-nan? (max -1.0e20 +nan.0))
PASS: numbers.test: max: infinities and NaNs: (real-nan? (max +nan.0 (- big*2)))
PASS: numbers.test: max: infinities and NaNs: (real-nan? (max (- big*2) +nan.0))
PASS: numbers.test: max: infinities and NaNs: (real-nan? (max +nan.0 -inf.0))
PASS: numbers.test: max: infinities and NaNs: (real-nan? (max -inf.0 +nan.0))
PASS: numbers.test: max: infinities and NaNs: (real-nan? (max +nan.0 +nan.0))
PASS: numbers.test: max: infinities and NaNs: (real-nan? (max +inf.0 +nan.0))
PASS: numbers.test: max: infinities and NaNs: (real-nan? (max +nan.0 +inf.0))
PASS: numbers.test: max: infinities and NaNs: (eqv? -inf.0 (max -inf.0 -inf.0))
PASS: numbers.test: max: infinities and NaNs: (eqv? -123.0 (max -inf.0 -123))
PASS: numbers.test: max: infinities and NaNs: (eqv? -123.0 (max -123 -inf.0))
PASS: numbers.test: max: infinities and NaNs: (eqv? -123.3 (max -inf.0 -123.3))
PASS: numbers.test: max: infinities and NaNs: (eqv? -123.3 (max -123.3 -inf.0))
PASS: numbers.test: max: infinities and NaNs: (eqv? -3.5 (max -inf.0 -7/2))
PASS: numbers.test: max: infinities and NaNs: (eqv? -3.5 (max -7/2 -inf.0))
PASS: numbers.test: max: infinities and NaNs: (eqv? -1.0e20 (max -inf.0 -1.0e20))
PASS: numbers.test: max: infinities and NaNs: (eqv? -1.0e20 (max -1.0e20 -inf.0))
PASS: numbers.test: max: infinities and NaNs: (eqv? (exact->inexact (- big*2)) (max -inf.0 (- big*2)))
PASS: numbers.test: max: infinities and NaNs: (eqv? (exact->inexact (- big*2)) (max (- big*2) -inf.0))
PASS: numbers.test: max: signed zeroes: (eqv? 0.0 (max 0.0 0.0))
PASS: numbers.test: max: signed zeroes: (eqv? 0.0 (max 0.0 -0.0))
PASS: numbers.test: max: signed zeroes: (eqv? 0.0 (max -0.0 0.0))
PASS: numbers.test: max: signed zeroes: (eqv? -0.0 (max -0.0 -0.0))
PASS: numbers.test: max: signed zeroes: (eqv? 0.0 (max -0.0 0))
PASS: numbers.test: max: signed zeroes: (eqv? 0.0 (max 0.0 0))
PASS: numbers.test: max: signed zeroes: (eqv? 0.0 (max 0 -0.0))
PASS: numbers.test: max: signed zeroes: (eqv? 0.0 (max 0 0.0))
PASS: numbers.test: max: signed zeroes: (eqv? 0 (min 0 0))
PASS: numbers.test: max: big / frac: (eqv? big*2 (max big*2 5/2))
PASS: numbers.test: max: big / frac: (eqv? 5/2 (max (- big*2) 5/2))
PASS: numbers.test: max: frac / big: (eqv? big*2 (max 5/2 big*2))
PASS: numbers.test: max: frac / big: (eqv? 5/2 (max 5/2 (- big*2)))
PASS: numbers.test: max: big / real: (real-nan? (max big*5 +nan.0))
PASS: numbers.test: max: big / real: (eqv? (exact->inexact big*5) (max big*5 -inf.0))
PASS: numbers.test: max: big / real: (eqv? (exact->inexact big*5) (max big*5 1.0))
PASS: numbers.test: max: big / real: (eqv? +inf.0 (max big*5 +inf.0))
PASS: numbers.test: max: big / real: (eqv? 1.0 (max (- big*5) 1.0))
PASS: numbers.test: max: real / big: (real-nan? (max +nan.0 big*5))
PASS: numbers.test: max: real / big: (eqv? (exact->inexact big*5) (max -inf.0 big*5))
PASS: numbers.test: max: real / big: (eqv? (exact->inexact big*5) (max 1.0 big*5))
PASS: numbers.test: max: real / big: (eqv? +inf.0 (max +inf.0 big*5))
PASS: numbers.test: max: real / big: (eqv? 1.0 (max 1.0 (- big*5)))
PASS: numbers.test: max: frac / frac: (eqv? 2/3 (max 1/2 2/3))
PASS: numbers.test: max: frac / frac: (eqv? 2/3 (max 2/3 1/2))
PASS: numbers.test: max: frac / frac: (eqv? -1/2 (max -1/2 -2/3))
PASS: numbers.test: max: frac / frac: (eqv? -1/2 (max -2/3 -1/2))
PASS: numbers.test: max: real / real: (real-nan? (max 123.0 +nan.0))
PASS: numbers.test: max: real / real: (real-nan? (max +nan.0 123.0))
PASS: numbers.test: max: real / real: (real-nan? (max +nan.0 +nan.0))
PASS: numbers.test: max: real / real: (eqv? 456.0 (max 123.0 456.0))
PASS: numbers.test: max: real / real: (eqv? 456.0 (max 456.0 123.0))
PASS: numbers.test: max: (179769313486231590772930519078902473361797697894230657273430081157732675805500963132708477322407536021120113879871393357658789768814416622492847430639474124377767893424865485276302219601246094119453082952085005768838150682342462881473913110540827237163350510684586298239947245938479716304835356329624224137215 +inf.0)
PASS: numbers.test: max: (+inf.0 179769313486231590772930519078902473361797697894230657273430081157732675805500963132708477322407536021120113879871393357658789768814416622492847430639474124377767893424865485276302219601246094119453082952085005768838150682342462881473913110540827237163350510684586298239947245938479716304835356329624224137215)
PASS: numbers.test: max: (179769313486231590772930519078902473361797697894230657273430081157732675805500963132708477322407536021120113879871393357658789768814416622492847430639474124377767893424865485276302219601246094119453082952085005768838150682342462881473913110540827237163350510684586298239947245938479716304835356329624224137215 -inf.0)
PASS: numbers.test: max: (-inf.0 179769313486231590772930519078902473361797697894230657273430081157732675805500963132708477322407536021120113879871393357658789768814416622492847430639474124377767893424865485276302219601246094119453082952085005768838150682342462881473913110540827237163350510684586298239947245938479716304835356329624224137215)
PASS: numbers.test: max: (179769313486231590772930519078902473361797697894230657273430081157732675805500963132708477322407536021120113879871393357658789768814416622492847430639474124377767893424865485276302219601246094119453082952085005768838150682342462881473913110540827237163350510684586298239947245938479716304835356329624224137216 +inf.0)
PASS: numbers.test: max: (+inf.0 179769313486231590772930519078902473361797697894230657273430081157732675805500963132708477322407536021120113879871393357658789768814416622492847430639474124377767893424865485276302219601246094119453082952085005768838150682342462881473913110540827237163350510684586298239947245938479716304835356329624224137216)
PASS: numbers.test: max: (179769313486231590772930519078902473361797697894230657273430081157732675805500963132708477322407536021120113879871393357658789768814416622492847430639474124377767893424865485276302219601246094119453082952085005768838150682342462881473913110540827237163350510684586298239947245938479716304835356329624224137216 -inf.0)
PASS: numbers.test: max: (-inf.0 179769313486231590772930519078902473361797697894230657273430081157732675805500963132708477322407536021120113879871393357658789768814416622492847430639474124377767893424865485276302219601246094119453082952085005768838150682342462881473913110540827237163350510684586298239947245938479716304835356329624224137216)
PASS: numbers.test: max: (179769313486231590772930519078902473361797697894230657273430081157732675805500963132708477322407536021120113879871393357658789768814416622492847430639474124377767893424865485276302219601246094119453082952085005768838150682342462881473913110540827237163350510684586298239947245938479716304835356329624224137217 +inf.0)
PASS: numbers.test: max: (+inf.0 179769313486231590772930519078902473361797697894230657273430081157732675805500963132708477322407536021120113879871393357658789768814416622492847430639474124377767893424865485276302219601246094119453082952085005768838150682342462881473913110540827237163350510684586298239947245938479716304835356329624224137217)
PASS: numbers.test: max: (179769313486231590772930519078902473361797697894230657273430081157732675805500963132708477322407536021120113879871393357658789768814416622492847430639474124377767893424865485276302219601246094119453082952085005768838150682342462881473913110540827237163350510684586298239947245938479716304835356329624224137217 -inf.0)
PASS: numbers.test: max: (-inf.0 179769313486231590772930519078902473361797697894230657273430081157732675805500963132708477322407536021120113879871393357658789768814416622492847430639474124377767893424865485276302219601246094119453082952085005768838150682342462881473913110540827237163350510684586298239947245938479716304835356329624224137217)
PASS: numbers.test: max: (-179769313486231590772930519078902473361797697894230657273430081157732675805500963132708477322407536021120113879871393357658789768814416622492847430639474124377767893424865485276302219601246094119453082952085005768838150682342462881473913110540827237163350510684586298239947245938479716304835356329624224137215 +inf.0)
PASS: numbers.test: max: (+inf.0 -179769313486231590772930519078902473361797697894230657273430081157732675805500963132708477322407536021120113879871393357658789768814416622492847430639474124377767893424865485276302219601246094119453082952085005768838150682342462881473913110540827237163350510684586298239947245938479716304835356329624224137215)
PASS: numbers.test: max: (-179769313486231590772930519078902473361797697894230657273430081157732675805500963132708477322407536021120113879871393357658789768814416622492847430639474124377767893424865485276302219601246094119453082952085005768838150682342462881473913110540827237163350510684586298239947245938479716304835356329624224137215 -inf.0)
PASS: numbers.test: max: (-inf.0 -179769313486231590772930519078902473361797697894230657273430081157732675805500963132708477322407536021120113879871393357658789768814416622492847430639474124377767893424865485276302219601246094119453082952085005768838150682342462881473913110540827237163350510684586298239947245938479716304835356329624224137215)
PASS: numbers.test: max: (-179769313486231590772930519078902473361797697894230657273430081157732675805500963132708477322407536021120113879871393357658789768814416622492847430639474124377767893424865485276302219601246094119453082952085005768838150682342462881473913110540827237163350510684586298239947245938479716304835356329624224137216 +inf.0)
PASS: numbers.test: max: (+inf.0 -179769313486231590772930519078902473361797697894230657273430081157732675805500963132708477322407536021120113879871393357658789768814416622492847430639474124377767893424865485276302219601246094119453082952085005768838150682342462881473913110540827237163350510684586298239947245938479716304835356329624224137216)
PASS: numbers.test: max: (-179769313486231590772930519078902473361797697894230657273430081157732675805500963132708477322407536021120113879871393357658789768814416622492847430639474124377767893424865485276302219601246094119453082952085005768838150682342462881473913110540827237163350510684586298239947245938479716304835356329624224137216 -inf.0)
PASS: numbers.test: max: (-inf.0 -179769313486231590772930519078902473361797697894230657273430081157732675805500963132708477322407536021120113879871393357658789768814416622492847430639474124377767893424865485276302219601246094119453082952085005768838150682342462881473913110540827237163350510684586298239947245938479716304835356329624224137216)
PASS: numbers.test: max: (-179769313486231590772930519078902473361797697894230657273430081157732675805500963132708477322407536021120113879871393357658789768814416622492847430639474124377767893424865485276302219601246094119453082952085005768838150682342462881473913110540827237163350510684586298239947245938479716304835356329624224137217 +inf.0)
PASS: numbers.test: max: (+inf.0 -179769313486231590772930519078902473361797697894230657273430081157732675805500963132708477322407536021120113879871393357658789768814416622492847430639474124377767893424865485276302219601246094119453082952085005768838150682342462881473913110540827237163350510684586298239947245938479716304835356329624224137217)
PASS: numbers.test: max: (-179769313486231590772930519078902473361797697894230657273430081157732675805500963132708477322407536021120113879871393357658789768814416622492847430639474124377767893424865485276302219601246094119453082952085005768838150682342462881473913110540827237163350510684586298239947245938479716304835356329624224137217 -inf.0)
PASS: numbers.test: max: (-inf.0 -179769313486231590772930519078902473361797697894230657273430081157732675805500963132708477322407536021120113879871393357658789768814416622492847430639474124377767893424865485276302219601246094119453082952085005768838150682342462881473913110540827237163350510684586298239947245938479716304835356329624224137217)
PASS: numbers.test: max: (real-nan? (max (ash 1 2048) +nan.0))
PASS: numbers.test: max: (real-nan? (max +nan.0 (ash 1 2048)))
PASS: numbers.test: min: no args
PASS: numbers.test: min: one complex
PASS: numbers.test: min: inum/complex
PASS: numbers.test: min: big/complex
PASS: numbers.test: min: real/complex
PASS: numbers.test: min: frac/complex
PASS: numbers.test: min: complex/inum
PASS: numbers.test: min: complex/big
PASS: numbers.test: min: complex/real
PASS: numbers.test: min: complex/frac
PASS: numbers.test: min: (documented? min)
PASS: numbers.test: min: (eqv? 1 (min 7 3 1 5))
PASS: numbers.test: min: (eqv? 1 (min 1 7 3 5))
PASS: numbers.test: min: (eqv? 1 (min 7 3 5 1))
PASS: numbers.test: min: (eqv? -7 (min 2 3 4 -2 5 -7 1 -1 4 2))
PASS: numbers.test: min: (eqv? -7 (min -7 2 3 4 -2 5 1 -1 4 2))
PASS: numbers.test: min: (eqv? -7 (min 2 3 4 -2 5 1 -1 4 2 -7))
PASS: numbers.test: min: (eqv? big*2 (min big*3 big*5 big*2 big*4))
PASS: numbers.test: min: (eqv? big*2 (min big*2 big*3 big*5 big*4))
PASS: numbers.test: min: (eqv? big*2 (min big*3 big*5 big*4 big*2))
PASS: numbers.test: min: (eqv? (- fixnum-min 1) (min 2 4 (- fixnum-min 1) 3 (* 2 fixnum-max)))
PASS: numbers.test: min: (eqv? (- fixnum-min 1) (min (- fixnum-min 1) 2 4 3 (* 2 fixnum-max)))
PASS: numbers.test: min: (eqv? (- fixnum-min 1) (min 2 4 3 (* 2 fixnum-max) (- fixnum-min 1)))
PASS: numbers.test: min: inum / frac: (eqv? 5/2 (min 3 5/2))
PASS: numbers.test: min: inum / frac: (eqv? 2 (min 2 5/2))
PASS: numbers.test: min: frac / inum: (eqv? 5/2 (min 5/2 3))
PASS: numbers.test: min: frac / inum: (eqv? 2 (min 5/2 2))
PASS: numbers.test: min: infinities and NaNs: (eqv? -inf.0 (min -inf.0 123))
PASS: numbers.test: min: infinities and NaNs: (eqv? -inf.0 (min 123 -inf.0))
PASS: numbers.test: min: infinities and NaNs: (eqv? -inf.0 (min -inf.0 -123.3))
PASS: numbers.test: min: infinities and NaNs: (eqv? -inf.0 (min -123.3 -inf.0))
PASS: numbers.test: min: infinities and NaNs: (eqv? -inf.0 (min -inf.0 -7/2))
PASS: numbers.test: min: infinities and NaNs: (eqv? -inf.0 (min -7/2 -inf.0))
PASS: numbers.test: min: infinities and NaNs: (eqv? -inf.0 (min -inf.0 -1.0e20))
PASS: numbers.test: min: infinities and NaNs: (eqv? -inf.0 (min -1.0e20 -inf.0))
PASS: numbers.test: min: infinities and NaNs: (eqv? -inf.0 (min -inf.0 (- big*2)))
PASS: numbers.test: min: infinities and NaNs: (eqv? -inf.0 (min (- big*2) -inf.0))
PASS: numbers.test: min: infinities and NaNs: (eqv? -inf.0 (min -inf.0 +inf.0))
PASS: numbers.test: min: infinities and NaNs: (eqv? -inf.0 (min +inf.0 -inf.0))
PASS: numbers.test: min: infinities and NaNs: (eqv? -inf.0 (min -inf.0 -inf.0))
PASS: numbers.test: min: infinities and NaNs: (real-nan? (min +nan.0 123))
PASS: numbers.test: min: infinities and NaNs: (real-nan? (min 123 +nan.0))
PASS: numbers.test: min: infinities and NaNs: (real-nan? (min +nan.0 123.3))
PASS: numbers.test: min: infinities and NaNs: (real-nan? (min 123.3 +nan.0))
PASS: numbers.test: min: infinities and NaNs: (real-nan? (min +nan.0 -7/2))
PASS: numbers.test: min: infinities and NaNs: (real-nan? (min -7/2 +nan.0))
PASS: numbers.test: min: infinities and NaNs: (real-nan? (min +nan.0 -1.0e20))
PASS: numbers.test: min: infinities and NaNs: (real-nan? (min -1.0e20 +nan.0))
PASS: numbers.test: min: infinities and NaNs: (real-nan? (min +nan.0 (- big*2)))
PASS: numbers.test: min: infinities and NaNs: (real-nan? (min (- big*2) +nan.0))
PASS: numbers.test: min: infinities and NaNs: (real-nan? (min +nan.0 +inf.0))
PASS: numbers.test: min: infinities and NaNs: (real-nan? (min +inf.0 +nan.0))
PASS: numbers.test: min: infinities and NaNs: (real-nan? (min +nan.0 +nan.0))
PASS: numbers.test: min: infinities and NaNs: (real-nan? (min -inf.0 +nan.0))
PASS: numbers.test: min: infinities and NaNs: (real-nan? (min +nan.0 -inf.0))
PASS: numbers.test: min: infinities and NaNs: (eqv? +inf.0 (min +inf.0 +inf.0))
PASS: numbers.test: min: infinities and NaNs: (eqv? -123.0 (min +inf.0 -123))
PASS: numbers.test: min: infinities and NaNs: (eqv? -123.0 (min -123 +inf.0))
PASS: numbers.test: min: infinities and NaNs: (eqv? -123.3 (min +inf.0 -123.3))
PASS: numbers.test: min: infinities and NaNs: (eqv? -123.3 (min -123.3 +inf.0))
PASS: numbers.test: min: infinities and NaNs: (eqv? -3.5 (min +inf.0 -7/2))
PASS: numbers.test: min: infinities and NaNs: (eqv? -3.5 (min -7/2 +inf.0))
PASS: numbers.test: min: infinities and NaNs: (eqv? -1.0e20 (min +inf.0 -1.0e20))
PASS: numbers.test: min: infinities and NaNs: (eqv? -1.0e20 (min -1.0e20 +inf.0))
PASS: numbers.test: min: infinities and NaNs: (eqv? (exact->inexact (- big*2)) (min +inf.0 (- big*2)))
PASS: numbers.test: min: infinities and NaNs: (eqv? (exact->inexact (- big*2)) (min (- big*2) +inf.0))
PASS: numbers.test: min: signed zeroes: (eqv? 0.0 (min 0.0 0.0))
PASS: numbers.test: min: signed zeroes: (eqv? -0.0 (min 0.0 -0.0))
PASS: numbers.test: min: signed zeroes: (eqv? -0.0 (min -0.0 0.0))
PASS: numbers.test: min: signed zeroes: (eqv? -0.0 (min -0.0 -0.0))
PASS: numbers.test: min: signed zeroes: (eqv? -0.0 (min -0.0 0))
PASS: numbers.test: min: signed zeroes: (eqv? 0.0 (min 0.0 0))
PASS: numbers.test: min: signed zeroes: (eqv? -0.0 (min 0 -0.0))
PASS: numbers.test: min: signed zeroes: (eqv? 0.0 (min 0 0.0))
PASS: numbers.test: min: signed zeroes: (eqv? 0 (min 0 0))
PASS: numbers.test: min: big / frac: (eqv? 5/2 (min big*2 5/2))
PASS: numbers.test: min: big / frac: (eqv? (- big*2) (min (- big*2) 5/2))
PASS: numbers.test: min: frac / big: (eqv? 5/2 (min 5/2 big*2))
PASS: numbers.test: min: frac / big: (eqv? (- big*2) (min 5/2 (- big*2)))
PASS: numbers.test: min: big / real: (real-nan? (min big*5 +nan.0))
PASS: numbers.test: min: big / real: (eqv? (exact->inexact big*5) (min big*5 +inf.0))
PASS: numbers.test: min: big / real: (eqv? -inf.0 (min big*5 -inf.0))
PASS: numbers.test: min: big / real: (eqv? 1.0 (min big*5 1.0))
PASS: numbers.test: min: big / real: (eqv? (exact->inexact (- big*5)) (min (- big*5) 1.0))
PASS: numbers.test: min: real / big: (real-nan? (min +nan.0 big*5))
PASS: numbers.test: min: real / big: (eqv? (exact->inexact big*5) (min +inf.0 big*5))
PASS: numbers.test: min: real / big: (eqv? -inf.0 (min -inf.0 big*5))
PASS: numbers.test: min: real / big: (eqv? 1.0 (min 1.0 big*5))
PASS: numbers.test: min: real / big: (eqv? (exact->inexact (- big*5)) (min 1.0 (- big*5)))
PASS: numbers.test: min: frac / frac: (eqv? 1/2 (min 1/2 2/3))
PASS: numbers.test: min: frac / frac: (eqv? 1/2 (min 2/3 1/2))
PASS: numbers.test: min: frac / frac: (eqv? -2/3 (min -1/2 -2/3))
PASS: numbers.test: min: frac / frac: (eqv? -2/3 (min -2/3 -1/2))
PASS: numbers.test: min: real / real: (real-nan? (min 123.0 +nan.0))
PASS: numbers.test: min: real / real: (real-nan? (min +nan.0 123.0))
PASS: numbers.test: min: real / real: (real-nan? (min +nan.0 +nan.0))
PASS: numbers.test: min: real / real: (eqv? 123.0 (min 123.0 456.0))
PASS: numbers.test: min: real / real: (eqv? 123.0 (min 456.0 123.0))
PASS: numbers.test: min: (179769313486231590772930519078902473361797697894230657273430081157732675805500963132708477322407536021120113879871393357658789768814416622492847430639474124377767893424865485276302219601246094119453082952085005768838150682342462881473913110540827237163350510684586298239947245938479716304835356329624224137215 +inf.0)
PASS: numbers.test: min: (+inf.0 179769313486231590772930519078902473361797697894230657273430081157732675805500963132708477322407536021120113879871393357658789768814416622492847430639474124377767893424865485276302219601246094119453082952085005768838150682342462881473913110540827237163350510684586298239947245938479716304835356329624224137215)
PASS: numbers.test: min: (179769313486231590772930519078902473361797697894230657273430081157732675805500963132708477322407536021120113879871393357658789768814416622492847430639474124377767893424865485276302219601246094119453082952085005768838150682342462881473913110540827237163350510684586298239947245938479716304835356329624224137215 -inf.0)
PASS: numbers.test: min: (-inf.0 179769313486231590772930519078902473361797697894230657273430081157732675805500963132708477322407536021120113879871393357658789768814416622492847430639474124377767893424865485276302219601246094119453082952085005768838150682342462881473913110540827237163350510684586298239947245938479716304835356329624224137215)
PASS: numbers.test: min: (179769313486231590772930519078902473361797697894230657273430081157732675805500963132708477322407536021120113879871393357658789768814416622492847430639474124377767893424865485276302219601246094119453082952085005768838150682342462881473913110540827237163350510684586298239947245938479716304835356329624224137216 +inf.0)
PASS: numbers.test: min: (+inf.0 179769313486231590772930519078902473361797697894230657273430081157732675805500963132708477322407536021120113879871393357658789768814416622492847430639474124377767893424865485276302219601246094119453082952085005768838150682342462881473913110540827237163350510684586298239947245938479716304835356329624224137216)
PASS: numbers.test: min: (179769313486231590772930519078902473361797697894230657273430081157732675805500963132708477322407536021120113879871393357658789768814416622492847430639474124377767893424865485276302219601246094119453082952085005768838150682342462881473913110540827237163350510684586298239947245938479716304835356329624224137216 -inf.0)
PASS: numbers.test: min: (-inf.0 179769313486231590772930519078902473361797697894230657273430081157732675805500963132708477322407536021120113879871393357658789768814416622492847430639474124377767893424865485276302219601246094119453082952085005768838150682342462881473913110540827237163350510684586298239947245938479716304835356329624224137216)
PASS: numbers.test: min: (179769313486231590772930519078902473361797697894230657273430081157732675805500963132708477322407536021120113879871393357658789768814416622492847430639474124377767893424865485276302219601246094119453082952085005768838150682342462881473913110540827237163350510684586298239947245938479716304835356329624224137217 +inf.0)
PASS: numbers.test: min: (+inf.0 179769313486231590772930519078902473361797697894230657273430081157732675805500963132708477322407536021120113879871393357658789768814416622492847430639474124377767893424865485276302219601246094119453082952085005768838150682342462881473913110540827237163350510684586298239947245938479716304835356329624224137217)
PASS: numbers.test: min: (179769313486231590772930519078902473361797697894230657273430081157732675805500963132708477322407536021120113879871393357658789768814416622492847430639474124377767893424865485276302219601246094119453082952085005768838150682342462881473913110540827237163350510684586298239947245938479716304835356329624224137217 -inf.0)
PASS: numbers.test: min: (-inf.0 179769313486231590772930519078902473361797697894230657273430081157732675805500963132708477322407536021120113879871393357658789768814416622492847430639474124377767893424865485276302219601246094119453082952085005768838150682342462881473913110540827237163350510684586298239947245938479716304835356329624224137217)
PASS: numbers.test: min: (-179769313486231590772930519078902473361797697894230657273430081157732675805500963132708477322407536021120113879871393357658789768814416622492847430639474124377767893424865485276302219601246094119453082952085005768838150682342462881473913110540827237163350510684586298239947245938479716304835356329624224137215 +inf.0)
PASS: numbers.test: min: (+inf.0 -179769313486231590772930519078902473361797697894230657273430081157732675805500963132708477322407536021120113879871393357658789768814416622492847430639474124377767893424865485276302219601246094119453082952085005768838150682342462881473913110540827237163350510684586298239947245938479716304835356329624224137215)
PASS: numbers.test: min: (-179769313486231590772930519078902473361797697894230657273430081157732675805500963132708477322407536021120113879871393357658789768814416622492847430639474124377767893424865485276302219601246094119453082952085005768838150682342462881473913110540827237163350510684586298239947245938479716304835356329624224137215 -inf.0)
PASS: numbers.test: min: (-inf.0 -179769313486231590772930519078902473361797697894230657273430081157732675805500963132708477322407536021120113879871393357658789768814416622492847430639474124377767893424865485276302219601246094119453082952085005768838150682342462881473913110540827237163350510684586298239947245938479716304835356329624224137215)
PASS: numbers.test: min: (-179769313486231590772930519078902473361797697894230657273430081157732675805500963132708477322407536021120113879871393357658789768814416622492847430639474124377767893424865485276302219601246094119453082952085005768838150682342462881473913110540827237163350510684586298239947245938479716304835356329624224137216 +inf.0)
PASS: numbers.test: min: (+inf.0 -179769313486231590772930519078902473361797697894230657273430081157732675805500963132708477322407536021120113879871393357658789768814416622492847430639474124377767893424865485276302219601246094119453082952085005768838150682342462881473913110540827237163350510684586298239947245938479716304835356329624224137216)
PASS: numbers.test: min: (-179769313486231590772930519078902473361797697894230657273430081157732675805500963132708477322407536021120113879871393357658789768814416622492847430639474124377767893424865485276302219601246094119453082952085005768838150682342462881473913110540827237163350510684586298239947245938479716304835356329624224137216 -inf.0)
PASS: numbers.test: min: (-inf.0 -179769313486231590772930519078902473361797697894230657273430081157732675805500963132708477322407536021120113879871393357658789768814416622492847430639474124377767893424865485276302219601246094119453082952085005768838150682342462881473913110540827237163350510684586298239947245938479716304835356329624224137216)
PASS: numbers.test: min: (-179769313486231590772930519078902473361797697894230657273430081157732675805500963132708477322407536021120113879871393357658789768814416622492847430639474124377767893424865485276302219601246094119453082952085005768838150682342462881473913110540827237163350510684586298239947245938479716304835356329624224137217 +inf.0)
PASS: numbers.test: min: (+inf.0 -179769313486231590772930519078902473361797697894230657273430081157732675805500963132708477322407536021120113879871393357658789768814416622492847430639474124377767893424865485276302219601246094119453082952085005768838150682342462881473913110540827237163350510684586298239947245938479716304835356329624224137217)
PASS: numbers.test: min: (-179769313486231590772930519078902473361797697894230657273430081157732675805500963132708477322407536021120113879871393357658789768814416622492847430639474124377767893424865485276302219601246094119453082952085005768838150682342462881473913110540827237163350510684586298239947245938479716304835356329624224137217 -inf.0)
PASS: numbers.test: min: (-inf.0 -179769313486231590772930519078902473361797697894230657273430081157732675805500963132708477322407536021120113879871393357658789768814416622492847430639474124377767893424865485276302219601246094119453082952085005768838150682342462881473913110540827237163350510684586298239947245938479716304835356329624224137217)
PASS: numbers.test: min: (real-nan? (min (- (ash 1 2048)) (- +nan.0)))
PASS: numbers.test: min: (real-nan? (min (- +nan.0) (- (ash 1 2048))))
PASS: numbers.test: +: documented? (eval)
PASS: numbers.test: +: documented? (compile -O0)
PASS: numbers.test: +: documented? (compile -O2)
PASS: numbers.test: +: simple (eval)
PASS: numbers.test: +: simple (compile -O0)
PASS: numbers.test: +: simple (compile -O2)
PASS: numbers.test: +: exactness propagation (eval)
PASS: numbers.test: +: exactness propagation (compile -O0)
PASS: numbers.test: +: exactness propagation (compile -O2)
PASS: numbers.test: +: signed zeroes (eval)
PASS: numbers.test: +: signed zeroes (compile -O0)
PASS: numbers.test: +: signed zeroes (compile -O2)
PASS: numbers.test: +: NaNs (eval)
PASS: numbers.test: +: NaNs (compile -O0)
PASS: numbers.test: +: NaNs (compile -O2)
PASS: numbers.test: +: infinities (eval)
PASS: numbers.test: +: infinities (compile -O0)
PASS: numbers.test: +: infinities (compile -O2)
PASS: numbers.test: +: fixnum + fixnum = bignum (32-bit) (eval)
PASS: numbers.test: +: fixnum + fixnum = bignum (32-bit) (compile -O0)
PASS: numbers.test: +: fixnum + fixnum = bignum (32-bit) (compile -O2)
PASS: numbers.test: +: fixnum + fixnum = bignum (64-bit) (eval)
PASS: numbers.test: +: fixnum + fixnum = bignum (64-bit) (compile -O0)
PASS: numbers.test: +: fixnum + fixnum = bignum (64-bit) (compile -O2)
PASS: numbers.test: +: bignum + fixnum = fixnum (eval)
PASS: numbers.test: +: bignum + fixnum = fixnum (compile -O0)
PASS: numbers.test: +: bignum + fixnum = fixnum (compile -O2)
PASS: numbers.test: -: double-negation of fixnum-min: = (eval)
PASS: numbers.test: -: double-negation of fixnum-min: = (compile -O0)
PASS: numbers.test: -: double-negation of fixnum-min: = (compile -O2)
PASS: numbers.test: -: double-negation of fixnum-min: eqv? (eval)
PASS: numbers.test: -: double-negation of fixnum-min: eqv? (compile -O0)
PASS: numbers.test: -: double-negation of fixnum-min: eqv? (compile -O2)
PASS: numbers.test: -: double-negation of fixnum-min: equal? (eval)
PASS: numbers.test: -: double-negation of fixnum-min: equal? (compile -O0)
PASS: numbers.test: -: double-negation of fixnum-min: equal? (compile -O2)
PASS: numbers.test: -: binary double-negation of fixnum-min: = (eval)
PASS: numbers.test: -: binary double-negation of fixnum-min: = (compile -O0)
PASS: numbers.test: -: binary double-negation of fixnum-min: = (compile -O2)
PASS: numbers.test: -: binary double-negation of fixnum-min: eqv? (eval)
PASS: numbers.test: -: binary double-negation of fixnum-min: eqv? (compile -O0)
PASS: numbers.test: -: binary double-negation of fixnum-min: eqv? (compile -O2)
PASS: numbers.test: -: binary double-negation of fixnum-min: equal? (eval)
PASS: numbers.test: -: binary double-negation of fixnum-min: equal? (compile -O0)
PASS: numbers.test: -: binary double-negation of fixnum-min: equal? (compile -O2)
PASS: numbers.test: -: signed zeroes (eval)
PASS: numbers.test: -: signed zeroes (compile -O0)
PASS: numbers.test: -: signed zeroes (compile -O2)
PASS: numbers.test: -: exactness propagation (eval)
PASS: numbers.test: -: exactness propagation (compile -O0)
PASS: numbers.test: -: exactness propagation (compile -O2)
PASS: numbers.test: -: infinities (eval)
PASS: numbers.test: -: infinities (compile -O0)
PASS: numbers.test: -: infinities (compile -O2)
PASS: numbers.test: -: NaNs (eval)
PASS: numbers.test: -: NaNs (compile -O0)
PASS: numbers.test: -: NaNs (compile -O2)
PASS: numbers.test: -: (eqv? fixnum-min (- (- fixnum-min))) (eval)
PASS: numbers.test: -: (eqv? fixnum-min (- (- fixnum-min))) (compile -O0)
PASS: numbers.test: -: (eqv? fixnum-min (- (- fixnum-min))) (compile -O2)
PASS: numbers.test: -: (eqv? fixnum-min (- 0 (- 0 fixnum-min))) (eval)
PASS: numbers.test: -: (eqv? fixnum-min (- 0 (- 0 fixnum-min))) (compile -O0)
PASS: numbers.test: -: (eqv? fixnum-min (- 0 (- 0 fixnum-min))) (compile -O2)
PASS: numbers.test: -: (eqv? fixnum-num (apply - (list (apply - (list fixnum-min))))) (eval)
PASS: numbers.test: -: (eqv? fixnum-num (apply - (list (apply - (list fixnum-min))))) (compile -O0)
PASS: numbers.test: -: (eqv? fixnum-num (apply - (list (apply - (list fixnum-min))))) (compile -O2)
PASS: numbers.test: -: -inum - +bignum (eval)
PASS: numbers.test: -: -inum - +bignum (compile -O0)
PASS: numbers.test: -: -inum - +bignum (compile -O2)
PASS: numbers.test: -: big - inum (eval)
PASS: numbers.test: -: big - inum (compile -O0)
PASS: numbers.test: -: big - inum (compile -O2)
PASS: numbers.test: -: big - -inum (eval)
PASS: numbers.test: -: big - -inum (compile -O0)
PASS: numbers.test: -: big - -inum (compile -O2)
PASS: numbers.test: -: fixnum - fixnum = bignum (32-bit) (eval)
PASS: numbers.test: -: fixnum - fixnum = bignum (32-bit) (compile -O0)
PASS: numbers.test: -: fixnum - fixnum = bignum (32-bit) (compile -O2)
PASS: numbers.test: -: fixnum - fixnum = bignum (64-bit) (eval)
PASS: numbers.test: -: fixnum - fixnum = bignum (64-bit) (compile -O0)
PASS: numbers.test: -: fixnum - fixnum = bignum (64-bit) (compile -O2)
PASS: numbers.test: -: bignum - fixnum = fixnum (eval)
PASS: numbers.test: -: bignum - fixnum = fixnum (compile -O0)
PASS: numbers.test: -: bignum - fixnum = fixnum (compile -O2)
PASS: numbers.test: *: double-negation of fixnum-min: (= fixnum-min (* -1 (* -1 fixnum-min)))
PASS: numbers.test: *: double-negation of fixnum-min: (eqv? fixnum-min (* -1 (* -1 fixnum-min)))
PASS: numbers.test: *: double-negation of fixnum-min: (equal? fixnum-min (* -1 (* -1 fixnum-min)))
PASS: numbers.test: *: double-negation of fixnum-min: (= fixnum-min (* (* fixnum-min -1) -1))
PASS: numbers.test: *: double-negation of fixnum-min: (eqv? fixnum-min (* (* fixnum-min -1) -1))
PASS: numbers.test: *: double-negation of fixnum-min: (equal? fixnum-min (* (* fixnum-min -1) -1))
PASS: numbers.test: *: signed fixnum overflow: (eqv? (* 65536 65536) 4294967296)
PASS: numbers.test: *: signed fixnum overflow: (eqv? (* -65536 65536) -4294967296)
PASS: numbers.test: *: signed fixnum overflow: (eqv? (* 65536 -65536) -4294967296)
PASS: numbers.test: *: signed fixnum overflow: (eqv? (* -65536 -65536) 4294967296)
PASS: numbers.test: *: signed fixnum overflow: (eqv? (* 4294967296 4294967296) 18446744073709551616)
PASS: numbers.test: *: signed fixnum overflow: (eqv? (* -4294967296 4294967296) -18446744073709551616)
PASS: numbers.test: *: signed fixnum overflow: (eqv? (* 4294967296 -4294967296) -18446744073709551616)
PASS: numbers.test: *: signed fixnum overflow: (eqv? (* -4294967296 -4294967296) 18446744073709551616)
PASS: numbers.test: *: signed zeroes: (eqv? 0.0 (* 0.0 0.0))
PASS: numbers.test: *: signed zeroes: (eqv? -0.0 (* -0.0 0.0))
PASS: numbers.test: *: signed zeroes: (eqv? 0.0 (* -0.0 -0.0))
PASS: numbers.test: *: signed zeroes: (eqv? -0.0 (* 0.0 -0.0))
PASS: numbers.test: *: signed zeroes: (eqv? 0.0+0.0i (* 0.0+1.0i 0.0))
PASS: numbers.test: *: signed zeroes: (eqv? 0.0-0.0i (* 0.0-1.0i 0.0))
PASS: numbers.test: *: signed zeroes: (eqv? -0.0-0.0i (* 0.0+1.0i -0.0))
PASS: numbers.test: *: signed zeroes: (eqv? -0.0+0.0i (* 0.0-1.0i -0.0))
PASS: numbers.test: *: exactness propagation: (eqv? -0.0 (* 0 -1.0))
PASS: numbers.test: *: exactness propagation: (eqv? 0.0 (* 0 1.0))
PASS: numbers.test: *: exactness propagation: (eqv? -0.0 (* -1.0 0))
PASS: numbers.test: *: exactness propagation: (eqv? 0.0 (* 1.0 0))
PASS: numbers.test: *: exactness propagation: (eqv? 0 (* 0 1/2))
PASS: numbers.test: *: exactness propagation: (eqv? 0 (* 1/2 0))
PASS: numbers.test: *: exactness propagation: (eqv? 0.0+0.0i (* 0 1.0+1.0i))
PASS: numbers.test: *: exactness propagation: (eqv? 0.0+0.0i (* 1.0+1.0i 0))
PASS: numbers.test: *: exactness propagation: (eqv? -1.0 (* 1 -1.0))
PASS: numbers.test: *: exactness propagation: (eqv? 1.0 (* 1 1.0))
PASS: numbers.test: *: exactness propagation: (eqv? -1.0 (* -1.0 1))
PASS: numbers.test: *: exactness propagation: (eqv? 1.0 (* 1.0 1))
PASS: numbers.test: *: exactness propagation: (eqv? 1/2 (* 1 1/2))
PASS: numbers.test: *: exactness propagation: (eqv? 1/2 (* 1/2 1))
PASS: numbers.test: *: exactness propagation: (eqv? 1.0+1.0i (* 1 1.0+1.0i))
PASS: numbers.test: *: exactness propagation: (eqv? 1.0+1.0i (* 1.0+1.0i 1))
PASS: numbers.test: *: propagation of NaNs: (real-nan? (* +nan.0 +nan.0))
PASS: numbers.test: *: propagation of NaNs: (real-nan? (* +nan.0 1))
PASS: numbers.test: *: propagation of NaNs: (real-nan? (* +nan.0 -1))
PASS: numbers.test: *: propagation of NaNs: (real-nan? (* +nan.0 -7/2))
PASS: numbers.test: *: propagation of NaNs: (real-nan? (* +nan.0 1.0e20))
PASS: numbers.test: *: propagation of NaNs: (real-nan? (* 1 +nan.0))
PASS: numbers.test: *: propagation of NaNs: (real-nan? (* -1 +nan.0))
PASS: numbers.test: *: propagation of NaNs: (real-nan? (* -7/2 +nan.0))
PASS: numbers.test: *: propagation of NaNs: (real-nan? (* 1.0e20 +nan.0))
PASS: numbers.test: *: propagation of NaNs: (real-nan? (* +inf.0 +nan.0))
PASS: numbers.test: *: propagation of NaNs: (real-nan? (* +nan.0 +inf.0))
PASS: numbers.test: *: propagation of NaNs: (real-nan? (* -inf.0 +nan.0))
PASS: numbers.test: *: propagation of NaNs: (real-nan? (* +nan.0 -inf.0))
PASS: numbers.test: *: propagation of NaNs: (real-nan? (* (* fixnum-max 2) +nan.0))
PASS: numbers.test: *: propagation of NaNs: (real-nan? (* +nan.0 (* fixnum-max 2)))
PASS: numbers.test: *: propagation of NaNs: (real-nan? (* 0 +nan.0))
PASS: numbers.test: *: propagation of NaNs: (real-nan? (* +nan.0 0))
PASS: numbers.test: *: propagation of NaNs: (almost-real-nan? (* 0 +nan.0+1.0i))
PASS: numbers.test: *: propagation of NaNs: (almost-real-nan? (* +nan.0+1.0i 0))
PASS: numbers.test: *: propagation of NaNs: (imaginary-nan? (* 0 0.0+nan.0i))
PASS: numbers.test: *: propagation of NaNs: (imaginary-nan? (* 0.0+nan.0i 0))
PASS: numbers.test: *: propagation of NaNs: (imaginary-nan? (* 0 1.0+nan.0i))
PASS: numbers.test: *: propagation of NaNs: (imaginary-nan? (* 1.0+nan.0i 0))
PASS: numbers.test: *: propagation of NaNs: (complex-nan? (* 0 +nan.0+nan.0i))
PASS: numbers.test: *: propagation of NaNs: (complex-nan? (* +nan.0+nan.0i 0))
PASS: numbers.test: *: infinities: (eqv? +inf.0 (* +inf.0 5))
PASS: numbers.test: *: infinities: (eqv? -inf.0 (* +inf.0 -5))
PASS: numbers.test: *: infinities: (eqv? +inf.0 (* +inf.0 73.1))
PASS: numbers.test: *: infinities: (eqv? -inf.0 (* +inf.0 -9.2))
PASS: numbers.test: *: infinities: (eqv? +inf.0 (* +inf.0 5/2))
PASS: numbers.test: *: infinities: (eqv? -inf.0 (* +inf.0 -5/2))
PASS: numbers.test: *: infinities: (eqv? -inf.0 (* -5 +inf.0))
PASS: numbers.test: *: infinities: (eqv? +inf.0 (* 73.1 +inf.0))
PASS: numbers.test: *: infinities: (eqv? -inf.0 (* -9.2 +inf.0))
PASS: numbers.test: *: infinities: (eqv? +inf.0 (* 5/2 +inf.0))
PASS: numbers.test: *: infinities: (eqv? -inf.0 (* -5/2 +inf.0))
PASS: numbers.test: *: infinities: (eqv? -inf.0 (* -inf.0 5))
PASS: numbers.test: *: infinities: (eqv? +inf.0 (* -inf.0 -5))
PASS: numbers.test: *: infinities: (eqv? -inf.0 (* -inf.0 73.1))
PASS: numbers.test: *: infinities: (eqv? +inf.0 (* -inf.0 -9.2))
PASS: numbers.test: *: infinities: (eqv? -inf.0 (* -inf.0 5/2))
PASS: numbers.test: *: infinities: (eqv? +inf.0 (* -inf.0 -5/2))
PASS: numbers.test: *: infinities: (eqv? +inf.0 (* -5 -inf.0))
PASS: numbers.test: *: infinities: (eqv? -inf.0 (* 73.1 -inf.0))
PASS: numbers.test: *: infinities: (eqv? +inf.0 (* -9.2 -inf.0))
PASS: numbers.test: *: infinities: (eqv? -inf.0 (* 5/2 -inf.0))
PASS: numbers.test: *: infinities: (eqv? +inf.0 (* -5/2 -inf.0))
PASS: numbers.test: *: infinities: (real-nan? (* 0.0 +inf.0))
PASS: numbers.test: *: infinities: (real-nan? (* -0.0 +inf.0))
PASS: numbers.test: *: infinities: (real-nan? (* +inf.0 0.0))
PASS: numbers.test: *: infinities: (real-nan? (* +inf.0 -0.0))
PASS: numbers.test: *: infinities: (real-nan? (* 0.0 -inf.0))
PASS: numbers.test: *: infinities: (real-nan? (* -0.0 -inf.0))
PASS: numbers.test: *: infinities: (real-nan? (* -inf.0 0.0))
PASS: numbers.test: *: infinities: (real-nan? (* -inf.0 -0.0))
PASS: numbers.test: *: infinities: (real-nan? (* 0 +inf.0))
PASS: numbers.test: *: infinities: (real-nan? (* +inf.0 0))
PASS: numbers.test: *: infinities: (real-nan? (* 0 -inf.0))
PASS: numbers.test: *: infinities: (real-nan? (* -inf.0 0))
PASS: numbers.test: *: infinities: (almost-real-nan? (* 0 +inf.0+1.0i))
PASS: numbers.test: *: infinities: (almost-real-nan? (* +inf.0+1.0i 0))
PASS: numbers.test: *: infinities: (almost-real-nan? (* 0 -inf.0+1.0i))
PASS: numbers.test: *: infinities: (almost-real-nan? (* -inf.0+1.0i 0))
PASS: numbers.test: *: infinities: (imaginary-nan? (* 0 0.0+inf.0i))
PASS: numbers.test: *: infinities: (imaginary-nan? (* 0.0+inf.0i 0))
PASS: numbers.test: *: infinities: (imaginary-nan? (* 0 1.0+inf.0i))
PASS: numbers.test: *: infinities: (imaginary-nan? (* 1.0+inf.0i 0))
PASS: numbers.test: *: infinities: (imaginary-nan? (* 0 0.0-inf.0i))
PASS: numbers.test: *: infinities: (imaginary-nan? (* 0.0-inf.0i 0))
PASS: numbers.test: *: infinities: (imaginary-nan? (* 0 1.0-inf.0i))
PASS: numbers.test: *: infinities: (imaginary-nan? (* 1.0-inf.0i 0))
PASS: numbers.test: *: infinities: (complex-nan? (* 0 +inf.0+inf.0i))
PASS: numbers.test: *: infinities: (complex-nan? (* +inf.0+inf.0i 0))
PASS: numbers.test: *: infinities: (complex-nan? (* 0 +inf.0-inf.0i))
PASS: numbers.test: *: infinities: (complex-nan? (* -inf.0+inf.0i 0))
PASS: numbers.test: *: inum * bignum: 0 * 2^256 = 0
PASS: numbers.test: *: inum * flonum: 0 * 1.0 = 0.0
PASS: numbers.test: *: inum * complex: 0 * 1+1i = 0.0+0.0i
PASS: numbers.test: *: inum * frac: 0 * 2/3 = 0
PASS: numbers.test: *: bignum * inum: 2^256 * 0 = 0
PASS: numbers.test: *: flonum * inum: 1.0 * 0 = 0.0
PASS: numbers.test: *: complex * inum: 1+1i * 0 = 0.0+0.0i
PASS: numbers.test: *: complex * bignum
PASS: numbers.test: *: frac * inum: 2/3 * 0 = 0
PASS: numbers.test: /: double-negation of fixnum-min: (= fixnum-min (/ (/ fixnum-min -1) -1))
PASS: numbers.test: /: double-negation of fixnum-min: (eqv? fixnum-min (/ (/ fixnum-min -1) -1))
PASS: numbers.test: /: double-negation of fixnum-min: (equal? fixnum-min (/ (/ fixnum-min -1) -1))
PASS: numbers.test: /: documented?
PASS: numbers.test: /: division by zero: (/ 0)
PASS: numbers.test: /: division by zero: (/ 0.0)
PASS: numbers.test: /: division by zero: (/ 1 0)
PASS: numbers.test: /: division by zero: (/ 1 0.0)
PASS: numbers.test: /: division by zero: (/ bignum 0)
PASS: numbers.test: /: division by zero: (/ bignum 0.0)
PASS: numbers.test: /: division by zero: (/ 1.0 0)
PASS: numbers.test: /: division by zero: (/ 1.0 0.0)
PASS: numbers.test: /: division by zero: (/ +i 0)
PASS: numbers.test: /: division by zero: (/ +i 0.0)
PASS: numbers.test: /: 1/complex: 0+1i
PASS: numbers.test: /: 1/complex: 0-1i
PASS: numbers.test: /: 1/complex: 1+1i
PASS: numbers.test: /: 1/complex: 1-1i
PASS: numbers.test: /: 1/complex: -1+1i
PASS: numbers.test: /: 1/complex: -1-1i
PASS: numbers.test: /: 1/complex: (/ 3+4i)
PASS: numbers.test: /: 1/complex: (/ 4+3i)
PASS: numbers.test: /: 1/complex: (/ 1e200+1e200i)
PASS: numbers.test: /: inum/complex: (/ 25 3+4i)
PASS: numbers.test: /: inum/complex: (/ 25 4+3i)
PASS: numbers.test: /: complex/complex: (/ 25+125i 3+4i)
PASS: numbers.test: /: complex/complex: (/ 25+125i 4+3i)
PASS: numbers.test: floor: (= 1 (floor 1.75))
PASS: numbers.test: floor: (= 1 (floor 1.5))
PASS: numbers.test: floor: (= 1 (floor 1.25))
PASS: numbers.test: floor: (= 0 (floor 0.75))
PASS: numbers.test: floor: (= 0 (floor 0.5))
PASS: numbers.test: floor: (= 0 (floor 0.0))
PASS: numbers.test: floor: (= -1 (floor -0.5))
PASS: numbers.test: floor: (= -2 (floor -1.25))
PASS: numbers.test: floor: (= -2 (floor -1.5))
PASS: numbers.test: floor: inum: 0
PASS: numbers.test: floor: inum: 1
PASS: numbers.test: floor: inum: -1
PASS: numbers.test: floor: bignum: (1+ most-positive-fixnum)
PASS: numbers.test: floor: bignum: (1- most-negative-fixnum)
PASS: numbers.test: floor: frac: (=exact -3 (floor -7/3))
PASS: numbers.test: floor: frac: (=exact -2 (floor -5/3))
PASS: numbers.test: floor: frac: (=exact -2 (floor -4/3))
PASS: numbers.test: floor: frac: (=exact -1 (floor -2/3))
PASS: numbers.test: floor: frac: (=exact -1 (floor -1/3))
PASS: numbers.test: floor: frac: (=exact 0 (floor 1/3))
PASS: numbers.test: floor: frac: (=exact 0 (floor 2/3))
PASS: numbers.test: floor: frac: (=exact 1 (floor 4/3))
PASS: numbers.test: floor: frac: (=exact 1 (floor 5/3))
PASS: numbers.test: floor: frac: (=exact 2 (floor 7/3))
PASS: numbers.test: floor: frac: (=exact -3 (floor -17/6))
PASS: numbers.test: floor: frac: (=exact -3 (floor -8/3))
PASS: numbers.test: floor: frac: (=exact -3 (floor -5/2))
PASS: numbers.test: floor: frac: (=exact -3 (floor -7/3))
PASS: numbers.test: floor: frac: (=exact -3 (floor -13/6))
PASS: numbers.test: floor: frac: (=exact -2 (floor -11/6))
PASS: numbers.test: floor: frac: (=exact -2 (floor -5/3))
PASS: numbers.test: floor: frac: (=exact -2 (floor -3/2))
PASS: numbers.test: floor: frac: (=exact -2 (floor -4/3))
PASS: numbers.test: floor: frac: (=exact -2 (floor -7/6))
PASS: numbers.test: floor: frac: (=exact -1 (floor -5/6))
PASS: numbers.test: floor: frac: (=exact -1 (floor -2/3))
PASS: numbers.test: floor: frac: (=exact -1 (floor -1/2))
PASS: numbers.test: floor: frac: (=exact -1 (floor -1/3))
PASS: numbers.test: floor: frac: (=exact -1 (floor -1/6))
PASS: numbers.test: floor: frac: (=exact 0 (floor 1/6))
PASS: numbers.test: floor: frac: (=exact 0 (floor 1/3))
PASS: numbers.test: floor: frac: (=exact 0 (floor 1/2))
PASS: numbers.test: floor: frac: (=exact 0 (floor 2/3))
PASS: numbers.test: floor: frac: (=exact 0 (floor 5/6))
PASS: numbers.test: floor: frac: (=exact 1 (floor 7/6))
PASS: numbers.test: floor: frac: (=exact 1 (floor 4/3))
PASS: numbers.test: floor: frac: (=exact 1 (floor 3/2))
PASS: numbers.test: floor: frac: (=exact 1 (floor 5/3))
PASS: numbers.test: floor: frac: (=exact 1 (floor 11/6))
PASS: numbers.test: floor: frac: (=exact 2 (floor 13/6))
PASS: numbers.test: floor: frac: (=exact 2 (floor 7/3))
PASS: numbers.test: floor: frac: (=exact 2 (floor 5/2))
PASS: numbers.test: floor: frac: (=exact 2 (floor 8/3))
PASS: numbers.test: floor: frac: (=exact 2 (floor 17/6))
PASS: numbers.test: floor: real: 0.0
PASS: numbers.test: floor: real: 1.0
PASS: numbers.test: floor: real: -1.0
PASS: numbers.test: floor: real: -3.1
PASS: numbers.test: floor: real: 3.1
PASS: numbers.test: floor: real: 3.9
PASS: numbers.test: floor: real: -3.9
PASS: numbers.test: floor: real: 1.5
PASS: numbers.test: floor: real: 2.5
PASS: numbers.test: floor: real: 3.5
PASS: numbers.test: floor: real: -1.5
PASS: numbers.test: floor: real: -2.5
PASS: numbers.test: floor: real: -3.5
PASS: numbers.test: ceiling: (= 2 (ceiling 1.75))
PASS: numbers.test: ceiling: (= 2 (ceiling 1.5))
PASS: numbers.test: ceiling: (= 2 (ceiling 1.25))
PASS: numbers.test: ceiling: (= 1 (ceiling 0.75))
PASS: numbers.test: ceiling: (= 1 (ceiling 0.5))
PASS: numbers.test: ceiling: (= 0 (ceiling 0.0))
PASS: numbers.test: ceiling: (= 0 (ceiling -0.5))
PASS: numbers.test: ceiling: (= -1 (ceiling -1.25))
PASS: numbers.test: ceiling: (= -1 (ceiling -1.5))
PASS: numbers.test: ceiling: inum: 0
PASS: numbers.test: ceiling: inum: 1
PASS: numbers.test: ceiling: inum: -1
PASS: numbers.test: ceiling: bignum: (1+ most-positive-fixnum)
PASS: numbers.test: ceiling: bignum: (1- most-negative-fixnum)
PASS: numbers.test: ceiling: frac: (=exact -2 (ceiling -7/3))
PASS: numbers.test: ceiling: frac: (=exact -1 (ceiling -5/3))
PASS: numbers.test: ceiling: frac: (=exact -1 (ceiling -4/3))
PASS: numbers.test: ceiling: frac: (=exact 0 (ceiling -2/3))
PASS: numbers.test: ceiling: frac: (=exact 0 (ceiling -1/3))
PASS: numbers.test: ceiling: frac: (=exact 1 (ceiling 1/3))
PASS: numbers.test: ceiling: frac: (=exact 1 (ceiling 2/3))
PASS: numbers.test: ceiling: frac: (=exact 2 (ceiling 4/3))
PASS: numbers.test: ceiling: frac: (=exact 2 (ceiling 5/3))
PASS: numbers.test: ceiling: frac: (=exact 3 (ceiling 7/3))
PASS: numbers.test: ceiling: frac: (=exact -2 (ceiling -17/6))
PASS: numbers.test: ceiling: frac: (=exact -2 (ceiling -8/3))
PASS: numbers.test: ceiling: frac: (=exact -2 (ceiling -5/2))
PASS: numbers.test: ceiling: frac: (=exact -2 (ceiling -7/3))
PASS: numbers.test: ceiling: frac: (=exact -2 (ceiling -13/6))
PASS: numbers.test: ceiling: frac: (=exact -1 (ceiling -11/6))
PASS: numbers.test: ceiling: frac: (=exact -1 (ceiling -5/3))
PASS: numbers.test: ceiling: frac: (=exact -1 (ceiling -3/2))
PASS: numbers.test: ceiling: frac: (=exact -1 (ceiling -4/3))
PASS: numbers.test: ceiling: frac: (=exact -1 (ceiling -7/6))
PASS: numbers.test: ceiling: frac: (=exact 0 (ceiling -5/6))
PASS: numbers.test: ceiling: frac: (=exact 0 (ceiling -2/3))
PASS: numbers.test: ceiling: frac: (=exact 0 (ceiling -1/2))
PASS: numbers.test: ceiling: frac: (=exact 0 (ceiling -1/3))
PASS: numbers.test: ceiling: frac: (=exact 0 (ceiling -1/6))
PASS: numbers.test: ceiling: frac: (=exact 1 (ceiling 1/6))
PASS: numbers.test: ceiling: frac: (=exact 1 (ceiling 1/3))
PASS: numbers.test: ceiling: frac: (=exact 1 (ceiling 1/2))
PASS: numbers.test: ceiling: frac: (=exact 1 (ceiling 2/3))
PASS: numbers.test: ceiling: frac: (=exact 1 (ceiling 5/6))
PASS: numbers.test: ceiling: frac: (=exact 2 (ceiling 7/6))
PASS: numbers.test: ceiling: frac: (=exact 2 (ceiling 4/3))
PASS: numbers.test: ceiling: frac: (=exact 2 (ceiling 3/2))
PASS: numbers.test: ceiling: frac: (=exact 2 (ceiling 5/3))
PASS: numbers.test: ceiling: frac: (=exact 2 (ceiling 11/6))
PASS: numbers.test: ceiling: frac: (=exact 3 (ceiling 13/6))
PASS: numbers.test: ceiling: frac: (=exact 3 (ceiling 7/3))
PASS: numbers.test: ceiling: frac: (=exact 3 (ceiling 5/2))
PASS: numbers.test: ceiling: frac: (=exact 3 (ceiling 8/3))
PASS: numbers.test: ceiling: frac: (=exact 3 (ceiling 17/6))
PASS: numbers.test: ceiling: real: 0.0
PASS: numbers.test: ceiling: real: 1.0
PASS: numbers.test: ceiling: real: -1.0
PASS: numbers.test: ceiling: real: -3.1
PASS: numbers.test: ceiling: real: 3.1
PASS: numbers.test: ceiling: real: 3.9
PASS: numbers.test: ceiling: real: -3.9
PASS: numbers.test: ceiling: real: 1.5
PASS: numbers.test: ceiling: real: 2.5
PASS: numbers.test: ceiling: real: 3.5
PASS: numbers.test: ceiling: real: -1.5
PASS: numbers.test: ceiling: real: -2.5
PASS: numbers.test: ceiling: real: -3.5
PASS: numbers.test: truncate: (= 1 (truncate 1.75))
PASS: numbers.test: truncate: (= 1 (truncate 1.5))
PASS: numbers.test: truncate: (= 1 (truncate 1.25))
PASS: numbers.test: truncate: (= 0 (truncate 0.75))
PASS: numbers.test: truncate: (= 0 (truncate 0.5))
PASS: numbers.test: truncate: (= 0 (truncate 0.0))
PASS: numbers.test: truncate: (= 0 (truncate -0.5))
PASS: numbers.test: truncate: (= -1 (truncate -1.25))
PASS: numbers.test: truncate: (= -1 (truncate -1.5))
PASS: numbers.test: truncate: inum: 0
PASS: numbers.test: truncate: inum: 1
PASS: numbers.test: truncate: inum: -1
PASS: numbers.test: truncate: bignum: (1+ most-positive-fixnum)
PASS: numbers.test: truncate: bignum: (1- most-negative-fixnum)
PASS: numbers.test: truncate: frac: (=exact -2 (truncate -7/3))
PASS: numbers.test: truncate: frac: (=exact -1 (truncate -5/3))
PASS: numbers.test: truncate: frac: (=exact -1 (truncate -4/3))
PASS: numbers.test: truncate: frac: (=exact 0 (truncate -2/3))
PASS: numbers.test: truncate: frac: (=exact 0 (truncate -1/3))
PASS: numbers.test: truncate: frac: (=exact 0 (truncate 1/3))
PASS: numbers.test: truncate: frac: (=exact 0 (truncate 2/3))
PASS: numbers.test: truncate: frac: (=exact 1 (truncate 4/3))
PASS: numbers.test: truncate: frac: (=exact 1 (truncate 5/3))
PASS: numbers.test: truncate: frac: (=exact 2 (truncate 7/3))
PASS: numbers.test: truncate: frac: (=exact -2 (truncate -17/6))
PASS: numbers.test: truncate: frac: (=exact -2 (truncate -8/3))
PASS: numbers.test: truncate: frac: (=exact -2 (truncate -5/2))
PASS: numbers.test: truncate: frac: (=exact -2 (truncate -7/3))
PASS: numbers.test: truncate: frac: (=exact -2 (truncate -13/6))
PASS: numbers.test: truncate: frac: (=exact -1 (truncate -11/6))
PASS: numbers.test: truncate: frac: (=exact -1 (truncate -5/3))
PASS: numbers.test: truncate: frac: (=exact -1 (truncate -3/2))
PASS: numbers.test: truncate: frac: (=exact -1 (truncate -4/3))
PASS: numbers.test: truncate: frac: (=exact -1 (truncate -7/6))
PASS: numbers.test: truncate: frac: (=exact 0 (truncate -5/6))
PASS: numbers.test: truncate: frac: (=exact 0 (truncate -2/3))
PASS: numbers.test: truncate: frac: (=exact 0 (truncate -1/2))
PASS: numbers.test: truncate: frac: (=exact 0 (truncate -1/3))
PASS: numbers.test: truncate: frac: (=exact 0 (truncate -1/6))
PASS: numbers.test: truncate: frac: (=exact 0 (truncate 1/6))
PASS: numbers.test: truncate: frac: (=exact 0 (truncate 1/3))
PASS: numbers.test: truncate: frac: (=exact 0 (truncate 1/2))
PASS: numbers.test: truncate: frac: (=exact 0 (truncate 2/3))
PASS: numbers.test: truncate: frac: (=exact 0 (truncate 5/6))
PASS: numbers.test: truncate: frac: (=exact 1 (truncate 7/6))
PASS: numbers.test: truncate: frac: (=exact 1 (truncate 4/3))
PASS: numbers.test: truncate: frac: (=exact 1 (truncate 3/2))
PASS: numbers.test: truncate: frac: (=exact 1 (truncate 5/3))
PASS: numbers.test: truncate: frac: (=exact 1 (truncate 11/6))
PASS: numbers.test: truncate: frac: (=exact 2 (truncate 13/6))
PASS: numbers.test: truncate: frac: (=exact 2 (truncate 7/3))
PASS: numbers.test: truncate: frac: (=exact 2 (truncate 5/2))
PASS: numbers.test: truncate: frac: (=exact 2 (truncate 8/3))
PASS: numbers.test: truncate: frac: (=exact 2 (truncate 17/6))
PASS: numbers.test: truncate: real: 0.0
PASS: numbers.test: truncate: real: 1.0
PASS: numbers.test: truncate: real: -1.0
PASS: numbers.test: truncate: real: -3.1
PASS: numbers.test: truncate: real: 3.1
PASS: numbers.test: truncate: real: 3.9
PASS: numbers.test: truncate: real: -3.9
PASS: numbers.test: truncate: real: 1.5
PASS: numbers.test: truncate: real: 2.5
PASS: numbers.test: truncate: real: 3.5
PASS: numbers.test: truncate: real: -1.5
PASS: numbers.test: truncate: real: -2.5
PASS: numbers.test: truncate: real: -3.5
PASS: numbers.test: round: (= 2 (round 1.75))
PASS: numbers.test: round: (= 2 (round 1.5))
PASS: numbers.test: round: (= 1 (round 1.25))
PASS: numbers.test: round: (= 1 (round 0.75))
PASS: numbers.test: round: (= 0 (round 0.5))
PASS: numbers.test: round: (= 0 (round 0.0))
PASS: numbers.test: round: (= 0 (round -0.5))
PASS: numbers.test: round: (= -1 (round -1.25))
PASS: numbers.test: round: (= -2 (round -1.5))
PASS: numbers.test: round: inum: 0
PASS: numbers.test: round: inum: 1
PASS: numbers.test: round: inum: -1
PASS: numbers.test: round: bignum: (1+ most-positive-fixnum)
PASS: numbers.test: round: bignum: (1- most-negative-fixnum)
PASS: numbers.test: round: frac: (=exact -2 (round -7/3))
PASS: numbers.test: round: frac: (=exact -2 (round -5/3))
PASS: numbers.test: round: frac: (=exact -1 (round -4/3))
PASS: numbers.test: round: frac: (=exact -1 (round -2/3))
PASS: numbers.test: round: frac: (=exact 0 (round -1/3))
PASS: numbers.test: round: frac: (=exact 0 (round 1/3))
PASS: numbers.test: round: frac: (=exact 1 (round 2/3))
PASS: numbers.test: round: frac: (=exact 1 (round 4/3))
PASS: numbers.test: round: frac: (=exact 2 (round 5/3))
PASS: numbers.test: round: frac: (=exact 2 (round 7/3))
PASS: numbers.test: round: frac: (=exact -3 (round -17/6))
PASS: numbers.test: round: frac: (=exact -3 (round -8/3))
PASS: numbers.test: round: frac: (=exact -2 (round -5/2))
PASS: numbers.test: round: frac: (=exact -2 (round -7/3))
PASS: numbers.test: round: frac: (=exact -2 (round -13/6))
PASS: numbers.test: round: frac: (=exact -2 (round -11/6))
PASS: numbers.test: round: frac: (=exact -2 (round -5/3))
PASS: numbers.test: round: frac: (=exact -2 (round -3/2))
PASS: numbers.test: round: frac: (=exact -1 (round -4/3))
PASS: numbers.test: round: frac: (=exact -1 (round -7/6))
PASS: numbers.test: round: frac: (=exact -1 (round -5/6))
PASS: numbers.test: round: frac: (=exact -1 (round -2/3))
PASS: numbers.test: round: frac: (=exact 0 (round -1/2))
PASS: numbers.test: round: frac: (=exact 0 (round -1/3))
PASS: numbers.test: round: frac: (=exact 0 (round -1/6))
PASS: numbers.test: round: frac: (=exact 0 (round 1/6))
PASS: numbers.test: round: frac: (=exact 0 (round 1/3))
PASS: numbers.test: round: frac: (=exact 0 (round 1/2))
PASS: numbers.test: round: frac: (=exact 1 (round 2/3))
PASS: numbers.test: round: frac: (=exact 1 (round 5/6))
PASS: numbers.test: round: frac: (=exact 1 (round 7/6))
PASS: numbers.test: round: frac: (=exact 1 (round 4/3))
PASS: numbers.test: round: frac: (=exact 2 (round 3/2))
PASS: numbers.test: round: frac: (=exact 2 (round 5/3))
PASS: numbers.test: round: frac: (=exact 2 (round 11/6))
PASS: numbers.test: round: frac: (=exact 2 (round 13/6))
PASS: numbers.test: round: frac: (=exact 2 (round 7/3))
PASS: numbers.test: round: frac: (=exact 2 (round 5/2))
PASS: numbers.test: round: frac: (=exact 3 (round 8/3))
PASS: numbers.test: round: frac: (=exact 3 (round 17/6))
PASS: numbers.test: round: real: 0.0
PASS: numbers.test: round: real: 1.0
PASS: numbers.test: round: real: -1.0
PASS: numbers.test: round: real: -3.1
PASS: numbers.test: round: real: 3.1
PASS: numbers.test: round: real: 3.9
PASS: numbers.test: round: real: -3.9
PASS: numbers.test: round: real: 1.5
PASS: numbers.test: round: real: 2.5
PASS: numbers.test: round: real: 3.5
PASS: numbers.test: round: real: -1.5
PASS: numbers.test: round: real: -2.5
PASS: numbers.test: round: real: -3.5
PASS: numbers.test: round: real: 2^53-1
PASS: numbers.test: round: real: -(2^53-1)
PASS: numbers.test: exact->inexact: 2^i, no round: (0 1 1.0): pos
PASS: numbers.test: exact->inexact: 2^i, no round: (0 1 1.0): neg
PASS: numbers.test: exact->inexact: 2^i, no round: (1 2 2.0): pos
PASS: numbers.test: exact->inexact: 2^i, no round: (1 2 2.0): neg
PASS: numbers.test: exact->inexact: 2^i, no round: (2 4 4.0): pos
PASS: numbers.test: exact->inexact: 2^i, no round: (2 4 4.0): neg
PASS: numbers.test: exact->inexact: 2^i, no round: (3 8 8.0): pos
PASS: numbers.test: exact->inexact: 2^i, no round: (3 8 8.0): neg
PASS: numbers.test: exact->inexact: 2^i, no round: (4 16 16.0): pos
PASS: numbers.test: exact->inexact: 2^i, no round: (4 16 16.0): neg
PASS: numbers.test: exact->inexact: 2^i, no round: (5 32 32.0): pos
PASS: numbers.test: exact->inexact: 2^i, no round: (5 32 32.0): neg
PASS: numbers.test: exact->inexact: 2^i, no round: (6 64 64.0): pos
PASS: numbers.test: exact->inexact: 2^i, no round: (6 64 64.0): neg
PASS: numbers.test: exact->inexact: 2^i, no round: (7 128 128.0): pos
PASS: numbers.test: exact->inexact: 2^i, no round: (7 128 128.0): neg
PASS: numbers.test: exact->inexact: 2^i, no round: (8 256 256.0): pos
PASS: numbers.test: exact->inexact: 2^i, no round: (8 256 256.0): neg
PASS: numbers.test: exact->inexact: 2^i, no round: (9 512 512.0): pos
PASS: numbers.test: exact->inexact: 2^i, no round: (9 512 512.0): neg
PASS: numbers.test: exact->inexact: 2^i, no round: (10 1024 1024.0): pos
PASS: numbers.test: exact->inexact: 2^i, no round: (10 1024 1024.0): neg
PASS: numbers.test: exact->inexact: 2^i, no round: (11 2048 2048.0): pos
PASS: numbers.test: exact->inexact: 2^i, no round: (11 2048 2048.0): neg
PASS: numbers.test: exact->inexact: 2^i, no round: (12 4096 4096.0): pos
PASS: numbers.test: exact->inexact: 2^i, no round: (12 4096 4096.0): neg
PASS: numbers.test: exact->inexact: 2^i, no round: (13 8192 8192.0): pos
PASS: numbers.test: exact->inexact: 2^i, no round: (13 8192 8192.0): neg
PASS: numbers.test: exact->inexact: 2^i, no round: (14 16384 16384.0): pos
PASS: numbers.test: exact->inexact: 2^i, no round: (14 16384 16384.0): neg
PASS: numbers.test: exact->inexact: 2^i, no round: (15 32768 32768.0): pos
PASS: numbers.test: exact->inexact: 2^i, no round: (15 32768 32768.0): neg
PASS: numbers.test: exact->inexact: 2^i, no round: (16 65536 65536.0): pos
PASS: numbers.test: exact->inexact: 2^i, no round: (16 65536 65536.0): neg
PASS: numbers.test: exact->inexact: 2^i, no round: (17 131072 131072.0): pos
PASS: numbers.test: exact->inexact: 2^i, no round: (17 131072 131072.0): neg
PASS: numbers.test: exact->inexact: 2^i, no round: (18 262144 262144.0): pos
PASS: numbers.test: exact->inexact: 2^i, no round: (18 262144 262144.0): neg
PASS: numbers.test: exact->inexact: 2^i, no round: (19 524288 524288.0): pos
PASS: numbers.test: exact->inexact: 2^i, no round: (19 524288 524288.0): neg
PASS: numbers.test: exact->inexact: 2^i, no round: (20 1048576 1048576.0): pos
PASS: numbers.test: exact->inexact: 2^i, no round: (20 1048576 1048576.0): neg
PASS: numbers.test: exact->inexact: 2^i, no round: (21 2097152 2097152.0): pos
PASS: numbers.test: exact->inexact: 2^i, no round: (21 2097152 2097152.0): neg
PASS: numbers.test: exact->inexact: 2^i, no round: (22 4194304 4194304.0): pos
PASS: numbers.test: exact->inexact: 2^i, no round: (22 4194304 4194304.0): neg
PASS: numbers.test: exact->inexact: 2^i, no round: (23 8388608 8388608.0): pos
PASS: numbers.test: exact->inexact: 2^i, no round: (23 8388608 8388608.0): neg
PASS: numbers.test: exact->inexact: 2^i, no round: (24 16777216 16777216.0): pos
PASS: numbers.test: exact->inexact: 2^i, no round: (24 16777216 16777216.0): neg
PASS: numbers.test: exact->inexact: 2^i, no round: (25 33554432 33554432.0): pos
PASS: numbers.test: exact->inexact: 2^i, no round: (25 33554432 33554432.0): neg
PASS: numbers.test: exact->inexact: 2^i, no round: (26 67108864 67108864.0): pos
PASS: numbers.test: exact->inexact: 2^i, no round: (26 67108864 67108864.0): neg
PASS: numbers.test: exact->inexact: 2^i, no round: (27 134217728 134217728.0): pos
PASS: numbers.test: exact->inexact: 2^i, no round: (27 134217728 134217728.0): neg
PASS: numbers.test: exact->inexact: 2^i, no round: (28 268435456 268435456.0): pos
PASS: numbers.test: exact->inexact: 2^i, no round: (28 268435456 268435456.0): neg
PASS: numbers.test: exact->inexact: 2^i, no round: (29 536870912 536870912.0): pos
PASS: numbers.test: exact->inexact: 2^i, no round: (29 536870912 536870912.0): neg
PASS: numbers.test: exact->inexact: 2^i, no round: (30 1073741824 1073741824.0): pos
PASS: numbers.test: exact->inexact: 2^i, no round: (30 1073741824 1073741824.0): neg
PASS: numbers.test: exact->inexact: 2^i, no round: (31 2147483648 2147483648.0): pos
PASS: numbers.test: exact->inexact: 2^i, no round: (31 2147483648 2147483648.0): neg
PASS: numbers.test: exact->inexact: 2^i, no round: (32 4294967296 4294967296.0): pos
PASS: numbers.test: exact->inexact: 2^i, no round: (32 4294967296 4294967296.0): neg
PASS: numbers.test: exact->inexact: 2^i, no round: (33 8589934592 8589934592.0): pos
PASS: numbers.test: exact->inexact: 2^i, no round: (33 8589934592 8589934592.0): neg
PASS: numbers.test: exact->inexact: 2^i, no round: (34 17179869184 17179869184.0): pos
PASS: numbers.test: exact->inexact: 2^i, no round: (34 17179869184 17179869184.0): neg
PASS: numbers.test: exact->inexact: 2^i, no round: (35 34359738368 34359738368.0): pos
PASS: numbers.test: exact->inexact: 2^i, no round: (35 34359738368 34359738368.0): neg
PASS: numbers.test: exact->inexact: 2^i, no round: (36 68719476736 68719476736.0): pos
PASS: numbers.test: exact->inexact: 2^i, no round: (36 68719476736 68719476736.0): neg
PASS: numbers.test: exact->inexact: 2^i, no round: (37 137438953472 137438953472.0): pos
PASS: numbers.test: exact->inexact: 2^i, no round: (37 137438953472 137438953472.0): neg
PASS: numbers.test: exact->inexact: 2^i, no round: (38 274877906944 274877906944.0): pos
PASS: numbers.test: exact->inexact: 2^i, no round: (38 274877906944 274877906944.0): neg
PASS: numbers.test: exact->inexact: 2^i, no round: (39 549755813888 549755813888.0): pos
PASS: numbers.test: exact->inexact: 2^i, no round: (39 549755813888 549755813888.0): neg
PASS: numbers.test: exact->inexact: 2^i, no round: (40 1099511627776 1099511627776.0): pos
PASS: numbers.test: exact->inexact: 2^i, no round: (40 1099511627776 1099511627776.0): neg
PASS: numbers.test: exact->inexact: 2^i, no round: (41 2199023255552 2199023255552.0): pos
PASS: numbers.test: exact->inexact: 2^i, no round: (41 2199023255552 2199023255552.0): neg
PASS: numbers.test: exact->inexact: 2^i, no round: (42 4398046511104 4398046511104.0): pos
PASS: numbers.test: exact->inexact: 2^i, no round: (42 4398046511104 4398046511104.0): neg
PASS: numbers.test: exact->inexact: 2^i, no round: (43 8796093022208 8796093022208.0): pos
PASS: numbers.test: exact->inexact: 2^i, no round: (43 8796093022208 8796093022208.0): neg
PASS: numbers.test: exact->inexact: 2^i, no round: (44 17592186044416 17592186044416.0): pos
PASS: numbers.test: exact->inexact: 2^i, no round: (44 17592186044416 17592186044416.0): neg
PASS: numbers.test: exact->inexact: 2^i, no round: (45 35184372088832 35184372088832.0): pos
PASS: numbers.test: exact->inexact: 2^i, no round: (45 35184372088832 35184372088832.0): neg
PASS: numbers.test: exact->inexact: 2^i, no round: (46 70368744177664 70368744177664.0): pos
PASS: numbers.test: exact->inexact: 2^i, no round: (46 70368744177664 70368744177664.0): neg
PASS: numbers.test: exact->inexact: 2^i, no round: (47 140737488355328 140737488355328.0): pos
PASS: numbers.test: exact->inexact: 2^i, no round: (47 140737488355328 140737488355328.0): neg
PASS: numbers.test: exact->inexact: 2^i, no round: (48 281474976710656 281474976710656.0): pos
PASS: numbers.test: exact->inexact: 2^i, no round: (48 281474976710656 281474976710656.0): neg
PASS: numbers.test: exact->inexact: 2^i, no round: (49 562949953421312 562949953421312.0): pos
PASS: numbers.test: exact->inexact: 2^i, no round: (49 562949953421312 562949953421312.0): neg
PASS: numbers.test: exact->inexact: 2^i, no round: (50 1125899906842624 1125899906842624.0): pos
PASS: numbers.test: exact->inexact: 2^i, no round: (50 1125899906842624 1125899906842624.0): neg
PASS: numbers.test: exact->inexact: 2^i, no round: (51 2251799813685248 2251799813685248.0): pos
PASS: numbers.test: exact->inexact: 2^i, no round: (51 2251799813685248 2251799813685248.0): neg
PASS: numbers.test: exact->inexact: 2^i, no round: (52 4503599627370496 4503599627370496.0): pos
PASS: numbers.test: exact->inexact: 2^i, no round: (52 4503599627370496 4503599627370496.0): neg
PASS: numbers.test: exact->inexact: 2^i, no round: (53 9007199254740992 9007199254740992.0): pos
PASS: numbers.test: exact->inexact: 2^i, no round: (53 9007199254740992 9007199254740992.0): neg
PASS: numbers.test: exact->inexact: 2^i, no round: (54 18014398509481984 18014398509481984.0): pos
PASS: numbers.test: exact->inexact: 2^i, no round: (54 18014398509481984 18014398509481984.0): neg
PASS: numbers.test: exact->inexact: 2^i, no round: (55 36028797018963968 36028797018963970.0): pos
PASS: numbers.test: exact->inexact: 2^i, no round: (55 36028797018963968 36028797018963970.0): neg
PASS: numbers.test: exact->inexact: 2^i, no round: (56 72057594037927936 72057594037927940.0): pos
PASS: numbers.test: exact->inexact: 2^i, no round: (56 72057594037927936 72057594037927940.0): neg
PASS: numbers.test: exact->inexact: 2^i, no round: (57 144115188075855872 144115188075855870.0): pos
PASS: numbers.test: exact->inexact: 2^i, no round: (57 144115188075855872 144115188075855870.0): neg
PASS: numbers.test: exact->inexact: 2^i, no round: (58 288230376151711744 288230376151711740.0): pos
PASS: numbers.test: exact->inexact: 2^i, no round: (58 288230376151711744 288230376151711740.0): neg
PASS: numbers.test: exact->inexact: 2^i, no round: (59 576460752303423488 576460752303423500.0): pos
PASS: numbers.test: exact->inexact: 2^i, no round: (59 576460752303423488 576460752303423500.0): neg
PASS: numbers.test: exact->inexact: 2^i, no round: (60 1152921504606846976 1152921504606847000.0): pos
PASS: numbers.test: exact->inexact: 2^i, no round: (60 1152921504606846976 1152921504606847000.0): neg
PASS: numbers.test: exact->inexact: 2^i, no round: (61 2305843009213693952 2305843009213694000.0): pos
PASS: numbers.test: exact->inexact: 2^i, no round: (61 2305843009213693952 2305843009213694000.0): neg
PASS: numbers.test: exact->inexact: 2^i, no round: (62 4611686018427387904 4611686018427388000.0): pos
PASS: numbers.test: exact->inexact: 2^i, no round: (62 4611686018427387904 4611686018427388000.0): neg
PASS: numbers.test: exact->inexact: 2^i, no round: (63 9223372036854775808 9223372036854776000.0): pos
PASS: numbers.test: exact->inexact: 2^i, no round: (63 9223372036854775808 9223372036854776000.0): neg
PASS: numbers.test: exact->inexact: 2^i, no round: (64 18446744073709551616 18446744073709552000.0): pos
PASS: numbers.test: exact->inexact: 2^i, no round: (64 18446744073709551616 18446744073709552000.0): neg
PASS: numbers.test: exact->inexact: 2^i, no round: (65 36893488147419103232 36893488147419103000.0): pos
PASS: numbers.test: exact->inexact: 2^i, no round: (65 36893488147419103232 36893488147419103000.0): neg
PASS: numbers.test: exact->inexact: 2^i, no round: (66 73786976294838206464 7.378697629483821e19): pos
PASS: numbers.test: exact->inexact: 2^i, no round: (66 73786976294838206464 7.378697629483821e19): neg
PASS: numbers.test: exact->inexact: 2^i, no round: (67 147573952589676412928 1.4757395258967641e20): pos
PASS: numbers.test: exact->inexact: 2^i, no round: (67 147573952589676412928 1.4757395258967641e20): neg
PASS: numbers.test: exact->inexact: 2^i, no round: (68 295147905179352825856 2.9514790517935283e20): pos
PASS: numbers.test: exact->inexact: 2^i, no round: (68 295147905179352825856 2.9514790517935283e20): neg
PASS: numbers.test: exact->inexact: 2^i, no round: (69 590295810358705651712 5.902958103587057e20): pos
PASS: numbers.test: exact->inexact: 2^i, no round: (69 590295810358705651712 5.902958103587057e20): neg
PASS: numbers.test: exact->inexact: 2^i, no round: (70 1180591620717411303424 1.1805916207174113e21): pos
PASS: numbers.test: exact->inexact: 2^i, no round: (70 1180591620717411303424 1.1805916207174113e21): neg
PASS: numbers.test: exact->inexact: 2^i, no round: (71 2361183241434822606848 2.3611832414348226e21): pos
PASS: numbers.test: exact->inexact: 2^i, no round: (71 2361183241434822606848 2.3611832414348226e21): neg
PASS: numbers.test: exact->inexact: 2^i, no round: (72 4722366482869645213696 4.722366482869645e21): pos
PASS: numbers.test: exact->inexact: 2^i, no round: (72 4722366482869645213696 4.722366482869645e21): neg
PASS: numbers.test: exact->inexact: 2^i, no round: (73 9444732965739290427392 9.44473296573929e21): pos
PASS: numbers.test: exact->inexact: 2^i, no round: (73 9444732965739290427392 9.44473296573929e21): neg
PASS: numbers.test: exact->inexact: 2^i, no round: (74 18889465931478580854784 1.888946593147858e22): pos
PASS: numbers.test: exact->inexact: 2^i, no round: (74 18889465931478580854784 1.888946593147858e22): neg
PASS: numbers.test: exact->inexact: 2^i, no round: (75 37778931862957161709568 3.777893186295716e22): pos
PASS: numbers.test: exact->inexact: 2^i, no round: (75 37778931862957161709568 3.777893186295716e22): neg
PASS: numbers.test: exact->inexact: 2^i, no round: (76 75557863725914323419136 7.555786372591432e22): pos
PASS: numbers.test: exact->inexact: 2^i, no round: (76 75557863725914323419136 7.555786372591432e22): neg
PASS: numbers.test: exact->inexact: 2^i, no round: (77 151115727451828646838272 1.5111572745182865e23): pos
PASS: numbers.test: exact->inexact: 2^i, no round: (77 151115727451828646838272 1.5111572745182865e23): neg
PASS: numbers.test: exact->inexact: 2^i, no round: (78 302231454903657293676544 3.022314549036573e23): pos
PASS: numbers.test: exact->inexact: 2^i, no round: (78 302231454903657293676544 3.022314549036573e23): neg
PASS: numbers.test: exact->inexact: 2^i, no round: (79 604462909807314587353088 6.044629098073146e23): pos
PASS: numbers.test: exact->inexact: 2^i, no round: (79 604462909807314587353088 6.044629098073146e23): neg
PASS: numbers.test: exact->inexact: 2^i, no round: (80 1208925819614629174706176 1.2089258196146292e24): pos
PASS: numbers.test: exact->inexact: 2^i, no round: (80 1208925819614629174706176 1.2089258196146292e24): neg
PASS: numbers.test: exact->inexact: 2^i, no round: (81 2417851639229258349412352 2.4178516392292583e24): pos
PASS: numbers.test: exact->inexact: 2^i, no round: (81 2417851639229258349412352 2.4178516392292583e24): neg
PASS: numbers.test: exact->inexact: 2^i, no round: (82 4835703278458516698824704 4.835703278458517e24): pos
PASS: numbers.test: exact->inexact: 2^i, no round: (82 4835703278458516698824704 4.835703278458517e24): neg
PASS: numbers.test: exact->inexact: 2^i, no round: (83 9671406556917033397649408 9.671406556917033e24): pos
PASS: numbers.test: exact->inexact: 2^i, no round: (83 9671406556917033397649408 9.671406556917033e24): neg
PASS: numbers.test: exact->inexact: 2^i, no round: (84 19342813113834066795298816 1.9342813113834067e25): pos
PASS: numbers.test: exact->inexact: 2^i, no round: (84 19342813113834066795298816 1.9342813113834067e25): neg
PASS: numbers.test: exact->inexact: 2^i, no round: (85 38685626227668133590597632 3.8685626227668134e25): pos
PASS: numbers.test: exact->inexact: 2^i, no round: (85 38685626227668133590597632 3.8685626227668134e25): neg
PASS: numbers.test: exact->inexact: 2^i, no round: (86 77371252455336267181195264 7.737125245533627e25): pos
PASS: numbers.test: exact->inexact: 2^i, no round: (86 77371252455336267181195264 7.737125245533627e25): neg
PASS: numbers.test: exact->inexact: 2^i, no round: (87 154742504910672534362390528 1.5474250491067253e26): pos
PASS: numbers.test: exact->inexact: 2^i, no round: (87 154742504910672534362390528 1.5474250491067253e26): neg
PASS: numbers.test: exact->inexact: 2^i, no round: (88 309485009821345068724781056 3.094850098213451e26): pos
PASS: numbers.test: exact->inexact: 2^i, no round: (88 309485009821345068724781056 3.094850098213451e26): neg
PASS: numbers.test: exact->inexact: 2^i, no round: (89 618970019642690137449562112 6.189700196426902e26): pos
PASS: numbers.test: exact->inexact: 2^i, no round: (89 618970019642690137449562112 6.189700196426902e26): neg
PASS: numbers.test: exact->inexact: 2^i, no round: (90 1237940039285380274899124224 1.2379400392853803e27): pos
PASS: numbers.test: exact->inexact: 2^i, no round: (90 1237940039285380274899124224 1.2379400392853803e27): neg
PASS: numbers.test: exact->inexact: 2^i, no round: (91 2475880078570760549798248448 2.4758800785707605e27): pos
PASS: numbers.test: exact->inexact: 2^i, no round: (91 2475880078570760549798248448 2.4758800785707605e27): neg
PASS: numbers.test: exact->inexact: 2^i, no round: (92 4951760157141521099596496896 4.951760157141521e27): pos
PASS: numbers.test: exact->inexact: 2^i, no round: (92 4951760157141521099596496896 4.951760157141521e27): neg
PASS: numbers.test: exact->inexact: 2^i, no round: (93 9903520314283042199192993792 9.903520314283042e27): pos
PASS: numbers.test: exact->inexact: 2^i, no round: (93 9903520314283042199192993792 9.903520314283042e27): neg
PASS: numbers.test: exact->inexact: 2^i, no round: (94 19807040628566084398385987584 1.9807040628566084e28): pos
PASS: numbers.test: exact->inexact: 2^i, no round: (94 19807040628566084398385987584 1.9807040628566084e28): neg
PASS: numbers.test: exact->inexact: 2^i, no round: (95 39614081257132168796771975168 3.961408125713217e28): pos
PASS: numbers.test: exact->inexact: 2^i, no round: (95 39614081257132168796771975168 3.961408125713217e28): neg
PASS: numbers.test: exact->inexact: 2^i, no round: (96 79228162514264337593543950336 7.922816251426434e28): pos
PASS: numbers.test: exact->inexact: 2^i, no round: (96 79228162514264337593543950336 7.922816251426434e28): neg
PASS: numbers.test: exact->inexact: 2^i, no round: (97 158456325028528675187087900672 1.5845632502852868e29): pos
PASS: numbers.test: exact->inexact: 2^i, no round: (97 158456325028528675187087900672 1.5845632502852868e29): neg
PASS: numbers.test: exact->inexact: 2^i, no round: (98 316912650057057350374175801344 3.1691265005705735e29): pos
PASS: numbers.test: exact->inexact: 2^i, no round: (98 316912650057057350374175801344 3.1691265005705735e29): neg
PASS: numbers.test: exact->inexact: 2^i, no round: (99 633825300114114700748351602688 6.338253001141147e29): pos
PASS: numbers.test: exact->inexact: 2^i, no round: (99 633825300114114700748351602688 6.338253001141147e29): neg
PASS: numbers.test: exact->inexact: 2^i, no round: (100 1267650600228229401496703205376 1.2676506002282294e30): pos
PASS: numbers.test: exact->inexact: 2^i, no round: (100 1267650600228229401496703205376 1.2676506002282294e30): neg
PASS: numbers.test: exact->inexact: 2^i+1, no round: (1 3 3.0): pos
PASS: numbers.test: exact->inexact: 2^i+1, no round: (1 3 3.0): neg
PASS: numbers.test: exact->inexact: 2^i+1, no round: (2 5 5.0): pos
PASS: numbers.test: exact->inexact: 2^i+1, no round: (2 5 5.0): neg
PASS: numbers.test: exact->inexact: 2^i+1, no round: (3 9 9.0): pos
PASS: numbers.test: exact->inexact: 2^i+1, no round: (3 9 9.0): neg
PASS: numbers.test: exact->inexact: 2^i+1, no round: (4 17 17.0): pos
PASS: numbers.test: exact->inexact: 2^i+1, no round: (4 17 17.0): neg
PASS: numbers.test: exact->inexact: 2^i+1, no round: (5 33 33.0): pos
PASS: numbers.test: exact->inexact: 2^i+1, no round: (5 33 33.0): neg
PASS: numbers.test: exact->inexact: 2^i+1, no round: (6 65 65.0): pos
PASS: numbers.test: exact->inexact: 2^i+1, no round: (6 65 65.0): neg
PASS: numbers.test: exact->inexact: 2^i+1, no round: (7 129 129.0): pos
PASS: numbers.test: exact->inexact: 2^i+1, no round: (7 129 129.0): neg
PASS: numbers.test: exact->inexact: 2^i+1, no round: (8 257 257.0): pos
PASS: numbers.test: exact->inexact: 2^i+1, no round: (8 257 257.0): neg
PASS: numbers.test: exact->inexact: 2^i+1, no round: (9 513 513.0): pos
PASS: numbers.test: exact->inexact: 2^i+1, no round: (9 513 513.0): neg
PASS: numbers.test: exact->inexact: 2^i+1, no round: (10 1025 1025.0): pos
PASS: numbers.test: exact->inexact: 2^i+1, no round: (10 1025 1025.0): neg
PASS: numbers.test: exact->inexact: 2^i+1, no round: (11 2049 2049.0): pos
PASS: numbers.test: exact->inexact: 2^i+1, no round: (11 2049 2049.0): neg
PASS: numbers.test: exact->inexact: 2^i+1, no round: (12 4097 4097.0): pos
PASS: numbers.test: exact->inexact: 2^i+1, no round: (12 4097 4097.0): neg
PASS: numbers.test: exact->inexact: 2^i+1, no round: (13 8193 8193.0): pos
PASS: numbers.test: exact->inexact: 2^i+1, no round: (13 8193 8193.0): neg
PASS: numbers.test: exact->inexact: 2^i+1, no round: (14 16385 16385.0): pos
PASS: numbers.test: exact->inexact: 2^i+1, no round: (14 16385 16385.0): neg
PASS: numbers.test: exact->inexact: 2^i+1, no round: (15 32769 32769.0): pos
PASS: numbers.test: exact->inexact: 2^i+1, no round: (15 32769 32769.0): neg
PASS: numbers.test: exact->inexact: 2^i+1, no round: (16 65537 65537.0): pos
PASS: numbers.test: exact->inexact: 2^i+1, no round: (16 65537 65537.0): neg
PASS: numbers.test: exact->inexact: 2^i+1, no round: (17 131073 131073.0): pos
PASS: numbers.test: exact->inexact: 2^i+1, no round: (17 131073 131073.0): neg
PASS: numbers.test: exact->inexact: 2^i+1, no round: (18 262145 262145.0): pos
PASS: numbers.test: exact->inexact: 2^i+1, no round: (18 262145 262145.0): neg
PASS: numbers.test: exact->inexact: 2^i+1, no round: (19 524289 524289.0): pos
PASS: numbers.test: exact->inexact: 2^i+1, no round: (19 524289 524289.0): neg
PASS: numbers.test: exact->inexact: 2^i+1, no round: (20 1048577 1048577.0): pos
PASS: numbers.test: exact->inexact: 2^i+1, no round: (20 1048577 1048577.0): neg
PASS: numbers.test: exact->inexact: 2^i+1, no round: (21 2097153 2097153.0): pos
PASS: numbers.test: exact->inexact: 2^i+1, no round: (21 2097153 2097153.0): neg
PASS: numbers.test: exact->inexact: 2^i+1, no round: (22 4194305 4194305.0): pos
PASS: numbers.test: exact->inexact: 2^i+1, no round: (22 4194305 4194305.0): neg
PASS: numbers.test: exact->inexact: 2^i+1, no round: (23 8388609 8388609.0): pos
PASS: numbers.test: exact->inexact: 2^i+1, no round: (23 8388609 8388609.0): neg
PASS: numbers.test: exact->inexact: 2^i+1, no round: (24 16777217 16777217.0): pos
PASS: numbers.test: exact->inexact: 2^i+1, no round: (24 16777217 16777217.0): neg
PASS: numbers.test: exact->inexact: 2^i+1, no round: (25 33554433 33554433.0): pos
PASS: numbers.test: exact->inexact: 2^i+1, no round: (25 33554433 33554433.0): neg
PASS: numbers.test: exact->inexact: 2^i+1, no round: (26 67108865 67108865.0): pos
PASS: numbers.test: exact->inexact: 2^i+1, no round: (26 67108865 67108865.0): neg
PASS: numbers.test: exact->inexact: 2^i+1, no round: (27 134217729 134217729.0): pos
PASS: numbers.test: exact->inexact: 2^i+1, no round: (27 134217729 134217729.0): neg
PASS: numbers.test: exact->inexact: 2^i+1, no round: (28 268435457 268435457.0): pos
PASS: numbers.test: exact->inexact: 2^i+1, no round: (28 268435457 268435457.0): neg
PASS: numbers.test: exact->inexact: 2^i+1, no round: (29 536870913 536870913.0): pos
PASS: numbers.test: exact->inexact: 2^i+1, no round: (29 536870913 536870913.0): neg
PASS: numbers.test: exact->inexact: 2^i+1, no round: (30 1073741825 1073741825.0): pos
PASS: numbers.test: exact->inexact: 2^i+1, no round: (30 1073741825 1073741825.0): neg
PASS: numbers.test: exact->inexact: 2^i+1, no round: (31 2147483649 2147483649.0): pos
PASS: numbers.test: exact->inexact: 2^i+1, no round: (31 2147483649 2147483649.0): neg
PASS: numbers.test: exact->inexact: 2^i+1, no round: (32 4294967297 4294967297.0): pos
PASS: numbers.test: exact->inexact: 2^i+1, no round: (32 4294967297 4294967297.0): neg
PASS: numbers.test: exact->inexact: 2^i+1, no round: (33 8589934593 8589934593.0): pos
PASS: numbers.test: exact->inexact: 2^i+1, no round: (33 8589934593 8589934593.0): neg
PASS: numbers.test: exact->inexact: 2^i+1, no round: (34 17179869185 17179869185.0): pos
PASS: numbers.test: exact->inexact: 2^i+1, no round: (34 17179869185 17179869185.0): neg
PASS: numbers.test: exact->inexact: 2^i+1, no round: (35 34359738369 34359738369.0): pos
PASS: numbers.test: exact->inexact: 2^i+1, no round: (35 34359738369 34359738369.0): neg
PASS: numbers.test: exact->inexact: 2^i+1, no round: (36 68719476737 68719476737.0): pos
PASS: numbers.test: exact->inexact: 2^i+1, no round: (36 68719476737 68719476737.0): neg
PASS: numbers.test: exact->inexact: 2^i+1, no round: (37 137438953473 137438953473.0): pos
PASS: numbers.test: exact->inexact: 2^i+1, no round: (37 137438953473 137438953473.0): neg
PASS: numbers.test: exact->inexact: 2^i+1, no round: (38 274877906945 274877906945.0): pos
PASS: numbers.test: exact->inexact: 2^i+1, no round: (38 274877906945 274877906945.0): neg
PASS: numbers.test: exact->inexact: 2^i+1, no round: (39 549755813889 549755813889.0): pos
PASS: numbers.test: exact->inexact: 2^i+1, no round: (39 549755813889 549755813889.0): neg
PASS: numbers.test: exact->inexact: 2^i+1, no round: (40 1099511627777 1099511627777.0): pos
PASS: numbers.test: exact->inexact: 2^i+1, no round: (40 1099511627777 1099511627777.0): neg
PASS: numbers.test: exact->inexact: 2^i+1, no round: (41 2199023255553 2199023255553.0): pos
PASS: numbers.test: exact->inexact: 2^i+1, no round: (41 2199023255553 2199023255553.0): neg
PASS: numbers.test: exact->inexact: 2^i+1, no round: (42 4398046511105 4398046511105.0): pos
PASS: numbers.test: exact->inexact: 2^i+1, no round: (42 4398046511105 4398046511105.0): neg
PASS: numbers.test: exact->inexact: 2^i+1, no round: (43 8796093022209 8796093022209.0): pos
PASS: numbers.test: exact->inexact: 2^i+1, no round: (43 8796093022209 8796093022209.0): neg
PASS: numbers.test: exact->inexact: 2^i+1, no round: (44 17592186044417 17592186044417.0): pos
PASS: numbers.test: exact->inexact: 2^i+1, no round: (44 17592186044417 17592186044417.0): neg
PASS: numbers.test: exact->inexact: 2^i+1, no round: (45 35184372088833 35184372088833.0): pos
PASS: numbers.test: exact->inexact: 2^i+1, no round: (45 35184372088833 35184372088833.0): neg
PASS: numbers.test: exact->inexact: 2^i+1, no round: (46 70368744177665 70368744177665.0): pos
PASS: numbers.test: exact->inexact: 2^i+1, no round: (46 70368744177665 70368744177665.0): neg
PASS: numbers.test: exact->inexact: 2^i+1, no round: (47 140737488355329 140737488355329.0): pos
PASS: numbers.test: exact->inexact: 2^i+1, no round: (47 140737488355329 140737488355329.0): neg
PASS: numbers.test: exact->inexact: 2^i+1, no round: (48 281474976710657 281474976710657.0): pos
PASS: numbers.test: exact->inexact: 2^i+1, no round: (48 281474976710657 281474976710657.0): neg
PASS: numbers.test: exact->inexact: 2^i+1, no round: (49 562949953421313 562949953421313.0): pos
PASS: numbers.test: exact->inexact: 2^i+1, no round: (49 562949953421313 562949953421313.0): neg
PASS: numbers.test: exact->inexact: 2^i+1, no round: (50 1125899906842625 1125899906842625.0): pos
PASS: numbers.test: exact->inexact: 2^i+1, no round: (50 1125899906842625 1125899906842625.0): neg
PASS: numbers.test: exact->inexact: 2^i+1, no round: (51 2251799813685249 2251799813685249.0): pos
PASS: numbers.test: exact->inexact: 2^i+1, no round: (51 2251799813685249 2251799813685249.0): neg
PASS: numbers.test: exact->inexact: 2^i+1, no round: (52 4503599627370497 4503599627370497.0): pos
PASS: numbers.test: exact->inexact: 2^i+1, no round: (52 4503599627370497 4503599627370497.0): neg
PASS: numbers.test: exact->inexact: (2^i+1)*2^100, no round: (1 3802951800684688204490109616128 3.802951800684688e30): pos
PASS: numbers.test: exact->inexact: (2^i+1)*2^100, no round: (1 3802951800684688204490109616128 3.802951800684688e30): neg
PASS: numbers.test: exact->inexact: (2^i+1)*2^100, no round: (2 6338253001141147007483516026880 6.338253001141147e30): pos
PASS: numbers.test: exact->inexact: (2^i+1)*2^100, no round: (2 6338253001141147007483516026880 6.338253001141147e30): neg
PASS: numbers.test: exact->inexact: (2^i+1)*2^100, no round: (3 11408855402054064613470328848384 1.1408855402054065e31): pos
PASS: numbers.test: exact->inexact: (2^i+1)*2^100, no round: (3 11408855402054064613470328848384 1.1408855402054065e31): neg
PASS: numbers.test: exact->inexact: (2^i+1)*2^100, no round: (4 21550060203879899825443954491392 2.15500602038799e31): pos
PASS: numbers.test: exact->inexact: (2^i+1)*2^100, no round: (4 21550060203879899825443954491392 2.15500602038799e31): neg
PASS: numbers.test: exact->inexact: (2^i+1)*2^100, no round: (5 41832469807531570249391205777408 4.183246980753157e31): pos
PASS: numbers.test: exact->inexact: (2^i+1)*2^100, no round: (5 41832469807531570249391205777408 4.183246980753157e31): neg
PASS: numbers.test: exact->inexact: (2^i+1)*2^100, no round: (6 82397289014834911097285708349440 8.239728901483491e31): pos
PASS: numbers.test: exact->inexact: (2^i+1)*2^100, no round: (6 82397289014834911097285708349440 8.239728901483491e31): neg
PASS: numbers.test: exact->inexact: (2^i+1)*2^100, no round: (7 163526927429441592793074713493504 1.635269274294416e32): pos
PASS: numbers.test: exact->inexact: (2^i+1)*2^100, no round: (7 163526927429441592793074713493504 1.635269274294416e32): neg
PASS: numbers.test: exact->inexact: (2^i+1)*2^100, no round: (8 325786204258654956184652723781632 3.2578620425865496e32): pos
PASS: numbers.test: exact->inexact: (2^i+1)*2^100, no round: (8 325786204258654956184652723781632 3.2578620425865496e32): neg
PASS: numbers.test: exact->inexact: (2^i+1)*2^100, no round: (9 650304757917081682967808744357888 6.503047579170817e32): pos
PASS: numbers.test: exact->inexact: (2^i+1)*2^100, no round: (9 650304757917081682967808744357888 6.503047579170817e32): neg
PASS: numbers.test: exact->inexact: (2^i+1)*2^100, no round: (10 1299341865233935136534120785510400 1.299341865233935e33): pos
PASS: numbers.test: exact->inexact: (2^i+1)*2^100, no round: (10 1299341865233935136534120785510400 1.299341865233935e33): neg
PASS: numbers.test: exact->inexact: (2^i+1)*2^100, no round: (11 2597416079867642043666744867815424 2.597416079867642e33): pos
PASS: numbers.test: exact->inexact: (2^i+1)*2^100, no round: (11 2597416079867642043666744867815424 2.597416079867642e33): neg
PASS: numbers.test: exact->inexact: (2^i+1)*2^100, no round: (12 5193564509135055857931993032425472 5.193564509135056e33): pos
PASS: numbers.test: exact->inexact: (2^i+1)*2^100, no round: (12 5193564509135055857931993032425472 5.193564509135056e33): neg
PASS: numbers.test: exact->inexact: (2^i+1)*2^100, no round: (13 10385861367669883486462489361645568 1.0385861367669883e34): pos
PASS: numbers.test: exact->inexact: (2^i+1)*2^100, no round: (13 10385861367669883486462489361645568 1.0385861367669883e34): neg
PASS: numbers.test: exact->inexact: (2^i+1)*2^100, no round: (14 20770455084739538743523482020085760 2.077045508473954e34): pos
PASS: numbers.test: exact->inexact: (2^i+1)*2^100, no round: (14 20770455084739538743523482020085760 2.077045508473954e34): neg
PASS: numbers.test: exact->inexact: (2^i+1)*2^100, no round: (15 41539642518878849257645467336966144 4.153964251887885e34): pos
PASS: numbers.test: exact->inexact: (2^i+1)*2^100, no round: (15 41539642518878849257645467336966144 4.153964251887885e34): neg
PASS: numbers.test: exact->inexact: (2^i+1)*2^100, no round: (16 83078017387157470285889437970726912 8.307801738715747e34): pos
PASS: numbers.test: exact->inexact: (2^i+1)*2^100, no round: (16 83078017387157470285889437970726912 8.307801738715747e34): neg
PASS: numbers.test: exact->inexact: (2^i+1)*2^100, no round: (17 166154767123714712342377379238248448 1.661547671237147e35): pos
PASS: numbers.test: exact->inexact: (2^i+1)*2^100, no round: (17 166154767123714712342377379238248448 1.661547671237147e35): neg
PASS: numbers.test: exact->inexact: (2^i+1)*2^100, no round: (18 332308266596829196455353261773291520 3.323082665968292e35): pos
PASS: numbers.test: exact->inexact: (2^i+1)*2^100, no round: (18 332308266596829196455353261773291520 3.323082665968292e35): neg
PASS: numbers.test: exact->inexact: (2^i+1)*2^100, no round: (19 664615265543058164681305026843377664 6.646152655430582e35): pos
PASS: numbers.test: exact->inexact: (2^i+1)*2^100, no round: (19 664615265543058164681305026843377664 6.646152655430582e35): neg
PASS: numbers.test: exact->inexact: (2^i+1)*2^100, no round: (20 1329229263435516101133208556983549952 1.329229263435516e36): pos
PASS: numbers.test: exact->inexact: (2^i+1)*2^100, no round: (20 1329229263435516101133208556983549952 1.329229263435516e36): neg
PASS: numbers.test: exact->inexact: (2^i+1)*2^100, no round: (21 2658457259220431974037015617263894528 2.658457259220432e36): pos
PASS: numbers.test: exact->inexact: (2^i+1)*2^100, no round: (21 2658457259220431974037015617263894528 2.658457259220432e36): neg
PASS: numbers.test: exact->inexact: (2^i+1)*2^100, no round: (22 5316913250790263719844629737824583680 5.316913250790264e36): pos
PASS: numbers.test: exact->inexact: (2^i+1)*2^100, no round: (22 5316913250790263719844629737824583680 5.316913250790264e36): neg
PASS: numbers.test: exact->inexact: (2^i+1)*2^100, no round: (23 10633825233929927211459857978945961984 1.0633825233929927e37): pos
PASS: numbers.test: exact->inexact: (2^i+1)*2^100, no round: (23 10633825233929927211459857978945961984 1.0633825233929927e37): neg
PASS: numbers.test: exact->inexact: (2^i+1)*2^100, no round: (24 21267649200209254194690314461188718592 2.1267649200209254e37): pos
PASS: numbers.test: exact->inexact: (2^i+1)*2^100, no round: (24 21267649200209254194690314461188718592 2.1267649200209254e37): neg
PASS: numbers.test: exact->inexact: (2^i+1)*2^100, no round: (25 42535297132767908161151227425674231808 4.253529713276791e37): pos
PASS: numbers.test: exact->inexact: (2^i+1)*2^100, no round: (25 42535297132767908161151227425674231808 4.253529713276791e37): neg
PASS: numbers.test: exact->inexact: (2^i+1)*2^100, no round: (26 85070592997885216094073053354645258240 8.507059299788522e37): pos
PASS: numbers.test: exact->inexact: (2^i+1)*2^100, no round: (26 85070592997885216094073053354645258240 8.507059299788522e37): neg
PASS: numbers.test: exact->inexact: (2^i+1)*2^100, no round: (27 170141184728119831959916705212587311104 1.7014118472811983e38): pos
PASS: numbers.test: exact->inexact: (2^i+1)*2^100, no round: (27 170141184728119831959916705212587311104 1.7014118472811983e38): neg
PASS: numbers.test: exact->inexact: (2^i+1)*2^100, no round: (28 340282368188589063691604008928471416832 3.402823681885891e38): pos
PASS: numbers.test: exact->inexact: (2^i+1)*2^100, no round: (28 340282368188589063691604008928471416832 3.402823681885891e38): neg
PASS: numbers.test: exact->inexact: (2^i+1)*2^100, no round: (29 680564735109527527154978616360239628288 6.805647351095275e38): pos
PASS: numbers.test: exact->inexact: (2^i+1)*2^100, no round: (29 680564735109527527154978616360239628288 6.805647351095275e38): neg
PASS: numbers.test: exact->inexact: (2^i+1)*2^100, no round: (30 1361129468951404454081727831223776051200 1.3611294689514045e39): pos
PASS: numbers.test: exact->inexact: (2^i+1)*2^100, no round: (30 1361129468951404454081727831223776051200 1.3611294689514045e39): neg
PASS: numbers.test: exact->inexact: (2^i+1)*2^100, no round: (31 2722258936635158307935226260950848897024 2.7222589366351583e39): pos
PASS: numbers.test: exact->inexact: (2^i+1)*2^100, no round: (31 2722258936635158307935226260950848897024 2.7222589366351583e39): neg
PASS: numbers.test: exact->inexact: (2^i+1)*2^100, no round: (32 5444517872002666015642223120404994588672 5.444517872002666e39): pos
PASS: numbers.test: exact->inexact: (2^i+1)*2^100, no round: (32 5444517872002666015642223120404994588672 5.444517872002666e39): neg
PASS: numbers.test: exact->inexact: (2^i+1)*2^100, no round: (33 10889035742737681431056216839313285971968 1.0889035742737681e40): pos
PASS: numbers.test: exact->inexact: (2^i+1)*2^100, no round: (33 10889035742737681431056216839313285971968 1.0889035742737681e40): neg
PASS: numbers.test: exact->inexact: (2^i+1)*2^100, no round: (34 21778071484207712261884204277129868738560 2.177807148420771e40): pos
PASS: numbers.test: exact->inexact: (2^i+1)*2^100, no round: (34 21778071484207712261884204277129868738560 2.177807148420771e40): neg
PASS: numbers.test: exact->inexact: (2^i+1)*2^100, no round: (35 43556142967147773923540179152763034271744 4.355614296714777e40): pos
PASS: numbers.test: exact->inexact: (2^i+1)*2^100, no round: (35 43556142967147773923540179152763034271744 4.355614296714777e40): neg
PASS: numbers.test: exact->inexact: (2^i+1)*2^100, no round: (36 87112285933027897246852128904029365338112 8.71122859330279e40): pos
PASS: numbers.test: exact->inexact: (2^i+1)*2^100, no round: (36 87112285933027897246852128904029365338112 8.71122859330279e40): neg
PASS: numbers.test: exact->inexact: (2^i+1)*2^100, no round: (37 174224571864788143893476028406562027470848 1.7422457186478814e41): pos
PASS: numbers.test: exact->inexact: (2^i+1)*2^100, no round: (37 174224571864788143893476028406562027470848 1.7422457186478814e41): neg
PASS: numbers.test: exact->inexact: (2^i+1)*2^100, no round: (38 348449143728308637186723827411627351736320 3.484491437283086e41): pos
PASS: numbers.test: exact->inexact: (2^i+1)*2^100, no round: (38 348449143728308637186723827411627351736320 3.484491437283086e41): neg
PASS: numbers.test: exact->inexact: (2^i+1)*2^100, no round: (39 696898287455349623773219425421758000267264 6.968982874553496e41): pos
PASS: numbers.test: exact->inexact: (2^i+1)*2^100, no round: (39 696898287455349623773219425421758000267264 6.968982874553496e41): neg
PASS: numbers.test: exact->inexact: (2^i+1)*2^100, no round: (40 1393796574909431596946210621442019297329152 1.3937965749094316e42): pos
PASS: numbers.test: exact->inexact: (2^i+1)*2^100, no round: (40 1393796574909431596946210621442019297329152 1.3937965749094316e42): neg
PASS: numbers.test: exact->inexact: (2^i+1)*2^100, no round: (41 2787593149817595543292193013482541891452928 2.7875931498175955e42): pos
PASS: numbers.test: exact->inexact: (2^i+1)*2^100, no round: (41 2787593149817595543292193013482541891452928 2.7875931498175955e42): neg
PASS: numbers.test: exact->inexact: (2^i+1)*2^100, no round: (42 5575186299633923435984157797563587079700480 5.575186299633923e42): pos
PASS: numbers.test: exact->inexact: (2^i+1)*2^100, no round: (42 5575186299633923435984157797563587079700480 5.575186299633923e42): neg
PASS: numbers.test: exact->inexact: (2^i+1)*2^100, no round: (43 11150372599266579221368087365725677456195584 1.115037259926658e43): pos
PASS: numbers.test: exact->inexact: (2^i+1)*2^100, no round: (43 11150372599266579221368087365725677456195584 1.115037259926658e43): neg
PASS: numbers.test: exact->inexact: (2^i+1)*2^100, no round: (44 22300745198531890792135946502049858209185792 2.230074519853189e43): pos
PASS: numbers.test: exact->inexact: (2^i+1)*2^100, no round: (44 22300745198531890792135946502049858209185792 2.230074519853189e43): neg
PASS: numbers.test: exact->inexact: (2^i+1)*2^100, no round: (45 44601490397062513933671664774698219715166208 4.460149039706251e43): pos
PASS: numbers.test: exact->inexact: (2^i+1)*2^100, no round: (45 44601490397062513933671664774698219715166208 4.460149039706251e43): neg
PASS: numbers.test: exact->inexact: (2^i+1)*2^100, no round: (46 89202980794123760216743101319994942727127040 8.920298079412376e43): pos
PASS: numbers.test: exact->inexact: (2^i+1)*2^100, no round: (46 89202980794123760216743101319994942727127040 8.920298079412376e43): neg
PASS: numbers.test: exact->inexact: (2^i+1)*2^100, no round: (47 178405961588246252782885974410588388751048704 1.7840596158824625e44): pos
PASS: numbers.test: exact->inexact: (2^i+1)*2^100, no round: (47 178405961588246252782885974410588388751048704 1.7840596158824625e44): neg
PASS: numbers.test: exact->inexact: (2^i+1)*2^100, no round: (48 356811923176491237915171720591775280798892032 3.568119231764912e44): pos
PASS: numbers.test: exact->inexact: (2^i+1)*2^100, no round: (48 356811923176491237915171720591775280798892032 3.568119231764912e44): neg
PASS: numbers.test: exact->inexact: (2^i+1)*2^100, no round: (49 713623846352981208179743212954149064894578688 7.136238463529812e44): pos
PASS: numbers.test: exact->inexact: (2^i+1)*2^100, no round: (49 713623846352981208179743212954149064894578688 7.136238463529812e44): neg
PASS: numbers.test: exact->inexact: (2^i+1)*2^100, no round: (50 1427247692705961148708886197678896633085952000 1.427247692705961e45): pos
PASS: numbers.test: exact->inexact: (2^i+1)*2^100, no round: (50 1427247692705961148708886197678896633085952000 1.427247692705961e45): neg
PASS: numbers.test: exact->inexact: (2^i+1)*2^100, no round: (51 2854495385411921029767172167128391769468698624 2.854495385411921e45): pos
PASS: numbers.test: exact->inexact: (2^i+1)*2^100, no round: (51 2854495385411921029767172167128391769468698624 2.854495385411921e45): neg
PASS: numbers.test: exact->inexact: (2^i+1)*2^100, no round: (52 5708990770823840791883744106027382042234191872 5.708990770823841e45): pos
PASS: numbers.test: exact->inexact: (2^i+1)*2^100, no round: (52 5708990770823840791883744106027382042234191872 5.708990770823841e45): neg
PASS: numbers.test: exact->inexact: mantdig ones then zeros, no rounding: (0 9007199254740991 9007199254740991.0): pos
PASS: numbers.test: exact->inexact: mantdig ones then zeros, no rounding: (0 9007199254740991 9007199254740991.0): neg
PASS: numbers.test: exact->inexact: mantdig ones then zeros, no rounding: (1 18014398509481982 18014398509481982.0): pos
PASS: numbers.test: exact->inexact: mantdig ones then zeros, no rounding: (1 18014398509481982 18014398509481982.0): neg
PASS: numbers.test: exact->inexact: mantdig ones then zeros, no rounding: (2 36028797018963964 36028797018963964.0): pos
PASS: numbers.test: exact->inexact: mantdig ones then zeros, no rounding: (2 36028797018963964 36028797018963964.0): neg
PASS: numbers.test: exact->inexact: mantdig ones then zeros, no rounding: (3 72057594037927928 72057594037927930.0): pos
PASS: numbers.test: exact->inexact: mantdig ones then zeros, no rounding: (3 72057594037927928 72057594037927930.0): neg
PASS: numbers.test: exact->inexact: mantdig ones then zeros, no rounding: (4 144115188075855856 144115188075855860.0): pos
PASS: numbers.test: exact->inexact: mantdig ones then zeros, no rounding: (4 144115188075855856 144115188075855860.0): neg
PASS: numbers.test: exact->inexact: mantdig ones then zeros, no rounding: (5 288230376151711712 288230376151711700.0): pos
PASS: numbers.test: exact->inexact: mantdig ones then zeros, no rounding: (5 288230376151711712 288230376151711700.0): neg
PASS: numbers.test: exact->inexact: mantdig ones then zeros, no rounding: (6 576460752303423424 576460752303423400.0): pos
PASS: numbers.test: exact->inexact: mantdig ones then zeros, no rounding: (6 576460752303423424 576460752303423400.0): neg
PASS: numbers.test: exact->inexact: mantdig ones then zeros, no rounding: (7 1152921504606846848 1152921504606846800.0): pos
PASS: numbers.test: exact->inexact: mantdig ones then zeros, no rounding: (7 1152921504606846848 1152921504606846800.0): neg
PASS: numbers.test: exact->inexact: mantdig ones then zeros, no rounding: (8 2305843009213693696 2305843009213693700.0): pos
PASS: numbers.test: exact->inexact: mantdig ones then zeros, no rounding: (8 2305843009213693696 2305843009213693700.0): neg
PASS: numbers.test: exact->inexact: mantdig ones then zeros, no rounding: (9 4611686018427387392 4611686018427387400.0): pos
PASS: numbers.test: exact->inexact: mantdig ones then zeros, no rounding: (9 4611686018427387392 4611686018427387400.0): neg
PASS: numbers.test: exact->inexact: mantdig ones then zeros, no rounding: (10 9223372036854774784 9223372036854775000.0): pos
PASS: numbers.test: exact->inexact: mantdig ones then zeros, no rounding: (10 9223372036854774784 9223372036854775000.0): neg
PASS: numbers.test: exact->inexact: mantdig ones then zeros, no rounding: (11 18446744073709549568 1.844674407370955e19): pos
PASS: numbers.test: exact->inexact: mantdig ones then zeros, no rounding: (11 18446744073709549568 1.844674407370955e19): neg
PASS: numbers.test: exact->inexact: mantdig ones then zeros, no rounding: (12 36893488147419099136 3.68934881474191e19): pos
PASS: numbers.test: exact->inexact: mantdig ones then zeros, no rounding: (12 36893488147419099136 3.68934881474191e19): neg
PASS: numbers.test: exact->inexact: mantdig ones then zeros, no rounding: (13 73786976294838198272 7.37869762948382e19): pos
PASS: numbers.test: exact->inexact: mantdig ones then zeros, no rounding: (13 73786976294838198272 7.37869762948382e19): neg
PASS: numbers.test: exact->inexact: mantdig ones then zeros, no rounding: (14 147573952589676396544 1.475739525896764e20): pos
PASS: numbers.test: exact->inexact: mantdig ones then zeros, no rounding: (14 147573952589676396544 1.475739525896764e20): neg
PASS: numbers.test: exact->inexact: mantdig ones then zeros, no rounding: (15 295147905179352793088 2.951479051793528e20): pos
PASS: numbers.test: exact->inexact: mantdig ones then zeros, no rounding: (15 295147905179352793088 2.951479051793528e20): neg
PASS: numbers.test: exact->inexact: mantdig ones then zeros, no rounding: (16 590295810358705586176 5.902958103587056e20): pos
PASS: numbers.test: exact->inexact: mantdig ones then zeros, no rounding: (16 590295810358705586176 5.902958103587056e20): neg
PASS: numbers.test: exact->inexact: mantdig ones then zeros, no rounding: (17 1180591620717411172352 1.1805916207174112e21): pos
PASS: numbers.test: exact->inexact: mantdig ones then zeros, no rounding: (17 1180591620717411172352 1.1805916207174112e21): neg
PASS: numbers.test: exact->inexact: mantdig ones then zeros, no rounding: (18 2361183241434822344704 2.3611832414348223e21): pos
PASS: numbers.test: exact->inexact: mantdig ones then zeros, no rounding: (18 2361183241434822344704 2.3611832414348223e21): neg
PASS: numbers.test: exact->inexact: mantdig ones then zeros, no rounding: (19 4722366482869644689408 4.7223664828696447e21): pos
PASS: numbers.test: exact->inexact: mantdig ones then zeros, no rounding: (19 4722366482869644689408 4.7223664828696447e21): neg
PASS: numbers.test: exact->inexact: mantdig ones then zeros, no rounding: (20 9444732965739289378816 9.444732965739289e21): pos
PASS: numbers.test: exact->inexact: mantdig ones then zeros, no rounding: (20 9444732965739289378816 9.444732965739289e21): neg
PASS: numbers.test: exact->inexact: mantdig ones then zeros, no rounding: (21 18889465931478578757632 1.8889465931478579e22): pos
PASS: numbers.test: exact->inexact: mantdig ones then zeros, no rounding: (21 18889465931478578757632 1.8889465931478579e22): neg
PASS: numbers.test: exact->inexact: mantdig ones then zeros, no rounding: (22 37778931862957157515264 3.7778931862957158e22): pos
PASS: numbers.test: exact->inexact: mantdig ones then zeros, no rounding: (22 37778931862957157515264 3.7778931862957158e22): neg
PASS: numbers.test: exact->inexact: mantdig ones then zeros, no rounding: (23 75557863725914315030528 7.5557863725914315e22): pos
PASS: numbers.test: exact->inexact: mantdig ones then zeros, no rounding: (23 75557863725914315030528 7.5557863725914315e22): neg
PASS: numbers.test: exact->inexact: mantdig ones then zeros, no rounding: (24 151115727451828630061056 1.5111572745182863e23): pos
PASS: numbers.test: exact->inexact: mantdig ones then zeros, no rounding: (24 151115727451828630061056 1.5111572745182863e23): neg
PASS: numbers.test: exact->inexact: mantdig ones then zeros, no rounding: (25 302231454903657260122112 3.0223145490365726e23): pos
PASS: numbers.test: exact->inexact: mantdig ones then zeros, no rounding: (25 302231454903657260122112 3.0223145490365726e23): neg
PASS: numbers.test: exact->inexact: mantdig ones then zeros, no rounding: (26 604462909807314520244224 6.044629098073145e23): pos
PASS: numbers.test: exact->inexact: mantdig ones then zeros, no rounding: (26 604462909807314520244224 6.044629098073145e23): neg
PASS: numbers.test: exact->inexact: mantdig ones then zeros, no rounding: (27 1208925819614629040488448 1.208925819614629e24): pos
PASS: numbers.test: exact->inexact: mantdig ones then zeros, no rounding: (27 1208925819614629040488448 1.208925819614629e24): neg
PASS: numbers.test: exact->inexact: mantdig ones then zeros, no rounding: (28 2417851639229258080976896 2.417851639229258e24): pos
PASS: numbers.test: exact->inexact: mantdig ones then zeros, no rounding: (28 2417851639229258080976896 2.417851639229258e24): neg
PASS: numbers.test: exact->inexact: mantdig ones then zeros, no rounding: (29 4835703278458516161953792 4.835703278458516e24): pos
PASS: numbers.test: exact->inexact: mantdig ones then zeros, no rounding: (29 4835703278458516161953792 4.835703278458516e24): neg
PASS: numbers.test: exact->inexact: mantdig ones then zeros, no rounding: (30 9671406556917032323907584 9.671406556917032e24): pos
PASS: numbers.test: exact->inexact: mantdig ones then zeros, no rounding: (30 9671406556917032323907584 9.671406556917032e24): neg
PASS: numbers.test: exact->inexact: mantdig ones then zeros, no rounding: (31 19342813113834064647815168 1.9342813113834065e25): pos
PASS: numbers.test: exact->inexact: mantdig ones then zeros, no rounding: (31 19342813113834064647815168 1.9342813113834065e25): neg
PASS: numbers.test: exact->inexact: mantdig ones then zeros, no rounding: (32 38685626227668129295630336 3.868562622766813e25): pos
PASS: numbers.test: exact->inexact: mantdig ones then zeros, no rounding: (32 38685626227668129295630336 3.868562622766813e25): neg
PASS: numbers.test: exact->inexact: mantdig ones then zeros, no rounding: (33 77371252455336258591260672 7.737125245533626e25): pos
PASS: numbers.test: exact->inexact: mantdig ones then zeros, no rounding: (33 77371252455336258591260672 7.737125245533626e25): neg
PASS: numbers.test: exact->inexact: mantdig ones then zeros, no rounding: (34 154742504910672517182521344 1.5474250491067252e26): pos
PASS: numbers.test: exact->inexact: mantdig ones then zeros, no rounding: (34 154742504910672517182521344 1.5474250491067252e26): neg
PASS: numbers.test: exact->inexact: mantdig ones then zeros, no rounding: (35 309485009821345034365042688 3.0948500982134503e26): pos
PASS: numbers.test: exact->inexact: mantdig ones then zeros, no rounding: (35 309485009821345034365042688 3.0948500982134503e26): neg
PASS: numbers.test: exact->inexact: mantdig ones then zeros, no rounding: (36 618970019642690068730085376 6.189700196426901e26): pos
PASS: numbers.test: exact->inexact: mantdig ones then zeros, no rounding: (36 618970019642690068730085376 6.189700196426901e26): neg
PASS: numbers.test: exact->inexact: mantdig ones then zeros, no rounding: (37 1237940039285380137460170752 1.2379400392853801e27): pos
PASS: numbers.test: exact->inexact: mantdig ones then zeros, no rounding: (37 1237940039285380137460170752 1.2379400392853801e27): neg
PASS: numbers.test: exact->inexact: mantdig ones then zeros, no rounding: (38 2475880078570760274920341504 2.4758800785707603e27): pos
PASS: numbers.test: exact->inexact: mantdig ones then zeros, no rounding: (38 2475880078570760274920341504 2.4758800785707603e27): neg
PASS: numbers.test: exact->inexact: mantdig ones then zeros, no rounding: (39 4951760157141520549840683008 4.9517601571415205e27): pos
PASS: numbers.test: exact->inexact: mantdig ones then zeros, no rounding: (39 4951760157141520549840683008 4.9517601571415205e27): neg
PASS: numbers.test: exact->inexact: mantdig ones then zeros, no rounding: (40 9903520314283041099681366016 9.903520314283041e27): pos
PASS: numbers.test: exact->inexact: mantdig ones then zeros, no rounding: (40 9903520314283041099681366016 9.903520314283041e27): neg
PASS: numbers.test: exact->inexact: mantdig ones then zeros, no rounding: (41 19807040628566082199362732032 1.9807040628566082e28): pos
PASS: numbers.test: exact->inexact: mantdig ones then zeros, no rounding: (41 19807040628566082199362732032 1.9807040628566082e28): neg
PASS: numbers.test: exact->inexact: mantdig ones then zeros, no rounding: (42 39614081257132164398725464064 3.9614081257132164e28): pos
PASS: numbers.test: exact->inexact: mantdig ones then zeros, no rounding: (42 39614081257132164398725464064 3.9614081257132164e28): neg
PASS: numbers.test: exact->inexact: mantdig ones then zeros, no rounding: (43 79228162514264328797450928128 7.922816251426433e28): pos
PASS: numbers.test: exact->inexact: mantdig ones then zeros, no rounding: (43 79228162514264328797450928128 7.922816251426433e28): neg
PASS: numbers.test: exact->inexact: mantdig ones then zeros, no rounding: (44 158456325028528657594901856256 1.5845632502852866e29): pos
PASS: numbers.test: exact->inexact: mantdig ones then zeros, no rounding: (44 158456325028528657594901856256 1.5845632502852866e29): neg
PASS: numbers.test: exact->inexact: mantdig ones then zeros, no rounding: (45 316912650057057315189803712512 3.169126500570573e29): pos
PASS: numbers.test: exact->inexact: mantdig ones then zeros, no rounding: (45 316912650057057315189803712512 3.169126500570573e29): neg
PASS: numbers.test: exact->inexact: mantdig ones then zeros, no rounding: (46 633825300114114630379607425024 6.338253001141146e29): pos
PASS: numbers.test: exact->inexact: mantdig ones then zeros, no rounding: (46 633825300114114630379607425024 6.338253001141146e29): neg
PASS: numbers.test: exact->inexact: mantdig ones then zeros, no rounding: (47 1267650600228229260759214850048 1.2676506002282293e30): pos
PASS: numbers.test: exact->inexact: mantdig ones then zeros, no rounding: (47 1267650600228229260759214850048 1.2676506002282293e30): neg
PASS: numbers.test: exact->inexact: mantdig ones then zeros, no rounding: (48 2535301200456458521518429700096 2.5353012004564585e30): pos
PASS: numbers.test: exact->inexact: mantdig ones then zeros, no rounding: (48 2535301200456458521518429700096 2.5353012004564585e30): neg
PASS: numbers.test: exact->inexact: mantdig ones then zeros, no rounding: (49 5070602400912917043036859400192 5.070602400912917e30): pos
PASS: numbers.test: exact->inexact: mantdig ones then zeros, no rounding: (49 5070602400912917043036859400192 5.070602400912917e30): neg
PASS: numbers.test: exact->inexact: mantdig ones then zeros, no rounding: (50 10141204801825834086073718800384 1.0141204801825834e31): pos
PASS: numbers.test: exact->inexact: mantdig ones then zeros, no rounding: (50 10141204801825834086073718800384 1.0141204801825834e31): neg
PASS: numbers.test: exact->inexact: mantdig ones then zeros, no rounding: (51 20282409603651668172147437600768 2.0282409603651668e31): pos
PASS: numbers.test: exact->inexact: mantdig ones then zeros, no rounding: (51 20282409603651668172147437600768 2.0282409603651668e31): neg
PASS: numbers.test: exact->inexact: mantdig ones then zeros, no rounding: (52 40564819207303336344294875201536 4.0564819207303336e31): pos
PASS: numbers.test: exact->inexact: mantdig ones then zeros, no rounding: (52 40564819207303336344294875201536 4.0564819207303336e31): neg
PASS: numbers.test: exact->inexact: mantdig ones then zeros, no rounding: (53 81129638414606672688589750403072 8.112963841460667e31): pos
PASS: numbers.test: exact->inexact: mantdig ones then zeros, no rounding: (53 81129638414606672688589750403072 8.112963841460667e31): neg
PASS: numbers.test: exact->inexact: mantdig ones then zeros, no rounding: (54 162259276829213345377179500806144 1.6225927682921335e32): pos
PASS: numbers.test: exact->inexact: mantdig ones then zeros, no rounding: (54 162259276829213345377179500806144 1.6225927682921335e32): neg
PASS: numbers.test: exact->inexact: mantdig ones then zeros, no rounding: (55 324518553658426690754359001612288 3.245185536584267e32): pos
PASS: numbers.test: exact->inexact: mantdig ones then zeros, no rounding: (55 324518553658426690754359001612288 3.245185536584267e32): neg
PASS: numbers.test: exact->inexact: mantdig ones then zeros, no rounding: (56 649037107316853381508718003224576 6.490371073168534e32): pos
PASS: numbers.test: exact->inexact: mantdig ones then zeros, no rounding: (56 649037107316853381508718003224576 6.490371073168534e32): neg
PASS: numbers.test: exact->inexact: mantdig ones then zeros, no rounding: (57 1298074214633706763017436006449152 1.2980742146337068e33): pos
PASS: numbers.test: exact->inexact: mantdig ones then zeros, no rounding: (57 1298074214633706763017436006449152 1.2980742146337068e33): neg
PASS: numbers.test: exact->inexact: mantdig ones then zeros, no rounding: (58 2596148429267413526034872012898304 2.5961484292674135e33): pos
PASS: numbers.test: exact->inexact: mantdig ones then zeros, no rounding: (58 2596148429267413526034872012898304 2.5961484292674135e33): neg
PASS: numbers.test: exact->inexact: mantdig ones then zeros, no rounding: (59 5192296858534827052069744025796608 5.192296858534827e33): pos
PASS: numbers.test: exact->inexact: mantdig ones then zeros, no rounding: (59 5192296858534827052069744025796608 5.192296858534827e33): neg
PASS: numbers.test: exact->inexact: mantdig ones then zeros, no rounding: (60 10384593717069654104139488051593216 1.0384593717069654e34): pos
PASS: numbers.test: exact->inexact: mantdig ones then zeros, no rounding: (60 10384593717069654104139488051593216 1.0384593717069654e34): neg
PASS: numbers.test: exact->inexact: mantdig ones then zeros, no rounding: (61 20769187434139308208278976103186432 2.0769187434139308e34): pos
PASS: numbers.test: exact->inexact: mantdig ones then zeros, no rounding: (61 20769187434139308208278976103186432 2.0769187434139308e34): neg
PASS: numbers.test: exact->inexact: mantdig ones then zeros, no rounding: (62 41538374868278616416557952206372864 4.1538374868278616e34): pos
PASS: numbers.test: exact->inexact: mantdig ones then zeros, no rounding: (62 41538374868278616416557952206372864 4.1538374868278616e34): neg
PASS: numbers.test: exact->inexact: mantdig ones then zeros, no rounding: (63 83076749736557232833115904412745728 8.307674973655723e34): pos
PASS: numbers.test: exact->inexact: mantdig ones then zeros, no rounding: (63 83076749736557232833115904412745728 8.307674973655723e34): neg
PASS: numbers.test: exact->inexact: mantdig ones then zeros, no rounding: (64 166153499473114465666231808825491456 1.6615349947311447e35): pos
PASS: numbers.test: exact->inexact: mantdig ones then zeros, no rounding: (64 166153499473114465666231808825491456 1.6615349947311447e35): neg
PASS: numbers.test: exact->inexact: mantdig ones then zeros, no rounding: (65 332306998946228931332463617650982912 3.3230699894622893e35): pos
PASS: numbers.test: exact->inexact: mantdig ones then zeros, no rounding: (65 332306998946228931332463617650982912 3.3230699894622893e35): neg
PASS: numbers.test: exact->inexact: mantdig ones then zeros, no rounding: (66 664613997892457862664927235301965824 6.6461399789245786e35): pos
PASS: numbers.test: exact->inexact: mantdig ones then zeros, no rounding: (66 664613997892457862664927235301965824 6.6461399789245786e35): neg
PASS: numbers.test: exact->inexact: mantdig ones then zeros, no rounding: (67 1329227995784915725329854470603931648 1.3292279957849157e36): pos
PASS: numbers.test: exact->inexact: mantdig ones then zeros, no rounding: (67 1329227995784915725329854470603931648 1.3292279957849157e36): neg
PASS: numbers.test: exact->inexact: mantdig ones then zeros, no rounding: (68 2658455991569831450659708941207863296 2.6584559915698315e36): pos
PASS: numbers.test: exact->inexact: mantdig ones then zeros, no rounding: (68 2658455991569831450659708941207863296 2.6584559915698315e36): neg
PASS: numbers.test: exact->inexact: mantdig ones then zeros, no rounding: (69 5316911983139662901319417882415726592 5.316911983139663e36): pos
PASS: numbers.test: exact->inexact: mantdig ones then zeros, no rounding: (69 5316911983139662901319417882415726592 5.316911983139663e36): neg
PASS: numbers.test: exact->inexact: mantdig ones then zeros, no rounding: (70 10633823966279325802638835764831453184 1.0633823966279326e37): pos
PASS: numbers.test: exact->inexact: mantdig ones then zeros, no rounding: (70 10633823966279325802638835764831453184 1.0633823966279326e37): neg
PASS: numbers.test: exact->inexact: mantdig ones then zeros, no rounding: (71 21267647932558651605277671529662906368 2.1267647932558652e37): pos
PASS: numbers.test: exact->inexact: mantdig ones then zeros, no rounding: (71 21267647932558651605277671529662906368 2.1267647932558652e37): neg
PASS: numbers.test: exact->inexact: mantdig ones then zeros, no rounding: (72 42535295865117303210555343059325812736 4.2535295865117303e37): pos
PASS: numbers.test: exact->inexact: mantdig ones then zeros, no rounding: (72 42535295865117303210555343059325812736 4.2535295865117303e37): neg
PASS: numbers.test: exact->inexact: mantdig ones then zeros, no rounding: (73 85070591730234606421110686118651625472 8.507059173023461e37): pos
PASS: numbers.test: exact->inexact: mantdig ones then zeros, no rounding: (73 85070591730234606421110686118651625472 8.507059173023461e37): neg
PASS: numbers.test: exact->inexact: mantdig ones then zeros, no rounding: (74 170141183460469212842221372237303250944 1.7014118346046921e38): pos
PASS: numbers.test: exact->inexact: mantdig ones then zeros, no rounding: (74 170141183460469212842221372237303250944 1.7014118346046921e38): neg
PASS: numbers.test: exact->inexact: mantdig ones then zeros, no rounding: (75 340282366920938425684442744474606501888 3.4028236692093843e38): pos
PASS: numbers.test: exact->inexact: mantdig ones then zeros, no rounding: (75 340282366920938425684442744474606501888 3.4028236692093843e38): neg
PASS: numbers.test: exact->inexact: mantdig ones then zeros, no rounding: (76 680564733841876851368885488949213003776 6.8056473384187685e38): pos
PASS: numbers.test: exact->inexact: mantdig ones then zeros, no rounding: (76 680564733841876851368885488949213003776 6.8056473384187685e38): neg
PASS: numbers.test: exact->inexact: mantdig ones then zeros, no rounding: (77 1361129467683753702737770977898426007552 1.3611294676837537e39): pos
PASS: numbers.test: exact->inexact: mantdig ones then zeros, no rounding: (77 1361129467683753702737770977898426007552 1.3611294676837537e39): neg
PASS: numbers.test: exact->inexact: mantdig ones then zeros, no rounding: (78 2722258935367507405475541955796852015104 2.7222589353675074e39): pos
PASS: numbers.test: exact->inexact: mantdig ones then zeros, no rounding: (78 2722258935367507405475541955796852015104 2.7222589353675074e39): neg
PASS: numbers.test: exact->inexact: mantdig ones then zeros, no rounding: (79 5444517870735014810951083911593704030208 5.444517870735015e39): pos
PASS: numbers.test: exact->inexact: mantdig ones then zeros, no rounding: (79 5444517870735014810951083911593704030208 5.444517870735015e39): neg
PASS: numbers.test: exact->inexact: mantdig ones then zeros, no rounding: (80 10889035741470029621902167823187408060416 1.088903574147003e40): pos
PASS: numbers.test: exact->inexact: mantdig ones then zeros, no rounding: (80 10889035741470029621902167823187408060416 1.088903574147003e40): neg
PASS: numbers.test: exact->inexact: mantdig ones then zeros, no rounding: (81 21778071482940059243804335646374816120832 2.177807148294006e40): pos
PASS: numbers.test: exact->inexact: mantdig ones then zeros, no rounding: (81 21778071482940059243804335646374816120832 2.177807148294006e40): neg
PASS: numbers.test: exact->inexact: mantdig ones then zeros, no rounding: (82 43556142965880118487608671292749632241664 4.355614296588012e40): pos
PASS: numbers.test: exact->inexact: mantdig ones then zeros, no rounding: (82 43556142965880118487608671292749632241664 4.355614296588012e40): neg
PASS: numbers.test: exact->inexact: mantdig ones then zeros, no rounding: (83 87112285931760236975217342585499264483328 8.711228593176024e40): pos
PASS: numbers.test: exact->inexact: mantdig ones then zeros, no rounding: (83 87112285931760236975217342585499264483328 8.711228593176024e40): neg
PASS: numbers.test: exact->inexact: mantdig ones then zeros, no rounding: (84 174224571863520473950434685170998528966656 1.7422457186352047e41): pos
PASS: numbers.test: exact->inexact: mantdig ones then zeros, no rounding: (84 174224571863520473950434685170998528966656 1.7422457186352047e41): neg
PASS: numbers.test: exact->inexact: mantdig ones then zeros, no rounding: (85 348449143727040947900869370341997057933312 3.4844914372704095e41): pos
PASS: numbers.test: exact->inexact: mantdig ones then zeros, no rounding: (85 348449143727040947900869370341997057933312 3.4844914372704095e41): neg
PASS: numbers.test: exact->inexact: mantdig ones then zeros, no rounding: (86 696898287454081895801738740683994115866624 6.968982874540819e41): pos
PASS: numbers.test: exact->inexact: mantdig ones then zeros, no rounding: (86 696898287454081895801738740683994115866624 6.968982874540819e41): neg
PASS: numbers.test: exact->inexact: mantdig ones then zeros, no rounding: (87 1393796574908163791603477481367988231733248 1.3937965749081638e42): pos
PASS: numbers.test: exact->inexact: mantdig ones then zeros, no rounding: (87 1393796574908163791603477481367988231733248 1.3937965749081638e42): neg
PASS: numbers.test: exact->inexact: mantdig ones then zeros, no rounding: (88 2787593149816327583206954962735976463466496 2.7875931498163276e42): pos
PASS: numbers.test: exact->inexact: mantdig ones then zeros, no rounding: (88 2787593149816327583206954962735976463466496 2.7875931498163276e42): neg
PASS: numbers.test: exact->inexact: mantdig ones then zeros, no rounding: (89 5575186299632655166413909925471952926932992 5.575186299632655e42): pos
PASS: numbers.test: exact->inexact: mantdig ones then zeros, no rounding: (89 5575186299632655166413909925471952926932992 5.575186299632655e42): neg
PASS: numbers.test: exact->inexact: mantdig ones then zeros, no rounding: (90 11150372599265310332827819850943905853865984 1.115037259926531e43): pos
PASS: numbers.test: exact->inexact: mantdig ones then zeros, no rounding: (90 11150372599265310332827819850943905853865984 1.115037259926531e43): neg
PASS: numbers.test: exact->inexact: mantdig ones then zeros, no rounding: (91 22300745198530620665655639701887811707731968 2.230074519853062e43): pos
PASS: numbers.test: exact->inexact: mantdig ones then zeros, no rounding: (91 22300745198530620665655639701887811707731968 2.230074519853062e43): neg
PASS: numbers.test: exact->inexact: mantdig ones then zeros, no rounding: (92 44601490397061241331311279403775623415463936 4.460149039706124e43): pos
PASS: numbers.test: exact->inexact: mantdig ones then zeros, no rounding: (92 44601490397061241331311279403775623415463936 4.460149039706124e43): neg
PASS: numbers.test: exact->inexact: mantdig ones then zeros, no rounding: (93 89202980794122482662622558807551246830927872 8.920298079412248e43): pos
PASS: numbers.test: exact->inexact: mantdig ones then zeros, no rounding: (93 89202980794122482662622558807551246830927872 8.920298079412248e43): neg
PASS: numbers.test: exact->inexact: mantdig ones then zeros, no rounding: (94 178405961588244965325245117615102493661855744 1.7840596158824497e44): pos
PASS: numbers.test: exact->inexact: mantdig ones then zeros, no rounding: (94 178405961588244965325245117615102493661855744 1.7840596158824497e44): neg
PASS: numbers.test: exact->inexact: mantdig ones then zeros, no rounding: (95 356811923176489930650490235230204987323711488 3.5681192317648993e44): pos
PASS: numbers.test: exact->inexact: mantdig ones then zeros, no rounding: (95 356811923176489930650490235230204987323711488 3.5681192317648993e44): neg
PASS: numbers.test: exact->inexact: mantdig ones then zeros, no rounding: (96 713623846352979861300980470460409974647422976 7.136238463529799e44): pos
PASS: numbers.test: exact->inexact: mantdig ones then zeros, no rounding: (96 713623846352979861300980470460409974647422976 7.136238463529799e44): neg
PASS: numbers.test: exact->inexact: mantdig ones then zeros, no rounding: (97 1427247692705959722601960940920819949294845952 1.4272476927059597e45): pos
PASS: numbers.test: exact->inexact: mantdig ones then zeros, no rounding: (97 1427247692705959722601960940920819949294845952 1.4272476927059597e45): neg
PASS: numbers.test: exact->inexact: mantdig ones then zeros, no rounding: (98 2854495385411919445203921881841639898589691904 2.8544953854119194e45): pos
PASS: numbers.test: exact->inexact: mantdig ones then zeros, no rounding: (98 2854495385411919445203921881841639898589691904 2.8544953854119194e45): neg
PASS: numbers.test: exact->inexact: mantdig ones then zeros, no rounding: (99 5708990770823838890407843763683279797179383808 5.708990770823839e45): pos
PASS: numbers.test: exact->inexact: mantdig ones then zeros, no rounding: (99 5708990770823838890407843763683279797179383808 5.708990770823839e45): neg
PASS: numbers.test: exact->inexact: mantdig ones then zeros, no rounding: (100 11417981541647677780815687527366559594358767616 1.1417981541647678e46): pos
PASS: numbers.test: exact->inexact: mantdig ones then zeros, no rounding: (100 11417981541647677780815687527366559594358767616 1.1417981541647678e46): neg
PASS: numbers.test: exact->inexact: mantdig ones then 011..11, round down: (0 18014398509481982 18014398509481982.0): pos
PASS: numbers.test: exact->inexact: mantdig ones then 011..11, round down: (0 18014398509481982 18014398509481982.0): neg
PASS: numbers.test: exact->inexact: mantdig ones then 011..11, round down: (1 36028797018963965 36028797018963964.0): pos
PASS: numbers.test: exact->inexact: mantdig ones then 011..11, round down: (1 36028797018963965 36028797018963964.0): neg
PASS: numbers.test: exact->inexact: mantdig ones then 011..11, round down: (2 72057594037927931 72057594037927930.0): pos
PASS: numbers.test: exact->inexact: mantdig ones then 011..11, round down: (2 72057594037927931 72057594037927930.0): neg
PASS: numbers.test: exact->inexact: mantdig ones then 011..11, round down: (3 144115188075855863 144115188075855860.0): pos
PASS: numbers.test: exact->inexact: mantdig ones then 011..11, round down: (3 144115188075855863 144115188075855860.0): neg
PASS: numbers.test: exact->inexact: mantdig ones then 011..11, round down: (4 288230376151711727 288230376151711700.0): pos
PASS: numbers.test: exact->inexact: mantdig ones then 011..11, round down: (4 288230376151711727 288230376151711700.0): neg
PASS: numbers.test: exact->inexact: mantdig ones then 011..11, round down: (5 576460752303423455 576460752303423400.0): pos
PASS: numbers.test: exact->inexact: mantdig ones then 011..11, round down: (5 576460752303423455 576460752303423400.0): neg
PASS: numbers.test: exact->inexact: mantdig ones then 011..11, round down: (6 1152921504606846911 1152921504606846800.0): pos
PASS: numbers.test: exact->inexact: mantdig ones then 011..11, round down: (6 1152921504606846911 1152921504606846800.0): neg
PASS: numbers.test: exact->inexact: mantdig ones then 011..11, round down: (7 2305843009213693823 2305843009213693700.0): pos
PASS: numbers.test: exact->inexact: mantdig ones then 011..11, round down: (7 2305843009213693823 2305843009213693700.0): neg
PASS: numbers.test: exact->inexact: mantdig ones then 011..11, round down: (8 4611686018427387647 4611686018427387400.0): pos
PASS: numbers.test: exact->inexact: mantdig ones then 011..11, round down: (8 4611686018427387647 4611686018427387400.0): neg
PASS: numbers.test: exact->inexact: mantdig ones then 011..11, round down: (9 9223372036854775295 9223372036854775000.0): pos
PASS: numbers.test: exact->inexact: mantdig ones then 011..11, round down: (9 9223372036854775295 9223372036854775000.0): neg
PASS: numbers.test: exact->inexact: mantdig ones then 011..11, round down: (10 18446744073709550591 1.844674407370955e19): pos
PASS: numbers.test: exact->inexact: mantdig ones then 011..11, round down: (10 18446744073709550591 1.844674407370955e19): neg
PASS: numbers.test: exact->inexact: mantdig ones then 011..11, round down: (11 36893488147419101183 3.68934881474191e19): pos
PASS: numbers.test: exact->inexact: mantdig ones then 011..11, round down: (11 36893488147419101183 3.68934881474191e19): neg
PASS: numbers.test: exact->inexact: mantdig ones then 011..11, round down: (12 73786976294838202367 7.37869762948382e19): pos
PASS: numbers.test: exact->inexact: mantdig ones then 011..11, round down: (12 73786976294838202367 7.37869762948382e19): neg
PASS: numbers.test: exact->inexact: mantdig ones then 011..11, round down: (13 147573952589676404735 1.475739525896764e20): pos
PASS: numbers.test: exact->inexact: mantdig ones then 011..11, round down: (13 147573952589676404735 1.475739525896764e20): neg
PASS: numbers.test: exact->inexact: mantdig ones then 011..11, round down: (14 295147905179352809471 2.951479051793528e20): pos
PASS: numbers.test: exact->inexact: mantdig ones then 011..11, round down: (14 295147905179352809471 2.951479051793528e20): neg
PASS: numbers.test: exact->inexact: mantdig ones then 011..11, round down: (15 590295810358705618943 5.902958103587056e20): pos
PASS: numbers.test: exact->inexact: mantdig ones then 011..11, round down: (15 590295810358705618943 5.902958103587056e20): neg
PASS: numbers.test: exact->inexact: mantdig ones then 011..11, round down: (16 1180591620717411237887 1.1805916207174112e21): pos
PASS: numbers.test: exact->inexact: mantdig ones then 011..11, round down: (16 1180591620717411237887 1.1805916207174112e21): neg
PASS: numbers.test: exact->inexact: mantdig ones then 011..11, round down: (17 2361183241434822475775 2.3611832414348223e21): pos
PASS: numbers.test: exact->inexact: mantdig ones then 011..11, round down: (17 2361183241434822475775 2.3611832414348223e21): neg
PASS: numbers.test: exact->inexact: mantdig ones then 011..11, round down: (18 4722366482869644951551 4.7223664828696447e21): pos
PASS: numbers.test: exact->inexact: mantdig ones then 011..11, round down: (18 4722366482869644951551 4.7223664828696447e21): neg
PASS: numbers.test: exact->inexact: mantdig ones then 011..11, round down: (19 9444732965739289903103 9.444732965739289e21): pos
PASS: numbers.test: exact->inexact: mantdig ones then 011..11, round down: (19 9444732965739289903103 9.444732965739289e21): neg
PASS: numbers.test: exact->inexact: mantdig ones then 011..11, round down: (20 18889465931478579806207 1.8889465931478579e22): pos
PASS: numbers.test: exact->inexact: mantdig ones then 011..11, round down: (20 18889465931478579806207 1.8889465931478579e22): neg
PASS: numbers.test: exact->inexact: mantdig ones then 011..11, round down: (21 37778931862957159612415 3.7778931862957158e22): pos
PASS: numbers.test: exact->inexact: mantdig ones then 011..11, round down: (21 37778931862957159612415 3.7778931862957158e22): neg
PASS: numbers.test: exact->inexact: mantdig ones then 011..11, round down: (22 75557863725914319224831 7.5557863725914315e22): pos
PASS: numbers.test: exact->inexact: mantdig ones then 011..11, round down: (22 75557863725914319224831 7.5557863725914315e22): neg
PASS: numbers.test: exact->inexact: mantdig ones then 011..11, round down: (23 151115727451828638449663 1.5111572745182863e23): pos
PASS: numbers.test: exact->inexact: mantdig ones then 011..11, round down: (23 151115727451828638449663 1.5111572745182863e23): neg
PASS: numbers.test: exact->inexact: mantdig ones then 011..11, round down: (24 302231454903657276899327 3.0223145490365726e23): pos
PASS: numbers.test: exact->inexact: mantdig ones then 011..11, round down: (24 302231454903657276899327 3.0223145490365726e23): neg
PASS: numbers.test: exact->inexact: mantdig ones then 011..11, round down: (25 604462909807314553798655 6.044629098073145e23): pos
PASS: numbers.test: exact->inexact: mantdig ones then 011..11, round down: (25 604462909807314553798655 6.044629098073145e23): neg
PASS: numbers.test: exact->inexact: mantdig ones then 011..11, round down: (26 1208925819614629107597311 1.208925819614629e24): pos
PASS: numbers.test: exact->inexact: mantdig ones then 011..11, round down: (26 1208925819614629107597311 1.208925819614629e24): neg
PASS: numbers.test: exact->inexact: mantdig ones then 011..11, round down: (27 2417851639229258215194623 2.417851639229258e24): pos
PASS: numbers.test: exact->inexact: mantdig ones then 011..11, round down: (27 2417851639229258215194623 2.417851639229258e24): neg
PASS: numbers.test: exact->inexact: mantdig ones then 011..11, round down: (28 4835703278458516430389247 4.835703278458516e24): pos
PASS: numbers.test: exact->inexact: mantdig ones then 011..11, round down: (28 4835703278458516430389247 4.835703278458516e24): neg
PASS: numbers.test: exact->inexact: mantdig ones then 011..11, round down: (29 9671406556917032860778495 9.671406556917032e24): pos
PASS: numbers.test: exact->inexact: mantdig ones then 011..11, round down: (29 9671406556917032860778495 9.671406556917032e24): neg
PASS: numbers.test: exact->inexact: mantdig ones then 011..11, round down: (30 19342813113834065721556991 1.9342813113834065e25): pos
PASS: numbers.test: exact->inexact: mantdig ones then 011..11, round down: (30 19342813113834065721556991 1.9342813113834065e25): neg
PASS: numbers.test: exact->inexact: mantdig ones then 011..11, round down: (31 38685626227668131443113983 3.868562622766813e25): pos
PASS: numbers.test: exact->inexact: mantdig ones then 011..11, round down: (31 38685626227668131443113983 3.868562622766813e25): neg
PASS: numbers.test: exact->inexact: mantdig ones then 011..11, round down: (32 77371252455336262886227967 7.737125245533626e25): pos
PASS: numbers.test: exact->inexact: mantdig ones then 011..11, round down: (32 77371252455336262886227967 7.737125245533626e25): neg
PASS: numbers.test: exact->inexact: mantdig ones then 011..11, round down: (33 154742504910672525772455935 1.5474250491067252e26): pos
PASS: numbers.test: exact->inexact: mantdig ones then 011..11, round down: (33 154742504910672525772455935 1.5474250491067252e26): neg
PASS: numbers.test: exact->inexact: mantdig ones then 011..11, round down: (34 309485009821345051544911871 3.0948500982134503e26): pos
PASS: numbers.test: exact->inexact: mantdig ones then 011..11, round down: (34 309485009821345051544911871 3.0948500982134503e26): neg
PASS: numbers.test: exact->inexact: mantdig ones then 011..11, round down: (35 618970019642690103089823743 6.189700196426901e26): pos
PASS: numbers.test: exact->inexact: mantdig ones then 011..11, round down: (35 618970019642690103089823743 6.189700196426901e26): neg
PASS: numbers.test: exact->inexact: mantdig ones then 011..11, round down: (36 1237940039285380206179647487 1.2379400392853801e27): pos
PASS: numbers.test: exact->inexact: mantdig ones then 011..11, round down: (36 1237940039285380206179647487 1.2379400392853801e27): neg
PASS: numbers.test: exact->inexact: mantdig ones then 011..11, round down: (37 2475880078570760412359294975 2.4758800785707603e27): pos
PASS: numbers.test: exact->inexact: mantdig ones then 011..11, round down: (37 2475880078570760412359294975 2.4758800785707603e27): neg
PASS: numbers.test: exact->inexact: mantdig ones then 011..11, round down: (38 4951760157141520824718589951 4.9517601571415205e27): pos
PASS: numbers.test: exact->inexact: mantdig ones then 011..11, round down: (38 4951760157141520824718589951 4.9517601571415205e27): neg
PASS: numbers.test: exact->inexact: mantdig ones then 011..11, round down: (39 9903520314283041649437179903 9.903520314283041e27): pos
PASS: numbers.test: exact->inexact: mantdig ones then 011..11, round down: (39 9903520314283041649437179903 9.903520314283041e27): neg
PASS: numbers.test: exact->inexact: mantdig ones then 011..11, round down: (40 19807040628566083298874359807 1.9807040628566082e28): pos
PASS: numbers.test: exact->inexact: mantdig ones then 011..11, round down: (40 19807040628566083298874359807 1.9807040628566082e28): neg
PASS: numbers.test: exact->inexact: mantdig ones then 011..11, round down: (41 39614081257132166597748719615 3.9614081257132164e28): pos
PASS: numbers.test: exact->inexact: mantdig ones then 011..11, round down: (41 39614081257132166597748719615 3.9614081257132164e28): neg
PASS: numbers.test: exact->inexact: mantdig ones then 011..11, round down: (42 79228162514264333195497439231 7.922816251426433e28): pos
PASS: numbers.test: exact->inexact: mantdig ones then 011..11, round down: (42 79228162514264333195497439231 7.922816251426433e28): neg
PASS: numbers.test: exact->inexact: mantdig ones then 011..11, round down: (43 158456325028528666390994878463 1.5845632502852866e29): pos
PASS: numbers.test: exact->inexact: mantdig ones then 011..11, round down: (43 158456325028528666390994878463 1.5845632502852866e29): neg
PASS: numbers.test: exact->inexact: mantdig ones then 011..11, round down: (44 316912650057057332781989756927 3.169126500570573e29): pos
PASS: numbers.test: exact->inexact: mantdig ones then 011..11, round down: (44 316912650057057332781989756927 3.169126500570573e29): neg
PASS: numbers.test: exact->inexact: mantdig ones then 011..11, round down: (45 633825300114114665563979513855 6.338253001141146e29): pos
PASS: numbers.test: exact->inexact: mantdig ones then 011..11, round down: (45 633825300114114665563979513855 6.338253001141146e29): neg
PASS: numbers.test: exact->inexact: mantdig ones then 011..11, round down: (46 1267650600228229331127959027711 1.2676506002282293e30): pos
PASS: numbers.test: exact->inexact: mantdig ones then 011..11, round down: (46 1267650600228229331127959027711 1.2676506002282293e30): neg
PASS: numbers.test: exact->inexact: mantdig ones then 011..11, round down: (47 2535301200456458662255918055423 2.5353012004564585e30): pos
PASS: numbers.test: exact->inexact: mantdig ones then 011..11, round down: (47 2535301200456458662255918055423 2.5353012004564585e30): neg
PASS: numbers.test: exact->inexact: mantdig ones then 011..11, round down: (48 5070602400912917324511836110847 5.070602400912917e30): pos
PASS: numbers.test: exact->inexact: mantdig ones then 011..11, round down: (48 5070602400912917324511836110847 5.070602400912917e30): neg
PASS: numbers.test: exact->inexact: mantdig ones then 011..11, round down: (49 10141204801825834649023672221695 1.0141204801825834e31): pos
PASS: numbers.test: exact->inexact: mantdig ones then 011..11, round down: (49 10141204801825834649023672221695 1.0141204801825834e31): neg
PASS: numbers.test: exact->inexact: mantdig ones then 011..11, round down: (50 20282409603651669298047344443391 2.0282409603651668e31): pos
PASS: numbers.test: exact->inexact: mantdig ones then 011..11, round down: (50 20282409603651669298047344443391 2.0282409603651668e31): neg
PASS: numbers.test: exact->inexact: mantdig ones then 011..11, round down: (51 40564819207303338596094688886783 4.0564819207303336e31): pos
PASS: numbers.test: exact->inexact: mantdig ones then 011..11, round down: (51 40564819207303338596094688886783 4.0564819207303336e31): neg
PASS: numbers.test: exact->inexact: mantdig ones then 011..11, round down: (52 81129638414606677192189377773567 8.112963841460667e31): pos
PASS: numbers.test: exact->inexact: mantdig ones then 011..11, round down: (52 81129638414606677192189377773567 8.112963841460667e31): neg
PASS: numbers.test: exact->inexact: mantdig ones then 011..11, round down: (53 162259276829213354384378755547135 1.6225927682921335e32): pos
PASS: numbers.test: exact->inexact: mantdig ones then 011..11, round down: (53 162259276829213354384378755547135 1.6225927682921335e32): neg
PASS: numbers.test: exact->inexact: mantdig ones then 011..11, round down: (54 324518553658426708768757511094271 3.245185536584267e32): pos
PASS: numbers.test: exact->inexact: mantdig ones then 011..11, round down: (54 324518553658426708768757511094271 3.245185536584267e32): neg
PASS: numbers.test: exact->inexact: mantdig ones then 011..11, round down: (55 649037107316853417537515022188543 6.490371073168534e32): pos
PASS: numbers.test: exact->inexact: mantdig ones then 011..11, round down: (55 649037107316853417537515022188543 6.490371073168534e32): neg
PASS: numbers.test: exact->inexact: mantdig ones then 011..11, round down: (56 1298074214633706835075030044377087 1.2980742146337068e33): pos
PASS: numbers.test: exact->inexact: mantdig ones then 011..11, round down: (56 1298074214633706835075030044377087 1.2980742146337068e33): neg
PASS: numbers.test: exact->inexact: mantdig ones then 011..11, round down: (57 2596148429267413670150060088754175 2.5961484292674135e33): pos
PASS: numbers.test: exact->inexact: mantdig ones then 011..11, round down: (57 2596148429267413670150060088754175 2.5961484292674135e33): neg
PASS: numbers.test: exact->inexact: mantdig ones then 011..11, round down: (58 5192296858534827340300120177508351 5.192296858534827e33): pos
PASS: numbers.test: exact->inexact: mantdig ones then 011..11, round down: (58 5192296858534827340300120177508351 5.192296858534827e33): neg
PASS: numbers.test: exact->inexact: mantdig ones then 011..11, round down: (59 10384593717069654680600240355016703 1.0384593717069654e34): pos
PASS: numbers.test: exact->inexact: mantdig ones then 011..11, round down: (59 10384593717069654680600240355016703 1.0384593717069654e34): neg
PASS: numbers.test: exact->inexact: mantdig ones then 011..11, round down: (60 20769187434139309361200480710033407 2.0769187434139308e34): pos
PASS: numbers.test: exact->inexact: mantdig ones then 011..11, round down: (60 20769187434139309361200480710033407 2.0769187434139308e34): neg
PASS: numbers.test: exact->inexact: mantdig ones then 011..11, round down: (61 41538374868278618722400961420066815 4.1538374868278616e34): pos
PASS: numbers.test: exact->inexact: mantdig ones then 011..11, round down: (61 41538374868278618722400961420066815 4.1538374868278616e34): neg
PASS: numbers.test: exact->inexact: mantdig ones then 011..11, round down: (62 83076749736557237444801922840133631 8.307674973655723e34): pos
PASS: numbers.test: exact->inexact: mantdig ones then 011..11, round down: (62 83076749736557237444801922840133631 8.307674973655723e34): neg
PASS: numbers.test: exact->inexact: mantdig ones then 011..11, round down: (63 166153499473114474889603845680267263 1.6615349947311447e35): pos
PASS: numbers.test: exact->inexact: mantdig ones then 011..11, round down: (63 166153499473114474889603845680267263 1.6615349947311447e35): neg
PASS: numbers.test: exact->inexact: mantdig ones then 011..11, round down: (64 332306998946228949779207691360534527 3.3230699894622893e35): pos
PASS: numbers.test: exact->inexact: mantdig ones then 011..11, round down: (64 332306998946228949779207691360534527 3.3230699894622893e35): neg
PASS: numbers.test: exact->inexact: mantdig ones then 011..11, round down: (65 664613997892457899558415382721069055 6.6461399789245786e35): pos
PASS: numbers.test: exact->inexact: mantdig ones then 011..11, round down: (65 664613997892457899558415382721069055 6.6461399789245786e35): neg
PASS: numbers.test: exact->inexact: mantdig ones then 011..11, round down: (66 1329227995784915799116830765442138111 1.3292279957849157e36): pos
PASS: numbers.test: exact->inexact: mantdig ones then 011..11, round down: (66 1329227995784915799116830765442138111 1.3292279957849157e36): neg
PASS: numbers.test: exact->inexact: mantdig ones then 011..11, round down: (67 2658455991569831598233661530884276223 2.6584559915698315e36): pos
PASS: numbers.test: exact->inexact: mantdig ones then 011..11, round down: (67 2658455991569831598233661530884276223 2.6584559915698315e36): neg
PASS: numbers.test: exact->inexact: mantdig ones then 011..11, round down: (68 5316911983139663196467323061768552447 5.316911983139663e36): pos
PASS: numbers.test: exact->inexact: mantdig ones then 011..11, round down: (68 5316911983139663196467323061768552447 5.316911983139663e36): neg
PASS: numbers.test: exact->inexact: mantdig ones then 011..11, round down: (69 10633823966279326392934646123537104895 1.0633823966279326e37): pos
PASS: numbers.test: exact->inexact: mantdig ones then 011..11, round down: (69 10633823966279326392934646123537104895 1.0633823966279326e37): neg
PASS: numbers.test: exact->inexact: mantdig ones then 011..11, round down: (70 21267647932558652785869292247074209791 2.1267647932558652e37): pos
PASS: numbers.test: exact->inexact: mantdig ones then 011..11, round down: (70 21267647932558652785869292247074209791 2.1267647932558652e37): neg
PASS: numbers.test: exact->inexact: mantdig ones then 011..11, round down: (71 42535295865117305571738584494148419583 4.2535295865117303e37): pos
PASS: numbers.test: exact->inexact: mantdig ones then 011..11, round down: (71 42535295865117305571738584494148419583 4.2535295865117303e37): neg
PASS: numbers.test: exact->inexact: mantdig ones then 011..11, round down: (72 85070591730234611143477168988296839167 8.507059173023461e37): pos
PASS: numbers.test: exact->inexact: mantdig ones then 011..11, round down: (72 85070591730234611143477168988296839167 8.507059173023461e37): neg
PASS: numbers.test: exact->inexact: mantdig ones then 011..11, round down: (73 170141183460469222286954337976593678335 1.7014118346046921e38): pos
PASS: numbers.test: exact->inexact: mantdig ones then 011..11, round down: (73 170141183460469222286954337976593678335 1.7014118346046921e38): neg
PASS: numbers.test: exact->inexact: mantdig ones then 011..11, round down: (74 340282366920938444573908675953187356671 3.4028236692093843e38): pos
PASS: numbers.test: exact->inexact: mantdig ones then 011..11, round down: (74 340282366920938444573908675953187356671 3.4028236692093843e38): neg
PASS: numbers.test: exact->inexact: mantdig ones then 011..11, round down: (75 680564733841876889147817351906374713343 6.8056473384187685e38): pos
PASS: numbers.test: exact->inexact: mantdig ones then 011..11, round down: (75 680564733841876889147817351906374713343 6.8056473384187685e38): neg
PASS: numbers.test: exact->inexact: mantdig ones then 011..11, round down: (76 1361129467683753778295634703812749426687 1.3611294676837537e39): pos
PASS: numbers.test: exact->inexact: mantdig ones then 011..11, round down: (76 1361129467683753778295634703812749426687 1.3611294676837537e39): neg
PASS: numbers.test: exact->inexact: mantdig ones then 011..11, round down: (77 2722258935367507556591269407625498853375 2.7222589353675074e39): pos
PASS: numbers.test: exact->inexact: mantdig ones then 011..11, round down: (77 2722258935367507556591269407625498853375 2.7222589353675074e39): neg
PASS: numbers.test: exact->inexact: mantdig ones then 011..11, round down: (78 5444517870735015113182538815250997706751 5.444517870735015e39): pos
PASS: numbers.test: exact->inexact: mantdig ones then 011..11, round down: (78 5444517870735015113182538815250997706751 5.444517870735015e39): neg
PASS: numbers.test: exact->inexact: mantdig ones then 011..11, round down: (79 10889035741470030226365077630501995413503 1.088903574147003e40): pos
PASS: numbers.test: exact->inexact: mantdig ones then 011..11, round down: (79 10889035741470030226365077630501995413503 1.088903574147003e40): neg
PASS: numbers.test: exact->inexact: mantdig ones then 011..11, round down: (80 21778071482940060452730155261003990827007 2.177807148294006e40): pos
PASS: numbers.test: exact->inexact: mantdig ones then 011..11, round down: (80 21778071482940060452730155261003990827007 2.177807148294006e40): neg
PASS: numbers.test: exact->inexact: mantdig ones then 011..11, round down: (81 43556142965880120905460310522007981654015 4.355614296588012e40): pos
PASS: numbers.test: exact->inexact: mantdig ones then 011..11, round down: (81 43556142965880120905460310522007981654015 4.355614296588012e40): neg
PASS: numbers.test: exact->inexact: mantdig ones then 011..11, round down: (82 87112285931760241810920621044015963308031 8.711228593176024e40): pos
PASS: numbers.test: exact->inexact: mantdig ones then 011..11, round down: (82 87112285931760241810920621044015963308031 8.711228593176024e40): neg
PASS: numbers.test: exact->inexact: mantdig ones then 011..11, round down: (83 174224571863520483621841242088031926616063 1.7422457186352047e41): pos
PASS: numbers.test: exact->inexact: mantdig ones then 011..11, round down: (83 174224571863520483621841242088031926616063 1.7422457186352047e41): neg
PASS: numbers.test: exact->inexact: mantdig ones then 011..11, round down: (84 348449143727040967243682484176063853232127 3.4844914372704095e41): pos
PASS: numbers.test: exact->inexact: mantdig ones then 011..11, round down: (84 348449143727040967243682484176063853232127 3.4844914372704095e41): neg
PASS: numbers.test: exact->inexact: mantdig ones then 011..11, round down: (85 696898287454081934487364968352127706464255 6.968982874540819e41): pos
PASS: numbers.test: exact->inexact: mantdig ones then 011..11, round down: (85 696898287454081934487364968352127706464255 6.968982874540819e41): neg
PASS: numbers.test: exact->inexact: mantdig ones then 011..11, round down: (86 1393796574908163868974729936704255412928511 1.3937965749081638e42): pos
PASS: numbers.test: exact->inexact: mantdig ones then 011..11, round down: (86 1393796574908163868974729936704255412928511 1.3937965749081638e42): neg
PASS: numbers.test: exact->inexact: mantdig ones then 011..11, round down: (87 2787593149816327737949459873408510825857023 2.7875931498163276e42): pos
PASS: numbers.test: exact->inexact: mantdig ones then 011..11, round down: (87 2787593149816327737949459873408510825857023 2.7875931498163276e42): neg
PASS: numbers.test: exact->inexact: mantdig ones then 011..11, round down: (88 5575186299632655475898919746817021651714047 5.575186299632655e42): pos
PASS: numbers.test: exact->inexact: mantdig ones then 011..11, round down: (88 5575186299632655475898919746817021651714047 5.575186299632655e42): neg
PASS: numbers.test: exact->inexact: mantdig ones then 011..11, round down: (89 11150372599265310951797839493634043303428095 1.115037259926531e43): pos
PASS: numbers.test: exact->inexact: mantdig ones then 011..11, round down: (89 11150372599265310951797839493634043303428095 1.115037259926531e43): neg
PASS: numbers.test: exact->inexact: mantdig ones then 011..11, round down: (90 22300745198530621903595678987268086606856191 2.230074519853062e43): pos
PASS: numbers.test: exact->inexact: mantdig ones then 011..11, round down: (90 22300745198530621903595678987268086606856191 2.230074519853062e43): neg
PASS: numbers.test: exact->inexact: mantdig ones then 011..11, round down: (91 44601490397061243807191357974536173213712383 4.460149039706124e43): pos
PASS: numbers.test: exact->inexact: mantdig ones then 011..11, round down: (91 44601490397061243807191357974536173213712383 4.460149039706124e43): neg
PASS: numbers.test: exact->inexact: mantdig ones then 011..11, round down: (92 89202980794122487614382715949072346427424767 8.920298079412248e43): pos
PASS: numbers.test: exact->inexact: mantdig ones then 011..11, round down: (92 89202980794122487614382715949072346427424767 8.920298079412248e43): neg
PASS: numbers.test: exact->inexact: mantdig ones then 011..11, round down: (93 178405961588244975228765431898144692854849535 1.7840596158824497e44): pos
PASS: numbers.test: exact->inexact: mantdig ones then 011..11, round down: (93 178405961588244975228765431898144692854849535 1.7840596158824497e44): neg
PASS: numbers.test: exact->inexact: mantdig ones then 011..11, round down: (94 356811923176489950457530863796289385709699071 3.5681192317648993e44): pos
PASS: numbers.test: exact->inexact: mantdig ones then 011..11, round down: (94 356811923176489950457530863796289385709699071 3.5681192317648993e44): neg
PASS: numbers.test: exact->inexact: mantdig ones then 011..11, round down: (95 713623846352979900915061727592578771419398143 7.136238463529799e44): pos
PASS: numbers.test: exact->inexact: mantdig ones then 011..11, round down: (95 713623846352979900915061727592578771419398143 7.136238463529799e44): neg
PASS: numbers.test: exact->inexact: mantdig ones then 011..11, round down: (96 1427247692705959801830123455185157542838796287 1.4272476927059597e45): pos
PASS: numbers.test: exact->inexact: mantdig ones then 011..11, round down: (96 1427247692705959801830123455185157542838796287 1.4272476927059597e45): neg
PASS: numbers.test: exact->inexact: mantdig ones then 011..11, round down: (97 2854495385411919603660246910370315085677592575 2.8544953854119194e45): pos
PASS: numbers.test: exact->inexact: mantdig ones then 011..11, round down: (97 2854495385411919603660246910370315085677592575 2.8544953854119194e45): neg
PASS: numbers.test: exact->inexact: mantdig ones then 011..11, round down: (98 5708990770823839207320493820740630171355185151 5.708990770823839e45): pos
PASS: numbers.test: exact->inexact: mantdig ones then 011..11, round down: (98 5708990770823839207320493820740630171355185151 5.708990770823839e45): neg
PASS: numbers.test: exact->inexact: mantdig ones then 011..11, round down: (99 11417981541647678414640987641481260342710370303 1.1417981541647678e46): pos
PASS: numbers.test: exact->inexact: mantdig ones then 011..11, round down: (99 11417981541647678414640987641481260342710370303 1.1417981541647678e46): neg
PASS: numbers.test: exact->inexact: mantdig ones then 011..11, round down: (100 22835963083295356829281975282962520685420740607 2.2835963083295356e46): pos
PASS: numbers.test: exact->inexact: mantdig ones then 011..11, round down: (100 22835963083295356829281975282962520685420740607 2.2835963083295356e46): neg
PASS: numbers.test: exact->inexact: mantdig ones then 100..001, round up: (0 36028797018963967 36028797018963970.0): pos
PASS: numbers.test: exact->inexact: mantdig ones then 100..001, round up: (0 36028797018963967 36028797018963970.0): neg
PASS: numbers.test: exact->inexact: mantdig ones then 100..001, round up: (1 72057594037927933 72057594037927940.0): pos
PASS: numbers.test: exact->inexact: mantdig ones then 100..001, round up: (1 72057594037927933 72057594037927940.0): neg
PASS: numbers.test: exact->inexact: mantdig ones then 100..001, round up: (2 144115188075855865 144115188075855870.0): pos
PASS: numbers.test: exact->inexact: mantdig ones then 100..001, round up: (2 144115188075855865 144115188075855870.0): neg
PASS: numbers.test: exact->inexact: mantdig ones then 100..001, round up: (3 288230376151711729 288230376151711740.0): pos
PASS: numbers.test: exact->inexact: mantdig ones then 100..001, round up: (3 288230376151711729 288230376151711740.0): neg
PASS: numbers.test: exact->inexact: mantdig ones then 100..001, round up: (4 576460752303423457 576460752303423500.0): pos
PASS: numbers.test: exact->inexact: mantdig ones then 100..001, round up: (4 576460752303423457 576460752303423500.0): neg
PASS: numbers.test: exact->inexact: mantdig ones then 100..001, round up: (5 1152921504606846913 1152921504606847000.0): pos
PASS: numbers.test: exact->inexact: mantdig ones then 100..001, round up: (5 1152921504606846913 1152921504606847000.0): neg
PASS: numbers.test: exact->inexact: mantdig ones then 100..001, round up: (6 2305843009213693825 2305843009213694000.0): pos
PASS: numbers.test: exact->inexact: mantdig ones then 100..001, round up: (6 2305843009213693825 2305843009213694000.0): neg
PASS: numbers.test: exact->inexact: mantdig ones then 100..001, round up: (7 4611686018427387649 4611686018427388000.0): pos
PASS: numbers.test: exact->inexact: mantdig ones then 100..001, round up: (7 4611686018427387649 4611686018427388000.0): neg
PASS: numbers.test: exact->inexact: mantdig ones then 100..001, round up: (8 9223372036854775297 9223372036854776000.0): pos
PASS: numbers.test: exact->inexact: mantdig ones then 100..001, round up: (8 9223372036854775297 9223372036854776000.0): neg
PASS: numbers.test: exact->inexact: mantdig ones then 100..001, round up: (9 18446744073709550593 18446744073709552000.0): pos
PASS: numbers.test: exact->inexact: mantdig ones then 100..001, round up: (9 18446744073709550593 18446744073709552000.0): neg
PASS: numbers.test: exact->inexact: mantdig ones then 100..001, round up: (10 36893488147419101185 36893488147419103000.0): pos
PASS: numbers.test: exact->inexact: mantdig ones then 100..001, round up: (10 36893488147419101185 36893488147419103000.0): neg
PASS: numbers.test: exact->inexact: mantdig ones then 100..001, round up: (11 73786976294838202369 7.378697629483821e19): pos
PASS: numbers.test: exact->inexact: mantdig ones then 100..001, round up: (11 73786976294838202369 7.378697629483821e19): neg
PASS: numbers.test: exact->inexact: mantdig ones then 100..001, round up: (12 147573952589676404737 1.4757395258967641e20): pos
PASS: numbers.test: exact->inexact: mantdig ones then 100..001, round up: (12 147573952589676404737 1.4757395258967641e20): neg
PASS: numbers.test: exact->inexact: mantdig ones then 100..001, round up: (13 295147905179352809473 2.9514790517935283e20): pos
PASS: numbers.test: exact->inexact: mantdig ones then 100..001, round up: (13 295147905179352809473 2.9514790517935283e20): neg
PASS: numbers.test: exact->inexact: mantdig ones then 100..001, round up: (14 590295810358705618945 5.902958103587057e20): pos
PASS: numbers.test: exact->inexact: mantdig ones then 100..001, round up: (14 590295810358705618945 5.902958103587057e20): neg
PASS: numbers.test: exact->inexact: mantdig ones then 100..001, round up: (15 1180591620717411237889 1.1805916207174113e21): pos
PASS: numbers.test: exact->inexact: mantdig ones then 100..001, round up: (15 1180591620717411237889 1.1805916207174113e21): neg
PASS: numbers.test: exact->inexact: mantdig ones then 100..001, round up: (16 2361183241434822475777 2.3611832414348226e21): pos
PASS: numbers.test: exact->inexact: mantdig ones then 100..001, round up: (16 2361183241434822475777 2.3611832414348226e21): neg
PASS: numbers.test: exact->inexact: mantdig ones then 100..001, round up: (17 4722366482869644951553 4.722366482869645e21): pos
PASS: numbers.test: exact->inexact: mantdig ones then 100..001, round up: (17 4722366482869644951553 4.722366482869645e21): neg
PASS: numbers.test: exact->inexact: mantdig ones then 100..001, round up: (18 9444732965739289903105 9.44473296573929e21): pos
PASS: numbers.test: exact->inexact: mantdig ones then 100..001, round up: (18 9444732965739289903105 9.44473296573929e21): neg
PASS: numbers.test: exact->inexact: mantdig ones then 100..001, round up: (19 18889465931478579806209 1.888946593147858e22): pos
PASS: numbers.test: exact->inexact: mantdig ones then 100..001, round up: (19 18889465931478579806209 1.888946593147858e22): neg
PASS: numbers.test: exact->inexact: mantdig ones then 100..001, round up: (20 37778931862957159612417 3.777893186295716e22): pos
PASS: numbers.test: exact->inexact: mantdig ones then 100..001, round up: (20 37778931862957159612417 3.777893186295716e22): neg
PASS: numbers.test: exact->inexact: mantdig ones then 100..001, round up: (21 75557863725914319224833 7.555786372591432e22): pos
PASS: numbers.test: exact->inexact: mantdig ones then 100..001, round up: (21 75557863725914319224833 7.555786372591432e22): neg
PASS: numbers.test: exact->inexact: mantdig ones then 100..001, round up: (22 151115727451828638449665 1.5111572745182865e23): pos
PASS: numbers.test: exact->inexact: mantdig ones then 100..001, round up: (22 151115727451828638449665 1.5111572745182865e23): neg
PASS: numbers.test: exact->inexact: mantdig ones then 100..001, round up: (23 302231454903657276899329 3.022314549036573e23): pos
PASS: numbers.test: exact->inexact: mantdig ones then 100..001, round up: (23 302231454903657276899329 3.022314549036573e23): neg
PASS: numbers.test: exact->inexact: mantdig ones then 100..001, round up: (24 604462909807314553798657 6.044629098073146e23): pos
PASS: numbers.test: exact->inexact: mantdig ones then 100..001, round up: (24 604462909807314553798657 6.044629098073146e23): neg
PASS: numbers.test: exact->inexact: mantdig ones then 100..001, round up: (25 1208925819614629107597313 1.2089258196146292e24): pos
PASS: numbers.test: exact->inexact: mantdig ones then 100..001, round up: (25 1208925819614629107597313 1.2089258196146292e24): neg
PASS: numbers.test: exact->inexact: mantdig ones then 100..001, round up: (26 2417851639229258215194625 2.4178516392292583e24): pos
PASS: numbers.test: exact->inexact: mantdig ones then 100..001, round up: (26 2417851639229258215194625 2.4178516392292583e24): neg
PASS: numbers.test: exact->inexact: mantdig ones then 100..001, round up: (27 4835703278458516430389249 4.835703278458517e24): pos
PASS: numbers.test: exact->inexact: mantdig ones then 100..001, round up: (27 4835703278458516430389249 4.835703278458517e24): neg
PASS: numbers.test: exact->inexact: mantdig ones then 100..001, round up: (28 9671406556917032860778497 9.671406556917033e24): pos
PASS: numbers.test: exact->inexact: mantdig ones then 100..001, round up: (28 9671406556917032860778497 9.671406556917033e24): neg
PASS: numbers.test: exact->inexact: mantdig ones then 100..001, round up: (29 19342813113834065721556993 1.9342813113834067e25): pos
PASS: numbers.test: exact->inexact: mantdig ones then 100..001, round up: (29 19342813113834065721556993 1.9342813113834067e25): neg
PASS: numbers.test: exact->inexact: mantdig ones then 100..001, round up: (30 38685626227668131443113985 3.8685626227668134e25): pos
PASS: numbers.test: exact->inexact: mantdig ones then 100..001, round up: (30 38685626227668131443113985 3.8685626227668134e25): neg
PASS: numbers.test: exact->inexact: mantdig ones then 100..001, round up: (31 77371252455336262886227969 7.737125245533627e25): pos
PASS: numbers.test: exact->inexact: mantdig ones then 100..001, round up: (31 77371252455336262886227969 7.737125245533627e25): neg
PASS: numbers.test: exact->inexact: mantdig ones then 100..001, round up: (32 154742504910672525772455937 1.5474250491067253e26): pos
PASS: numbers.test: exact->inexact: mantdig ones then 100..001, round up: (32 154742504910672525772455937 1.5474250491067253e26): neg
PASS: numbers.test: exact->inexact: mantdig ones then 100..001, round up: (33 309485009821345051544911873 3.094850098213451e26): pos
PASS: numbers.test: exact->inexact: mantdig ones then 100..001, round up: (33 309485009821345051544911873 3.094850098213451e26): neg
PASS: numbers.test: exact->inexact: mantdig ones then 100..001, round up: (34 618970019642690103089823745 6.189700196426902e26): pos
PASS: numbers.test: exact->inexact: mantdig ones then 100..001, round up: (34 618970019642690103089823745 6.189700196426902e26): neg
PASS: numbers.test: exact->inexact: mantdig ones then 100..001, round up: (35 1237940039285380206179647489 1.2379400392853803e27): pos
PASS: numbers.test: exact->inexact: mantdig ones then 100..001, round up: (35 1237940039285380206179647489 1.2379400392853803e27): neg
PASS: numbers.test: exact->inexact: mantdig ones then 100..001, round up: (36 2475880078570760412359294977 2.4758800785707605e27): pos
PASS: numbers.test: exact->inexact: mantdig ones then 100..001, round up: (36 2475880078570760412359294977 2.4758800785707605e27): neg
PASS: numbers.test: exact->inexact: mantdig ones then 100..001, round up: (37 4951760157141520824718589953 4.951760157141521e27): pos
PASS: numbers.test: exact->inexact: mantdig ones then 100..001, round up: (37 4951760157141520824718589953 4.951760157141521e27): neg
PASS: numbers.test: exact->inexact: mantdig ones then 100..001, round up: (38 9903520314283041649437179905 9.903520314283042e27): pos
PASS: numbers.test: exact->inexact: mantdig ones then 100..001, round up: (38 9903520314283041649437179905 9.903520314283042e27): neg
PASS: numbers.test: exact->inexact: mantdig ones then 100..001, round up: (39 19807040628566083298874359809 1.9807040628566084e28): pos
PASS: numbers.test: exact->inexact: mantdig ones then 100..001, round up: (39 19807040628566083298874359809 1.9807040628566084e28): neg
PASS: numbers.test: exact->inexact: mantdig ones then 100..001, round up: (40 39614081257132166597748719617 3.961408125713217e28): pos
PASS: numbers.test: exact->inexact: mantdig ones then 100..001, round up: (40 39614081257132166597748719617 3.961408125713217e28): neg
PASS: numbers.test: exact->inexact: mantdig ones then 100..001, round up: (41 79228162514264333195497439233 7.922816251426434e28): pos
PASS: numbers.test: exact->inexact: mantdig ones then 100..001, round up: (41 79228162514264333195497439233 7.922816251426434e28): neg
PASS: numbers.test: exact->inexact: mantdig ones then 100..001, round up: (42 158456325028528666390994878465 1.5845632502852868e29): pos
PASS: numbers.test: exact->inexact: mantdig ones then 100..001, round up: (42 158456325028528666390994878465 1.5845632502852868e29): neg
PASS: numbers.test: exact->inexact: mantdig ones then 100..001, round up: (43 316912650057057332781989756929 3.1691265005705735e29): pos
PASS: numbers.test: exact->inexact: mantdig ones then 100..001, round up: (43 316912650057057332781989756929 3.1691265005705735e29): neg
PASS: numbers.test: exact->inexact: mantdig ones then 100..001, round up: (44 633825300114114665563979513857 6.338253001141147e29): pos
PASS: numbers.test: exact->inexact: mantdig ones then 100..001, round up: (44 633825300114114665563979513857 6.338253001141147e29): neg
PASS: numbers.test: exact->inexact: mantdig ones then 100..001, round up: (45 1267650600228229331127959027713 1.2676506002282294e30): pos
PASS: numbers.test: exact->inexact: mantdig ones then 100..001, round up: (45 1267650600228229331127959027713 1.2676506002282294e30): neg
PASS: numbers.test: exact->inexact: mantdig ones then 100..001, round up: (46 2535301200456458662255918055425 2.535301200456459e30): pos
PASS: numbers.test: exact->inexact: mantdig ones then 100..001, round up: (46 2535301200456458662255918055425 2.535301200456459e30): neg
PASS: numbers.test: exact->inexact: mantdig ones then 100..001, round up: (47 5070602400912917324511836110849 5.070602400912918e30): pos
PASS: numbers.test: exact->inexact: mantdig ones then 100..001, round up: (47 5070602400912917324511836110849 5.070602400912918e30): neg
PASS: numbers.test: exact->inexact: mantdig ones then 100..001, round up: (48 10141204801825834649023672221697 1.0141204801825835e31): pos
PASS: numbers.test: exact->inexact: mantdig ones then 100..001, round up: (48 10141204801825834649023672221697 1.0141204801825835e31): neg
PASS: numbers.test: exact->inexact: mantdig ones then 100..001, round up: (49 20282409603651669298047344443393 2.028240960365167e31): pos
PASS: numbers.test: exact->inexact: mantdig ones then 100..001, round up: (49 20282409603651669298047344443393 2.028240960365167e31): neg
PASS: numbers.test: exact->inexact: mantdig ones then 100..001, round up: (50 40564819207303338596094688886785 4.056481920730334e31): pos
PASS: numbers.test: exact->inexact: mantdig ones then 100..001, round up: (50 40564819207303338596094688886785 4.056481920730334e31): neg
PASS: numbers.test: exact->inexact: mantdig ones then 100..001, round up: (51 81129638414606677192189377773569 8.112963841460668e31): pos
PASS: numbers.test: exact->inexact: mantdig ones then 100..001, round up: (51 81129638414606677192189377773569 8.112963841460668e31): neg
PASS: numbers.test: exact->inexact: mantdig ones then 100..001, round up: (52 162259276829213354384378755547137 1.6225927682921336e32): pos
PASS: numbers.test: exact->inexact: mantdig ones then 100..001, round up: (52 162259276829213354384378755547137 1.6225927682921336e32): neg
PASS: numbers.test: exact->inexact: mantdig ones then 100..001, round up: (53 324518553658426708768757511094273 3.2451855365842673e32): pos
PASS: numbers.test: exact->inexact: mantdig ones then 100..001, round up: (53 324518553658426708768757511094273 3.2451855365842673e32): neg
PASS: numbers.test: exact->inexact: mantdig ones then 100..001, round up: (54 649037107316853417537515022188545 6.490371073168535e32): pos
PASS: numbers.test: exact->inexact: mantdig ones then 100..001, round up: (54 649037107316853417537515022188545 6.490371073168535e32): neg
PASS: numbers.test: exact->inexact: mantdig ones then 100..001, round up: (55 1298074214633706835075030044377089 1.298074214633707e33): pos
PASS: numbers.test: exact->inexact: mantdig ones then 100..001, round up: (55 1298074214633706835075030044377089 1.298074214633707e33): neg
PASS: numbers.test: exact->inexact: mantdig ones then 100..001, round up: (56 2596148429267413670150060088754177 2.596148429267414e33): pos
PASS: numbers.test: exact->inexact: mantdig ones then 100..001, round up: (56 2596148429267413670150060088754177 2.596148429267414e33): neg
PASS: numbers.test: exact->inexact: mantdig ones then 100..001, round up: (57 5192296858534827340300120177508353 5.192296858534828e33): pos
PASS: numbers.test: exact->inexact: mantdig ones then 100..001, round up: (57 5192296858534827340300120177508353 5.192296858534828e33): neg
PASS: numbers.test: exact->inexact: mantdig ones then 100..001, round up: (58 10384593717069654680600240355016705 1.0384593717069655e34): pos
PASS: numbers.test: exact->inexact: mantdig ones then 100..001, round up: (58 10384593717069654680600240355016705 1.0384593717069655e34): neg
PASS: numbers.test: exact->inexact: mantdig ones then 100..001, round up: (59 20769187434139309361200480710033409 2.076918743413931e34): pos
PASS: numbers.test: exact->inexact: mantdig ones then 100..001, round up: (59 20769187434139309361200480710033409 2.076918743413931e34): neg
PASS: numbers.test: exact->inexact: mantdig ones then 100..001, round up: (60 41538374868278618722400961420066817 4.153837486827862e34): pos
PASS: numbers.test: exact->inexact: mantdig ones then 100..001, round up: (60 41538374868278618722400961420066817 4.153837486827862e34): neg
PASS: numbers.test: exact->inexact: mantdig ones then 100..001, round up: (61 83076749736557237444801922840133633 8.307674973655724e34): pos
PASS: numbers.test: exact->inexact: mantdig ones then 100..001, round up: (61 83076749736557237444801922840133633 8.307674973655724e34): neg
PASS: numbers.test: exact->inexact: mantdig ones then 100..001, round up: (62 166153499473114474889603845680267265 1.661534994731145e35): pos
PASS: numbers.test: exact->inexact: mantdig ones then 100..001, round up: (62 166153499473114474889603845680267265 1.661534994731145e35): neg
PASS: numbers.test: exact->inexact: mantdig ones then 100..001, round up: (63 332306998946228949779207691360534529 3.32306998946229e35): pos
PASS: numbers.test: exact->inexact: mantdig ones then 100..001, round up: (63 332306998946228949779207691360534529 3.32306998946229e35): neg
PASS: numbers.test: exact->inexact: mantdig ones then 100..001, round up: (64 664613997892457899558415382721069057 6.64613997892458e35): pos
PASS: numbers.test: exact->inexact: mantdig ones then 100..001, round up: (64 664613997892457899558415382721069057 6.64613997892458e35): neg
PASS: numbers.test: exact->inexact: mantdig ones then 100..001, round up: (65 1329227995784915799116830765442138113 1.329227995784916e36): pos
PASS: numbers.test: exact->inexact: mantdig ones then 100..001, round up: (65 1329227995784915799116830765442138113 1.329227995784916e36): neg
PASS: numbers.test: exact->inexact: mantdig ones then 100..001, round up: (66 2658455991569831598233661530884276225 2.658455991569832e36): pos
PASS: numbers.test: exact->inexact: mantdig ones then 100..001, round up: (66 2658455991569831598233661530884276225 2.658455991569832e36): neg
PASS: numbers.test: exact->inexact: mantdig ones then 100..001, round up: (67 5316911983139663196467323061768552449 5.316911983139664e36): pos
PASS: numbers.test: exact->inexact: mantdig ones then 100..001, round up: (67 5316911983139663196467323061768552449 5.316911983139664e36): neg
PASS: numbers.test: exact->inexact: mantdig ones then 100..001, round up: (68 10633823966279326392934646123537104897 1.0633823966279327e37): pos
PASS: numbers.test: exact->inexact: mantdig ones then 100..001, round up: (68 10633823966279326392934646123537104897 1.0633823966279327e37): neg
PASS: numbers.test: exact->inexact: mantdig ones then 100..001, round up: (69 21267647932558652785869292247074209793 2.1267647932558654e37): pos
PASS: numbers.test: exact->inexact: mantdig ones then 100..001, round up: (69 21267647932558652785869292247074209793 2.1267647932558654e37): neg
PASS: numbers.test: exact->inexact: mantdig ones then 100..001, round up: (70 42535295865117305571738584494148419585 4.253529586511731e37): pos
PASS: numbers.test: exact->inexact: mantdig ones then 100..001, round up: (70 42535295865117305571738584494148419585 4.253529586511731e37): neg
PASS: numbers.test: exact->inexact: mantdig ones then 100..001, round up: (71 85070591730234611143477168988296839169 8.507059173023462e37): pos
PASS: numbers.test: exact->inexact: mantdig ones then 100..001, round up: (71 85070591730234611143477168988296839169 8.507059173023462e37): neg
PASS: numbers.test: exact->inexact: mantdig ones then 100..001, round up: (72 170141183460469222286954337976593678337 1.7014118346046923e38): pos
PASS: numbers.test: exact->inexact: mantdig ones then 100..001, round up: (72 170141183460469222286954337976593678337 1.7014118346046923e38): neg
PASS: numbers.test: exact->inexact: mantdig ones then 100..001, round up: (73 340282366920938444573908675953187356673 3.402823669209385e38): pos
PASS: numbers.test: exact->inexact: mantdig ones then 100..001, round up: (73 340282366920938444573908675953187356673 3.402823669209385e38): neg
PASS: numbers.test: exact->inexact: mantdig ones then 100..001, round up: (74 680564733841876889147817351906374713345 6.80564733841877e38): pos
PASS: numbers.test: exact->inexact: mantdig ones then 100..001, round up: (74 680564733841876889147817351906374713345 6.80564733841877e38): neg
PASS: numbers.test: exact->inexact: mantdig ones then 100..001, round up: (75 1361129467683753778295634703812749426689 1.361129467683754e39): pos
PASS: numbers.test: exact->inexact: mantdig ones then 100..001, round up: (75 1361129467683753778295634703812749426689 1.361129467683754e39): neg
PASS: numbers.test: exact->inexact: mantdig ones then 100..001, round up: (76 2722258935367507556591269407625498853377 2.722258935367508e39): pos
PASS: numbers.test: exact->inexact: mantdig ones then 100..001, round up: (76 2722258935367507556591269407625498853377 2.722258935367508e39): neg
PASS: numbers.test: exact->inexact: mantdig ones then 100..001, round up: (77 5444517870735015113182538815250997706753 5.444517870735016e39): pos
PASS: numbers.test: exact->inexact: mantdig ones then 100..001, round up: (77 5444517870735015113182538815250997706753 5.444517870735016e39): neg
PASS: numbers.test: exact->inexact: mantdig ones then 100..001, round up: (78 10889035741470030226365077630501995413505 1.0889035741470031e40): pos
PASS: numbers.test: exact->inexact: mantdig ones then 100..001, round up: (78 10889035741470030226365077630501995413505 1.0889035741470031e40): neg
PASS: numbers.test: exact->inexact: mantdig ones then 100..001, round up: (79 21778071482940060452730155261003990827009 2.1778071482940062e40): pos
PASS: numbers.test: exact->inexact: mantdig ones then 100..001, round up: (79 21778071482940060452730155261003990827009 2.1778071482940062e40): neg
PASS: numbers.test: exact->inexact: mantdig ones then 100..001, round up: (80 43556142965880120905460310522007981654017 4.3556142965880123e40): pos
PASS: numbers.test: exact->inexact: mantdig ones then 100..001, round up: (80 43556142965880120905460310522007981654017 4.3556142965880123e40): neg
PASS: numbers.test: exact->inexact: mantdig ones then 100..001, round up: (81 87112285931760241810920621044015963308033 8.711228593176025e40): pos
PASS: numbers.test: exact->inexact: mantdig ones then 100..001, round up: (81 87112285931760241810920621044015963308033 8.711228593176025e40): neg
PASS: numbers.test: exact->inexact: mantdig ones then 100..001, round up: (82 174224571863520483621841242088031926616065 1.742245718635205e41): pos
PASS: numbers.test: exact->inexact: mantdig ones then 100..001, round up: (82 174224571863520483621841242088031926616065 1.742245718635205e41): neg
PASS: numbers.test: exact->inexact: mantdig ones then 100..001, round up: (83 348449143727040967243682484176063853232129 3.48449143727041e41): pos
PASS: numbers.test: exact->inexact: mantdig ones then 100..001, round up: (83 348449143727040967243682484176063853232129 3.48449143727041e41): neg
PASS: numbers.test: exact->inexact: mantdig ones then 100..001, round up: (84 696898287454081934487364968352127706464257 6.96898287454082e41): pos
PASS: numbers.test: exact->inexact: mantdig ones then 100..001, round up: (84 696898287454081934487364968352127706464257 6.96898287454082e41): neg
PASS: numbers.test: exact->inexact: mantdig ones then 100..001, round up: (85 1393796574908163868974729936704255412928513 1.393796574908164e42): pos
PASS: numbers.test: exact->inexact: mantdig ones then 100..001, round up: (85 1393796574908163868974729936704255412928513 1.393796574908164e42): neg
PASS: numbers.test: exact->inexact: mantdig ones then 100..001, round up: (86 2787593149816327737949459873408510825857025 2.787593149816328e42): pos
PASS: numbers.test: exact->inexact: mantdig ones then 100..001, round up: (86 2787593149816327737949459873408510825857025 2.787593149816328e42): neg
PASS: numbers.test: exact->inexact: mantdig ones then 100..001, round up: (87 5575186299632655475898919746817021651714049 5.575186299632656e42): pos
PASS: numbers.test: exact->inexact: mantdig ones then 100..001, round up: (87 5575186299632655475898919746817021651714049 5.575186299632656e42): neg
PASS: numbers.test: exact->inexact: mantdig ones then 100..001, round up: (88 11150372599265310951797839493634043303428097 1.1150372599265312e43): pos
PASS: numbers.test: exact->inexact: mantdig ones then 100..001, round up: (88 11150372599265310951797839493634043303428097 1.1150372599265312e43): neg
PASS: numbers.test: exact->inexact: mantdig ones then 100..001, round up: (89 22300745198530621903595678987268086606856193 2.2300745198530623e43): pos
PASS: numbers.test: exact->inexact: mantdig ones then 100..001, round up: (89 22300745198530621903595678987268086606856193 2.2300745198530623e43): neg
PASS: numbers.test: exact->inexact: mantdig ones then 100..001, round up: (90 44601490397061243807191357974536173213712385 4.460149039706125e43): pos
PASS: numbers.test: exact->inexact: mantdig ones then 100..001, round up: (90 44601490397061243807191357974536173213712385 4.460149039706125e43): neg
PASS: numbers.test: exact->inexact: mantdig ones then 100..001, round up: (91 89202980794122487614382715949072346427424769 8.92029807941225e43): pos
PASS: numbers.test: exact->inexact: mantdig ones then 100..001, round up: (91 89202980794122487614382715949072346427424769 8.92029807941225e43): neg
PASS: numbers.test: exact->inexact: mantdig ones then 100..001, round up: (92 178405961588244975228765431898144692854849537 1.78405961588245e44): pos
PASS: numbers.test: exact->inexact: mantdig ones then 100..001, round up: (92 178405961588244975228765431898144692854849537 1.78405961588245e44): neg
PASS: numbers.test: exact->inexact: mantdig ones then 100..001, round up: (93 356811923176489950457530863796289385709699073 3.5681192317649e44): pos
PASS: numbers.test: exact->inexact: mantdig ones then 100..001, round up: (93 356811923176489950457530863796289385709699073 3.5681192317649e44): neg
PASS: numbers.test: exact->inexact: mantdig ones then 100..001, round up: (94 713623846352979900915061727592578771419398145 7.1362384635298e44): pos
PASS: numbers.test: exact->inexact: mantdig ones then 100..001, round up: (94 713623846352979900915061727592578771419398145 7.1362384635298e44): neg
PASS: numbers.test: exact->inexact: mantdig ones then 100..001, round up: (95 1427247692705959801830123455185157542838796289 1.42724769270596e45): pos
PASS: numbers.test: exact->inexact: mantdig ones then 100..001, round up: (95 1427247692705959801830123455185157542838796289 1.42724769270596e45): neg
PASS: numbers.test: exact->inexact: mantdig ones then 100..001, round up: (96 2854495385411919603660246910370315085677592577 2.85449538541192e45): pos
PASS: numbers.test: exact->inexact: mantdig ones then 100..001, round up: (96 2854495385411919603660246910370315085677592577 2.85449538541192e45): neg
PASS: numbers.test: exact->inexact: mantdig ones then 100..001, round up: (97 5708990770823839207320493820740630171355185153 5.70899077082384e45): pos
PASS: numbers.test: exact->inexact: mantdig ones then 100..001, round up: (97 5708990770823839207320493820740630171355185153 5.70899077082384e45): neg
PASS: numbers.test: exact->inexact: mantdig ones then 100..001, round up: (98 11417981541647678414640987641481260342710370305 1.141798154164768e46): pos
PASS: numbers.test: exact->inexact: mantdig ones then 100..001, round up: (98 11417981541647678414640987641481260342710370305 1.141798154164768e46): neg
PASS: numbers.test: exact->inexact: mantdig ones then 100..001, round up: (99 22835963083295356829281975282962520685420740609 2.283596308329536e46): pos
PASS: numbers.test: exact->inexact: mantdig ones then 100..001, round up: (99 22835963083295356829281975282962520685420740609 2.283596308329536e46): neg
PASS: numbers.test: exact->inexact: mantdig ones then 100..001, round up: (100 45671926166590713658563950565925041370841481217 4.567192616659072e46): pos
PASS: numbers.test: exact->inexact: mantdig ones then 100..001, round up: (100 45671926166590713658563950565925041370841481217 4.567192616659072e46): neg
PASS: numbers.test: exact->inexact: 2^mantdig then 100..001, round up: (0 36028797018963967 36028797018963970.0): pos
PASS: numbers.test: exact->inexact: 2^mantdig then 100..001, round up: (0 36028797018963967 36028797018963970.0): neg
PASS: numbers.test: exact->inexact: 2^mantdig then 100..001, round up: (1 72057594037927933 72057594037927940.0): pos
PASS: numbers.test: exact->inexact: 2^mantdig then 100..001, round up: (1 72057594037927933 72057594037927940.0): neg
PASS: numbers.test: exact->inexact: 2^mantdig then 100..001, round up: (2 144115188075855865 144115188075855870.0): pos
PASS: numbers.test: exact->inexact: 2^mantdig then 100..001, round up: (2 144115188075855865 144115188075855870.0): neg
PASS: numbers.test: exact->inexact: 2^mantdig then 100..001, round up: (3 288230376151711729 288230376151711740.0): pos
PASS: numbers.test: exact->inexact: 2^mantdig then 100..001, round up: (3 288230376151711729 288230376151711740.0): neg
PASS: numbers.test: exact->inexact: 2^mantdig then 100..001, round up: (4 576460752303423457 576460752303423500.0): pos
PASS: numbers.test: exact->inexact: 2^mantdig then 100..001, round up: (4 576460752303423457 576460752303423500.0): neg
PASS: numbers.test: exact->inexact: 2^mantdig then 100..001, round up: (5 1152921504606846913 1152921504606847000.0): pos
PASS: numbers.test: exact->inexact: 2^mantdig then 100..001, round up: (5 1152921504606846913 1152921504606847000.0): neg
PASS: numbers.test: exact->inexact: 2^mantdig then 100..001, round up: (6 2305843009213693825 2305843009213694000.0): pos
PASS: numbers.test: exact->inexact: 2^mantdig then 100..001, round up: (6 2305843009213693825 2305843009213694000.0): neg
PASS: numbers.test: exact->inexact: 2^mantdig then 100..001, round up: (7 4611686018427387649 4611686018427388000.0): pos
PASS: numbers.test: exact->inexact: 2^mantdig then 100..001, round up: (7 4611686018427387649 4611686018427388000.0): neg
PASS: numbers.test: exact->inexact: 2^mantdig then 100..001, round up: (8 9223372036854775297 9223372036854776000.0): pos
PASS: numbers.test: exact->inexact: 2^mantdig then 100..001, round up: (8 9223372036854775297 9223372036854776000.0): neg
PASS: numbers.test: exact->inexact: 2^mantdig then 100..001, round up: (9 18446744073709550593 18446744073709552000.0): pos
PASS: numbers.test: exact->inexact: 2^mantdig then 100..001, round up: (9 18446744073709550593 18446744073709552000.0): neg
PASS: numbers.test: exact->inexact: 2^mantdig then 100..001, round up: (10 36893488147419101185 36893488147419103000.0): pos
PASS: numbers.test: exact->inexact: 2^mantdig then 100..001, round up: (10 36893488147419101185 36893488147419103000.0): neg
PASS: numbers.test: exact->inexact: 2^mantdig then 100..001, round up: (11 73786976294838202369 7.378697629483821e19): pos
PASS: numbers.test: exact->inexact: 2^mantdig then 100..001, round up: (11 73786976294838202369 7.378697629483821e19): neg
PASS: numbers.test: exact->inexact: 2^mantdig then 100..001, round up: (12 147573952589676404737 1.4757395258967641e20): pos
PASS: numbers.test: exact->inexact: 2^mantdig then 100..001, round up: (12 147573952589676404737 1.4757395258967641e20): neg
PASS: numbers.test: exact->inexact: 2^mantdig then 100..001, round up: (13 295147905179352809473 2.9514790517935283e20): pos
PASS: numbers.test: exact->inexact: 2^mantdig then 100..001, round up: (13 295147905179352809473 2.9514790517935283e20): neg
PASS: numbers.test: exact->inexact: 2^mantdig then 100..001, round up: (14 590295810358705618945 5.902958103587057e20): pos
PASS: numbers.test: exact->inexact: 2^mantdig then 100..001, round up: (14 590295810358705618945 5.902958103587057e20): neg
PASS: numbers.test: exact->inexact: 2^mantdig then 100..001, round up: (15 1180591620717411237889 1.1805916207174113e21): pos
PASS: numbers.test: exact->inexact: 2^mantdig then 100..001, round up: (15 1180591620717411237889 1.1805916207174113e21): neg
PASS: numbers.test: exact->inexact: 2^mantdig then 100..001, round up: (16 2361183241434822475777 2.3611832414348226e21): pos
PASS: numbers.test: exact->inexact: 2^mantdig then 100..001, round up: (16 2361183241434822475777 2.3611832414348226e21): neg
PASS: numbers.test: exact->inexact: 2^mantdig then 100..001, round up: (17 4722366482869644951553 4.722366482869645e21): pos
PASS: numbers.test: exact->inexact: 2^mantdig then 100..001, round up: (17 4722366482869644951553 4.722366482869645e21): neg
PASS: numbers.test: exact->inexact: 2^mantdig then 100..001, round up: (18 9444732965739289903105 9.44473296573929e21): pos
PASS: numbers.test: exact->inexact: 2^mantdig then 100..001, round up: (18 9444732965739289903105 9.44473296573929e21): neg
PASS: numbers.test: exact->inexact: 2^mantdig then 100..001, round up: (19 18889465931478579806209 1.888946593147858e22): pos
PASS: numbers.test: exact->inexact: 2^mantdig then 100..001, round up: (19 18889465931478579806209 1.888946593147858e22): neg
PASS: numbers.test: exact->inexact: 2^mantdig then 100..001, round up: (20 37778931862957159612417 3.777893186295716e22): pos
PASS: numbers.test: exact->inexact: 2^mantdig then 100..001, round up: (20 37778931862957159612417 3.777893186295716e22): neg
PASS: numbers.test: exact->inexact: 2^mantdig then 100..001, round up: (21 75557863725914319224833 7.555786372591432e22): pos
PASS: numbers.test: exact->inexact: 2^mantdig then 100..001, round up: (21 75557863725914319224833 7.555786372591432e22): neg
PASS: numbers.test: exact->inexact: 2^mantdig then 100..001, round up: (22 151115727451828638449665 1.5111572745182865e23): pos
PASS: numbers.test: exact->inexact: 2^mantdig then 100..001, round up: (22 151115727451828638449665 1.5111572745182865e23): neg
PASS: numbers.test: exact->inexact: 2^mantdig then 100..001, round up: (23 302231454903657276899329 3.022314549036573e23): pos
PASS: numbers.test: exact->inexact: 2^mantdig then 100..001, round up: (23 302231454903657276899329 3.022314549036573e23): neg
PASS: numbers.test: exact->inexact: 2^mantdig then 100..001, round up: (24 604462909807314553798657 6.044629098073146e23): pos
PASS: numbers.test: exact->inexact: 2^mantdig then 100..001, round up: (24 604462909807314553798657 6.044629098073146e23): neg
PASS: numbers.test: exact->inexact: 2^mantdig then 100..001, round up: (25 1208925819614629107597313 1.2089258196146292e24): pos
PASS: numbers.test: exact->inexact: 2^mantdig then 100..001, round up: (25 1208925819614629107597313 1.2089258196146292e24): neg
PASS: numbers.test: exact->inexact: 2^mantdig then 100..001, round up: (26 2417851639229258215194625 2.4178516392292583e24): pos
PASS: numbers.test: exact->inexact: 2^mantdig then 100..001, round up: (26 2417851639229258215194625 2.4178516392292583e24): neg
PASS: numbers.test: exact->inexact: 2^mantdig then 100..001, round up: (27 4835703278458516430389249 4.835703278458517e24): pos
PASS: numbers.test: exact->inexact: 2^mantdig then 100..001, round up: (27 4835703278458516430389249 4.835703278458517e24): neg
PASS: numbers.test: exact->inexact: 2^mantdig then 100..001, round up: (28 9671406556917032860778497 9.671406556917033e24): pos
PASS: numbers.test: exact->inexact: 2^mantdig then 100..001, round up: (28 9671406556917032860778497 9.671406556917033e24): neg
PASS: numbers.test: exact->inexact: 2^mantdig then 100..001, round up: (29 19342813113834065721556993 1.9342813113834067e25): pos
PASS: numbers.test: exact->inexact: 2^mantdig then 100..001, round up: (29 19342813113834065721556993 1.9342813113834067e25): neg
PASS: numbers.test: exact->inexact: 2^mantdig then 100..001, round up: (30 38685626227668131443113985 3.8685626227668134e25): pos
PASS: numbers.test: exact->inexact: 2^mantdig then 100..001, round up: (30 38685626227668131443113985 3.8685626227668134e25): neg
PASS: numbers.test: exact->inexact: 2^mantdig then 100..001, round up: (31 77371252455336262886227969 7.737125245533627e25): pos
PASS: numbers.test: exact->inexact: 2^mantdig then 100..001, round up: (31 77371252455336262886227969 7.737125245533627e25): neg
PASS: numbers.test: exact->inexact: 2^mantdig then 100..001, round up: (32 154742504910672525772455937 1.5474250491067253e26): pos
PASS: numbers.test: exact->inexact: 2^mantdig then 100..001, round up: (32 154742504910672525772455937 1.5474250491067253e26): neg
PASS: numbers.test: exact->inexact: 2^mantdig then 100..001, round up: (33 309485009821345051544911873 3.094850098213451e26): pos
PASS: numbers.test: exact->inexact: 2^mantdig then 100..001, round up: (33 309485009821345051544911873 3.094850098213451e26): neg
PASS: numbers.test: exact->inexact: 2^mantdig then 100..001, round up: (34 618970019642690103089823745 6.189700196426902e26): pos
PASS: numbers.test: exact->inexact: 2^mantdig then 100..001, round up: (34 618970019642690103089823745 6.189700196426902e26): neg
PASS: numbers.test: exact->inexact: 2^mantdig then 100..001, round up: (35 1237940039285380206179647489 1.2379400392853803e27): pos
PASS: numbers.test: exact->inexact: 2^mantdig then 100..001, round up: (35 1237940039285380206179647489 1.2379400392853803e27): neg
PASS: numbers.test: exact->inexact: 2^mantdig then 100..001, round up: (36 2475880078570760412359294977 2.4758800785707605e27): pos
PASS: numbers.test: exact->inexact: 2^mantdig then 100..001, round up: (36 2475880078570760412359294977 2.4758800785707605e27): neg
PASS: numbers.test: exact->inexact: 2^mantdig then 100..001, round up: (37 4951760157141520824718589953 4.951760157141521e27): pos
PASS: numbers.test: exact->inexact: 2^mantdig then 100..001, round up: (37 4951760157141520824718589953 4.951760157141521e27): neg
PASS: numbers.test: exact->inexact: 2^mantdig then 100..001, round up: (38 9903520314283041649437179905 9.903520314283042e27): pos
PASS: numbers.test: exact->inexact: 2^mantdig then 100..001, round up: (38 9903520314283041649437179905 9.903520314283042e27): neg
PASS: numbers.test: exact->inexact: 2^mantdig then 100..001, round up: (39 19807040628566083298874359809 1.9807040628566084e28): pos
PASS: numbers.test: exact->inexact: 2^mantdig then 100..001, round up: (39 19807040628566083298874359809 1.9807040628566084e28): neg
PASS: numbers.test: exact->inexact: 2^mantdig then 100..001, round up: (40 39614081257132166597748719617 3.961408125713217e28): pos
PASS: numbers.test: exact->inexact: 2^mantdig then 100..001, round up: (40 39614081257132166597748719617 3.961408125713217e28): neg
PASS: numbers.test: exact->inexact: 2^mantdig then 100..001, round up: (41 79228162514264333195497439233 7.922816251426434e28): pos
PASS: numbers.test: exact->inexact: 2^mantdig then 100..001, round up: (41 79228162514264333195497439233 7.922816251426434e28): neg
PASS: numbers.test: exact->inexact: 2^mantdig then 100..001, round up: (42 158456325028528666390994878465 1.5845632502852868e29): pos
PASS: numbers.test: exact->inexact: 2^mantdig then 100..001, round up: (42 158456325028528666390994878465 1.5845632502852868e29): neg
PASS: numbers.test: exact->inexact: 2^mantdig then 100..001, round up: (43 316912650057057332781989756929 3.1691265005705735e29): pos
PASS: numbers.test: exact->inexact: 2^mantdig then 100..001, round up: (43 316912650057057332781989756929 3.1691265005705735e29): neg
PASS: numbers.test: exact->inexact: 2^mantdig then 100..001, round up: (44 633825300114114665563979513857 6.338253001141147e29): pos
PASS: numbers.test: exact->inexact: 2^mantdig then 100..001, round up: (44 633825300114114665563979513857 6.338253001141147e29): neg
PASS: numbers.test: exact->inexact: 2^mantdig then 100..001, round up: (45 1267650600228229331127959027713 1.2676506002282294e30): pos
PASS: numbers.test: exact->inexact: 2^mantdig then 100..001, round up: (45 1267650600228229331127959027713 1.2676506002282294e30): neg
PASS: numbers.test: exact->inexact: 2^mantdig then 100..001, round up: (46 2535301200456458662255918055425 2.535301200456459e30): pos
PASS: numbers.test: exact->inexact: 2^mantdig then 100..001, round up: (46 2535301200456458662255918055425 2.535301200456459e30): neg
PASS: numbers.test: exact->inexact: 2^mantdig then 100..001, round up: (47 5070602400912917324511836110849 5.070602400912918e30): pos
PASS: numbers.test: exact->inexact: 2^mantdig then 100..001, round up: (47 5070602400912917324511836110849 5.070602400912918e30): neg
PASS: numbers.test: exact->inexact: 2^mantdig then 100..001, round up: (48 10141204801825834649023672221697 1.0141204801825835e31): pos
PASS: numbers.test: exact->inexact: 2^mantdig then 100..001, round up: (48 10141204801825834649023672221697 1.0141204801825835e31): neg
PASS: numbers.test: exact->inexact: 2^mantdig then 100..001, round up: (49 20282409603651669298047344443393 2.028240960365167e31): pos
PASS: numbers.test: exact->inexact: 2^mantdig then 100..001, round up: (49 20282409603651669298047344443393 2.028240960365167e31): neg
PASS: numbers.test: exact->inexact: 2^mantdig then 100..001, round up: (50 40564819207303338596094688886785 4.056481920730334e31): pos
PASS: numbers.test: exact->inexact: 2^mantdig then 100..001, round up: (50 40564819207303338596094688886785 4.056481920730334e31): neg
PASS: numbers.test: exact->inexact: 2^mantdig then 100..001, round up: (51 81129638414606677192189377773569 8.112963841460668e31): pos
PASS: numbers.test: exact->inexact: 2^mantdig then 100..001, round up: (51 81129638414606677192189377773569 8.112963841460668e31): neg
PASS: numbers.test: exact->inexact: 2^mantdig then 100..001, round up: (52 162259276829213354384378755547137 1.6225927682921336e32): pos
PASS: numbers.test: exact->inexact: 2^mantdig then 100..001, round up: (52 162259276829213354384378755547137 1.6225927682921336e32): neg
PASS: numbers.test: exact->inexact: 2^mantdig then 100..001, round up: (53 324518553658426708768757511094273 3.2451855365842673e32): pos
PASS: numbers.test: exact->inexact: 2^mantdig then 100..001, round up: (53 324518553658426708768757511094273 3.2451855365842673e32): neg
PASS: numbers.test: exact->inexact: 2^mantdig then 100..001, round up: (54 649037107316853417537515022188545 6.490371073168535e32): pos
PASS: numbers.test: exact->inexact: 2^mantdig then 100..001, round up: (54 649037107316853417537515022188545 6.490371073168535e32): neg
PASS: numbers.test: exact->inexact: 2^mantdig then 100..001, round up: (55 1298074214633706835075030044377089 1.298074214633707e33): pos
PASS: numbers.test: exact->inexact: 2^mantdig then 100..001, round up: (55 1298074214633706835075030044377089 1.298074214633707e33): neg
PASS: numbers.test: exact->inexact: 2^mantdig then 100..001, round up: (56 2596148429267413670150060088754177 2.596148429267414e33): pos
PASS: numbers.test: exact->inexact: 2^mantdig then 100..001, round up: (56 2596148429267413670150060088754177 2.596148429267414e33): neg
PASS: numbers.test: exact->inexact: 2^mantdig then 100..001, round up: (57 5192296858534827340300120177508353 5.192296858534828e33): pos
PASS: numbers.test: exact->inexact: 2^mantdig then 100..001, round up: (57 5192296858534827340300120177508353 5.192296858534828e33): neg
PASS: numbers.test: exact->inexact: 2^mantdig then 100..001, round up: (58 10384593717069654680600240355016705 1.0384593717069655e34): pos
PASS: numbers.test: exact->inexact: 2^mantdig then 100..001, round up: (58 10384593717069654680600240355016705 1.0384593717069655e34): neg
PASS: numbers.test: exact->inexact: 2^mantdig then 100..001, round up: (59 20769187434139309361200480710033409 2.076918743413931e34): pos
PASS: numbers.test: exact->inexact: 2^mantdig then 100..001, round up: (59 20769187434139309361200480710033409 2.076918743413931e34): neg
PASS: numbers.test: exact->inexact: 2^mantdig then 100..001, round up: (60 41538374868278618722400961420066817 4.153837486827862e34): pos
PASS: numbers.test: exact->inexact: 2^mantdig then 100..001, round up: (60 41538374868278618722400961420066817 4.153837486827862e34): neg
PASS: numbers.test: exact->inexact: 2^mantdig then 100..001, round up: (61 83076749736557237444801922840133633 8.307674973655724e34): pos
PASS: numbers.test: exact->inexact: 2^mantdig then 100..001, round up: (61 83076749736557237444801922840133633 8.307674973655724e34): neg
PASS: numbers.test: exact->inexact: 2^mantdig then 100..001, round up: (62 166153499473114474889603845680267265 1.661534994731145e35): pos
PASS: numbers.test: exact->inexact: 2^mantdig then 100..001, round up: (62 166153499473114474889603845680267265 1.661534994731145e35): neg
PASS: numbers.test: exact->inexact: 2^mantdig then 100..001, round up: (63 332306998946228949779207691360534529 3.32306998946229e35): pos
PASS: numbers.test: exact->inexact: 2^mantdig then 100..001, round up: (63 332306998946228949779207691360534529 3.32306998946229e35): neg
PASS: numbers.test: exact->inexact: 2^mantdig then 100..001, round up: (64 664613997892457899558415382721069057 6.64613997892458e35): pos
PASS: numbers.test: exact->inexact: 2^mantdig then 100..001, round up: (64 664613997892457899558415382721069057 6.64613997892458e35): neg
PASS: numbers.test: exact->inexact: 2^mantdig then 100..001, round up: (65 1329227995784915799116830765442138113 1.329227995784916e36): pos
PASS: numbers.test: exact->inexact: 2^mantdig then 100..001, round up: (65 1329227995784915799116830765442138113 1.329227995784916e36): neg
PASS: numbers.test: exact->inexact: 2^mantdig then 100..001, round up: (66 2658455991569831598233661530884276225 2.658455991569832e36): pos
PASS: numbers.test: exact->inexact: 2^mantdig then 100..001, round up: (66 2658455991569831598233661530884276225 2.658455991569832e36): neg
PASS: numbers.test: exact->inexact: 2^mantdig then 100..001, round up: (67 5316911983139663196467323061768552449 5.316911983139664e36): pos
PASS: numbers.test: exact->inexact: 2^mantdig then 100..001, round up: (67 5316911983139663196467323061768552449 5.316911983139664e36): neg
PASS: numbers.test: exact->inexact: 2^mantdig then 100..001, round up: (68 10633823966279326392934646123537104897 1.0633823966279327e37): pos
PASS: numbers.test: exact->inexact: 2^mantdig then 100..001, round up: (68 10633823966279326392934646123537104897 1.0633823966279327e37): neg
PASS: numbers.test: exact->inexact: 2^mantdig then 100..001, round up: (69 21267647932558652785869292247074209793 2.1267647932558654e37): pos
PASS: numbers.test: exact->inexact: 2^mantdig then 100..001, round up: (69 21267647932558652785869292247074209793 2.1267647932558654e37): neg
PASS: numbers.test: exact->inexact: 2^mantdig then 100..001, round up: (70 42535295865117305571738584494148419585 4.253529586511731e37): pos
PASS: numbers.test: exact->inexact: 2^mantdig then 100..001, round up: (70 42535295865117305571738584494148419585 4.253529586511731e37): neg
PASS: numbers.test: exact->inexact: 2^mantdig then 100..001, round up: (71 85070591730234611143477168988296839169 8.507059173023462e37): pos
PASS: numbers.test: exact->inexact: 2^mantdig then 100..001, round up: (71 85070591730234611143477168988296839169 8.507059173023462e37): neg
PASS: numbers.test: exact->inexact: 2^mantdig then 100..001, round up: (72 170141183460469222286954337976593678337 1.7014118346046923e38): pos
PASS: numbers.test: exact->inexact: 2^mantdig then 100..001, round up: (72 170141183460469222286954337976593678337 1.7014118346046923e38): neg
PASS: numbers.test: exact->inexact: 2^mantdig then 100..001, round up: (73 340282366920938444573908675953187356673 3.402823669209385e38): pos
PASS: numbers.test: exact->inexact: 2^mantdig then 100..001, round up: (73 340282366920938444573908675953187356673 3.402823669209385e38): neg
PASS: numbers.test: exact->inexact: 2^mantdig then 100..001, round up: (74 680564733841876889147817351906374713345 6.80564733841877e38): pos
PASS: numbers.test: exact->inexact: 2^mantdig then 100..001, round up: (74 680564733841876889147817351906374713345 6.80564733841877e38): neg
PASS: numbers.test: exact->inexact: 2^mantdig then 100..001, round up: (75 1361129467683753778295634703812749426689 1.361129467683754e39): pos
PASS: numbers.test: exact->inexact: 2^mantdig then 100..001, round up: (75 1361129467683753778295634703812749426689 1.361129467683754e39): neg
PASS: numbers.test: exact->inexact: 2^mantdig then 100..001, round up: (76 2722258935367507556591269407625498853377 2.722258935367508e39): pos
PASS: numbers.test: exact->inexact: 2^mantdig then 100..001, round up: (76 2722258935367507556591269407625498853377 2.722258935367508e39): neg
PASS: numbers.test: exact->inexact: 2^mantdig then 100..001, round up: (77 5444517870735015113182538815250997706753 5.444517870735016e39): pos
PASS: numbers.test: exact->inexact: 2^mantdig then 100..001, round up: (77 5444517870735015113182538815250997706753 5.444517870735016e39): neg
PASS: numbers.test: exact->inexact: 2^mantdig then 100..001, round up: (78 10889035741470030226365077630501995413505 1.0889035741470031e40): pos
PASS: numbers.test: exact->inexact: 2^mantdig then 100..001, round up: (78 10889035741470030226365077630501995413505 1.0889035741470031e40): neg
PASS: numbers.test: exact->inexact: 2^mantdig then 100..001, round up: (79 21778071482940060452730155261003990827009 2.1778071482940062e40): pos
PASS: numbers.test: exact->inexact: 2^mantdig then 100..001, round up: (79 21778071482940060452730155261003990827009 2.1778071482940062e40): neg
PASS: numbers.test: exact->inexact: 2^mantdig then 100..001, round up: (80 43556142965880120905460310522007981654017 4.3556142965880123e40): pos
PASS: numbers.test: exact->inexact: 2^mantdig then 100..001, round up: (80 43556142965880120905460310522007981654017 4.3556142965880123e40): neg
PASS: numbers.test: exact->inexact: 2^mantdig then 100..001, round up: (81 87112285931760241810920621044015963308033 8.711228593176025e40): pos
PASS: numbers.test: exact->inexact: 2^mantdig then 100..001, round up: (81 87112285931760241810920621044015963308033 8.711228593176025e40): neg
PASS: numbers.test: exact->inexact: 2^mantdig then 100..001, round up: (82 174224571863520483621841242088031926616065 1.742245718635205e41): pos
PASS: numbers.test: exact->inexact: 2^mantdig then 100..001, round up: (82 174224571863520483621841242088031926616065 1.742245718635205e41): neg
PASS: numbers.test: exact->inexact: 2^mantdig then 100..001, round up: (83 348449143727040967243682484176063853232129 3.48449143727041e41): pos
PASS: numbers.test: exact->inexact: 2^mantdig then 100..001, round up: (83 348449143727040967243682484176063853232129 3.48449143727041e41): neg
PASS: numbers.test: exact->inexact: 2^mantdig then 100..001, round up: (84 696898287454081934487364968352127706464257 6.96898287454082e41): pos
PASS: numbers.test: exact->inexact: 2^mantdig then 100..001, round up: (84 696898287454081934487364968352127706464257 6.96898287454082e41): neg
PASS: numbers.test: exact->inexact: 2^mantdig then 100..001, round up: (85 1393796574908163868974729936704255412928513 1.393796574908164e42): pos
PASS: numbers.test: exact->inexact: 2^mantdig then 100..001, round up: (85 1393796574908163868974729936704255412928513 1.393796574908164e42): neg
PASS: numbers.test: exact->inexact: 2^mantdig then 100..001, round up: (86 2787593149816327737949459873408510825857025 2.787593149816328e42): pos
PASS: numbers.test: exact->inexact: 2^mantdig then 100..001, round up: (86 2787593149816327737949459873408510825857025 2.787593149816328e42): neg
PASS: numbers.test: exact->inexact: 2^mantdig then 100..001, round up: (87 5575186299632655475898919746817021651714049 5.575186299632656e42): pos
PASS: numbers.test: exact->inexact: 2^mantdig then 100..001, round up: (87 5575186299632655475898919746817021651714049 5.575186299632656e42): neg
PASS: numbers.test: exact->inexact: 2^mantdig then 100..001, round up: (88 11150372599265310951797839493634043303428097 1.1150372599265312e43): pos
PASS: numbers.test: exact->inexact: 2^mantdig then 100..001, round up: (88 11150372599265310951797839493634043303428097 1.1150372599265312e43): neg
PASS: numbers.test: exact->inexact: 2^mantdig then 100..001, round up: (89 22300745198530621903595678987268086606856193 2.2300745198530623e43): pos
PASS: numbers.test: exact->inexact: 2^mantdig then 100..001, round up: (89 22300745198530621903595678987268086606856193 2.2300745198530623e43): neg
PASS: numbers.test: exact->inexact: 2^mantdig then 100..001, round up: (90 44601490397061243807191357974536173213712385 4.460149039706125e43): pos
PASS: numbers.test: exact->inexact: 2^mantdig then 100..001, round up: (90 44601490397061243807191357974536173213712385 4.460149039706125e43): neg
PASS: numbers.test: exact->inexact: 2^mantdig then 100..001, round up: (91 89202980794122487614382715949072346427424769 8.92029807941225e43): pos
PASS: numbers.test: exact->inexact: 2^mantdig then 100..001, round up: (91 89202980794122487614382715949072346427424769 8.92029807941225e43): neg
PASS: numbers.test: exact->inexact: 2^mantdig then 100..001, round up: (92 178405961588244975228765431898144692854849537 1.78405961588245e44): pos
PASS: numbers.test: exact->inexact: 2^mantdig then 100..001, round up: (92 178405961588244975228765431898144692854849537 1.78405961588245e44): neg
PASS: numbers.test: exact->inexact: 2^mantdig then 100..001, round up: (93 356811923176489950457530863796289385709699073 3.5681192317649e44): pos
PASS: numbers.test: exact->inexact: 2^mantdig then 100..001, round up: (93 356811923176489950457530863796289385709699073 3.5681192317649e44): neg
PASS: numbers.test: exact->inexact: 2^mantdig then 100..001, round up: (94 713623846352979900915061727592578771419398145 7.1362384635298e44): pos
PASS: numbers.test: exact->inexact: 2^mantdig then 100..001, round up: (94 713623846352979900915061727592578771419398145 7.1362384635298e44): neg
PASS: numbers.test: exact->inexact: 2^mantdig then 100..001, round up: (95 1427247692705959801830123455185157542838796289 1.42724769270596e45): pos
PASS: numbers.test: exact->inexact: 2^mantdig then 100..001, round up: (95 1427247692705959801830123455185157542838796289 1.42724769270596e45): neg
PASS: numbers.test: exact->inexact: 2^mantdig then 100..001, round up: (96 2854495385411919603660246910370315085677592577 2.85449538541192e45): pos
PASS: numbers.test: exact->inexact: 2^mantdig then 100..001, round up: (96 2854495385411919603660246910370315085677592577 2.85449538541192e45): neg
PASS: numbers.test: exact->inexact: 2^mantdig then 100..001, round up: (97 5708990770823839207320493820740630171355185153 5.70899077082384e45): pos
PASS: numbers.test: exact->inexact: 2^mantdig then 100..001, round up: (97 5708990770823839207320493820740630171355185153 5.70899077082384e45): neg
PASS: numbers.test: exact->inexact: 2^mantdig then 100..001, round up: (98 11417981541647678414640987641481260342710370305 1.141798154164768e46): pos
PASS: numbers.test: exact->inexact: 2^mantdig then 100..001, round up: (98 11417981541647678414640987641481260342710370305 1.141798154164768e46): neg
PASS: numbers.test: exact->inexact: 2^mantdig then 100..001, round up: (99 22835963083295356829281975282962520685420740609 2.283596308329536e46): pos
PASS: numbers.test: exact->inexact: 2^mantdig then 100..001, round up: (99 22835963083295356829281975282962520685420740609 2.283596308329536e46): neg
PASS: numbers.test: exact->inexact: 2^mantdig then 100..001, round up: (100 45671926166590713658563950565925041370841481217 4.567192616659072e46): pos
PASS: numbers.test: exact->inexact: 2^mantdig then 100..001, round up: (100 45671926166590713658563950565925041370841481217 4.567192616659072e46): neg
PASS: numbers.test: exact->inexact: frac big/big
PASS: numbers.test: exact->inexact: frac big/big, exceeding double
PASS: numbers.test: exact->inexact: frac inum/inum, numerator not exactly representable as a double: 3002399751580331: pos
PASS: numbers.test: exact->inexact: frac inum/inum, numerator not exactly representable as a double: 3002399751580331: neg
PASS: numbers.test: exact->inexact: frac inum/inum, numerator not exactly representable as a double: 9007199254740993/5: pos
PASS: numbers.test: exact->inexact: frac inum/inum, numerator not exactly representable as a double: 9007199254740993/5: neg
PASS: numbers.test: exact->inexact: frac inum/inum, numerator not exactly representable as a double: 3002399751580331/2: pos
PASS: numbers.test: exact->inexact: frac inum/inum, numerator not exactly representable as a double: 3002399751580331/2: neg
PASS: numbers.test: exact->inexact: frac inum/inum, numerator not exactly representable as a double: 9007199254740993/7: pos
PASS: numbers.test: exact->inexact: frac inum/inum, numerator not exactly representable as a double: 9007199254740993/7: neg
PASS: numbers.test: exact->inexact: frac inum/inum, numerator not exactly representable as a double: 3002399751580331/3: pos
PASS: numbers.test: exact->inexact: frac inum/inum, numerator not exactly representable as a double: 3002399751580331/3: neg
PASS: numbers.test: exact->inexact: frac inum/inum, numerator not exactly representable as a double: 9007199254740993/11: pos
PASS: numbers.test: exact->inexact: frac inum/inum, numerator not exactly representable as a double: 9007199254740993/11: neg
PASS: numbers.test: exact->inexact: frac inum/inum, numerator not exactly representable as a double: 9007199254740993/13: pos
PASS: numbers.test: exact->inexact: frac inum/inum, numerator not exactly representable as a double: 9007199254740993/13: neg
PASS: numbers.test: exact->inexact: frac inum/inum, numerator not exactly representable as a double: 9007199254740993/17: pos
PASS: numbers.test: exact->inexact: frac inum/inum, numerator not exactly representable as a double: 9007199254740993/17: neg
PASS: numbers.test: exact->inexact: frac inum/inum, numerator not exactly representable as a double: 9007199254740993/19: pos
PASS: numbers.test: exact->inexact: frac inum/inum, numerator not exactly representable as a double: 9007199254740993/19: neg
PASS: numbers.test: exact->inexact: frac inum/inum, numerator not exactly representable as a double: 9007199254740993/23: pos
PASS: numbers.test: exact->inexact: frac inum/inum, numerator not exactly representable as a double: 9007199254740993/23: neg
PASS: numbers.test: exact->inexact: frac inum/inum, numerator not exactly representable as a double: +inf.0: pos
PASS: numbers.test: exact->inexact: frac inum/inum, numerator not exactly representable as a double: +inf.0: neg
PASS: numbers.test: exact->inexact: frac inum/inum, numerator not exactly representable as a double: -inf.0: pos
PASS: numbers.test: exact->inexact: frac inum/inum, numerator not exactly representable as a double: -inf.0: neg
PASS: numbers.test: exact->inexact: frac inum/inum, numerator not exactly representable as a double: +nan.0: pos
PASS: numbers.test: exact->inexact: frac inum/inum, numerator not exactly representable as a double: +nan.0: neg
PASS: numbers.test: exact->inexact: frac inum/inum, numerator not exactly representable as a double: 0.0: pos
PASS: numbers.test: exact->inexact: frac inum/inum, numerator not exactly representable as a double: 0.0: neg
PASS: numbers.test: exact->inexact: frac inum/inum, numerator not exactly representable as a double: -0.0: pos
PASS: numbers.test: exact->inexact: frac inum/inum, numerator not exactly representable as a double: -0.0: neg
PASS: numbers.test: exact->inexact: round up to odd: pos
PASS: numbers.test: exact->inexact: round up to odd: neg
PASS: numbers.test: exact->inexact: round down to odd: pos
PASS: numbers.test: exact->inexact: round down to odd: neg
PASS: numbers.test: exact->inexact: round tie up to even: pos
PASS: numbers.test: exact->inexact: round tie up to even: neg
PASS: numbers.test: exact->inexact: round tie down to even: pos
PASS: numbers.test: exact->inexact: round tie down to even: neg
PASS: numbers.test: exact->inexact: round tie up to next power of two: pos
PASS: numbers.test: exact->inexact: round tie up to next power of two: neg
PASS: numbers.test: exact->inexact: miniscule value rounds to zero of appropriate sign: pos
PASS: numbers.test: exact->inexact: miniscule value rounds to zero of appropriate sign: neg
PASS: numbers.test: exact->inexact: smallest inexact: pos
PASS: numbers.test: exact->inexact: smallest inexact: neg
PASS: numbers.test: exact->inexact: 1/2 smallest inexact rounds down to zero: pos
PASS: numbers.test: exact->inexact: 1/2 smallest inexact rounds down to zero: neg
PASS: numbers.test: exact->inexact: just over 1/2 smallest inexact rounds up: pos
PASS: numbers.test: exact->inexact: just over 1/2 smallest inexact rounds up: neg
PASS: numbers.test: exact->inexact: 3/2 smallest inexact rounds up to twice smallest inexact: pos
PASS: numbers.test: exact->inexact: 3/2 smallest inexact rounds up to twice smallest inexact: neg
PASS: numbers.test: exact->inexact: just under 3/2 smallest inexact rounds down: pos
PASS: numbers.test: exact->inexact: just under 3/2 smallest inexact rounds down: neg
PASS: numbers.test: exact->inexact: 5/2 smallest inexact rounds down to twice smallest inexact: pos
PASS: numbers.test: exact->inexact: 5/2 smallest inexact rounds down to twice smallest inexact: neg
PASS: numbers.test: exact->inexact: just over 5/2 smallest inexact rounds up: pos
PASS: numbers.test: exact->inexact: just over 5/2 smallest inexact rounds up: neg
PASS: numbers.test: exact->inexact: one plus dbl-epsilon: pos
PASS: numbers.test: exact->inexact: one plus dbl-epsilon: neg
PASS: numbers.test: exact->inexact: one plus 1/2 dbl-epsilon rounds down to 1.0: pos
PASS: numbers.test: exact->inexact: one plus 1/2 dbl-epsilon rounds down to 1.0: neg
PASS: numbers.test: exact->inexact: just over one plus 1/2 dbl-epsilon rounds up: pos
PASS: numbers.test: exact->inexact: just over one plus 1/2 dbl-epsilon rounds up: neg
PASS: numbers.test: exact->inexact: one plus 3/2 dbl-epsilon rounds up: pos
PASS: numbers.test: exact->inexact: one plus 3/2 dbl-epsilon rounds up: neg
PASS: numbers.test: exact->inexact: just under one plus 3/2 dbl-epsilon rounds down: pos
PASS: numbers.test: exact->inexact: just under one plus 3/2 dbl-epsilon rounds down: neg
PASS: numbers.test: exact->inexact: one plus 5/2 dbl-epsilon rounds down: pos
PASS: numbers.test: exact->inexact: one plus 5/2 dbl-epsilon rounds down: neg
PASS: numbers.test: exact->inexact: just over one plus 5/2 dbl-epsilon rounds up: pos
PASS: numbers.test: exact->inexact: just over one plus 5/2 dbl-epsilon rounds up: neg
PASS: numbers.test: exact->inexact: largest finite inexact: pos
PASS: numbers.test: exact->inexact: largest finite inexact: neg
PASS: numbers.test: exact->inexact: largest finite inexact plus 1/2 epsilon rounds up to infinity: pos
PASS: numbers.test: exact->inexact: largest finite inexact plus 1/2 epsilon rounds up to infinity: neg
PASS: numbers.test: exact->inexact: largest finite inexact plus just under 1/2 epsilon rounds down: pos
PASS: numbers.test: exact->inexact: largest finite inexact plus just under 1/2 epsilon rounds down: neg
PASS: numbers.test: exact->inexact: 1/2 largest finite inexact: pos
PASS: numbers.test: exact->inexact: 1/2 largest finite inexact: neg
PASS: numbers.test: exact->inexact: 1/2 largest finite inexact plus 1/2 epsilon rounds up to next power of two: pos
PASS: numbers.test: exact->inexact: 1/2 largest finite inexact plus 1/2 epsilon rounds up to next power of two: neg
PASS: numbers.test: exact->inexact: 1/2 largest finite inexact plus just over 1/2 epsilon rounds up to next power of two: pos
PASS: numbers.test: exact->inexact: 1/2 largest finite inexact plus just over 1/2 epsilon rounds up to next power of two: neg
PASS: numbers.test: exact->inexact: 1/2 largest finite inexact plus just under 1/2 epsilon rounds down: pos
PASS: numbers.test: exact->inexact: 1/2 largest finite inexact plus just under 1/2 epsilon rounds down: neg
PASS: numbers.test: expt: (documented? expt)
PASS: numbers.test: expt: (eqv? 1 (expt 0 0))
PASS: numbers.test: expt: (eqv? 1 (expt 0.0 0))
PASS: numbers.test: expt: (eqv? 1.0 (expt 0 0.0))
PASS: numbers.test: expt: (eqv? 1.0 (expt 0.0 0.0))
PASS: numbers.test: expt: (real-nan? (expt 0 -1))
PASS: numbers.test: expt: (real-nan? (expt 0 -1.0))
PASS: numbers.test: expt: (real-nan? (expt 0.0 -1))
PASS: numbers.test: expt: (real-nan? (expt 0.0 -1.0))
PASS: numbers.test: expt: (eqv? 0 (expt 0 3))
PASS: numbers.test: expt: (= 0 (expt 0 4.0))
PASS: numbers.test: expt: (eqv? 0.0 (expt 0.0 5))
PASS: numbers.test: expt: (eqv? 0.0 (expt 0.0 6.0))
PASS: numbers.test: expt: (eqv? -2742638075.5 (expt -2742638075.5 1))
PASS: numbers.test: expt: (eqv? (* -2742638075.5 -2742638075.5) (expt -2742638075.5 2))
PASS: numbers.test: expt: (eqv? 4.0 (expt -2.0 2.0))
PASS: numbers.test: expt: (eqv? -1/8 (expt -2 -3))
PASS: numbers.test: expt: (eqv? -0.125 (expt -2.0 -3))
PASS: numbers.test: expt: (eqv? -0.125 (expt -2 -3.0))
PASS: numbers.test: expt: (eqv? -0.125 (expt -2.0 -3.0))
PASS: numbers.test: expt: (eqv? 0.25 (expt 2.0 -2.0))
PASS: numbers.test: expt: (eqv? 32/243 (expt 2/3 5))
PASS: numbers.test: expt: (eqv? 243/32 (expt 2/3 -5))
PASS: numbers.test: expt: (eqv? 32 (expt 1/2 -5))
PASS: numbers.test: expt: (test-eqv? (* -1.0+0.0i 12398 12398) (expt 0.0+12398.0i 2.0))
PASS: numbers.test: expt: (eqv-loosely? 0.0+1.0i (expt -1 0.5))
PASS: numbers.test: expt: (eqv-loosely? 0.0+1.0i (expt -1 1/2))
PASS: numbers.test: expt: (eqv-loosely? 1.0+1.7320508075688i (expt -8 1/3))
PASS: numbers.test: expt: (eqv? +inf.0 (expt 2 +inf.0))
PASS: numbers.test: expt: (eqv? +inf.0 (expt 2.0 +inf.0))
PASS: numbers.test: expt: (eqv? 0.0 (expt 2 -inf.0))
PASS: numbers.test: expt: (eqv? 0.0 (expt 2.0 -inf.0))
PASS: numbers.test: sin: (eqv? 0 (sin 0))
PASS: numbers.test: sin: (eqv? 0.0 (sin 0.0))
PASS: numbers.test: sin: (eqv-loosely? 1.0 (sin 1.57))
PASS: numbers.test: sin: (eqv-loosely? 0.0+1.175i (sin 0.0+1.0i))
PASS: numbers.test: sin: (real-nan? (sin +nan.0))
PASS: numbers.test: sin: (real-nan? (sin +inf.0))
PASS: numbers.test: sin: (real-nan? (sin -inf.0))
PASS: numbers.test: cos: (eqv? 1 (cos 0))
PASS: numbers.test: cos: (eqv? 1.0 (cos 0.0))
PASS: numbers.test: cos: (eqv-loosely? 0.0 (cos 1.57))
PASS: numbers.test: cos: (eqv-loosely? 1.543 (cos 0.0+1.0i))
PASS: numbers.test: cos: (real-nan? (cos +nan.0))
PASS: numbers.test: cos: (real-nan? (cos +inf.0))
PASS: numbers.test: cos: (real-nan? (cos -inf.0))
PASS: numbers.test: tan: (eqv? 0 (tan 0))
PASS: numbers.test: tan: (eqv? 0.0 (tan 0.0))
PASS: numbers.test: tan: (eqv-loosely? 1.0 (tan 0.785))
PASS: numbers.test: tan: (eqv-loosely? 0.0+0.76i (tan 0.0+1.0i))
PASS: numbers.test: tan: (real-nan? (tan +nan.0))
PASS: numbers.test: tan: (real-nan? (tan +inf.0))
PASS: numbers.test: tan: (real-nan? (tan -inf.0))
PASS: numbers.test: asin: (complex-nan? (asin +nan.0))
PASS: numbers.test: asin: (eqv? 0 (asin 0))
PASS: numbers.test: asin: (eqv? 0.0 (asin 0.0))
PASS: numbers.test: acos: (complex-nan? (acos +nan.0))
PASS: numbers.test: acos: (eqv? 0 (acos 1))
PASS: numbers.test: acos: (eqv? 0.0 (acos 1.0))
PASS: numbers.test: atan: (real-nan? (atan +nan.0))
PASS: numbers.test: atan: (eqv? 0 (atan 0))
PASS: numbers.test: atan: (eqv? 0.0 (atan 0.0))
PASS: numbers.test: atan: (eqv-loosely? 1.57 (atan +inf.0))
PASS: numbers.test: atan: (eqv-loosely? -1.57 (atan -inf.0))
PASS: numbers.test: atan: (eqv-loosely? -1.42+0.5i (atan -0.5+2.0i))
PASS: numbers.test: sinh: (= 0 (sinh 0))
PASS: numbers.test: sinh: (= 0.0 (sinh 0.0))
PASS: numbers.test: cosh: (= 1 (cosh 0))
PASS: numbers.test: cosh: (= 1.0 (cosh 0.0))
PASS: numbers.test: tanh: (= 0 (tanh 0))
PASS: numbers.test: tanh: (= 0.0 (tanh 0.0))
PASS: numbers.test: asinh: (= 0 (asinh 0))
PASS: numbers.test: asinh: (= 0.0 (asinh 0.0))
PASS: numbers.test: acosh: (= 0 (acosh 1))
PASS: numbers.test: acosh: (= 0.0 (acosh 1.0))
PASS: numbers.test: atanh: (= 0 (atanh 0))
PASS: numbers.test: atanh: (= 0.0 (atanh 0.0))
PASS: numbers.test: make-rectangular: (real? (make-rectangular 5.0 0))
PASS: numbers.test: make-rectangular: (not (real? (make-rectangular 5.0 0.0)))
PASS: numbers.test: make-rectangular: (not (real? (make-rectangular 5.0 -0.0)))
PASS: numbers.test: make-polar: (real? (make-polar 0 1.0))
PASS: numbers.test: make-polar: (real? (make-polar 5.0 0))
PASS: numbers.test: make-polar: (not (real? (make-polar 5.0 0.0)))
PASS: numbers.test: make-polar: (not (real? (make-polar 5.0 -0.0)))
PASS: numbers.test: make-polar: (eqv? 0 (make-polar 0 0))
PASS: numbers.test: make-polar: (eqv? 0 (make-polar 0 123.456))
PASS: numbers.test: make-polar: (eqv? 1 (make-polar 1 0))
PASS: numbers.test: make-polar: (eqv? -1 (make-polar -1 0))
PASS: numbers.test: make-polar: (almost= 0.0+1.0i (make-polar 1 (* 0.5 pi)))
PASS: numbers.test: make-polar: (almost= -1 (make-polar 1 (* 1.0 pi)))
PASS: numbers.test: make-polar: (almost= 0.0-1.0i (make-polar 1 (* 1.5 pi)))
PASS: numbers.test: make-polar: (almost= 1 (make-polar 1 (* 2.0 pi)))
PASS: numbers.test: real-part: (documented? real-part)
PASS: numbers.test: real-part: (eqv? 5.0 (real-part 5.0))
PASS: numbers.test: real-part: (eqv? 0.0 (real-part 0.0+5.0i))
PASS: numbers.test: real-part: (eqv? 5 (real-part 5))
PASS: numbers.test: real-part: (eqv? 1/5 (real-part 1/5))
PASS: numbers.test: real-part: (eqv? (#{1+}# fixnum-max) (real-part (#{1+}# fixnum-max)))
PASS: numbers.test: imag-part: (documented? imag-part)
PASS: numbers.test: imag-part: (eqv? 0 (imag-part 5.0))
PASS: numbers.test: imag-part: (eqv? 5.0 (imag-part 0.0+5.0i))
PASS: numbers.test: imag-part: (eqv? 0 (imag-part 5))
PASS: numbers.test: imag-part: (eqv? 0 (imag-part 1/5))
PASS: numbers.test: imag-part: (eqv? 0 (imag-part (#{1+}# fixnum-max)))
PASS: numbers.test: magnitude: (documented? magnitude)
PASS: numbers.test: magnitude: (= 0 (magnitude 0))
PASS: numbers.test: magnitude: (= 1 (magnitude 1))
PASS: numbers.test: magnitude: (= 1 (magnitude -1))
PASS: numbers.test: magnitude: (= 1 (magnitude 0.0+1.0i))
PASS: numbers.test: magnitude: (= 1 (magnitude 0.0-1.0i))
PASS: numbers.test: magnitude: (= 5 (magnitude 3.0+4.0i))
PASS: numbers.test: magnitude: (= 5 (magnitude 3.0-4.0i))
PASS: numbers.test: magnitude: (= 5 (magnitude -3.0+4.0i))
PASS: numbers.test: magnitude: (= 5 (magnitude -3.0-4.0i))
PASS: numbers.test: angle: (documented? angle)
PASS: numbers.test: angle: inum +ve
PASS: numbers.test: angle: inum -ve
PASS: numbers.test: angle: bignum +ve
PASS: numbers.test: angle: bignum -ve
PASS: numbers.test: angle: flonum +ve
PASS: numbers.test: angle: flonum -ve
PASS: numbers.test: angle: signed zero +ve
PASS: numbers.test: angle: signed zero -ve
PASS: numbers.test: inexact->exact: (documented? inexact->exact)
PASS: numbers.test: inexact->exact: +inf
PASS: numbers.test: inexact->exact: -inf
PASS: numbers.test: inexact->exact: nan
PASS: numbers.test: inexact->exact: 0.0: pos
PASS: numbers.test: inexact->exact: 0.0: neg
PASS: numbers.test: inexact->exact: small even integer: pos
PASS: numbers.test: inexact->exact: small even integer: neg
PASS: numbers.test: inexact->exact: small odd integer: pos
PASS: numbers.test: inexact->exact: small odd integer: neg
PASS: numbers.test: inexact->exact: largest inexact odd integer: pos
PASS: numbers.test: inexact->exact: largest inexact odd integer: neg
PASS: numbers.test: inexact->exact: largest inexact odd integer - 1: pos
PASS: numbers.test: inexact->exact: largest inexact odd integer - 1: neg
PASS: numbers.test: inexact->exact: largest inexact odd integer + 3: pos
PASS: numbers.test: inexact->exact: largest inexact odd integer + 3: neg
PASS: numbers.test: inexact->exact: largest inexact odd integer * 2^48: pos
PASS: numbers.test: inexact->exact: largest inexact odd integer * 2^48: neg
PASS: numbers.test: inexact->exact: largest inexact odd integer / 2^48: pos
PASS: numbers.test: inexact->exact: largest inexact odd integer / 2^48: neg
PASS: numbers.test: inexact->exact: largest finite inexact: pos
PASS: numbers.test: inexact->exact: largest finite inexact: neg
PASS: numbers.test: inexact->exact: smallest inexact: pos
PASS: numbers.test: inexact->exact: smallest inexact: neg
PASS: numbers.test: inexact->exact: smallest inexact * 2: pos
PASS: numbers.test: inexact->exact: smallest inexact * 2: neg
PASS: numbers.test: inexact->exact: smallest inexact * 3: pos
PASS: numbers.test: inexact->exact: smallest inexact * 3: neg
PASS: numbers.test: inexact->exact: 2.0**i to exact: (0 1): pos
PASS: numbers.test: inexact->exact: 2.0**i to exact: (0 1): neg
PASS: numbers.test: inexact->exact: 2.0**i to exact: (1 2): pos
PASS: numbers.test: inexact->exact: 2.0**i to exact: (1 2): neg
PASS: numbers.test: inexact->exact: 2.0**i to exact: (2 4): pos
PASS: numbers.test: inexact->exact: 2.0**i to exact: (2 4): neg
PASS: numbers.test: inexact->exact: 2.0**i to exact: (3 8): pos
PASS: numbers.test: inexact->exact: 2.0**i to exact: (3 8): neg
PASS: numbers.test: inexact->exact: 2.0**i to exact: (4 16): pos
PASS: numbers.test: inexact->exact: 2.0**i to exact: (4 16): neg
PASS: numbers.test: inexact->exact: 2.0**i to exact: (5 32): pos
PASS: numbers.test: inexact->exact: 2.0**i to exact: (5 32): neg
PASS: numbers.test: inexact->exact: 2.0**i to exact: (6 64): pos
PASS: numbers.test: inexact->exact: 2.0**i to exact: (6 64): neg
PASS: numbers.test: inexact->exact: 2.0**i to exact: (7 128): pos
PASS: numbers.test: inexact->exact: 2.0**i to exact: (7 128): neg
PASS: numbers.test: inexact->exact: 2.0**i to exact: (8 256): pos
PASS: numbers.test: inexact->exact: 2.0**i to exact: (8 256): neg
PASS: numbers.test: inexact->exact: 2.0**i to exact: (9 512): pos
PASS: numbers.test: inexact->exact: 2.0**i to exact: (9 512): neg
PASS: numbers.test: inexact->exact: 2.0**i to exact: (10 1024): pos
PASS: numbers.test: inexact->exact: 2.0**i to exact: (10 1024): neg
PASS: numbers.test: inexact->exact: 2.0**i to exact: (11 2048): pos
PASS: numbers.test: inexact->exact: 2.0**i to exact: (11 2048): neg
PASS: numbers.test: inexact->exact: 2.0**i to exact: (12 4096): pos
PASS: numbers.test: inexact->exact: 2.0**i to exact: (12 4096): neg
PASS: numbers.test: inexact->exact: 2.0**i to exact: (13 8192): pos
PASS: numbers.test: inexact->exact: 2.0**i to exact: (13 8192): neg
PASS: numbers.test: inexact->exact: 2.0**i to exact: (14 16384): pos
PASS: numbers.test: inexact->exact: 2.0**i to exact: (14 16384): neg
PASS: numbers.test: inexact->exact: 2.0**i to exact: (15 32768): pos
PASS: numbers.test: inexact->exact: 2.0**i to exact: (15 32768): neg
PASS: numbers.test: inexact->exact: 2.0**i to exact: (16 65536): pos
PASS: numbers.test: inexact->exact: 2.0**i to exact: (16 65536): neg
PASS: numbers.test: inexact->exact: 2.0**i to exact: (17 131072): pos
PASS: numbers.test: inexact->exact: 2.0**i to exact: (17 131072): neg
PASS: numbers.test: inexact->exact: 2.0**i to exact: (18 262144): pos
PASS: numbers.test: inexact->exact: 2.0**i to exact: (18 262144): neg
PASS: numbers.test: inexact->exact: 2.0**i to exact: (19 524288): pos
PASS: numbers.test: inexact->exact: 2.0**i to exact: (19 524288): neg
PASS: numbers.test: inexact->exact: 2.0**i to exact: (20 1048576): pos
PASS: numbers.test: inexact->exact: 2.0**i to exact: (20 1048576): neg
PASS: numbers.test: inexact->exact: 2.0**i to exact: (21 2097152): pos
PASS: numbers.test: inexact->exact: 2.0**i to exact: (21 2097152): neg
PASS: numbers.test: inexact->exact: 2.0**i to exact: (22 4194304): pos
PASS: numbers.test: inexact->exact: 2.0**i to exact: (22 4194304): neg
PASS: numbers.test: inexact->exact: 2.0**i to exact: (23 8388608): pos
PASS: numbers.test: inexact->exact: 2.0**i to exact: (23 8388608): neg
PASS: numbers.test: inexact->exact: 2.0**i to exact: (24 16777216): pos
PASS: numbers.test: inexact->exact: 2.0**i to exact: (24 16777216): neg
PASS: numbers.test: inexact->exact: 2.0**i to exact: (25 33554432): pos
PASS: numbers.test: inexact->exact: 2.0**i to exact: (25 33554432): neg
PASS: numbers.test: inexact->exact: 2.0**i to exact: (26 67108864): pos
PASS: numbers.test: inexact->exact: 2.0**i to exact: (26 67108864): neg
PASS: numbers.test: inexact->exact: 2.0**i to exact: (27 134217728): pos
PASS: numbers.test: inexact->exact: 2.0**i to exact: (27 134217728): neg
PASS: numbers.test: inexact->exact: 2.0**i to exact: (28 268435456): pos
PASS: numbers.test: inexact->exact: 2.0**i to exact: (28 268435456): neg
PASS: numbers.test: inexact->exact: 2.0**i to exact: (29 536870912): pos
PASS: numbers.test: inexact->exact: 2.0**i to exact: (29 536870912): neg
PASS: numbers.test: inexact->exact: 2.0**i to exact: (30 1073741824): pos
PASS: numbers.test: inexact->exact: 2.0**i to exact: (30 1073741824): neg
PASS: numbers.test: inexact->exact: 2.0**i to exact: (31 2147483648): pos
PASS: numbers.test: inexact->exact: 2.0**i to exact: (31 2147483648): neg
PASS: numbers.test: inexact->exact: 2.0**i to exact: (32 4294967296): pos
PASS: numbers.test: inexact->exact: 2.0**i to exact: (32 4294967296): neg
PASS: numbers.test: inexact->exact: 2.0**i to exact: (33 8589934592): pos
PASS: numbers.test: inexact->exact: 2.0**i to exact: (33 8589934592): neg
PASS: numbers.test: inexact->exact: 2.0**i to exact: (34 17179869184): pos
PASS: numbers.test: inexact->exact: 2.0**i to exact: (34 17179869184): neg
PASS: numbers.test: inexact->exact: 2.0**i to exact: (35 34359738368): pos
PASS: numbers.test: inexact->exact: 2.0**i to exact: (35 34359738368): neg
PASS: numbers.test: inexact->exact: 2.0**i to exact: (36 68719476736): pos
PASS: numbers.test: inexact->exact: 2.0**i to exact: (36 68719476736): neg
PASS: numbers.test: inexact->exact: 2.0**i to exact: (37 137438953472): pos
PASS: numbers.test: inexact->exact: 2.0**i to exact: (37 137438953472): neg
PASS: numbers.test: inexact->exact: 2.0**i to exact: (38 274877906944): pos
PASS: numbers.test: inexact->exact: 2.0**i to exact: (38 274877906944): neg
PASS: numbers.test: inexact->exact: 2.0**i to exact: (39 549755813888): pos
PASS: numbers.test: inexact->exact: 2.0**i to exact: (39 549755813888): neg
PASS: numbers.test: inexact->exact: 2.0**i to exact: (40 1099511627776): pos
PASS: numbers.test: inexact->exact: 2.0**i to exact: (40 1099511627776): neg
PASS: numbers.test: inexact->exact: 2.0**i to exact: (41 2199023255552): pos
PASS: numbers.test: inexact->exact: 2.0**i to exact: (41 2199023255552): neg
PASS: numbers.test: inexact->exact: 2.0**i to exact: (42 4398046511104): pos
PASS: numbers.test: inexact->exact: 2.0**i to exact: (42 4398046511104): neg
PASS: numbers.test: inexact->exact: 2.0**i to exact: (43 8796093022208): pos
PASS: numbers.test: inexact->exact: 2.0**i to exact: (43 8796093022208): neg
PASS: numbers.test: inexact->exact: 2.0**i to exact: (44 17592186044416): pos
PASS: numbers.test: inexact->exact: 2.0**i to exact: (44 17592186044416): neg
PASS: numbers.test: inexact->exact: 2.0**i to exact: (45 35184372088832): pos
PASS: numbers.test: inexact->exact: 2.0**i to exact: (45 35184372088832): neg
PASS: numbers.test: inexact->exact: 2.0**i to exact: (46 70368744177664): pos
PASS: numbers.test: inexact->exact: 2.0**i to exact: (46 70368744177664): neg
PASS: numbers.test: inexact->exact: 2.0**i to exact: (47 140737488355328): pos
PASS: numbers.test: inexact->exact: 2.0**i to exact: (47 140737488355328): neg
PASS: numbers.test: inexact->exact: 2.0**i to exact: (48 281474976710656): pos
PASS: numbers.test: inexact->exact: 2.0**i to exact: (48 281474976710656): neg
PASS: numbers.test: inexact->exact: 2.0**i to exact: (49 562949953421312): pos
PASS: numbers.test: inexact->exact: 2.0**i to exact: (49 562949953421312): neg
PASS: numbers.test: inexact->exact: 2.0**i to exact: (50 1125899906842624): pos
PASS: numbers.test: inexact->exact: 2.0**i to exact: (50 1125899906842624): neg
PASS: numbers.test: inexact->exact: 2.0**i to exact: (51 2251799813685248): pos
PASS: numbers.test: inexact->exact: 2.0**i to exact: (51 2251799813685248): neg
PASS: numbers.test: inexact->exact: 2.0**i to exact: (52 4503599627370496): pos
PASS: numbers.test: inexact->exact: 2.0**i to exact: (52 4503599627370496): neg
PASS: numbers.test: inexact->exact: 2.0**i to exact: (53 9007199254740992): pos
PASS: numbers.test: inexact->exact: 2.0**i to exact: (53 9007199254740992): neg
PASS: numbers.test: inexact->exact: 2.0**i to exact: (54 18014398509481984): pos
PASS: numbers.test: inexact->exact: 2.0**i to exact: (54 18014398509481984): neg
PASS: numbers.test: inexact->exact: 2.0**i to exact: (55 36028797018963968): pos
PASS: numbers.test: inexact->exact: 2.0**i to exact: (55 36028797018963968): neg
PASS: numbers.test: inexact->exact: 2.0**i to exact: (56 72057594037927936): pos
PASS: numbers.test: inexact->exact: 2.0**i to exact: (56 72057594037927936): neg
PASS: numbers.test: inexact->exact: 2.0**i to exact: (57 144115188075855872): pos
PASS: numbers.test: inexact->exact: 2.0**i to exact: (57 144115188075855872): neg
PASS: numbers.test: inexact->exact: 2.0**i to exact: (58 288230376151711744): pos
PASS: numbers.test: inexact->exact: 2.0**i to exact: (58 288230376151711744): neg
PASS: numbers.test: inexact->exact: 2.0**i to exact: (59 576460752303423488): pos
PASS: numbers.test: inexact->exact: 2.0**i to exact: (59 576460752303423488): neg
PASS: numbers.test: inexact->exact: 2.0**i to exact: (60 1152921504606846976): pos
PASS: numbers.test: inexact->exact: 2.0**i to exact: (60 1152921504606846976): neg
PASS: numbers.test: inexact->exact: 2.0**i to exact: (61 2305843009213693952): pos
PASS: numbers.test: inexact->exact: 2.0**i to exact: (61 2305843009213693952): neg
PASS: numbers.test: inexact->exact: 2.0**i to exact: (62 4611686018427387904): pos
PASS: numbers.test: inexact->exact: 2.0**i to exact: (62 4611686018427387904): neg
PASS: numbers.test: inexact->exact: 2.0**i to exact: (63 9223372036854775808): pos
PASS: numbers.test: inexact->exact: 2.0**i to exact: (63 9223372036854775808): neg
PASS: numbers.test: inexact->exact: 2.0**i to exact: (64 18446744073709551616): pos
PASS: numbers.test: inexact->exact: 2.0**i to exact: (64 18446744073709551616): neg
PASS: numbers.test: inexact->exact: 2.0**i to exact: (65 36893488147419103232): pos
PASS: numbers.test: inexact->exact: 2.0**i to exact: (65 36893488147419103232): neg
PASS: numbers.test: inexact->exact: 2.0**i to exact: (66 73786976294838206464): pos
PASS: numbers.test: inexact->exact: 2.0**i to exact: (66 73786976294838206464): neg
PASS: numbers.test: inexact->exact: 2.0**i to exact: (67 147573952589676412928): pos
PASS: numbers.test: inexact->exact: 2.0**i to exact: (67 147573952589676412928): neg
PASS: numbers.test: inexact->exact: 2.0**i to exact: (68 295147905179352825856): pos
PASS: numbers.test: inexact->exact: 2.0**i to exact: (68 295147905179352825856): neg
PASS: numbers.test: inexact->exact: 2.0**i to exact: (69 590295810358705651712): pos
PASS: numbers.test: inexact->exact: 2.0**i to exact: (69 590295810358705651712): neg
PASS: numbers.test: inexact->exact: 2.0**i to exact: (70 1180591620717411303424): pos
PASS: numbers.test: inexact->exact: 2.0**i to exact: (70 1180591620717411303424): neg
PASS: numbers.test: inexact->exact: 2.0**i to exact: (71 2361183241434822606848): pos
PASS: numbers.test: inexact->exact: 2.0**i to exact: (71 2361183241434822606848): neg
PASS: numbers.test: inexact->exact: 2.0**i to exact: (72 4722366482869645213696): pos
PASS: numbers.test: inexact->exact: 2.0**i to exact: (72 4722366482869645213696): neg
PASS: numbers.test: inexact->exact: 2.0**i to exact: (73 9444732965739290427392): pos
PASS: numbers.test: inexact->exact: 2.0**i to exact: (73 9444732965739290427392): neg
PASS: numbers.test: inexact->exact: 2.0**i to exact: (74 18889465931478580854784): pos
PASS: numbers.test: inexact->exact: 2.0**i to exact: (74 18889465931478580854784): neg
PASS: numbers.test: inexact->exact: 2.0**i to exact: (75 37778931862957161709568): pos
PASS: numbers.test: inexact->exact: 2.0**i to exact: (75 37778931862957161709568): neg
PASS: numbers.test: inexact->exact: 2.0**i to exact: (76 75557863725914323419136): pos
PASS: numbers.test: inexact->exact: 2.0**i to exact: (76 75557863725914323419136): neg
PASS: numbers.test: inexact->exact: 2.0**i to exact: (77 151115727451828646838272): pos
PASS: numbers.test: inexact->exact: 2.0**i to exact: (77 151115727451828646838272): neg
PASS: numbers.test: inexact->exact: 2.0**i to exact: (78 302231454903657293676544): pos
PASS: numbers.test: inexact->exact: 2.0**i to exact: (78 302231454903657293676544): neg
PASS: numbers.test: inexact->exact: 2.0**i to exact: (79 604462909807314587353088): pos
PASS: numbers.test: inexact->exact: 2.0**i to exact: (79 604462909807314587353088): neg
PASS: numbers.test: inexact->exact: 2.0**i to exact: (80 1208925819614629174706176): pos
PASS: numbers.test: inexact->exact: 2.0**i to exact: (80 1208925819614629174706176): neg
PASS: numbers.test: inexact->exact: 2.0**i to exact: (81 2417851639229258349412352): pos
PASS: numbers.test: inexact->exact: 2.0**i to exact: (81 2417851639229258349412352): neg
PASS: numbers.test: inexact->exact: 2.0**i to exact: (82 4835703278458516698824704): pos
PASS: numbers.test: inexact->exact: 2.0**i to exact: (82 4835703278458516698824704): neg
PASS: numbers.test: inexact->exact: 2.0**i to exact: (83 9671406556917033397649408): pos
PASS: numbers.test: inexact->exact: 2.0**i to exact: (83 9671406556917033397649408): neg
PASS: numbers.test: inexact->exact: 2.0**i to exact: (84 19342813113834066795298816): pos
PASS: numbers.test: inexact->exact: 2.0**i to exact: (84 19342813113834066795298816): neg
PASS: numbers.test: inexact->exact: 2.0**i to exact: (85 38685626227668133590597632): pos
PASS: numbers.test: inexact->exact: 2.0**i to exact: (85 38685626227668133590597632): neg
PASS: numbers.test: inexact->exact: 2.0**i to exact: (86 77371252455336267181195264): pos
PASS: numbers.test: inexact->exact: 2.0**i to exact: (86 77371252455336267181195264): neg
PASS: numbers.test: inexact->exact: 2.0**i to exact: (87 154742504910672534362390528): pos
PASS: numbers.test: inexact->exact: 2.0**i to exact: (87 154742504910672534362390528): neg
PASS: numbers.test: inexact->exact: 2.0**i to exact: (88 309485009821345068724781056): pos
PASS: numbers.test: inexact->exact: 2.0**i to exact: (88 309485009821345068724781056): neg
PASS: numbers.test: inexact->exact: 2.0**i to exact: (89 618970019642690137449562112): pos
PASS: numbers.test: inexact->exact: 2.0**i to exact: (89 618970019642690137449562112): neg
PASS: numbers.test: inexact->exact: 2.0**i to exact: (90 1237940039285380274899124224): pos
PASS: numbers.test: inexact->exact: 2.0**i to exact: (90 1237940039285380274899124224): neg
PASS: numbers.test: inexact->exact: 2.0**i to exact: (91 2475880078570760549798248448): pos
PASS: numbers.test: inexact->exact: 2.0**i to exact: (91 2475880078570760549798248448): neg
PASS: numbers.test: inexact->exact: 2.0**i to exact: (92 4951760157141521099596496896): pos
PASS: numbers.test: inexact->exact: 2.0**i to exact: (92 4951760157141521099596496896): neg
PASS: numbers.test: inexact->exact: 2.0**i to exact: (93 9903520314283042199192993792): pos
PASS: numbers.test: inexact->exact: 2.0**i to exact: (93 9903520314283042199192993792): neg
PASS: numbers.test: inexact->exact: 2.0**i to exact: (94 19807040628566084398385987584): pos
PASS: numbers.test: inexact->exact: 2.0**i to exact: (94 19807040628566084398385987584): neg
PASS: numbers.test: inexact->exact: 2.0**i to exact: (95 39614081257132168796771975168): pos
PASS: numbers.test: inexact->exact: 2.0**i to exact: (95 39614081257132168796771975168): neg
PASS: numbers.test: inexact->exact: 2.0**i to exact: (96 79228162514264337593543950336): pos
PASS: numbers.test: inexact->exact: 2.0**i to exact: (96 79228162514264337593543950336): neg
PASS: numbers.test: inexact->exact: 2.0**i to exact: (97 158456325028528675187087900672): pos
PASS: numbers.test: inexact->exact: 2.0**i to exact: (97 158456325028528675187087900672): neg
PASS: numbers.test: inexact->exact: 2.0**i to exact: (98 316912650057057350374175801344): pos
PASS: numbers.test: inexact->exact: 2.0**i to exact: (98 316912650057057350374175801344): neg
PASS: numbers.test: inexact->exact: 2.0**i to exact: (99 633825300114114700748351602688): pos
PASS: numbers.test: inexact->exact: 2.0**i to exact: (99 633825300114114700748351602688): neg
PASS: numbers.test: inexact->exact: 2.0**i to exact: (100 1267650600228229401496703205376): pos
PASS: numbers.test: inexact->exact: 2.0**i to exact: (100 1267650600228229401496703205376): neg
PASS: numbers.test: integer-expt: (documented? integer-expt)
PASS: numbers.test: integer-expt: 2^+inf
PASS: numbers.test: integer-expt: 2^-inf
PASS: numbers.test: integer-expt: 2^nan
PASS: numbers.test: integer-expt: (eqv? 1 (integer-expt 0 0))
PASS: numbers.test: integer-expt: (eqv? 1 (integer-expt 0.0 0))
PASS: numbers.test: integer-expt: (real-nan? (integer-expt 0 -1))
PASS: numbers.test: integer-expt: (real-nan? (integer-expt 0.0 -1))
PASS: numbers.test: integer-expt: (eqv? 0 (integer-expt 0 3))
PASS: numbers.test: integer-expt: (eqv? 0.0 (integer-expt 0.0 5))
PASS: numbers.test: integer-expt: (eqv? -2742638075.5 (integer-expt -2742638075.5 1))
PASS: numbers.test: integer-expt: (eqv? (* -2742638075.5 -2742638075.5) (integer-expt -2742638075.5 2))
PASS: numbers.test: integer-expt: (eqv? 4.0 (integer-expt -2.0 2))
PASS: numbers.test: integer-expt: (eqv? -1/8 (integer-expt -2 -3))
PASS: numbers.test: integer-expt: (eqv? -0.125 (integer-expt -2.0 -3))
PASS: numbers.test: integer-expt: (eqv? 0.25 (integer-expt 2.0 -2))
PASS: numbers.test: integer-expt: (eqv? 32/243 (integer-expt 2/3 5))
PASS: numbers.test: integer-expt: (eqv? 243/32 (integer-expt 2/3 -5))
PASS: numbers.test: integer-expt: (eqv? 32 (integer-expt 1/2 -5))
PASS: numbers.test: integer-expt: (test-eqv? (* -1.0+0.0i 12398 12398) (integer-expt 0.0+12398.0i 2))
PASS: numbers.test: integer-length: (documented? integer-length)
PASS: numbers.test: integer-length: -2^i, ...11100..00: (-1 expect 0)
PASS: numbers.test: integer-length: -2^i, ...11100..00: (-2 expect 1)
PASS: numbers.test: integer-length: -2^i, ...11100..00: (-4 expect 2)
PASS: numbers.test: integer-length: -2^i, ...11100..00: (-8 expect 3)
PASS: numbers.test: integer-length: -2^i, ...11100..00: (-16 expect 4)
PASS: numbers.test: integer-length: -2^i, ...11100..00: (-32 expect 5)
PASS: numbers.test: integer-length: -2^i, ...11100..00: (-64 expect 6)
PASS: numbers.test: integer-length: -2^i, ...11100..00: (-128 expect 7)
PASS: numbers.test: integer-length: -2^i, ...11100..00: (-256 expect 8)
PASS: numbers.test: integer-length: -2^i, ...11100..00: (-512 expect 9)
PASS: numbers.test: integer-length: -2^i, ...11100..00: (-1024 expect 10)
PASS: numbers.test: integer-length: -2^i, ...11100..00: (-2048 expect 11)
PASS: numbers.test: integer-length: -2^i, ...11100..00: (-4096 expect 12)
PASS: numbers.test: integer-length: -2^i, ...11100..00: (-8192 expect 13)
PASS: numbers.test: integer-length: -2^i, ...11100..00: (-16384 expect 14)
PASS: numbers.test: integer-length: -2^i, ...11100..00: (-32768 expect 15)
PASS: numbers.test: integer-length: -2^i, ...11100..00: (-65536 expect 16)
PASS: numbers.test: integer-length: -2^i, ...11100..00: (-131072 expect 17)
PASS: numbers.test: integer-length: -2^i, ...11100..00: (-262144 expect 18)
PASS: numbers.test: integer-length: -2^i, ...11100..00: (-524288 expect 19)
PASS: numbers.test: integer-length: -2^i, ...11100..00: (-1048576 expect 20)
PASS: numbers.test: integer-length: -2^i, ...11100..00: (-2097152 expect 21)
PASS: numbers.test: integer-length: -2^i, ...11100..00: (-4194304 expect 22)
PASS: numbers.test: integer-length: -2^i, ...11100..00: (-8388608 expect 23)
PASS: numbers.test: integer-length: -2^i, ...11100..00: (-16777216 expect 24)
PASS: numbers.test: integer-length: -2^i, ...11100..00: (-33554432 expect 25)
PASS: numbers.test: integer-length: -2^i, ...11100..00: (-67108864 expect 26)
PASS: numbers.test: integer-length: -2^i, ...11100..00: (-134217728 expect 27)
PASS: numbers.test: integer-length: -2^i, ...11100..00: (-268435456 expect 28)
PASS: numbers.test: integer-length: -2^i, ...11100..00: (-536870912 expect 29)
PASS: numbers.test: integer-length: -2^i, ...11100..00: (-1073741824 expect 30)
PASS: numbers.test: integer-length: -2^i, ...11100..00: (-2147483648 expect 31)
PASS: numbers.test: integer-length: -2^i, ...11100..00: (-4294967296 expect 32)
PASS: numbers.test: integer-length: -2^i, ...11100..00: (-8589934592 expect 33)
PASS: numbers.test: integer-length: -2^i, ...11100..00: (-17179869184 expect 34)
PASS: numbers.test: integer-length: -2^i, ...11100..00: (-34359738368 expect 35)
PASS: numbers.test: integer-length: -2^i, ...11100..00: (-68719476736 expect 36)
PASS: numbers.test: integer-length: -2^i, ...11100..00: (-137438953472 expect 37)
PASS: numbers.test: integer-length: -2^i, ...11100..00: (-274877906944 expect 38)
PASS: numbers.test: integer-length: -2^i, ...11100..00: (-549755813888 expect 39)
PASS: numbers.test: integer-length: -2^i, ...11100..00: (-1099511627776 expect 40)
PASS: numbers.test: integer-length: -2^i, ...11100..00: (-2199023255552 expect 41)
PASS: numbers.test: integer-length: -2^i, ...11100..00: (-4398046511104 expect 42)
PASS: numbers.test: integer-length: -2^i, ...11100..00: (-8796093022208 expect 43)
PASS: numbers.test: integer-length: -2^i, ...11100..00: (-17592186044416 expect 44)
PASS: numbers.test: integer-length: -2^i, ...11100..00: (-35184372088832 expect 45)
PASS: numbers.test: integer-length: -2^i, ...11100..00: (-70368744177664 expect 46)
PASS: numbers.test: integer-length: -2^i, ...11100..00: (-140737488355328 expect 47)
PASS: numbers.test: integer-length: -2^i, ...11100..00: (-281474976710656 expect 48)
PASS: numbers.test: integer-length: -2^i, ...11100..00: (-562949953421312 expect 49)
PASS: numbers.test: integer-length: -2^i, ...11100..00: (-1125899906842624 expect 50)
PASS: numbers.test: integer-length: -2^i, ...11100..00: (-2251799813685248 expect 51)
PASS: numbers.test: integer-length: -2^i, ...11100..00: (-4503599627370496 expect 52)
PASS: numbers.test: integer-length: -2^i, ...11100..00: (-9007199254740992 expect 53)
PASS: numbers.test: integer-length: -2^i, ...11100..00: (-18014398509481984 expect 54)
PASS: numbers.test: integer-length: -2^i, ...11100..00: (-36028797018963968 expect 55)
PASS: numbers.test: integer-length: -2^i, ...11100..00: (-72057594037927936 expect 56)
PASS: numbers.test: integer-length: -2^i, ...11100..00: (-144115188075855872 expect 57)
PASS: numbers.test: integer-length: -2^i, ...11100..00: (-288230376151711744 expect 58)
PASS: numbers.test: integer-length: -2^i, ...11100..00: (-576460752303423488 expect 59)
PASS: numbers.test: integer-length: -2^i, ...11100..00: (-1152921504606846976 expect 60)
PASS: numbers.test: integer-length: -2^i, ...11100..00: (-2305843009213693952 expect 61)
PASS: numbers.test: integer-length: -2^i, ...11100..00: (-4611686018427387904 expect 62)
PASS: numbers.test: integer-length: -2^i, ...11100..00: (-9223372036854775808 expect 63)
PASS: numbers.test: integer-length: -2^i, ...11100..00: (-18446744073709551616 expect 64)
PASS: numbers.test: integer-length: -2^i, ...11100..00: (-36893488147419103232 expect 65)
PASS: numbers.test: integer-length: -2^i, ...11100..00: (-73786976294838206464 expect 66)
PASS: numbers.test: integer-length: -2^i, ...11100..00: (-147573952589676412928 expect 67)
PASS: numbers.test: integer-length: -2^i, ...11100..00: (-295147905179352825856 expect 68)
PASS: numbers.test: integer-length: -2^i, ...11100..00: (-590295810358705651712 expect 69)
PASS: numbers.test: integer-length: -2^i, ...11100..00: (-1180591620717411303424 expect 70)
PASS: numbers.test: integer-length: -2^i, ...11100..00: (-2361183241434822606848 expect 71)
PASS: numbers.test: integer-length: -2^i, ...11100..00: (-4722366482869645213696 expect 72)
PASS: numbers.test: integer-length: -2^i, ...11100..00: (-9444732965739290427392 expect 73)
PASS: numbers.test: integer-length: -2^i, ...11100..00: (-18889465931478580854784 expect 74)
PASS: numbers.test: integer-length: -2^i, ...11100..00: (-37778931862957161709568 expect 75)
PASS: numbers.test: integer-length: -2^i, ...11100..00: (-75557863725914323419136 expect 76)
PASS: numbers.test: integer-length: -2^i, ...11100..00: (-151115727451828646838272 expect 77)
PASS: numbers.test: integer-length: -2^i, ...11100..00: (-302231454903657293676544 expect 78)
PASS: numbers.test: integer-length: -2^i, ...11100..00: (-604462909807314587353088 expect 79)
PASS: numbers.test: integer-length: -2^i, ...11100..00: (-1208925819614629174706176 expect 80)
PASS: numbers.test: integer-length: -2^i, ...11100..00: (-2417851639229258349412352 expect 81)
PASS: numbers.test: integer-length: -2^i, ...11100..00: (-4835703278458516698824704 expect 82)
PASS: numbers.test: integer-length: -2^i, ...11100..00: (-9671406556917033397649408 expect 83)
PASS: numbers.test: integer-length: -2^i, ...11100..00: (-19342813113834066795298816 expect 84)
PASS: numbers.test: integer-length: -2^i, ...11100..00: (-38685626227668133590597632 expect 85)
PASS: numbers.test: integer-length: -2^i, ...11100..00: (-77371252455336267181195264 expect 86)
PASS: numbers.test: integer-length: -2^i, ...11100..00: (-154742504910672534362390528 expect 87)
PASS: numbers.test: integer-length: -2^i, ...11100..00: (-309485009821345068724781056 expect 88)
PASS: numbers.test: integer-length: -2^i, ...11100..00: (-618970019642690137449562112 expect 89)
PASS: numbers.test: integer-length: -2^i, ...11100..00: (-1237940039285380274899124224 expect 90)
PASS: numbers.test: integer-length: -2^i, ...11100..00: (-2475880078570760549798248448 expect 91)
PASS: numbers.test: integer-length: -2^i, ...11100..00: (-4951760157141521099596496896 expect 92)
PASS: numbers.test: integer-length: -2^i, ...11100..00: (-9903520314283042199192993792 expect 93)
PASS: numbers.test: integer-length: -2^i, ...11100..00: (-19807040628566084398385987584 expect 94)
PASS: numbers.test: integer-length: -2^i, ...11100..00: (-39614081257132168796771975168 expect 95)
PASS: numbers.test: integer-length: -2^i, ...11100..00: (-79228162514264337593543950336 expect 96)
PASS: numbers.test: integer-length: -2^i, ...11100..00: (-158456325028528675187087900672 expect 97)
PASS: numbers.test: integer-length: -2^i, ...11100..00: (-316912650057057350374175801344 expect 98)
PASS: numbers.test: integer-length: -2^i, ...11100..00: (-633825300114114700748351602688 expect 99)
PASS: numbers.test: integer-length: -2^i, ...11100..00: (-1267650600228229401496703205376 expect 100)
PASS: numbers.test: integer-length: -2^i, ...11100..00: (-2535301200456458802993406410752 expect 101)
PASS: numbers.test: integer-length: -2^i, ...11100..00: (-5070602400912917605986812821504 expect 102)
PASS: numbers.test: integer-length: -2^i, ...11100..00: (-10141204801825835211973625643008 expect 103)
PASS: numbers.test: integer-length: -2^i, ...11100..00: (-20282409603651670423947251286016 expect 104)
PASS: numbers.test: integer-length: -2^i, ...11100..00: (-40564819207303340847894502572032 expect 105)
PASS: numbers.test: integer-length: -2^i, ...11100..00: (-81129638414606681695789005144064 expect 106)
PASS: numbers.test: integer-length: -2^i, ...11100..00: (-162259276829213363391578010288128 expect 107)
PASS: numbers.test: integer-length: -2^i, ...11100..00: (-324518553658426726783156020576256 expect 108)
PASS: numbers.test: integer-length: -2^i, ...11100..00: (-649037107316853453566312041152512 expect 109)
PASS: numbers.test: integer-length: -2^i, ...11100..00: (-1298074214633706907132624082305024 expect 110)
PASS: numbers.test: integer-length: -2^i, ...11100..00: (-2596148429267413814265248164610048 expect 111)
PASS: numbers.test: integer-length: -2^i, ...11100..00: (-5192296858534827628530496329220096 expect 112)
PASS: numbers.test: integer-length: -2^i, ...11100..00: (-10384593717069655257060992658440192 expect 113)
PASS: numbers.test: integer-length: -2^i, ...11100..00: (-20769187434139310514121985316880384 expect 114)
PASS: numbers.test: integer-length: -2^i, ...11100..00: (-41538374868278621028243970633760768 expect 115)
PASS: numbers.test: integer-length: -2^i, ...11100..00: (-83076749736557242056487941267521536 expect 116)
PASS: numbers.test: integer-length: -2^i, ...11100..00: (-166153499473114484112975882535043072 expect 117)
PASS: numbers.test: integer-length: -2^i, ...11100..00: (-332306998946228968225951765070086144 expect 118)
PASS: numbers.test: integer-length: -2^i, ...11100..00: (-664613997892457936451903530140172288 expect 119)
PASS: numbers.test: integer-length: -2^i, ...11100..00: (-1329227995784915872903807060280344576 expect 120)
PASS: numbers.test: integer-length: -2^i, ...11100..00: (-2658455991569831745807614120560689152 expect 121)
PASS: numbers.test: integer-length: -2^i, ...11100..00: (-5316911983139663491615228241121378304 expect 122)
PASS: numbers.test: integer-length: -2^i, ...11100..00: (-10633823966279326983230456482242756608 expect 123)
PASS: numbers.test: integer-length: -2^i, ...11100..00: (-21267647932558653966460912964485513216 expect 124)
PASS: numbers.test: integer-length: -2^i, ...11100..00: (-42535295865117307932921825928971026432 expect 125)
PASS: numbers.test: integer-length: -2^i, ...11100..00: (-85070591730234615865843651857942052864 expect 126)
PASS: numbers.test: integer-length: -2^i, ...11100..00: (-170141183460469231731687303715884105728 expect 127)
PASS: numbers.test: integer-length: -2^i, ...11100..00: (-340282366920938463463374607431768211456 expect 128)
PASS: numbers.test: integer-length: -2^i, ...11100..00: (-680564733841876926926749214863536422912 expect 129)
PASS: numbers.test: integer-length: -2^i, ...11100..00: (-1361129467683753853853498429727072845824 expect 130)
PASS: numbers.test: integer-length: -2^i, ...11100..00: (-2722258935367507707706996859454145691648 expect 131)
PASS: numbers.test: integer-length: -2^i, ...11100..00: (-5444517870735015415413993718908291383296 expect 132)
PASS: numbers.test: integer-length: -2^i, ...11100..00: (-10889035741470030830827987437816582766592 expect 133)
PASS: numbers.test: integer-length: -2^i, ...11100..00: (-21778071482940061661655974875633165533184 expect 134)
PASS: numbers.test: integer-length: -2^i, ...11100..00: (-43556142965880123323311949751266331066368 expect 135)
PASS: numbers.test: integer-length: -2^i, ...11100..00: (-87112285931760246646623899502532662132736 expect 136)
PASS: numbers.test: integer-length: -2^i, ...11100..00: (-174224571863520493293247799005065324265472 expect 137)
PASS: numbers.test: integer-length: -2^i, ...11100..00: (-348449143727040986586495598010130648530944 expect 138)
PASS: numbers.test: integer-length: -2^i, ...11100..00: (-696898287454081973172991196020261297061888 expect 139)
PASS: numbers.test: integer-length: -2^i, ...11100..00: (-1393796574908163946345982392040522594123776 expect 140)
PASS: numbers.test: integer-length: -2^i, ...11100..00: (-2787593149816327892691964784081045188247552 expect 141)
PASS: numbers.test: integer-length: -2^i, ...11100..00: (-5575186299632655785383929568162090376495104 expect 142)
PASS: numbers.test: integer-length: -2^i, ...11100..00: (-11150372599265311570767859136324180752990208 expect 143)
PASS: numbers.test: integer-length: -2^i, ...11100..00: (-22300745198530623141535718272648361505980416 expect 144)
PASS: numbers.test: integer-length: -2^i, ...11100..00: (-44601490397061246283071436545296723011960832 expect 145)
PASS: numbers.test: integer-length: -2^i, ...11100..00: (-89202980794122492566142873090593446023921664 expect 146)
PASS: numbers.test: integer-length: -2^i, ...11100..00: (-178405961588244985132285746181186892047843328 expect 147)
PASS: numbers.test: integer-length: -2^i, ...11100..00: (-356811923176489970264571492362373784095686656 expect 148)
PASS: numbers.test: integer-length: -2^i, ...11100..00: (-713623846352979940529142984724747568191373312 expect 149)
PASS: numbers.test: integer-length: -2^i, ...11100..00: (-1427247692705959881058285969449495136382746624 expect 150)
PASS: numbers.test: integer-length: -2^i, ...11100..00: (-2854495385411919762116571938898990272765493248 expect 151)
PASS: numbers.test: integer-length: -2^i, ...11100..00: (-5708990770823839524233143877797980545530986496 expect 152)
PASS: numbers.test: integer-length: -2^i, ...11100..00: (-11417981541647679048466287755595961091061972992 expect 153)
PASS: numbers.test: integer-length: -2^i, ...11100..00: (-22835963083295358096932575511191922182123945984 expect 154)
PASS: numbers.test: integer-length: -2^i, ...11100..00: (-45671926166590716193865151022383844364247891968 expect 155)
PASS: numbers.test: integer-length: -2^i, ...11100..00: (-91343852333181432387730302044767688728495783936 expect 156)
PASS: numbers.test: integer-length: -2^i, ...11100..00: (-182687704666362864775460604089535377456991567872 expect 157)
PASS: numbers.test: integer-length: -2^i, ...11100..00: (-365375409332725729550921208179070754913983135744 expect 158)
PASS: numbers.test: integer-length: -2^i, ...11100..00: (-730750818665451459101842416358141509827966271488 expect 159)
PASS: numbers.test: integer-length: -2^i, ...11100..00: (-1461501637330902918203684832716283019655932542976 expect 160)
PASS: numbers.test: integer-length: -2^i, ...11100..00: (-2923003274661805836407369665432566039311865085952 expect 161)
PASS: numbers.test: integer-length: -2^i, ...11100..00: (-5846006549323611672814739330865132078623730171904 expect 162)
PASS: numbers.test: integer-length: -2^i, ...11100..00: (-11692013098647223345629478661730264157247460343808 expect 163)
PASS: numbers.test: integer-length: -2^i, ...11100..00: (-23384026197294446691258957323460528314494920687616 expect 164)
PASS: numbers.test: integer-length: -2^i, ...11100..00: (-46768052394588893382517914646921056628989841375232 expect 165)
PASS: numbers.test: integer-length: -2^i, ...11100..00: (-93536104789177786765035829293842113257979682750464 expect 166)
PASS: numbers.test: integer-length: -2^i, ...11100..00: (-187072209578355573530071658587684226515959365500928 expect 167)
PASS: numbers.test: integer-length: -2^i, ...11100..00: (-374144419156711147060143317175368453031918731001856 expect 168)
PASS: numbers.test: integer-length: -2^i, ...11100..00: (-748288838313422294120286634350736906063837462003712 expect 169)
PASS: numbers.test: integer-length: -2^i, ...11100..00: (-1496577676626844588240573268701473812127674924007424 expect 170)
PASS: numbers.test: integer-length: -2^i, ...11100..00: (-2993155353253689176481146537402947624255349848014848 expect 171)
PASS: numbers.test: integer-length: -2^i, ...11100..00: (-5986310706507378352962293074805895248510699696029696 expect 172)
PASS: numbers.test: integer-length: -2^i, ...11100..00: (-11972621413014756705924586149611790497021399392059392 expect 173)
PASS: numbers.test: integer-length: -2^i, ...11100..00: (-23945242826029513411849172299223580994042798784118784 expect 174)
PASS: numbers.test: integer-length: -2^i, ...11100..00: (-47890485652059026823698344598447161988085597568237568 expect 175)
PASS: numbers.test: integer-length: -2^i, ...11100..00: (-95780971304118053647396689196894323976171195136475136 expect 176)
PASS: numbers.test: integer-length: -2^i, ...11100..00: (-191561942608236107294793378393788647952342390272950272 expect 177)
PASS: numbers.test: integer-length: -2^i, ...11100..00: (-383123885216472214589586756787577295904684780545900544 expect 178)
PASS: numbers.test: integer-length: -2^i, ...11100..00: (-766247770432944429179173513575154591809369561091801088 expect 179)
PASS: numbers.test: integer-length: -2^i, ...11100..00: (-1532495540865888858358347027150309183618739122183602176 expect 180)
PASS: numbers.test: integer-length: -2^i, ...11100..00: (-3064991081731777716716694054300618367237478244367204352 expect 181)
PASS: numbers.test: integer-length: -2^i, ...11100..00: (-6129982163463555433433388108601236734474956488734408704 expect 182)
PASS: numbers.test: integer-length: -2^i, ...11100..00: (-12259964326927110866866776217202473468949912977468817408 expect 183)
PASS: numbers.test: integer-length: -2^i, ...11100..00: (-24519928653854221733733552434404946937899825954937634816 expect 184)
PASS: numbers.test: integer-length: -2^i, ...11100..00: (-49039857307708443467467104868809893875799651909875269632 expect 185)
PASS: numbers.test: integer-length: -2^i, ...11100..00: (-98079714615416886934934209737619787751599303819750539264 expect 186)
PASS: numbers.test: integer-length: -2^i, ...11100..00: (-196159429230833773869868419475239575503198607639501078528 expect 187)
PASS: numbers.test: integer-length: -2^i, ...11100..00: (-392318858461667547739736838950479151006397215279002157056 expect 188)
PASS: numbers.test: integer-length: -2^i, ...11100..00: (-784637716923335095479473677900958302012794430558004314112 expect 189)
PASS: numbers.test: integer-length: -2^i, ...11100..00: (-1569275433846670190958947355801916604025588861116008628224 expect 190)
PASS: numbers.test: integer-length: -2^i, ...11100..00: (-3138550867693340381917894711603833208051177722232017256448 expect 191)
PASS: numbers.test: integer-length: -2^i, ...11100..00: (-6277101735386680763835789423207666416102355444464034512896 expect 192)
PASS: numbers.test: integer-length: -2^i, ...11100..00: (-12554203470773361527671578846415332832204710888928069025792 expect 193)
PASS: numbers.test: integer-length: -2^i, ...11100..00: (-25108406941546723055343157692830665664409421777856138051584 expect 194)
PASS: numbers.test: integer-length: -2^i, ...11100..00: (-50216813883093446110686315385661331328818843555712276103168 expect 195)
PASS: numbers.test: integer-length: -2^i, ...11100..00: (-100433627766186892221372630771322662657637687111424552206336 expect 196)
PASS: numbers.test: integer-length: -2^i, ...11100..00: (-200867255532373784442745261542645325315275374222849104412672 expect 197)
PASS: numbers.test: integer-length: -2^i, ...11100..00: (-401734511064747568885490523085290650630550748445698208825344 expect 198)
PASS: numbers.test: integer-length: -2^i, ...11100..00: (-803469022129495137770981046170581301261101496891396417650688 expect 199)
PASS: numbers.test: integer-length: -2^i, ...11100..00: (-1606938044258990275541962092341162602522202993782792835301376 expect 200)
PASS: numbers.test: integer-length: -2^i, ...11100..00: (-3213876088517980551083924184682325205044405987565585670602752 expect 201)
PASS: numbers.test: integer-length: -2^i, ...11100..00: (-6427752177035961102167848369364650410088811975131171341205504 expect 202)
PASS: numbers.test: integer-length: -2^i, ...11100..00: (-12855504354071922204335696738729300820177623950262342682411008 expect 203)
PASS: numbers.test: integer-length: -2^i, ...11100..00: (-25711008708143844408671393477458601640355247900524685364822016 expect 204)
PASS: numbers.test: integer-length: -2^i, ...11100..00: (-51422017416287688817342786954917203280710495801049370729644032 expect 205)
PASS: numbers.test: integer-length: -2^i, ...11100..00: (-102844034832575377634685573909834406561420991602098741459288064 expect 206)
PASS: numbers.test: integer-length: -2^i, ...11100..00: (-205688069665150755269371147819668813122841983204197482918576128 expect 207)
PASS: numbers.test: integer-length: -2^i, ...11100..00: (-411376139330301510538742295639337626245683966408394965837152256 expect 208)
PASS: numbers.test: integer-length: -2^i, ...11100..00: (-822752278660603021077484591278675252491367932816789931674304512 expect 209)
PASS: numbers.test: integer-length: -2^i, ...11100..00: (-1645504557321206042154969182557350504982735865633579863348609024 expect 210)
PASS: numbers.test: integer-length: -2^i, ...11100..00: (-3291009114642412084309938365114701009965471731267159726697218048 expect 211)
PASS: numbers.test: integer-length: -2^i, ...11100..00: (-6582018229284824168619876730229402019930943462534319453394436096 expect 212)
PASS: numbers.test: integer-length: -2^i, ...11100..00: (-13164036458569648337239753460458804039861886925068638906788872192 expect 213)
PASS: numbers.test: integer-length: -2^i, ...11100..00: (-26328072917139296674479506920917608079723773850137277813577744384 expect 214)
PASS: numbers.test: integer-length: -2^i, ...11100..00: (-52656145834278593348959013841835216159447547700274555627155488768 expect 215)
PASS: numbers.test: integer-length: -2^i, ...11100..00: (-105312291668557186697918027683670432318895095400549111254310977536 expect 216)
PASS: numbers.test: integer-length: -2^i, ...11100..00: (-210624583337114373395836055367340864637790190801098222508621955072 expect 217)
PASS: numbers.test: integer-length: -2^i, ...11100..00: (-421249166674228746791672110734681729275580381602196445017243910144 expect 218)
PASS: numbers.test: integer-length: -2^i, ...11100..00: (-842498333348457493583344221469363458551160763204392890034487820288 expect 219)
PASS: numbers.test: integer-length: -2^i, ...11100..00: (-1684996666696914987166688442938726917102321526408785780068975640576 expect 220)
PASS: numbers.test: integer-length: -2^i, ...11100..00: (-3369993333393829974333376885877453834204643052817571560137951281152 expect 221)
PASS: numbers.test: integer-length: -2^i, ...11100..00: (-6739986666787659948666753771754907668409286105635143120275902562304 expect 222)
PASS: numbers.test: integer-length: -2^i, ...11100..00: (-13479973333575319897333507543509815336818572211270286240551805124608 expect 223)
PASS: numbers.test: integer-length: -2^i, ...11100..00: (-26959946667150639794667015087019630673637144422540572481103610249216 expect 224)
PASS: numbers.test: integer-length: -2^i, ...11100..00: (-53919893334301279589334030174039261347274288845081144962207220498432 expect 225)
PASS: numbers.test: integer-length: -2^i, ...11100..00: (-107839786668602559178668060348078522694548577690162289924414440996864 expect 226)
PASS: numbers.test: integer-length: -2^i, ...11100..00: (-215679573337205118357336120696157045389097155380324579848828881993728 expect 227)
PASS: numbers.test: integer-length: -2^i, ...11100..00: (-431359146674410236714672241392314090778194310760649159697657763987456 expect 228)
PASS: numbers.test: integer-length: -2^i, ...11100..00: (-862718293348820473429344482784628181556388621521298319395315527974912 expect 229)
PASS: numbers.test: integer-length: -2^i, ...11100..00: (-1725436586697640946858688965569256363112777243042596638790631055949824 expect 230)
PASS: numbers.test: integer-length: -2^i, ...11100..00: (-3450873173395281893717377931138512726225554486085193277581262111899648 expect 231)
PASS: numbers.test: integer-length: -2^i, ...11100..00: (-6901746346790563787434755862277025452451108972170386555162524223799296 expect 232)
PASS: numbers.test: integer-length: -2^i, ...11100..00: (-13803492693581127574869511724554050904902217944340773110325048447598592 expect 233)
PASS: numbers.test: integer-length: -2^i, ...11100..00: (-27606985387162255149739023449108101809804435888681546220650096895197184 expect 234)
PASS: numbers.test: integer-length: -2^i, ...11100..00: (-55213970774324510299478046898216203619608871777363092441300193790394368 expect 235)
PASS: numbers.test: integer-length: -2^i, ...11100..00: (-110427941548649020598956093796432407239217743554726184882600387580788736 expect 236)
PASS: numbers.test: integer-length: -2^i, ...11100..00: (-220855883097298041197912187592864814478435487109452369765200775161577472 expect 237)
PASS: numbers.test: integer-length: -2^i, ...11100..00: (-441711766194596082395824375185729628956870974218904739530401550323154944 expect 238)
PASS: numbers.test: integer-length: -2^i, ...11100..00: (-883423532389192164791648750371459257913741948437809479060803100646309888 expect 239)
PASS: numbers.test: integer-length: -2^i, ...11100..00: (-1766847064778384329583297500742918515827483896875618958121606201292619776 expect 240)
PASS: numbers.test: integer-length: -2^i, ...11100..00: (-3533694129556768659166595001485837031654967793751237916243212402585239552 expect 241)
PASS: numbers.test: integer-length: -2^i, ...11100..00: (-7067388259113537318333190002971674063309935587502475832486424805170479104 expect 242)
PASS: numbers.test: integer-length: -2^i, ...11100..00: (-14134776518227074636666380005943348126619871175004951664972849610340958208 expect 243)
PASS: numbers.test: integer-length: -2^i, ...11100..00: (-28269553036454149273332760011886696253239742350009903329945699220681916416 expect 244)
PASS: numbers.test: integer-length: -2^i, ...11100..00: (-56539106072908298546665520023773392506479484700019806659891398441363832832 expect 245)
PASS: numbers.test: integer-length: -2^i, ...11100..00: (-113078212145816597093331040047546785012958969400039613319782796882727665664 expect 246)
PASS: numbers.test: integer-length: -2^i, ...11100..00: (-226156424291633194186662080095093570025917938800079226639565593765455331328 expect 247)
PASS: numbers.test: integer-length: -2^i, ...11100..00: (-452312848583266388373324160190187140051835877600158453279131187530910662656 expect 248)
PASS: numbers.test: integer-length: -2^i, ...11100..00: (-904625697166532776746648320380374280103671755200316906558262375061821325312 expect 249)
PASS: numbers.test: integer-length: -2^i, ...11100..00: (-1809251394333065553493296640760748560207343510400633813116524750123642650624 expect 250)
PASS: numbers.test: integer-length: -2^i, ...11100..00: (-3618502788666131106986593281521497120414687020801267626233049500247285301248 expect 251)
PASS: numbers.test: integer-length: -2^i, ...11100..00: (-7237005577332262213973186563042994240829374041602535252466099000494570602496 expect 252)
PASS: numbers.test: integer-length: -2^i, ...11100..00: (-14474011154664524427946373126085988481658748083205070504932198000989141204992 expect 253)
PASS: numbers.test: integer-length: -2^i, ...11100..00: (-28948022309329048855892746252171976963317496166410141009864396001978282409984 expect 254)
PASS: numbers.test: integer-length: -2^i, ...11100..00: (-57896044618658097711785492504343953926634992332820282019728792003956564819968 expect 255)
PASS: numbers.test: integer-length: -2^i, ...11100..00: (-115792089237316195423570985008687907853269984665640564039457584007913129639936 expect 256)
PASS: numbers.test: integer-length: -2^i+1 ...11100..01: -3
PASS: numbers.test: integer-length: -2^i+1 ...11100..01: -7
PASS: numbers.test: integer-length: -2^i+1 ...11100..01: -15
PASS: numbers.test: integer-length: -2^i+1 ...11100..01: -31
PASS: numbers.test: integer-length: -2^i+1 ...11100..01: -63
PASS: numbers.test: integer-length: -2^i+1 ...11100..01: -127
PASS: numbers.test: integer-length: -2^i+1 ...11100..01: -255
PASS: numbers.test: integer-length: -2^i+1 ...11100..01: -511
PASS: numbers.test: integer-length: -2^i+1 ...11100..01: -1023
PASS: numbers.test: integer-length: -2^i+1 ...11100..01: -2047
PASS: numbers.test: integer-length: -2^i+1 ...11100..01: -4095
PASS: numbers.test: integer-length: -2^i+1 ...11100..01: -8191
PASS: numbers.test: integer-length: -2^i+1 ...11100..01: -16383
PASS: numbers.test: integer-length: -2^i+1 ...11100..01: -32767
PASS: numbers.test: integer-length: -2^i+1 ...11100..01: -65535
PASS: numbers.test: integer-length: -2^i+1 ...11100..01: -131071
PASS: numbers.test: integer-length: -2^i+1 ...11100..01: -262143
PASS: numbers.test: integer-length: -2^i+1 ...11100..01: -524287
PASS: numbers.test: integer-length: -2^i+1 ...11100..01: -1048575
PASS: numbers.test: integer-length: -2^i+1 ...11100..01: -2097151
PASS: numbers.test: integer-length: -2^i+1 ...11100..01: -4194303
PASS: numbers.test: integer-length: -2^i+1 ...11100..01: -8388607
PASS: numbers.test: integer-length: -2^i+1 ...11100..01: -16777215
PASS: numbers.test: integer-length: -2^i+1 ...11100..01: -33554431
PASS: numbers.test: integer-length: -2^i+1 ...11100..01: -67108863
PASS: numbers.test: integer-length: -2^i+1 ...11100..01: -134217727
PASS: numbers.test: integer-length: -2^i+1 ...11100..01: -268435455
PASS: numbers.test: integer-length: -2^i+1 ...11100..01: -536870911
PASS: numbers.test: integer-length: -2^i+1 ...11100..01: -1073741823
PASS: numbers.test: integer-length: -2^i+1 ...11100..01: -2147483647
PASS: numbers.test: integer-length: -2^i+1 ...11100..01: -4294967295
PASS: numbers.test: integer-length: -2^i+1 ...11100..01: -8589934591
PASS: numbers.test: integer-length: -2^i+1 ...11100..01: -17179869183
PASS: numbers.test: integer-length: -2^i+1 ...11100..01: -34359738367
PASS: numbers.test: integer-length: -2^i+1 ...11100..01: -68719476735
PASS: numbers.test: integer-length: -2^i+1 ...11100..01: -137438953471
PASS: numbers.test: integer-length: -2^i+1 ...11100..01: -274877906943
PASS: numbers.test: integer-length: -2^i+1 ...11100..01: -549755813887
PASS: numbers.test: integer-length: -2^i+1 ...11100..01: -1099511627775
PASS: numbers.test: integer-length: -2^i+1 ...11100..01: -2199023255551
PASS: numbers.test: integer-length: -2^i+1 ...11100..01: -4398046511103
PASS: numbers.test: integer-length: -2^i+1 ...11100..01: -8796093022207
PASS: numbers.test: integer-length: -2^i+1 ...11100..01: -17592186044415
PASS: numbers.test: integer-length: -2^i+1 ...11100..01: -35184372088831
PASS: numbers.test: integer-length: -2^i+1 ...11100..01: -70368744177663
PASS: numbers.test: integer-length: -2^i+1 ...11100..01: -140737488355327
PASS: numbers.test: integer-length: -2^i+1 ...11100..01: -281474976710655
PASS: numbers.test: integer-length: -2^i+1 ...11100..01: -562949953421311
PASS: numbers.test: integer-length: -2^i+1 ...11100..01: -1125899906842623
PASS: numbers.test: integer-length: -2^i+1 ...11100..01: -2251799813685247
PASS: numbers.test: integer-length: -2^i+1 ...11100..01: -4503599627370495
PASS: numbers.test: integer-length: -2^i+1 ...11100..01: -9007199254740991
PASS: numbers.test: integer-length: -2^i+1 ...11100..01: -18014398509481983
PASS: numbers.test: integer-length: -2^i+1 ...11100..01: -36028797018963967
PASS: numbers.test: integer-length: -2^i+1 ...11100..01: -72057594037927935
PASS: numbers.test: integer-length: -2^i+1 ...11100..01: -144115188075855871
PASS: numbers.test: integer-length: -2^i+1 ...11100..01: -288230376151711743
PASS: numbers.test: integer-length: -2^i+1 ...11100..01: -576460752303423487
PASS: numbers.test: integer-length: -2^i+1 ...11100..01: -1152921504606846975
PASS: numbers.test: integer-length: -2^i+1 ...11100..01: -2305843009213693951
PASS: numbers.test: integer-length: -2^i+1 ...11100..01: -4611686018427387903
PASS: numbers.test: integer-length: -2^i+1 ...11100..01: -9223372036854775807
PASS: numbers.test: integer-length: -2^i+1 ...11100..01: -18446744073709551615
PASS: numbers.test: integer-length: -2^i+1 ...11100..01: -36893488147419103231
PASS: numbers.test: integer-length: -2^i+1 ...11100..01: -73786976294838206463
PASS: numbers.test: integer-length: -2^i+1 ...11100..01: -147573952589676412927
PASS: numbers.test: integer-length: -2^i+1 ...11100..01: -295147905179352825855
PASS: numbers.test: integer-length: -2^i+1 ...11100..01: -590295810358705651711
PASS: numbers.test: integer-length: -2^i+1 ...11100..01: -1180591620717411303423
PASS: numbers.test: integer-length: -2^i+1 ...11100..01: -2361183241434822606847
PASS: numbers.test: integer-length: -2^i+1 ...11100..01: -4722366482869645213695
PASS: numbers.test: integer-length: -2^i+1 ...11100..01: -9444732965739290427391
PASS: numbers.test: integer-length: -2^i+1 ...11100..01: -18889465931478580854783
PASS: numbers.test: integer-length: -2^i+1 ...11100..01: -37778931862957161709567
PASS: numbers.test: integer-length: -2^i+1 ...11100..01: -75557863725914323419135
PASS: numbers.test: integer-length: -2^i+1 ...11100..01: -151115727451828646838271
PASS: numbers.test: integer-length: -2^i+1 ...11100..01: -302231454903657293676543
PASS: numbers.test: integer-length: -2^i+1 ...11100..01: -604462909807314587353087
PASS: numbers.test: integer-length: -2^i+1 ...11100..01: -1208925819614629174706175
PASS: numbers.test: integer-length: -2^i+1 ...11100..01: -2417851639229258349412351
PASS: numbers.test: integer-length: -2^i+1 ...11100..01: -4835703278458516698824703
PASS: numbers.test: integer-length: -2^i+1 ...11100..01: -9671406556917033397649407
PASS: numbers.test: integer-length: -2^i+1 ...11100..01: -19342813113834066795298815
PASS: numbers.test: integer-length: -2^i+1 ...11100..01: -38685626227668133590597631
PASS: numbers.test: integer-length: -2^i+1 ...11100..01: -77371252455336267181195263
PASS: numbers.test: integer-length: -2^i+1 ...11100..01: -154742504910672534362390527
PASS: numbers.test: integer-length: -2^i+1 ...11100..01: -309485009821345068724781055
PASS: numbers.test: integer-length: -2^i+1 ...11100..01: -618970019642690137449562111
PASS: numbers.test: integer-length: -2^i+1 ...11100..01: -1237940039285380274899124223
PASS: numbers.test: integer-length: -2^i+1 ...11100..01: -2475880078570760549798248447
PASS: numbers.test: integer-length: -2^i+1 ...11100..01: -4951760157141521099596496895
PASS: numbers.test: integer-length: -2^i+1 ...11100..01: -9903520314283042199192993791
PASS: numbers.test: integer-length: -2^i+1 ...11100..01: -19807040628566084398385987583
PASS: numbers.test: integer-length: -2^i+1 ...11100..01: -39614081257132168796771975167
PASS: numbers.test: integer-length: -2^i+1 ...11100..01: -79228162514264337593543950335
PASS: numbers.test: integer-length: -2^i+1 ...11100..01: -158456325028528675187087900671
PASS: numbers.test: integer-length: -2^i+1 ...11100..01: -316912650057057350374175801343
PASS: numbers.test: integer-length: -2^i+1 ...11100..01: -633825300114114700748351602687
PASS: numbers.test: integer-length: -2^i+1 ...11100..01: -1267650600228229401496703205375
PASS: numbers.test: integer-length: -2^i+1 ...11100..01: -2535301200456458802993406410751
PASS: numbers.test: integer-length: -2^i+1 ...11100..01: -5070602400912917605986812821503
PASS: numbers.test: integer-length: -2^i+1 ...11100..01: -10141204801825835211973625643007
PASS: numbers.test: integer-length: -2^i+1 ...11100..01: -20282409603651670423947251286015
PASS: numbers.test: integer-length: -2^i+1 ...11100..01: -40564819207303340847894502572031
PASS: numbers.test: integer-length: -2^i+1 ...11100..01: -81129638414606681695789005144063
PASS: numbers.test: integer-length: -2^i+1 ...11100..01: -162259276829213363391578010288127
PASS: numbers.test: integer-length: -2^i+1 ...11100..01: -324518553658426726783156020576255
PASS: numbers.test: integer-length: -2^i+1 ...11100..01: -649037107316853453566312041152511
PASS: numbers.test: integer-length: -2^i+1 ...11100..01: -1298074214633706907132624082305023
PASS: numbers.test: integer-length: -2^i+1 ...11100..01: -2596148429267413814265248164610047
PASS: numbers.test: integer-length: -2^i+1 ...11100..01: -5192296858534827628530496329220095
PASS: numbers.test: integer-length: -2^i+1 ...11100..01: -10384593717069655257060992658440191
PASS: numbers.test: integer-length: -2^i+1 ...11100..01: -20769187434139310514121985316880383
PASS: numbers.test: integer-length: -2^i+1 ...11100..01: -41538374868278621028243970633760767
PASS: numbers.test: integer-length: -2^i+1 ...11100..01: -83076749736557242056487941267521535
PASS: numbers.test: integer-length: -2^i+1 ...11100..01: -166153499473114484112975882535043071
PASS: numbers.test: integer-length: -2^i+1 ...11100..01: -332306998946228968225951765070086143
PASS: numbers.test: integer-length: -2^i+1 ...11100..01: -664613997892457936451903530140172287
PASS: numbers.test: integer-length: -2^i+1 ...11100..01: -1329227995784915872903807060280344575
PASS: numbers.test: integer-length: -2^i+1 ...11100..01: -2658455991569831745807614120560689151
PASS: numbers.test: integer-length: -2^i+1 ...11100..01: -5316911983139663491615228241121378303
PASS: numbers.test: integer-length: -2^i+1 ...11100..01: -10633823966279326983230456482242756607
PASS: numbers.test: integer-length: -2^i+1 ...11100..01: -21267647932558653966460912964485513215
PASS: numbers.test: integer-length: -2^i+1 ...11100..01: -42535295865117307932921825928971026431
PASS: numbers.test: integer-length: -2^i+1 ...11100..01: -85070591730234615865843651857942052863
PASS: numbers.test: integer-length: -2^i+1 ...11100..01: -170141183460469231731687303715884105727
PASS: numbers.test: integer-length: -2^i+1 ...11100..01: -340282366920938463463374607431768211455
PASS: numbers.test: integer-length: -2^i+1 ...11100..01: -680564733841876926926749214863536422911
PASS: numbers.test: integer-length: -2^i+1 ...11100..01: -1361129467683753853853498429727072845823
PASS: numbers.test: integer-length: -2^i+1 ...11100..01: -2722258935367507707706996859454145691647
PASS: numbers.test: integer-length: -2^i+1 ...11100..01: -5444517870735015415413993718908291383295
PASS: numbers.test: integer-length: -2^i+1 ...11100..01: -10889035741470030830827987437816582766591
PASS: numbers.test: integer-length: -2^i+1 ...11100..01: -21778071482940061661655974875633165533183
PASS: numbers.test: integer-length: -2^i+1 ...11100..01: -43556142965880123323311949751266331066367
PASS: numbers.test: integer-length: -2^i+1 ...11100..01: -87112285931760246646623899502532662132735
PASS: numbers.test: integer-length: -2^i+1 ...11100..01: -174224571863520493293247799005065324265471
PASS: numbers.test: integer-length: -2^i+1 ...11100..01: -348449143727040986586495598010130648530943
PASS: numbers.test: integer-length: -2^i+1 ...11100..01: -696898287454081973172991196020261297061887
PASS: numbers.test: integer-length: -2^i+1 ...11100..01: -1393796574908163946345982392040522594123775
PASS: numbers.test: integer-length: -2^i+1 ...11100..01: -2787593149816327892691964784081045188247551
PASS: numbers.test: integer-length: -2^i+1 ...11100..01: -5575186299632655785383929568162090376495103
PASS: numbers.test: integer-length: -2^i+1 ...11100..01: -11150372599265311570767859136324180752990207
PASS: numbers.test: integer-length: -2^i+1 ...11100..01: -22300745198530623141535718272648361505980415
PASS: numbers.test: integer-length: -2^i+1 ...11100..01: -44601490397061246283071436545296723011960831
PASS: numbers.test: integer-length: -2^i+1 ...11100..01: -89202980794122492566142873090593446023921663
PASS: numbers.test: integer-length: -2^i+1 ...11100..01: -178405961588244985132285746181186892047843327
PASS: numbers.test: integer-length: -2^i+1 ...11100..01: -356811923176489970264571492362373784095686655
PASS: numbers.test: integer-length: -2^i+1 ...11100..01: -713623846352979940529142984724747568191373311
PASS: numbers.test: integer-length: -2^i+1 ...11100..01: -1427247692705959881058285969449495136382746623
PASS: numbers.test: integer-length: -2^i+1 ...11100..01: -2854495385411919762116571938898990272765493247
PASS: numbers.test: integer-length: -2^i+1 ...11100..01: -5708990770823839524233143877797980545530986495
PASS: numbers.test: integer-length: -2^i+1 ...11100..01: -11417981541647679048466287755595961091061972991
PASS: numbers.test: integer-length: -2^i+1 ...11100..01: -22835963083295358096932575511191922182123945983
PASS: numbers.test: integer-length: -2^i+1 ...11100..01: -45671926166590716193865151022383844364247891967
PASS: numbers.test: integer-length: -2^i+1 ...11100..01: -91343852333181432387730302044767688728495783935
PASS: numbers.test: integer-length: -2^i+1 ...11100..01: -182687704666362864775460604089535377456991567871
PASS: numbers.test: integer-length: -2^i+1 ...11100..01: -365375409332725729550921208179070754913983135743
PASS: numbers.test: integer-length: -2^i+1 ...11100..01: -730750818665451459101842416358141509827966271487
PASS: numbers.test: integer-length: -2^i+1 ...11100..01: -1461501637330902918203684832716283019655932542975
PASS: numbers.test: integer-length: -2^i+1 ...11100..01: -2923003274661805836407369665432566039311865085951
PASS: numbers.test: integer-length: -2^i+1 ...11100..01: -5846006549323611672814739330865132078623730171903
PASS: numbers.test: integer-length: -2^i+1 ...11100..01: -11692013098647223345629478661730264157247460343807
PASS: numbers.test: integer-length: -2^i+1 ...11100..01: -23384026197294446691258957323460528314494920687615
PASS: numbers.test: integer-length: -2^i+1 ...11100..01: -46768052394588893382517914646921056628989841375231
PASS: numbers.test: integer-length: -2^i+1 ...11100..01: -93536104789177786765035829293842113257979682750463
PASS: numbers.test: integer-length: -2^i+1 ...11100..01: -187072209578355573530071658587684226515959365500927
PASS: numbers.test: integer-length: -2^i+1 ...11100..01: -374144419156711147060143317175368453031918731001855
PASS: numbers.test: integer-length: -2^i+1 ...11100..01: -748288838313422294120286634350736906063837462003711
PASS: numbers.test: integer-length: -2^i+1 ...11100..01: -1496577676626844588240573268701473812127674924007423
PASS: numbers.test: integer-length: -2^i+1 ...11100..01: -2993155353253689176481146537402947624255349848014847
PASS: numbers.test: integer-length: -2^i+1 ...11100..01: -5986310706507378352962293074805895248510699696029695
PASS: numbers.test: integer-length: -2^i+1 ...11100..01: -11972621413014756705924586149611790497021399392059391
PASS: numbers.test: integer-length: -2^i+1 ...11100..01: -23945242826029513411849172299223580994042798784118783
PASS: numbers.test: integer-length: -2^i+1 ...11100..01: -47890485652059026823698344598447161988085597568237567
PASS: numbers.test: integer-length: -2^i+1 ...11100..01: -95780971304118053647396689196894323976171195136475135
PASS: numbers.test: integer-length: -2^i+1 ...11100..01: -191561942608236107294793378393788647952342390272950271
PASS: numbers.test: integer-length: -2^i+1 ...11100..01: -383123885216472214589586756787577295904684780545900543
PASS: numbers.test: integer-length: -2^i+1 ...11100..01: -766247770432944429179173513575154591809369561091801087
PASS: numbers.test: integer-length: -2^i+1 ...11100..01: -1532495540865888858358347027150309183618739122183602175
PASS: numbers.test: integer-length: -2^i+1 ...11100..01: -3064991081731777716716694054300618367237478244367204351
PASS: numbers.test: integer-length: -2^i+1 ...11100..01: -6129982163463555433433388108601236734474956488734408703
PASS: numbers.test: integer-length: -2^i+1 ...11100..01: -12259964326927110866866776217202473468949912977468817407
PASS: numbers.test: integer-length: -2^i+1 ...11100..01: -24519928653854221733733552434404946937899825954937634815
PASS: numbers.test: integer-length: -2^i+1 ...11100..01: -49039857307708443467467104868809893875799651909875269631
PASS: numbers.test: integer-length: -2^i+1 ...11100..01: -98079714615416886934934209737619787751599303819750539263
PASS: numbers.test: integer-length: -2^i+1 ...11100..01: -196159429230833773869868419475239575503198607639501078527
PASS: numbers.test: integer-length: -2^i+1 ...11100..01: -392318858461667547739736838950479151006397215279002157055
PASS: numbers.test: integer-length: -2^i+1 ...11100..01: -784637716923335095479473677900958302012794430558004314111
PASS: numbers.test: integer-length: -2^i+1 ...11100..01: -1569275433846670190958947355801916604025588861116008628223
PASS: numbers.test: integer-length: -2^i+1 ...11100..01: -3138550867693340381917894711603833208051177722232017256447
PASS: numbers.test: integer-length: -2^i+1 ...11100..01: -6277101735386680763835789423207666416102355444464034512895
PASS: numbers.test: integer-length: -2^i+1 ...11100..01: -12554203470773361527671578846415332832204710888928069025791
PASS: numbers.test: integer-length: -2^i+1 ...11100..01: -25108406941546723055343157692830665664409421777856138051583
PASS: numbers.test: integer-length: -2^i+1 ...11100..01: -50216813883093446110686315385661331328818843555712276103167
PASS: numbers.test: integer-length: -2^i+1 ...11100..01: -100433627766186892221372630771322662657637687111424552206335
PASS: numbers.test: integer-length: -2^i+1 ...11100..01: -200867255532373784442745261542645325315275374222849104412671
PASS: numbers.test: integer-length: -2^i+1 ...11100..01: -401734511064747568885490523085290650630550748445698208825343
PASS: numbers.test: integer-length: -2^i+1 ...11100..01: -803469022129495137770981046170581301261101496891396417650687
PASS: numbers.test: integer-length: -2^i+1 ...11100..01: -1606938044258990275541962092341162602522202993782792835301375
PASS: numbers.test: integer-length: -2^i+1 ...11100..01: -3213876088517980551083924184682325205044405987565585670602751
PASS: numbers.test: integer-length: -2^i+1 ...11100..01: -6427752177035961102167848369364650410088811975131171341205503
PASS: numbers.test: integer-length: -2^i+1 ...11100..01: -12855504354071922204335696738729300820177623950262342682411007
PASS: numbers.test: integer-length: -2^i+1 ...11100..01: -25711008708143844408671393477458601640355247900524685364822015
PASS: numbers.test: integer-length: -2^i+1 ...11100..01: -51422017416287688817342786954917203280710495801049370729644031
PASS: numbers.test: integer-length: -2^i+1 ...11100..01: -102844034832575377634685573909834406561420991602098741459288063
PASS: numbers.test: integer-length: -2^i+1 ...11100..01: -205688069665150755269371147819668813122841983204197482918576127
PASS: numbers.test: integer-length: -2^i+1 ...11100..01: -411376139330301510538742295639337626245683966408394965837152255
PASS: numbers.test: integer-length: -2^i+1 ...11100..01: -822752278660603021077484591278675252491367932816789931674304511
PASS: numbers.test: integer-length: -2^i+1 ...11100..01: -1645504557321206042154969182557350504982735865633579863348609023
PASS: numbers.test: integer-length: -2^i+1 ...11100..01: -3291009114642412084309938365114701009965471731267159726697218047
PASS: numbers.test: integer-length: -2^i+1 ...11100..01: -6582018229284824168619876730229402019930943462534319453394436095
PASS: numbers.test: integer-length: -2^i+1 ...11100..01: -13164036458569648337239753460458804039861886925068638906788872191
PASS: numbers.test: integer-length: -2^i+1 ...11100..01: -26328072917139296674479506920917608079723773850137277813577744383
PASS: numbers.test: integer-length: -2^i+1 ...11100..01: -52656145834278593348959013841835216159447547700274555627155488767
PASS: numbers.test: integer-length: -2^i+1 ...11100..01: -105312291668557186697918027683670432318895095400549111254310977535
PASS: numbers.test: integer-length: -2^i+1 ...11100..01: -210624583337114373395836055367340864637790190801098222508621955071
PASS: numbers.test: integer-length: -2^i+1 ...11100..01: -421249166674228746791672110734681729275580381602196445017243910143
PASS: numbers.test: integer-length: -2^i+1 ...11100..01: -842498333348457493583344221469363458551160763204392890034487820287
PASS: numbers.test: integer-length: -2^i+1 ...11100..01: -1684996666696914987166688442938726917102321526408785780068975640575
PASS: numbers.test: integer-length: -2^i+1 ...11100..01: -3369993333393829974333376885877453834204643052817571560137951281151
PASS: numbers.test: integer-length: -2^i+1 ...11100..01: -6739986666787659948666753771754907668409286105635143120275902562303
PASS: numbers.test: integer-length: -2^i+1 ...11100..01: -13479973333575319897333507543509815336818572211270286240551805124607
PASS: numbers.test: integer-length: -2^i+1 ...11100..01: -26959946667150639794667015087019630673637144422540572481103610249215
PASS: numbers.test: integer-length: -2^i+1 ...11100..01: -53919893334301279589334030174039261347274288845081144962207220498431
PASS: numbers.test: integer-length: -2^i+1 ...11100..01: -107839786668602559178668060348078522694548577690162289924414440996863
PASS: numbers.test: integer-length: -2^i+1 ...11100..01: -215679573337205118357336120696157045389097155380324579848828881993727
PASS: numbers.test: integer-length: -2^i+1 ...11100..01: -431359146674410236714672241392314090778194310760649159697657763987455
PASS: numbers.test: integer-length: -2^i+1 ...11100..01: -862718293348820473429344482784628181556388621521298319395315527974911
PASS: numbers.test: integer-length: -2^i+1 ...11100..01: -1725436586697640946858688965569256363112777243042596638790631055949823
PASS: numbers.test: integer-length: -2^i+1 ...11100..01: -3450873173395281893717377931138512726225554486085193277581262111899647
PASS: numbers.test: integer-length: -2^i+1 ...11100..01: -6901746346790563787434755862277025452451108972170386555162524223799295
PASS: numbers.test: integer-length: -2^i+1 ...11100..01: -13803492693581127574869511724554050904902217944340773110325048447598591
PASS: numbers.test: integer-length: -2^i+1 ...11100..01: -27606985387162255149739023449108101809804435888681546220650096895197183
PASS: numbers.test: integer-length: -2^i+1 ...11100..01: -55213970774324510299478046898216203619608871777363092441300193790394367
PASS: numbers.test: integer-length: -2^i+1 ...11100..01: -110427941548649020598956093796432407239217743554726184882600387580788735
PASS: numbers.test: integer-length: -2^i+1 ...11100..01: -220855883097298041197912187592864814478435487109452369765200775161577471
PASS: numbers.test: integer-length: -2^i+1 ...11100..01: -441711766194596082395824375185729628956870974218904739530401550323154943
PASS: numbers.test: integer-length: -2^i+1 ...11100..01: -883423532389192164791648750371459257913741948437809479060803100646309887
PASS: numbers.test: integer-length: -2^i+1 ...11100..01: -1766847064778384329583297500742918515827483896875618958121606201292619775
PASS: numbers.test: integer-length: -2^i+1 ...11100..01: -3533694129556768659166595001485837031654967793751237916243212402585239551
PASS: numbers.test: integer-length: -2^i+1 ...11100..01: -7067388259113537318333190002971674063309935587502475832486424805170479103
PASS: numbers.test: integer-length: -2^i+1 ...11100..01: -14134776518227074636666380005943348126619871175004951664972849610340958207
PASS: numbers.test: integer-length: -2^i+1 ...11100..01: -28269553036454149273332760011886696253239742350009903329945699220681916415
PASS: numbers.test: integer-length: -2^i+1 ...11100..01: -56539106072908298546665520023773392506479484700019806659891398441363832831
PASS: numbers.test: integer-length: -2^i+1 ...11100..01: -113078212145816597093331040047546785012958969400039613319782796882727665663
PASS: numbers.test: integer-length: -2^i+1 ...11100..01: -226156424291633194186662080095093570025917938800079226639565593765455331327
PASS: numbers.test: integer-length: -2^i+1 ...11100..01: -452312848583266388373324160190187140051835877600158453279131187530910662655
PASS: numbers.test: integer-length: -2^i+1 ...11100..01: -904625697166532776746648320380374280103671755200316906558262375061821325311
PASS: numbers.test: integer-length: -2^i+1 ...11100..01: -1809251394333065553493296640760748560207343510400633813116524750123642650623
PASS: numbers.test: integer-length: -2^i+1 ...11100..01: -3618502788666131106986593281521497120414687020801267626233049500247285301247
PASS: numbers.test: integer-length: -2^i+1 ...11100..01: -7237005577332262213973186563042994240829374041602535252466099000494570602495
PASS: numbers.test: integer-length: -2^i+1 ...11100..01: -14474011154664524427946373126085988481658748083205070504932198000989141204991
PASS: numbers.test: integer-length: -2^i+1 ...11100..01: -28948022309329048855892746252171976963317496166410141009864396001978282409983
PASS: numbers.test: integer-length: -2^i+1 ...11100..01: -57896044618658097711785492504343953926634992332820282019728792003956564819967
PASS: numbers.test: integer-length: -2^i+1 ...11100..01: -115792089237316195423570985008687907853269984665640564039457584007913129639935
PASS: numbers.test: integer-length: -2^i-1 ...111011..11: -2
PASS: numbers.test: integer-length: -2^i-1 ...111011..11: -3
PASS: numbers.test: integer-length: -2^i-1 ...111011..11: -5
PASS: numbers.test: integer-length: -2^i-1 ...111011..11: -9
PASS: numbers.test: integer-length: -2^i-1 ...111011..11: -17
PASS: numbers.test: integer-length: -2^i-1 ...111011..11: -33
PASS: numbers.test: integer-length: -2^i-1 ...111011..11: -65
PASS: numbers.test: integer-length: -2^i-1 ...111011..11: -129
PASS: numbers.test: integer-length: -2^i-1 ...111011..11: -257
PASS: numbers.test: integer-length: -2^i-1 ...111011..11: -513
PASS: numbers.test: integer-length: -2^i-1 ...111011..11: -1025
PASS: numbers.test: integer-length: -2^i-1 ...111011..11: -2049
PASS: numbers.test: integer-length: -2^i-1 ...111011..11: -4097
PASS: numbers.test: integer-length: -2^i-1 ...111011..11: -8193
PASS: numbers.test: integer-length: -2^i-1 ...111011..11: -16385
PASS: numbers.test: integer-length: -2^i-1 ...111011..11: -32769
PASS: numbers.test: integer-length: -2^i-1 ...111011..11: -65537
PASS: numbers.test: integer-length: -2^i-1 ...111011..11: -131073
PASS: numbers.test: integer-length: -2^i-1 ...111011..11: -262145
PASS: numbers.test: integer-length: -2^i-1 ...111011..11: -524289
PASS: numbers.test: integer-length: -2^i-1 ...111011..11: -1048577
PASS: numbers.test: integer-length: -2^i-1 ...111011..11: -2097153
PASS: numbers.test: integer-length: -2^i-1 ...111011..11: -4194305
PASS: numbers.test: integer-length: -2^i-1 ...111011..11: -8388609
PASS: numbers.test: integer-length: -2^i-1 ...111011..11: -16777217
PASS: numbers.test: integer-length: -2^i-1 ...111011..11: -33554433
PASS: numbers.test: integer-length: -2^i-1 ...111011..11: -67108865
PASS: numbers.test: integer-length: -2^i-1 ...111011..11: -134217729
PASS: numbers.test: integer-length: -2^i-1 ...111011..11: -268435457
PASS: numbers.test: integer-length: -2^i-1 ...111011..11: -536870913
PASS: numbers.test: integer-length: -2^i-1 ...111011..11: -1073741825
PASS: numbers.test: integer-length: -2^i-1 ...111011..11: -2147483649
PASS: numbers.test: integer-length: -2^i-1 ...111011..11: -4294967297
PASS: numbers.test: integer-length: -2^i-1 ...111011..11: -8589934593
PASS: numbers.test: integer-length: -2^i-1 ...111011..11: -17179869185
PASS: numbers.test: integer-length: -2^i-1 ...111011..11: -34359738369
PASS: numbers.test: integer-length: -2^i-1 ...111011..11: -68719476737
PASS: numbers.test: integer-length: -2^i-1 ...111011..11: -137438953473
PASS: numbers.test: integer-length: -2^i-1 ...111011..11: -274877906945
PASS: numbers.test: integer-length: -2^i-1 ...111011..11: -549755813889
PASS: numbers.test: integer-length: -2^i-1 ...111011..11: -1099511627777
PASS: numbers.test: integer-length: -2^i-1 ...111011..11: -2199023255553
PASS: numbers.test: integer-length: -2^i-1 ...111011..11: -4398046511105
PASS: numbers.test: integer-length: -2^i-1 ...111011..11: -8796093022209
PASS: numbers.test: integer-length: -2^i-1 ...111011..11: -17592186044417
PASS: numbers.test: integer-length: -2^i-1 ...111011..11: -35184372088833
PASS: numbers.test: integer-length: -2^i-1 ...111011..11: -70368744177665
PASS: numbers.test: integer-length: -2^i-1 ...111011..11: -140737488355329
PASS: numbers.test: integer-length: -2^i-1 ...111011..11: -281474976710657
PASS: numbers.test: integer-length: -2^i-1 ...111011..11: -562949953421313
PASS: numbers.test: integer-length: -2^i-1 ...111011..11: -1125899906842625
PASS: numbers.test: integer-length: -2^i-1 ...111011..11: -2251799813685249
PASS: numbers.test: integer-length: -2^i-1 ...111011..11: -4503599627370497
PASS: numbers.test: integer-length: -2^i-1 ...111011..11: -9007199254740993
PASS: numbers.test: integer-length: -2^i-1 ...111011..11: -18014398509481985
PASS: numbers.test: integer-length: -2^i-1 ...111011..11: -36028797018963969
PASS: numbers.test: integer-length: -2^i-1 ...111011..11: -72057594037927937
PASS: numbers.test: integer-length: -2^i-1 ...111011..11: -144115188075855873
PASS: numbers.test: integer-length: -2^i-1 ...111011..11: -288230376151711745
PASS: numbers.test: integer-length: -2^i-1 ...111011..11: -576460752303423489
PASS: numbers.test: integer-length: -2^i-1 ...111011..11: -1152921504606846977
PASS: numbers.test: integer-length: -2^i-1 ...111011..11: -2305843009213693953
PASS: numbers.test: integer-length: -2^i-1 ...111011..11: -4611686018427387905
PASS: numbers.test: integer-length: -2^i-1 ...111011..11: -9223372036854775809
PASS: numbers.test: integer-length: -2^i-1 ...111011..11: -18446744073709551617
PASS: numbers.test: integer-length: -2^i-1 ...111011..11: -36893488147419103233
PASS: numbers.test: integer-length: -2^i-1 ...111011..11: -73786976294838206465
PASS: numbers.test: integer-length: -2^i-1 ...111011..11: -147573952589676412929
PASS: numbers.test: integer-length: -2^i-1 ...111011..11: -295147905179352825857
PASS: numbers.test: integer-length: -2^i-1 ...111011..11: -590295810358705651713
PASS: numbers.test: integer-length: -2^i-1 ...111011..11: -1180591620717411303425
PASS: numbers.test: integer-length: -2^i-1 ...111011..11: -2361183241434822606849
PASS: numbers.test: integer-length: -2^i-1 ...111011..11: -4722366482869645213697
PASS: numbers.test: integer-length: -2^i-1 ...111011..11: -9444732965739290427393
PASS: numbers.test: integer-length: -2^i-1 ...111011..11: -18889465931478580854785
PASS: numbers.test: integer-length: -2^i-1 ...111011..11: -37778931862957161709569
PASS: numbers.test: integer-length: -2^i-1 ...111011..11: -75557863725914323419137
PASS: numbers.test: integer-length: -2^i-1 ...111011..11: -151115727451828646838273
PASS: numbers.test: integer-length: -2^i-1 ...111011..11: -302231454903657293676545
PASS: numbers.test: integer-length: -2^i-1 ...111011..11: -604462909807314587353089
PASS: numbers.test: integer-length: -2^i-1 ...111011..11: -1208925819614629174706177
PASS: numbers.test: integer-length: -2^i-1 ...111011..11: -2417851639229258349412353
PASS: numbers.test: integer-length: -2^i-1 ...111011..11: -4835703278458516698824705
PASS: numbers.test: integer-length: -2^i-1 ...111011..11: -9671406556917033397649409
PASS: numbers.test: integer-length: -2^i-1 ...111011..11: -19342813113834066795298817
PASS: numbers.test: integer-length: -2^i-1 ...111011..11: -38685626227668133590597633
PASS: numbers.test: integer-length: -2^i-1 ...111011..11: -77371252455336267181195265
PASS: numbers.test: integer-length: -2^i-1 ...111011..11: -154742504910672534362390529
PASS: numbers.test: integer-length: -2^i-1 ...111011..11: -309485009821345068724781057
PASS: numbers.test: integer-length: -2^i-1 ...111011..11: -618970019642690137449562113
PASS: numbers.test: integer-length: -2^i-1 ...111011..11: -1237940039285380274899124225
PASS: numbers.test: integer-length: -2^i-1 ...111011..11: -2475880078570760549798248449
PASS: numbers.test: integer-length: -2^i-1 ...111011..11: -4951760157141521099596496897
PASS: numbers.test: integer-length: -2^i-1 ...111011..11: -9903520314283042199192993793
PASS: numbers.test: integer-length: -2^i-1 ...111011..11: -19807040628566084398385987585
PASS: numbers.test: integer-length: -2^i-1 ...111011..11: -39614081257132168796771975169
PASS: numbers.test: integer-length: -2^i-1 ...111011..11: -79228162514264337593543950337
PASS: numbers.test: integer-length: -2^i-1 ...111011..11: -158456325028528675187087900673
PASS: numbers.test: integer-length: -2^i-1 ...111011..11: -316912650057057350374175801345
PASS: numbers.test: integer-length: -2^i-1 ...111011..11: -633825300114114700748351602689
PASS: numbers.test: integer-length: -2^i-1 ...111011..11: -1267650600228229401496703205377
PASS: numbers.test: integer-length: -2^i-1 ...111011..11: -2535301200456458802993406410753
PASS: numbers.test: integer-length: -2^i-1 ...111011..11: -5070602400912917605986812821505
PASS: numbers.test: integer-length: -2^i-1 ...111011..11: -10141204801825835211973625643009
PASS: numbers.test: integer-length: -2^i-1 ...111011..11: -20282409603651670423947251286017
PASS: numbers.test: integer-length: -2^i-1 ...111011..11: -40564819207303340847894502572033
PASS: numbers.test: integer-length: -2^i-1 ...111011..11: -81129638414606681695789005144065
PASS: numbers.test: integer-length: -2^i-1 ...111011..11: -162259276829213363391578010288129
PASS: numbers.test: integer-length: -2^i-1 ...111011..11: -324518553658426726783156020576257
PASS: numbers.test: integer-length: -2^i-1 ...111011..11: -649037107316853453566312041152513
PASS: numbers.test: integer-length: -2^i-1 ...111011..11: -1298074214633706907132624082305025
PASS: numbers.test: integer-length: -2^i-1 ...111011..11: -2596148429267413814265248164610049
PASS: numbers.test: integer-length: -2^i-1 ...111011..11: -5192296858534827628530496329220097
PASS: numbers.test: integer-length: -2^i-1 ...111011..11: -10384593717069655257060992658440193
PASS: numbers.test: integer-length: -2^i-1 ...111011..11: -20769187434139310514121985316880385
PASS: numbers.test: integer-length: -2^i-1 ...111011..11: -41538374868278621028243970633760769
PASS: numbers.test: integer-length: -2^i-1 ...111011..11: -83076749736557242056487941267521537
PASS: numbers.test: integer-length: -2^i-1 ...111011..11: -166153499473114484112975882535043073
PASS: numbers.test: integer-length: -2^i-1 ...111011..11: -332306998946228968225951765070086145
PASS: numbers.test: integer-length: -2^i-1 ...111011..11: -664613997892457936451903530140172289
PASS: numbers.test: integer-length: -2^i-1 ...111011..11: -1329227995784915872903807060280344577
PASS: numbers.test: integer-length: -2^i-1 ...111011..11: -2658455991569831745807614120560689153
PASS: numbers.test: integer-length: -2^i-1 ...111011..11: -5316911983139663491615228241121378305
PASS: numbers.test: integer-length: -2^i-1 ...111011..11: -10633823966279326983230456482242756609
PASS: numbers.test: integer-length: -2^i-1 ...111011..11: -21267647932558653966460912964485513217
PASS: numbers.test: integer-length: -2^i-1 ...111011..11: -42535295865117307932921825928971026433
PASS: numbers.test: integer-length: -2^i-1 ...111011..11: -85070591730234615865843651857942052865
PASS: numbers.test: integer-length: -2^i-1 ...111011..11: -170141183460469231731687303715884105729
PASS: numbers.test: integer-length: -2^i-1 ...111011..11: -340282366920938463463374607431768211457
PASS: numbers.test: integer-length: -2^i-1 ...111011..11: -680564733841876926926749214863536422913
PASS: numbers.test: integer-length: -2^i-1 ...111011..11: -1361129467683753853853498429727072845825
PASS: numbers.test: integer-length: -2^i-1 ...111011..11: -2722258935367507707706996859454145691649
PASS: numbers.test: integer-length: -2^i-1 ...111011..11: -5444517870735015415413993718908291383297
PASS: numbers.test: integer-length: -2^i-1 ...111011..11: -10889035741470030830827987437816582766593
PASS: numbers.test: integer-length: -2^i-1 ...111011..11: -21778071482940061661655974875633165533185
PASS: numbers.test: integer-length: -2^i-1 ...111011..11: -43556142965880123323311949751266331066369
PASS: numbers.test: integer-length: -2^i-1 ...111011..11: -87112285931760246646623899502532662132737
PASS: numbers.test: integer-length: -2^i-1 ...111011..11: -174224571863520493293247799005065324265473
PASS: numbers.test: integer-length: -2^i-1 ...111011..11: -348449143727040986586495598010130648530945
PASS: numbers.test: integer-length: -2^i-1 ...111011..11: -696898287454081973172991196020261297061889
PASS: numbers.test: integer-length: -2^i-1 ...111011..11: -1393796574908163946345982392040522594123777
PASS: numbers.test: integer-length: -2^i-1 ...111011..11: -2787593149816327892691964784081045188247553
PASS: numbers.test: integer-length: -2^i-1 ...111011..11: -5575186299632655785383929568162090376495105
PASS: numbers.test: integer-length: -2^i-1 ...111011..11: -11150372599265311570767859136324180752990209
PASS: numbers.test: integer-length: -2^i-1 ...111011..11: -22300745198530623141535718272648361505980417
PASS: numbers.test: integer-length: -2^i-1 ...111011..11: -44601490397061246283071436545296723011960833
PASS: numbers.test: integer-length: -2^i-1 ...111011..11: -89202980794122492566142873090593446023921665
PASS: numbers.test: integer-length: -2^i-1 ...111011..11: -178405961588244985132285746181186892047843329
PASS: numbers.test: integer-length: -2^i-1 ...111011..11: -356811923176489970264571492362373784095686657
PASS: numbers.test: integer-length: -2^i-1 ...111011..11: -713623846352979940529142984724747568191373313
PASS: numbers.test: integer-length: -2^i-1 ...111011..11: -1427247692705959881058285969449495136382746625
PASS: numbers.test: integer-length: -2^i-1 ...111011..11: -2854495385411919762116571938898990272765493249
PASS: numbers.test: integer-length: -2^i-1 ...111011..11: -5708990770823839524233143877797980545530986497
PASS: numbers.test: integer-length: -2^i-1 ...111011..11: -11417981541647679048466287755595961091061972993
PASS: numbers.test: integer-length: -2^i-1 ...111011..11: -22835963083295358096932575511191922182123945985
PASS: numbers.test: integer-length: -2^i-1 ...111011..11: -45671926166590716193865151022383844364247891969
PASS: numbers.test: integer-length: -2^i-1 ...111011..11: -91343852333181432387730302044767688728495783937
PASS: numbers.test: integer-length: -2^i-1 ...111011..11: -182687704666362864775460604089535377456991567873
PASS: numbers.test: integer-length: -2^i-1 ...111011..11: -365375409332725729550921208179070754913983135745
PASS: numbers.test: integer-length: -2^i-1 ...111011..11: -730750818665451459101842416358141509827966271489
PASS: numbers.test: integer-length: -2^i-1 ...111011..11: -1461501637330902918203684832716283019655932542977
PASS: numbers.test: integer-length: -2^i-1 ...111011..11: -2923003274661805836407369665432566039311865085953
PASS: numbers.test: integer-length: -2^i-1 ...111011..11: -5846006549323611672814739330865132078623730171905
PASS: numbers.test: integer-length: -2^i-1 ...111011..11: -11692013098647223345629478661730264157247460343809
PASS: numbers.test: integer-length: -2^i-1 ...111011..11: -23384026197294446691258957323460528314494920687617
PASS: numbers.test: integer-length: -2^i-1 ...111011..11: -46768052394588893382517914646921056628989841375233
PASS: numbers.test: integer-length: -2^i-1 ...111011..11: -93536104789177786765035829293842113257979682750465
PASS: numbers.test: integer-length: -2^i-1 ...111011..11: -187072209578355573530071658587684226515959365500929
PASS: numbers.test: integer-length: -2^i-1 ...111011..11: -374144419156711147060143317175368453031918731001857
PASS: numbers.test: integer-length: -2^i-1 ...111011..11: -748288838313422294120286634350736906063837462003713
PASS: numbers.test: integer-length: -2^i-1 ...111011..11: -1496577676626844588240573268701473812127674924007425
PASS: numbers.test: integer-length: -2^i-1 ...111011..11: -2993155353253689176481146537402947624255349848014849
PASS: numbers.test: integer-length: -2^i-1 ...111011..11: -5986310706507378352962293074805895248510699696029697
PASS: numbers.test: integer-length: -2^i-1 ...111011..11: -11972621413014756705924586149611790497021399392059393
PASS: numbers.test: integer-length: -2^i-1 ...111011..11: -23945242826029513411849172299223580994042798784118785
PASS: numbers.test: integer-length: -2^i-1 ...111011..11: -47890485652059026823698344598447161988085597568237569
PASS: numbers.test: integer-length: -2^i-1 ...111011..11: -95780971304118053647396689196894323976171195136475137
PASS: numbers.test: integer-length: -2^i-1 ...111011..11: -191561942608236107294793378393788647952342390272950273
PASS: numbers.test: integer-length: -2^i-1 ...111011..11: -383123885216472214589586756787577295904684780545900545
PASS: numbers.test: integer-length: -2^i-1 ...111011..11: -766247770432944429179173513575154591809369561091801089
PASS: numbers.test: integer-length: -2^i-1 ...111011..11: -1532495540865888858358347027150309183618739122183602177
PASS: numbers.test: integer-length: -2^i-1 ...111011..11: -3064991081731777716716694054300618367237478244367204353
PASS: numbers.test: integer-length: -2^i-1 ...111011..11: -6129982163463555433433388108601236734474956488734408705
PASS: numbers.test: integer-length: -2^i-1 ...111011..11: -12259964326927110866866776217202473468949912977468817409
PASS: numbers.test: integer-length: -2^i-1 ...111011..11: -24519928653854221733733552434404946937899825954937634817
PASS: numbers.test: integer-length: -2^i-1 ...111011..11: -49039857307708443467467104868809893875799651909875269633
PASS: numbers.test: integer-length: -2^i-1 ...111011..11: -98079714615416886934934209737619787751599303819750539265
PASS: numbers.test: integer-length: -2^i-1 ...111011..11: -196159429230833773869868419475239575503198607639501078529
PASS: numbers.test: integer-length: -2^i-1 ...111011..11: -392318858461667547739736838950479151006397215279002157057
PASS: numbers.test: integer-length: -2^i-1 ...111011..11: -784637716923335095479473677900958302012794430558004314113
PASS: numbers.test: integer-length: -2^i-1 ...111011..11: -1569275433846670190958947355801916604025588861116008628225
PASS: numbers.test: integer-length: -2^i-1 ...111011..11: -3138550867693340381917894711603833208051177722232017256449
PASS: numbers.test: integer-length: -2^i-1 ...111011..11: -6277101735386680763835789423207666416102355444464034512897
PASS: numbers.test: integer-length: -2^i-1 ...111011..11: -12554203470773361527671578846415332832204710888928069025793
PASS: numbers.test: integer-length: -2^i-1 ...111011..11: -25108406941546723055343157692830665664409421777856138051585
PASS: numbers.test: integer-length: -2^i-1 ...111011..11: -50216813883093446110686315385661331328818843555712276103169
PASS: numbers.test: integer-length: -2^i-1 ...111011..11: -100433627766186892221372630771322662657637687111424552206337
PASS: numbers.test: integer-length: -2^i-1 ...111011..11: -200867255532373784442745261542645325315275374222849104412673
PASS: numbers.test: integer-length: -2^i-1 ...111011..11: -401734511064747568885490523085290650630550748445698208825345
PASS: numbers.test: integer-length: -2^i-1 ...111011..11: -803469022129495137770981046170581301261101496891396417650689
PASS: numbers.test: integer-length: -2^i-1 ...111011..11: -1606938044258990275541962092341162602522202993782792835301377
PASS: numbers.test: integer-length: -2^i-1 ...111011..11: -3213876088517980551083924184682325205044405987565585670602753
PASS: numbers.test: integer-length: -2^i-1 ...111011..11: -6427752177035961102167848369364650410088811975131171341205505
PASS: numbers.test: integer-length: -2^i-1 ...111011..11: -12855504354071922204335696738729300820177623950262342682411009
PASS: numbers.test: integer-length: -2^i-1 ...111011..11: -25711008708143844408671393477458601640355247900524685364822017
PASS: numbers.test: integer-length: -2^i-1 ...111011..11: -51422017416287688817342786954917203280710495801049370729644033
PASS: numbers.test: integer-length: -2^i-1 ...111011..11: -102844034832575377634685573909834406561420991602098741459288065
PASS: numbers.test: integer-length: -2^i-1 ...111011..11: -205688069665150755269371147819668813122841983204197482918576129
PASS: numbers.test: integer-length: -2^i-1 ...111011..11: -411376139330301510538742295639337626245683966408394965837152257
PASS: numbers.test: integer-length: -2^i-1 ...111011..11: -822752278660603021077484591278675252491367932816789931674304513
PASS: numbers.test: integer-length: -2^i-1 ...111011..11: -1645504557321206042154969182557350504982735865633579863348609025
PASS: numbers.test: integer-length: -2^i-1 ...111011..11: -3291009114642412084309938365114701009965471731267159726697218049
PASS: numbers.test: integer-length: -2^i-1 ...111011..11: -6582018229284824168619876730229402019930943462534319453394436097
PASS: numbers.test: integer-length: -2^i-1 ...111011..11: -13164036458569648337239753460458804039861886925068638906788872193
PASS: numbers.test: integer-length: -2^i-1 ...111011..11: -26328072917139296674479506920917608079723773850137277813577744385
PASS: numbers.test: integer-length: -2^i-1 ...111011..11: -52656145834278593348959013841835216159447547700274555627155488769
PASS: numbers.test: integer-length: -2^i-1 ...111011..11: -105312291668557186697918027683670432318895095400549111254310977537
PASS: numbers.test: integer-length: -2^i-1 ...111011..11: -210624583337114373395836055367340864637790190801098222508621955073
PASS: numbers.test: integer-length: -2^i-1 ...111011..11: -421249166674228746791672110734681729275580381602196445017243910145
PASS: numbers.test: integer-length: -2^i-1 ...111011..11: -842498333348457493583344221469363458551160763204392890034487820289
PASS: numbers.test: integer-length: -2^i-1 ...111011..11: -1684996666696914987166688442938726917102321526408785780068975640577
PASS: numbers.test: integer-length: -2^i-1 ...111011..11: -3369993333393829974333376885877453834204643052817571560137951281153
PASS: numbers.test: integer-length: -2^i-1 ...111011..11: -6739986666787659948666753771754907668409286105635143120275902562305
PASS: numbers.test: integer-length: -2^i-1 ...111011..11: -13479973333575319897333507543509815336818572211270286240551805124609
PASS: numbers.test: integer-length: -2^i-1 ...111011..11: -26959946667150639794667015087019630673637144422540572481103610249217
PASS: numbers.test: integer-length: -2^i-1 ...111011..11: -53919893334301279589334030174039261347274288845081144962207220498433
PASS: numbers.test: integer-length: -2^i-1 ...111011..11: -107839786668602559178668060348078522694548577690162289924414440996865
PASS: numbers.test: integer-length: -2^i-1 ...111011..11: -215679573337205118357336120696157045389097155380324579848828881993729
PASS: numbers.test: integer-length: -2^i-1 ...111011..11: -431359146674410236714672241392314090778194310760649159697657763987457
PASS: numbers.test: integer-length: -2^i-1 ...111011..11: -862718293348820473429344482784628181556388621521298319395315527974913
PASS: numbers.test: integer-length: -2^i-1 ...111011..11: -1725436586697640946858688965569256363112777243042596638790631055949825
PASS: numbers.test: integer-length: -2^i-1 ...111011..11: -3450873173395281893717377931138512726225554486085193277581262111899649
PASS: numbers.test: integer-length: -2^i-1 ...111011..11: -6901746346790563787434755862277025452451108972170386555162524223799297
PASS: numbers.test: integer-length: -2^i-1 ...111011..11: -13803492693581127574869511724554050904902217944340773110325048447598593
PASS: numbers.test: integer-length: -2^i-1 ...111011..11: -27606985387162255149739023449108101809804435888681546220650096895197185
PASS: numbers.test: integer-length: -2^i-1 ...111011..11: -55213970774324510299478046898216203619608871777363092441300193790394369
PASS: numbers.test: integer-length: -2^i-1 ...111011..11: -110427941548649020598956093796432407239217743554726184882600387580788737
PASS: numbers.test: integer-length: -2^i-1 ...111011..11: -220855883097298041197912187592864814478435487109452369765200775161577473
PASS: numbers.test: integer-length: -2^i-1 ...111011..11: -441711766194596082395824375185729628956870974218904739530401550323154945
PASS: numbers.test: integer-length: -2^i-1 ...111011..11: -883423532389192164791648750371459257913741948437809479060803100646309889
PASS: numbers.test: integer-length: -2^i-1 ...111011..11: -1766847064778384329583297500742918515827483896875618958121606201292619777
PASS: numbers.test: integer-length: -2^i-1 ...111011..11: -3533694129556768659166595001485837031654967793751237916243212402585239553
PASS: numbers.test: integer-length: -2^i-1 ...111011..11: -7067388259113537318333190002971674063309935587502475832486424805170479105
PASS: numbers.test: integer-length: -2^i-1 ...111011..11: -14134776518227074636666380005943348126619871175004951664972849610340958209
PASS: numbers.test: integer-length: -2^i-1 ...111011..11: -28269553036454149273332760011886696253239742350009903329945699220681916417
PASS: numbers.test: integer-length: -2^i-1 ...111011..11: -56539106072908298546665520023773392506479484700019806659891398441363832833
PASS: numbers.test: integer-length: -2^i-1 ...111011..11: -113078212145816597093331040047546785012958969400039613319782796882727665665
PASS: numbers.test: integer-length: -2^i-1 ...111011..11: -226156424291633194186662080095093570025917938800079226639565593765455331329
PASS: numbers.test: integer-length: -2^i-1 ...111011..11: -452312848583266388373324160190187140051835877600158453279131187530910662657
PASS: numbers.test: integer-length: -2^i-1 ...111011..11: -904625697166532776746648320380374280103671755200316906558262375061821325313
PASS: numbers.test: integer-length: -2^i-1 ...111011..11: -1809251394333065553493296640760748560207343510400633813116524750123642650625
PASS: numbers.test: integer-length: -2^i-1 ...111011..11: -3618502788666131106986593281521497120414687020801267626233049500247285301249
PASS: numbers.test: integer-length: -2^i-1 ...111011..11: -7237005577332262213973186563042994240829374041602535252466099000494570602497
PASS: numbers.test: integer-length: -2^i-1 ...111011..11: -14474011154664524427946373126085988481658748083205070504932198000989141204993
PASS: numbers.test: integer-length: -2^i-1 ...111011..11: -28948022309329048855892746252171976963317496166410141009864396001978282409985
PASS: numbers.test: integer-length: -2^i-1 ...111011..11: -57896044618658097711785492504343953926634992332820282019728792003956564819969
PASS: numbers.test: log: (documented? log)
PASS: numbers.test: log: no args
PASS: numbers.test: log: two args
PASS: numbers.test: log: (log 0)
PASS: numbers.test: log: (test-eqv? -inf.0 (log 0.0))
PASS: numbers.test: log: (test-eqv? +inf.0 (log +inf.0))
PASS: numbers.test: log: (test-eqv? -inf.0+3.14159265358979i (log -0.0))
PASS: numbers.test: log: (test-eqv? +inf.0+3.14159265358979i (log -inf.0))
PASS: numbers.test: log: (test-eqv? 0.0 (log 1))
PASS: numbers.test: log: (test-eqv? 0.0 (log 1.0))
PASS: numbers.test: log: (test-eqv? 1.0 (log const-e))
PASS: numbers.test: log: (test-eqv? 2.0 (log const-e^2))
PASS: numbers.test: log: (test-eqv? -1.0 (log const-1/e))
PASS: numbers.test: log: (test-eqv? -1.0+3.14159265358979i (log (- const-1/e)))
PASS: numbers.test: log: (test-eqv? 2.30258509299405 (log 10))
PASS: numbers.test: log: (test-eqv? 2.30258509299405+3.14159265358979i (log -10))
PASS: numbers.test: log: (test-eqv? 1.0+0.0i (log (+ const-e 0.0+0.0i)))
PASS: numbers.test: log: (test-eqv? 1.0-0.0i (log (+ const-e 0.0-0.0i)))
PASS: numbers.test: log: (eqv-loosely? 230258.509299405 (log (expt 10 100000)))
PASS: numbers.test: log: (eqv-loosely? -230258.509299405 (log (expt 10 -100000)))
PASS: numbers.test: log: (eqv-loosely? 230257.410687116 (log (/ (expt 10 100000) 3)))
PASS: numbers.test: log: (eqv-loosely? 230258.509299405+3.14159265358979i (log (- (expt 10 100000))))
PASS: numbers.test: log: (eqv-loosely? -230258.509299405+3.14159265358979i (log (- (expt 10 -100000))))
PASS: numbers.test: log: (eqv-loosely? 230257.410687116+3.14159265358979i (log (- (/ (expt 10 100000) 3))))
PASS: numbers.test: log: (test-eqv? 3.05493636349961e-151 (log (/ (#{1+}# (expt 2 500)) (expt 2 500))))
PASS: numbers.test: log: (eqv-loosely? 1.0+1.57079i (log 0.0+2.71828i))
PASS: numbers.test: log: (eqv-loosely? 1.0-1.57079i (log 0.0-2.71828i))
PASS: numbers.test: log: (eqv-loosely? 0.0+3.14159i (log -1.0))
PASS: numbers.test: log: (eqv-loosely? 1.0+3.14159i (log -2.71828))
PASS: numbers.test: log: (eqv-loosely? 2.0+3.14159i (log (* -2.71828 2.71828)))
PASS: numbers.test: log10: (documented? log10)
PASS: numbers.test: log10: no args
PASS: numbers.test: log10: two args
PASS: numbers.test: log10: (log10 0)
PASS: numbers.test: log10: (test-eqv? -inf.0 (log10 0.0))
PASS: numbers.test: log10: (test-eqv? +inf.0 (log10 +inf.0))
PASS: numbers.test: log10: (test-eqv? -inf.0+1.36437635384184i (log10 -0.0))
PASS: numbers.test: log10: (test-eqv? +inf.0+1.36437635384184i (log10 -inf.0))
PASS: numbers.test: log10: (test-eqv? 0.0 (log10 1))
PASS: numbers.test: log10: (test-eqv? 0.0 (log10 1.0))
PASS: numbers.test: log10: (test-eqv? 1.0 (log10 10))
PASS: numbers.test: log10: (test-eqv? 1.0 (log10 10.0))
PASS: numbers.test: log10: (test-eqv? 2.0 (log10 100.0))
PASS: numbers.test: log10: (test-eqv? -1.0 (log10 0.1))
PASS: numbers.test: log10: (test-eqv? -1.0+1.36437635384184i (log10 -0.1))
PASS: numbers.test: log10: (test-eqv? 1.0+1.36437635384184i (log10 -10))
PASS: numbers.test: log10: (test-eqv? 1.0+0.0i (log10 10.0+0.0i))
PASS: numbers.test: log10: (test-eqv? 1.0-0.0i (log10 10.0-0.0i))
PASS: numbers.test: log10: (eqv-loosely? 100000.0 (log10 (expt 10 100000)))
PASS: numbers.test: log10: (eqv-loosely? -100000.0 (log10 (expt 10 -100000)))
PASS: numbers.test: log10: (eqv-loosely? 99999.5228787453 (log10 (/ (expt 10 100000) 3)))
PASS: numbers.test: log10: (eqv-loosely? 100000.0+1.36437635384184i (log10 (- (expt 10 100000))))
PASS: numbers.test: log10: (eqv-loosely? -100000.0+1.36437635384184i (log10 (- (expt 10 -100000))))
PASS: numbers.test: log10: (eqv-loosely? 99999.5228787453+1.36437635384184i (log10 (- (/ (expt 10 100000) 3))))
PASS: numbers.test: log10: (test-eqv? 1.32674200523347e-151 (log10 (/ (#{1+}# (expt 2 500)) (expt 2 500))))
PASS: numbers.test: log10: (eqv-loosely? 1.0+0.68218i (log10 0.0+10.0i))
PASS: numbers.test: log10: (eqv-loosely? 1.0-0.68218i (log10 0.0-10.0i))
PASS: numbers.test: log10: (eqv-loosely? 0.0+1.36437i (log10 -1))
PASS: numbers.test: log10: (eqv-loosely? 1.0+1.36437i (log10 -10))
PASS: numbers.test: log10: (eqv-loosely? 2.0+1.36437i (log10 -100))
PASS: numbers.test: logbit?: (documented? logbit?)
PASS: numbers.test: logbit?: (eq? #f (logbit? 0 0))
PASS: numbers.test: logbit?: (eq? #f (logbit? 1 0))
PASS: numbers.test: logbit?: (eq? #f (logbit? 31 0))
PASS: numbers.test: logbit?: (eq? #f (logbit? 32 0))
PASS: numbers.test: logbit?: (eq? #f (logbit? 33 0))
PASS: numbers.test: logbit?: (eq? #f (logbit? 63 0))
PASS: numbers.test: logbit?: (eq? #f (logbit? 64 0))
PASS: numbers.test: logbit?: (eq? #f (logbit? 65 0))
PASS: numbers.test: logbit?: (eq? #t (logbit? 0 1))
PASS: numbers.test: logbit?: (eq? #f (logbit? 1 1))
PASS: numbers.test: logbit?: (eq? #f (logbit? 31 1))
PASS: numbers.test: logbit?: (eq? #f (logbit? 32 1))
PASS: numbers.test: logbit?: (eq? #f (logbit? 33 1))
PASS: numbers.test: logbit?: (eq? #f (logbit? 63 1))
PASS: numbers.test: logbit?: (eq? #f (logbit? 64 1))
PASS: numbers.test: logbit?: (eq? #f (logbit? 65 1))
PASS: numbers.test: logbit?: (eq? #f (logbit? 128 1))
PASS: numbers.test: logbit?: (eq? #t (logbit? 0 -1))
PASS: numbers.test: logbit?: (eq? #t (logbit? 1 -1))
PASS: numbers.test: logbit?: (eq? #t (logbit? 31 -1))
PASS: numbers.test: logbit?: (eq? #t (logbit? 32 -1))
PASS: numbers.test: logbit?: (eq? #t (logbit? 33 -1))
PASS: numbers.test: logbit?: (eq? #t (logbit? 63 -1))
PASS: numbers.test: logbit?: (eq? #t (logbit? 64 -1))
PASS: numbers.test: logbit?: (eq? #t (logbit? 65 -1))
PASS: numbers.test: logcount: (documented? logcount)
PASS: numbers.test: logcount: -2^i, meaning ...11100..00: -1
PASS: numbers.test: logcount: -2^i, meaning ...11100..00: -2
PASS: numbers.test: logcount: -2^i, meaning ...11100..00: -4
PASS: numbers.test: logcount: -2^i, meaning ...11100..00: -8
PASS: numbers.test: logcount: -2^i, meaning ...11100..00: -16
PASS: numbers.test: logcount: -2^i, meaning ...11100..00: -32
PASS: numbers.test: logcount: -2^i, meaning ...11100..00: -64
PASS: numbers.test: logcount: -2^i, meaning ...11100..00: -128
PASS: numbers.test: logcount: -2^i, meaning ...11100..00: -256
PASS: numbers.test: logcount: -2^i, meaning ...11100..00: -512
PASS: numbers.test: logcount: -2^i, meaning ...11100..00: -1024
PASS: numbers.test: logcount: -2^i, meaning ...11100..00: -2048
PASS: numbers.test: logcount: -2^i, meaning ...11100..00: -4096
PASS: numbers.test: logcount: -2^i, meaning ...11100..00: -8192
PASS: numbers.test: logcount: -2^i, meaning ...11100..00: -16384
PASS: numbers.test: logcount: -2^i, meaning ...11100..00: -32768
PASS: numbers.test: logcount: -2^i, meaning ...11100..00: -65536
PASS: numbers.test: logcount: -2^i, meaning ...11100..00: -131072
PASS: numbers.test: logcount: -2^i, meaning ...11100..00: -262144
PASS: numbers.test: logcount: -2^i, meaning ...11100..00: -524288
PASS: numbers.test: logcount: -2^i, meaning ...11100..00: -1048576
PASS: numbers.test: logcount: -2^i, meaning ...11100..00: -2097152
PASS: numbers.test: logcount: -2^i, meaning ...11100..00: -4194304
PASS: numbers.test: logcount: -2^i, meaning ...11100..00: -8388608
PASS: numbers.test: logcount: -2^i, meaning ...11100..00: -16777216
PASS: numbers.test: logcount: -2^i, meaning ...11100..00: -33554432
PASS: numbers.test: logcount: -2^i, meaning ...11100..00: -67108864
PASS: numbers.test: logcount: -2^i, meaning ...11100..00: -134217728
PASS: numbers.test: logcount: -2^i, meaning ...11100..00: -268435456
PASS: numbers.test: logcount: -2^i, meaning ...11100..00: -536870912
PASS: numbers.test: logcount: -2^i, meaning ...11100..00: -1073741824
PASS: numbers.test: logcount: -2^i, meaning ...11100..00: -2147483648
PASS: numbers.test: logcount: -2^i, meaning ...11100..00: -4294967296
PASS: numbers.test: logcount: -2^i, meaning ...11100..00: -8589934592
PASS: numbers.test: logcount: -2^i, meaning ...11100..00: -17179869184
PASS: numbers.test: logcount: -2^i, meaning ...11100..00: -34359738368
PASS: numbers.test: logcount: -2^i, meaning ...11100..00: -68719476736
PASS: numbers.test: logcount: -2^i, meaning ...11100..00: -137438953472
PASS: numbers.test: logcount: -2^i, meaning ...11100..00: -274877906944
PASS: numbers.test: logcount: -2^i, meaning ...11100..00: -549755813888
PASS: numbers.test: logcount: -2^i, meaning ...11100..00: -1099511627776
PASS: numbers.test: logcount: -2^i, meaning ...11100..00: -2199023255552
PASS: numbers.test: logcount: -2^i, meaning ...11100..00: -4398046511104
PASS: numbers.test: logcount: -2^i, meaning ...11100..00: -8796093022208
PASS: numbers.test: logcount: -2^i, meaning ...11100..00: -17592186044416
PASS: numbers.test: logcount: -2^i, meaning ...11100..00: -35184372088832
PASS: numbers.test: logcount: -2^i, meaning ...11100..00: -70368744177664
PASS: numbers.test: logcount: -2^i, meaning ...11100..00: -140737488355328
PASS: numbers.test: logcount: -2^i, meaning ...11100..00: -281474976710656
PASS: numbers.test: logcount: -2^i, meaning ...11100..00: -562949953421312
PASS: numbers.test: logcount: -2^i, meaning ...11100..00: -1125899906842624
PASS: numbers.test: logcount: -2^i, meaning ...11100..00: -2251799813685248
PASS: numbers.test: logcount: -2^i, meaning ...11100..00: -4503599627370496
PASS: numbers.test: logcount: -2^i, meaning ...11100..00: -9007199254740992
PASS: numbers.test: logcount: -2^i, meaning ...11100..00: -18014398509481984
PASS: numbers.test: logcount: -2^i, meaning ...11100..00: -36028797018963968
PASS: numbers.test: logcount: -2^i, meaning ...11100..00: -72057594037927936
PASS: numbers.test: logcount: -2^i, meaning ...11100..00: -144115188075855872
PASS: numbers.test: logcount: -2^i, meaning ...11100..00: -288230376151711744
PASS: numbers.test: logcount: -2^i, meaning ...11100..00: -576460752303423488
PASS: numbers.test: logcount: -2^i, meaning ...11100..00: -1152921504606846976
PASS: numbers.test: logcount: -2^i, meaning ...11100..00: -2305843009213693952
PASS: numbers.test: logcount: -2^i, meaning ...11100..00: -4611686018427387904
PASS: numbers.test: logcount: -2^i, meaning ...11100..00: -9223372036854775808
PASS: numbers.test: logcount: -2^i, meaning ...11100..00: -18446744073709551616
PASS: numbers.test: logcount: -2^i, meaning ...11100..00: -36893488147419103232
PASS: numbers.test: logcount: -2^i, meaning ...11100..00: -73786976294838206464
PASS: numbers.test: logcount: -2^i, meaning ...11100..00: -147573952589676412928
PASS: numbers.test: logcount: -2^i, meaning ...11100..00: -295147905179352825856
PASS: numbers.test: logcount: -2^i, meaning ...11100..00: -590295810358705651712
PASS: numbers.test: logcount: -2^i, meaning ...11100..00: -1180591620717411303424
PASS: numbers.test: logcount: -2^i, meaning ...11100..00: -2361183241434822606848
PASS: numbers.test: logcount: -2^i, meaning ...11100..00: -4722366482869645213696
PASS: numbers.test: logcount: -2^i, meaning ...11100..00: -9444732965739290427392
PASS: numbers.test: logcount: -2^i, meaning ...11100..00: -18889465931478580854784
PASS: numbers.test: logcount: -2^i, meaning ...11100..00: -37778931862957161709568
PASS: numbers.test: logcount: -2^i, meaning ...11100..00: -75557863725914323419136
PASS: numbers.test: logcount: -2^i, meaning ...11100..00: -151115727451828646838272
PASS: numbers.test: logcount: -2^i, meaning ...11100..00: -302231454903657293676544
PASS: numbers.test: logcount: -2^i, meaning ...11100..00: -604462909807314587353088
PASS: numbers.test: logcount: -2^i, meaning ...11100..00: -1208925819614629174706176
PASS: numbers.test: logcount: -2^i, meaning ...11100..00: -2417851639229258349412352
PASS: numbers.test: logcount: -2^i, meaning ...11100..00: -4835703278458516698824704
PASS: numbers.test: logcount: -2^i, meaning ...11100..00: -9671406556917033397649408
PASS: numbers.test: logcount: -2^i, meaning ...11100..00: -19342813113834066795298816
PASS: numbers.test: logcount: -2^i, meaning ...11100..00: -38685626227668133590597632
PASS: numbers.test: logcount: -2^i, meaning ...11100..00: -77371252455336267181195264
PASS: numbers.test: logcount: -2^i, meaning ...11100..00: -154742504910672534362390528
PASS: numbers.test: logcount: -2^i, meaning ...11100..00: -309485009821345068724781056
PASS: numbers.test: logcount: -2^i, meaning ...11100..00: -618970019642690137449562112
PASS: numbers.test: logcount: -2^i, meaning ...11100..00: -1237940039285380274899124224
PASS: numbers.test: logcount: -2^i, meaning ...11100..00: -2475880078570760549798248448
PASS: numbers.test: logcount: -2^i, meaning ...11100..00: -4951760157141521099596496896
PASS: numbers.test: logcount: -2^i, meaning ...11100..00: -9903520314283042199192993792
PASS: numbers.test: logcount: -2^i, meaning ...11100..00: -19807040628566084398385987584
PASS: numbers.test: logcount: -2^i, meaning ...11100..00: -39614081257132168796771975168
PASS: numbers.test: logcount: -2^i, meaning ...11100..00: -79228162514264337593543950336
PASS: numbers.test: logcount: -2^i, meaning ...11100..00: -158456325028528675187087900672
PASS: numbers.test: logcount: -2^i, meaning ...11100..00: -316912650057057350374175801344
PASS: numbers.test: logcount: -2^i, meaning ...11100..00: -633825300114114700748351602688
PASS: numbers.test: logcount: -2^i, meaning ...11100..00: -1267650600228229401496703205376
PASS: numbers.test: logcount: -2^i, meaning ...11100..00: -2535301200456458802993406410752
PASS: numbers.test: logcount: -2^i, meaning ...11100..00: -5070602400912917605986812821504
PASS: numbers.test: logcount: -2^i, meaning ...11100..00: -10141204801825835211973625643008
PASS: numbers.test: logcount: -2^i, meaning ...11100..00: -20282409603651670423947251286016
PASS: numbers.test: logcount: -2^i, meaning ...11100..00: -40564819207303340847894502572032
PASS: numbers.test: logcount: -2^i, meaning ...11100..00: -81129638414606681695789005144064
PASS: numbers.test: logcount: -2^i, meaning ...11100..00: -162259276829213363391578010288128
PASS: numbers.test: logcount: -2^i, meaning ...11100..00: -324518553658426726783156020576256
PASS: numbers.test: logcount: -2^i, meaning ...11100..00: -649037107316853453566312041152512
PASS: numbers.test: logcount: -2^i, meaning ...11100..00: -1298074214633706907132624082305024
PASS: numbers.test: logcount: -2^i, meaning ...11100..00: -2596148429267413814265248164610048
PASS: numbers.test: logcount: -2^i, meaning ...11100..00: -5192296858534827628530496329220096
PASS: numbers.test: logcount: -2^i, meaning ...11100..00: -10384593717069655257060992658440192
PASS: numbers.test: logcount: -2^i, meaning ...11100..00: -20769187434139310514121985316880384
PASS: numbers.test: logcount: -2^i, meaning ...11100..00: -41538374868278621028243970633760768
PASS: numbers.test: logcount: -2^i, meaning ...11100..00: -83076749736557242056487941267521536
PASS: numbers.test: logcount: -2^i, meaning ...11100..00: -166153499473114484112975882535043072
PASS: numbers.test: logcount: -2^i, meaning ...11100..00: -332306998946228968225951765070086144
PASS: numbers.test: logcount: -2^i, meaning ...11100..00: -664613997892457936451903530140172288
PASS: numbers.test: logcount: -2^i, meaning ...11100..00: -1329227995784915872903807060280344576
PASS: numbers.test: logcount: -2^i, meaning ...11100..00: -2658455991569831745807614120560689152
PASS: numbers.test: logcount: -2^i, meaning ...11100..00: -5316911983139663491615228241121378304
PASS: numbers.test: logcount: -2^i, meaning ...11100..00: -10633823966279326983230456482242756608
PASS: numbers.test: logcount: -2^i, meaning ...11100..00: -21267647932558653966460912964485513216
PASS: numbers.test: logcount: -2^i, meaning ...11100..00: -42535295865117307932921825928971026432
PASS: numbers.test: logcount: -2^i, meaning ...11100..00: -85070591730234615865843651857942052864
PASS: numbers.test: logcount: -2^i, meaning ...11100..00: -170141183460469231731687303715884105728
PASS: numbers.test: logcount: -2^i, meaning ...11100..00: -340282366920938463463374607431768211456
PASS: numbers.test: logcount: -2^i, meaning ...11100..00: -680564733841876926926749214863536422912
PASS: numbers.test: logcount: -2^i, meaning ...11100..00: -1361129467683753853853498429727072845824
PASS: numbers.test: logcount: -2^i, meaning ...11100..00: -2722258935367507707706996859454145691648
PASS: numbers.test: logcount: -2^i, meaning ...11100..00: -5444517870735015415413993718908291383296
PASS: numbers.test: logcount: -2^i, meaning ...11100..00: -10889035741470030830827987437816582766592
PASS: numbers.test: logcount: -2^i, meaning ...11100..00: -21778071482940061661655974875633165533184
PASS: numbers.test: logcount: -2^i, meaning ...11100..00: -43556142965880123323311949751266331066368
PASS: numbers.test: logcount: -2^i, meaning ...11100..00: -87112285931760246646623899502532662132736
PASS: numbers.test: logcount: -2^i, meaning ...11100..00: -174224571863520493293247799005065324265472
PASS: numbers.test: logcount: -2^i, meaning ...11100..00: -348449143727040986586495598010130648530944
PASS: numbers.test: logcount: -2^i, meaning ...11100..00: -696898287454081973172991196020261297061888
PASS: numbers.test: logcount: -2^i, meaning ...11100..00: -1393796574908163946345982392040522594123776
PASS: numbers.test: logcount: -2^i, meaning ...11100..00: -2787593149816327892691964784081045188247552
PASS: numbers.test: logcount: -2^i, meaning ...11100..00: -5575186299632655785383929568162090376495104
PASS: numbers.test: logcount: -2^i, meaning ...11100..00: -11150372599265311570767859136324180752990208
PASS: numbers.test: logcount: -2^i, meaning ...11100..00: -22300745198530623141535718272648361505980416
PASS: numbers.test: logcount: -2^i, meaning ...11100..00: -44601490397061246283071436545296723011960832
PASS: numbers.test: logcount: -2^i, meaning ...11100..00: -89202980794122492566142873090593446023921664
PASS: numbers.test: logcount: -2^i, meaning ...11100..00: -178405961588244985132285746181186892047843328
PASS: numbers.test: logcount: -2^i, meaning ...11100..00: -356811923176489970264571492362373784095686656
PASS: numbers.test: logcount: -2^i, meaning ...11100..00: -713623846352979940529142984724747568191373312
PASS: numbers.test: logcount: -2^i, meaning ...11100..00: -1427247692705959881058285969449495136382746624
PASS: numbers.test: logcount: -2^i, meaning ...11100..00: -2854495385411919762116571938898990272765493248
PASS: numbers.test: logcount: -2^i, meaning ...11100..00: -5708990770823839524233143877797980545530986496
PASS: numbers.test: logcount: -2^i, meaning ...11100..00: -11417981541647679048466287755595961091061972992
PASS: numbers.test: logcount: -2^i, meaning ...11100..00: -22835963083295358096932575511191922182123945984
PASS: numbers.test: logcount: -2^i, meaning ...11100..00: -45671926166590716193865151022383844364247891968
PASS: numbers.test: logcount: -2^i, meaning ...11100..00: -91343852333181432387730302044767688728495783936
PASS: numbers.test: logcount: -2^i, meaning ...11100..00: -182687704666362864775460604089535377456991567872
PASS: numbers.test: logcount: -2^i, meaning ...11100..00: -365375409332725729550921208179070754913983135744
PASS: numbers.test: logcount: -2^i, meaning ...11100..00: -730750818665451459101842416358141509827966271488
PASS: numbers.test: logcount: -2^i, meaning ...11100..00: -1461501637330902918203684832716283019655932542976
PASS: numbers.test: logcount: -2^i, meaning ...11100..00: -2923003274661805836407369665432566039311865085952
PASS: numbers.test: logcount: -2^i, meaning ...11100..00: -5846006549323611672814739330865132078623730171904
PASS: numbers.test: logcount: -2^i, meaning ...11100..00: -11692013098647223345629478661730264157247460343808
PASS: numbers.test: logcount: -2^i, meaning ...11100..00: -23384026197294446691258957323460528314494920687616
PASS: numbers.test: logcount: -2^i, meaning ...11100..00: -46768052394588893382517914646921056628989841375232
PASS: numbers.test: logcount: -2^i, meaning ...11100..00: -93536104789177786765035829293842113257979682750464
PASS: numbers.test: logcount: -2^i, meaning ...11100..00: -187072209578355573530071658587684226515959365500928
PASS: numbers.test: logcount: -2^i, meaning ...11100..00: -374144419156711147060143317175368453031918731001856
PASS: numbers.test: logcount: -2^i, meaning ...11100..00: -748288838313422294120286634350736906063837462003712
PASS: numbers.test: logcount: -2^i, meaning ...11100..00: -1496577676626844588240573268701473812127674924007424
PASS: numbers.test: logcount: -2^i, meaning ...11100..00: -2993155353253689176481146537402947624255349848014848
PASS: numbers.test: logcount: -2^i, meaning ...11100..00: -5986310706507378352962293074805895248510699696029696
PASS: numbers.test: logcount: -2^i, meaning ...11100..00: -11972621413014756705924586149611790497021399392059392
PASS: numbers.test: logcount: -2^i, meaning ...11100..00: -23945242826029513411849172299223580994042798784118784
PASS: numbers.test: logcount: -2^i, meaning ...11100..00: -47890485652059026823698344598447161988085597568237568
PASS: numbers.test: logcount: -2^i, meaning ...11100..00: -95780971304118053647396689196894323976171195136475136
PASS: numbers.test: logcount: -2^i, meaning ...11100..00: -191561942608236107294793378393788647952342390272950272
PASS: numbers.test: logcount: -2^i, meaning ...11100..00: -383123885216472214589586756787577295904684780545900544
PASS: numbers.test: logcount: -2^i, meaning ...11100..00: -766247770432944429179173513575154591809369561091801088
PASS: numbers.test: logcount: -2^i, meaning ...11100..00: -1532495540865888858358347027150309183618739122183602176
PASS: numbers.test: logcount: -2^i, meaning ...11100..00: -3064991081731777716716694054300618367237478244367204352
PASS: numbers.test: logcount: -2^i, meaning ...11100..00: -6129982163463555433433388108601236734474956488734408704
PASS: numbers.test: logcount: -2^i, meaning ...11100..00: -12259964326927110866866776217202473468949912977468817408
PASS: numbers.test: logcount: -2^i, meaning ...11100..00: -24519928653854221733733552434404946937899825954937634816
PASS: numbers.test: logcount: -2^i, meaning ...11100..00: -49039857307708443467467104868809893875799651909875269632
PASS: numbers.test: logcount: -2^i, meaning ...11100..00: -98079714615416886934934209737619787751599303819750539264
PASS: numbers.test: logcount: -2^i, meaning ...11100..00: -196159429230833773869868419475239575503198607639501078528
PASS: numbers.test: logcount: -2^i, meaning ...11100..00: -392318858461667547739736838950479151006397215279002157056
PASS: numbers.test: logcount: -2^i, meaning ...11100..00: -784637716923335095479473677900958302012794430558004314112
PASS: numbers.test: logcount: -2^i, meaning ...11100..00: -1569275433846670190958947355801916604025588861116008628224
PASS: numbers.test: logcount: -2^i, meaning ...11100..00: -3138550867693340381917894711603833208051177722232017256448
PASS: numbers.test: logcount: -2^i, meaning ...11100..00: -6277101735386680763835789423207666416102355444464034512896
PASS: numbers.test: logcount: -2^i, meaning ...11100..00: -12554203470773361527671578846415332832204710888928069025792
PASS: numbers.test: logcount: -2^i, meaning ...11100..00: -25108406941546723055343157692830665664409421777856138051584
PASS: numbers.test: logcount: -2^i, meaning ...11100..00: -50216813883093446110686315385661331328818843555712276103168
PASS: numbers.test: logcount: -2^i, meaning ...11100..00: -100433627766186892221372630771322662657637687111424552206336
PASS: numbers.test: logcount: -2^i, meaning ...11100..00: -200867255532373784442745261542645325315275374222849104412672
PASS: numbers.test: logcount: -2^i, meaning ...11100..00: -401734511064747568885490523085290650630550748445698208825344
PASS: numbers.test: logcount: -2^i, meaning ...11100..00: -803469022129495137770981046170581301261101496891396417650688
PASS: numbers.test: logcount: -2^i, meaning ...11100..00: -1606938044258990275541962092341162602522202993782792835301376
PASS: numbers.test: logcount: -2^i, meaning ...11100..00: -3213876088517980551083924184682325205044405987565585670602752
PASS: numbers.test: logcount: -2^i, meaning ...11100..00: -6427752177035961102167848369364650410088811975131171341205504
PASS: numbers.test: logcount: -2^i, meaning ...11100..00: -12855504354071922204335696738729300820177623950262342682411008
PASS: numbers.test: logcount: -2^i, meaning ...11100..00: -25711008708143844408671393477458601640355247900524685364822016
PASS: numbers.test: logcount: -2^i, meaning ...11100..00: -51422017416287688817342786954917203280710495801049370729644032
PASS: numbers.test: logcount: -2^i, meaning ...11100..00: -102844034832575377634685573909834406561420991602098741459288064
PASS: numbers.test: logcount: -2^i, meaning ...11100..00: -205688069665150755269371147819668813122841983204197482918576128
PASS: numbers.test: logcount: -2^i, meaning ...11100..00: -411376139330301510538742295639337626245683966408394965837152256
PASS: numbers.test: logcount: -2^i, meaning ...11100..00: -822752278660603021077484591278675252491367932816789931674304512
PASS: numbers.test: logcount: -2^i, meaning ...11100..00: -1645504557321206042154969182557350504982735865633579863348609024
PASS: numbers.test: logcount: -2^i, meaning ...11100..00: -3291009114642412084309938365114701009965471731267159726697218048
PASS: numbers.test: logcount: -2^i, meaning ...11100..00: -6582018229284824168619876730229402019930943462534319453394436096
PASS: numbers.test: logcount: -2^i, meaning ...11100..00: -13164036458569648337239753460458804039861886925068638906788872192
PASS: numbers.test: logcount: -2^i, meaning ...11100..00: -26328072917139296674479506920917608079723773850137277813577744384
PASS: numbers.test: logcount: -2^i, meaning ...11100..00: -52656145834278593348959013841835216159447547700274555627155488768
PASS: numbers.test: logcount: -2^i, meaning ...11100..00: -105312291668557186697918027683670432318895095400549111254310977536
PASS: numbers.test: logcount: -2^i, meaning ...11100..00: -210624583337114373395836055367340864637790190801098222508621955072
PASS: numbers.test: logcount: -2^i, meaning ...11100..00: -421249166674228746791672110734681729275580381602196445017243910144
PASS: numbers.test: logcount: -2^i, meaning ...11100..00: -842498333348457493583344221469363458551160763204392890034487820288
PASS: numbers.test: logcount: -2^i, meaning ...11100..00: -1684996666696914987166688442938726917102321526408785780068975640576
PASS: numbers.test: logcount: -2^i, meaning ...11100..00: -3369993333393829974333376885877453834204643052817571560137951281152
PASS: numbers.test: logcount: -2^i, meaning ...11100..00: -6739986666787659948666753771754907668409286105635143120275902562304
PASS: numbers.test: logcount: -2^i, meaning ...11100..00: -13479973333575319897333507543509815336818572211270286240551805124608
PASS: numbers.test: logcount: -2^i, meaning ...11100..00: -26959946667150639794667015087019630673637144422540572481103610249216
PASS: numbers.test: logcount: -2^i, meaning ...11100..00: -53919893334301279589334030174039261347274288845081144962207220498432
PASS: numbers.test: logcount: -2^i, meaning ...11100..00: -107839786668602559178668060348078522694548577690162289924414440996864
PASS: numbers.test: logcount: -2^i, meaning ...11100..00: -215679573337205118357336120696157045389097155380324579848828881993728
PASS: numbers.test: logcount: -2^i, meaning ...11100..00: -431359146674410236714672241392314090778194310760649159697657763987456
PASS: numbers.test: logcount: -2^i, meaning ...11100..00: -862718293348820473429344482784628181556388621521298319395315527974912
PASS: numbers.test: logcount: -2^i, meaning ...11100..00: -1725436586697640946858688965569256363112777243042596638790631055949824
PASS: numbers.test: logcount: -2^i, meaning ...11100..00: -3450873173395281893717377931138512726225554486085193277581262111899648
PASS: numbers.test: logcount: -2^i, meaning ...11100..00: -6901746346790563787434755862277025452451108972170386555162524223799296
PASS: numbers.test: logcount: -2^i, meaning ...11100..00: -13803492693581127574869511724554050904902217944340773110325048447598592
PASS: numbers.test: logcount: -2^i, meaning ...11100..00: -27606985387162255149739023449108101809804435888681546220650096895197184
PASS: numbers.test: logcount: -2^i, meaning ...11100..00: -55213970774324510299478046898216203619608871777363092441300193790394368
PASS: numbers.test: logcount: -2^i, meaning ...11100..00: -110427941548649020598956093796432407239217743554726184882600387580788736
PASS: numbers.test: logcount: -2^i, meaning ...11100..00: -220855883097298041197912187592864814478435487109452369765200775161577472
PASS: numbers.test: logcount: -2^i, meaning ...11100..00: -441711766194596082395824375185729628956870974218904739530401550323154944
PASS: numbers.test: logcount: -2^i, meaning ...11100..00: -883423532389192164791648750371459257913741948437809479060803100646309888
PASS: numbers.test: logcount: -2^i, meaning ...11100..00: -1766847064778384329583297500742918515827483896875618958121606201292619776
PASS: numbers.test: logcount: -2^i, meaning ...11100..00: -3533694129556768659166595001485837031654967793751237916243212402585239552
PASS: numbers.test: logcount: -2^i, meaning ...11100..00: -7067388259113537318333190002971674063309935587502475832486424805170479104
PASS: numbers.test: logcount: -2^i, meaning ...11100..00: -14134776518227074636666380005943348126619871175004951664972849610340958208
PASS: numbers.test: logcount: -2^i, meaning ...11100..00: -28269553036454149273332760011886696253239742350009903329945699220681916416
PASS: numbers.test: logcount: -2^i, meaning ...11100..00: -56539106072908298546665520023773392506479484700019806659891398441363832832
PASS: numbers.test: logcount: -2^i, meaning ...11100..00: -113078212145816597093331040047546785012958969400039613319782796882727665664
PASS: numbers.test: logcount: -2^i, meaning ...11100..00: -226156424291633194186662080095093570025917938800079226639565593765455331328
PASS: numbers.test: logcount: -2^i, meaning ...11100..00: -452312848583266388373324160190187140051835877600158453279131187530910662656
PASS: numbers.test: logcount: -2^i, meaning ...11100..00: -904625697166532776746648320380374280103671755200316906558262375061821325312
PASS: numbers.test: logcount: -2^i, meaning ...11100..00: -1809251394333065553493296640760748560207343510400633813116524750123642650624
PASS: numbers.test: logcount: -2^i, meaning ...11100..00: -3618502788666131106986593281521497120414687020801267626233049500247285301248
PASS: numbers.test: logcount: -2^i, meaning ...11100..00: -7237005577332262213973186563042994240829374041602535252466099000494570602496
PASS: numbers.test: logcount: -2^i, meaning ...11100..00: -14474011154664524427946373126085988481658748083205070504932198000989141204992
PASS: numbers.test: logcount: -2^i, meaning ...11100..00: -28948022309329048855892746252171976963317496166410141009864396001978282409984
PASS: numbers.test: logcount: -2^i, meaning ...11100..00: -57896044618658097711785492504343953926634992332820282019728792003956564819968
PASS: numbers.test: logcount: -2^i, meaning ...11100..00: -115792089237316195423570985008687907853269984665640564039457584007913129639936
PASS: numbers.test: logcount: 2^i: 1
PASS: numbers.test: logcount: 2^i: 2
PASS: numbers.test: logcount: 2^i: 4
PASS: numbers.test: logcount: 2^i: 8
PASS: numbers.test: logcount: 2^i: 16
PASS: numbers.test: logcount: 2^i: 32
PASS: numbers.test: logcount: 2^i: 64
PASS: numbers.test: logcount: 2^i: 128
PASS: numbers.test: logcount: 2^i: 256
PASS: numbers.test: logcount: 2^i: 512
PASS: numbers.test: logcount: 2^i: 1024
PASS: numbers.test: logcount: 2^i: 2048
PASS: numbers.test: logcount: 2^i: 4096
PASS: numbers.test: logcount: 2^i: 8192
PASS: numbers.test: logcount: 2^i: 16384
PASS: numbers.test: logcount: 2^i: 32768
PASS: numbers.test: logcount: 2^i: 65536
PASS: numbers.test: logcount: 2^i: 131072
PASS: numbers.test: logcount: 2^i: 262144
PASS: numbers.test: logcount: 2^i: 524288
PASS: numbers.test: logcount: 2^i: 1048576
PASS: numbers.test: logcount: 2^i: 2097152
PASS: numbers.test: logcount: 2^i: 4194304
PASS: numbers.test: logcount: 2^i: 8388608
PASS: numbers.test: logcount: 2^i: 16777216
PASS: numbers.test: logcount: 2^i: 33554432
PASS: numbers.test: logcount: 2^i: 67108864
PASS: numbers.test: logcount: 2^i: 134217728
PASS: numbers.test: logcount: 2^i: 268435456
PASS: numbers.test: logcount: 2^i: 536870912
PASS: numbers.test: logcount: 2^i: 1073741824
PASS: numbers.test: logcount: 2^i: 2147483648
PASS: numbers.test: logcount: 2^i: 4294967296
PASS: numbers.test: logcount: 2^i: 8589934592
PASS: numbers.test: logcount: 2^i: 17179869184
PASS: numbers.test: logcount: 2^i: 34359738368
PASS: numbers.test: logcount: 2^i: 68719476736
PASS: numbers.test: logcount: 2^i: 137438953472
PASS: numbers.test: logcount: 2^i: 274877906944
PASS: numbers.test: logcount: 2^i: 549755813888
PASS: numbers.test: logcount: 2^i: 1099511627776
PASS: numbers.test: logcount: 2^i: 2199023255552
PASS: numbers.test: logcount: 2^i: 4398046511104
PASS: numbers.test: logcount: 2^i: 8796093022208
PASS: numbers.test: logcount: 2^i: 17592186044416
PASS: numbers.test: logcount: 2^i: 35184372088832
PASS: numbers.test: logcount: 2^i: 70368744177664
PASS: numbers.test: logcount: 2^i: 140737488355328
PASS: numbers.test: logcount: 2^i: 281474976710656
PASS: numbers.test: logcount: 2^i: 562949953421312
PASS: numbers.test: logcount: 2^i: 1125899906842624
PASS: numbers.test: logcount: 2^i: 2251799813685248
PASS: numbers.test: logcount: 2^i: 4503599627370496
PASS: numbers.test: logcount: 2^i: 9007199254740992
PASS: numbers.test: logcount: 2^i: 18014398509481984
PASS: numbers.test: logcount: 2^i: 36028797018963968
PASS: numbers.test: logcount: 2^i: 72057594037927936
PASS: numbers.test: logcount: 2^i: 144115188075855872
PASS: numbers.test: logcount: 2^i: 288230376151711744
PASS: numbers.test: logcount: 2^i: 576460752303423488
PASS: numbers.test: logcount: 2^i: 1152921504606846976
PASS: numbers.test: logcount: 2^i: 2305843009213693952
PASS: numbers.test: logcount: 2^i: 4611686018427387904
PASS: numbers.test: logcount: 2^i: 9223372036854775808
PASS: numbers.test: logcount: 2^i: 18446744073709551616
PASS: numbers.test: logcount: 2^i: 36893488147419103232
PASS: numbers.test: logcount: 2^i: 73786976294838206464
PASS: numbers.test: logcount: 2^i: 147573952589676412928
PASS: numbers.test: logcount: 2^i: 295147905179352825856
PASS: numbers.test: logcount: 2^i: 590295810358705651712
PASS: numbers.test: logcount: 2^i: 1180591620717411303424
PASS: numbers.test: logcount: 2^i: 2361183241434822606848
PASS: numbers.test: logcount: 2^i: 4722366482869645213696
PASS: numbers.test: logcount: 2^i: 9444732965739290427392
PASS: numbers.test: logcount: 2^i: 18889465931478580854784
PASS: numbers.test: logcount: 2^i: 37778931862957161709568
PASS: numbers.test: logcount: 2^i: 75557863725914323419136
PASS: numbers.test: logcount: 2^i: 151115727451828646838272
PASS: numbers.test: logcount: 2^i: 302231454903657293676544
PASS: numbers.test: logcount: 2^i: 604462909807314587353088
PASS: numbers.test: logcount: 2^i: 1208925819614629174706176
PASS: numbers.test: logcount: 2^i: 2417851639229258349412352
PASS: numbers.test: logcount: 2^i: 4835703278458516698824704
PASS: numbers.test: logcount: 2^i: 9671406556917033397649408
PASS: numbers.test: logcount: 2^i: 19342813113834066795298816
PASS: numbers.test: logcount: 2^i: 38685626227668133590597632
PASS: numbers.test: logcount: 2^i: 77371252455336267181195264
PASS: numbers.test: logcount: 2^i: 154742504910672534362390528
PASS: numbers.test: logcount: 2^i: 309485009821345068724781056
PASS: numbers.test: logcount: 2^i: 618970019642690137449562112
PASS: numbers.test: logcount: 2^i: 1237940039285380274899124224
PASS: numbers.test: logcount: 2^i: 2475880078570760549798248448
PASS: numbers.test: logcount: 2^i: 4951760157141521099596496896
PASS: numbers.test: logcount: 2^i: 9903520314283042199192993792
PASS: numbers.test: logcount: 2^i: 19807040628566084398385987584
PASS: numbers.test: logcount: 2^i: 39614081257132168796771975168
PASS: numbers.test: logcount: 2^i: 79228162514264337593543950336
PASS: numbers.test: logcount: 2^i: 158456325028528675187087900672
PASS: numbers.test: logcount: 2^i: 316912650057057350374175801344
PASS: numbers.test: logcount: 2^i: 633825300114114700748351602688
PASS: numbers.test: logcount: 2^i: 1267650600228229401496703205376
PASS: numbers.test: logcount: 2^i: 2535301200456458802993406410752
PASS: numbers.test: logcount: 2^i: 5070602400912917605986812821504
PASS: numbers.test: logcount: 2^i: 10141204801825835211973625643008
PASS: numbers.test: logcount: 2^i: 20282409603651670423947251286016
PASS: numbers.test: logcount: 2^i: 40564819207303340847894502572032
PASS: numbers.test: logcount: 2^i: 81129638414606681695789005144064
PASS: numbers.test: logcount: 2^i: 162259276829213363391578010288128
PASS: numbers.test: logcount: 2^i: 324518553658426726783156020576256
PASS: numbers.test: logcount: 2^i: 649037107316853453566312041152512
PASS: numbers.test: logcount: 2^i: 1298074214633706907132624082305024
PASS: numbers.test: logcount: 2^i: 2596148429267413814265248164610048
PASS: numbers.test: logcount: 2^i: 5192296858534827628530496329220096
PASS: numbers.test: logcount: 2^i: 10384593717069655257060992658440192
PASS: numbers.test: logcount: 2^i: 20769187434139310514121985316880384
PASS: numbers.test: logcount: 2^i: 41538374868278621028243970633760768
PASS: numbers.test: logcount: 2^i: 83076749736557242056487941267521536
PASS: numbers.test: logcount: 2^i: 166153499473114484112975882535043072
PASS: numbers.test: logcount: 2^i: 332306998946228968225951765070086144
PASS: numbers.test: logcount: 2^i: 664613997892457936451903530140172288
PASS: numbers.test: logcount: 2^i: 1329227995784915872903807060280344576
PASS: numbers.test: logcount: 2^i: 2658455991569831745807614120560689152
PASS: numbers.test: logcount: 2^i: 5316911983139663491615228241121378304
PASS: numbers.test: logcount: 2^i: 10633823966279326983230456482242756608
PASS: numbers.test: logcount: 2^i: 21267647932558653966460912964485513216
PASS: numbers.test: logcount: 2^i: 42535295865117307932921825928971026432
PASS: numbers.test: logcount: 2^i: 85070591730234615865843651857942052864
PASS: numbers.test: logcount: 2^i: 170141183460469231731687303715884105728
PASS: numbers.test: logcount: 2^i: 340282366920938463463374607431768211456
PASS: numbers.test: logcount: 2^i: 680564733841876926926749214863536422912
PASS: numbers.test: logcount: 2^i: 1361129467683753853853498429727072845824
PASS: numbers.test: logcount: 2^i: 2722258935367507707706996859454145691648
PASS: numbers.test: logcount: 2^i: 5444517870735015415413993718908291383296
PASS: numbers.test: logcount: 2^i: 10889035741470030830827987437816582766592
PASS: numbers.test: logcount: 2^i: 21778071482940061661655974875633165533184
PASS: numbers.test: logcount: 2^i: 43556142965880123323311949751266331066368
PASS: numbers.test: logcount: 2^i: 87112285931760246646623899502532662132736
PASS: numbers.test: logcount: 2^i: 174224571863520493293247799005065324265472
PASS: numbers.test: logcount: 2^i: 348449143727040986586495598010130648530944
PASS: numbers.test: logcount: 2^i: 696898287454081973172991196020261297061888
PASS: numbers.test: logcount: 2^i: 1393796574908163946345982392040522594123776
PASS: numbers.test: logcount: 2^i: 2787593149816327892691964784081045188247552
PASS: numbers.test: logcount: 2^i: 5575186299632655785383929568162090376495104
PASS: numbers.test: logcount: 2^i: 11150372599265311570767859136324180752990208
PASS: numbers.test: logcount: 2^i: 22300745198530623141535718272648361505980416
PASS: numbers.test: logcount: 2^i: 44601490397061246283071436545296723011960832
PASS: numbers.test: logcount: 2^i: 89202980794122492566142873090593446023921664
PASS: numbers.test: logcount: 2^i: 178405961588244985132285746181186892047843328
PASS: numbers.test: logcount: 2^i: 356811923176489970264571492362373784095686656
PASS: numbers.test: logcount: 2^i: 713623846352979940529142984724747568191373312
PASS: numbers.test: logcount: 2^i: 1427247692705959881058285969449495136382746624
PASS: numbers.test: logcount: 2^i: 2854495385411919762116571938898990272765493248
PASS: numbers.test: logcount: 2^i: 5708990770823839524233143877797980545530986496
PASS: numbers.test: logcount: 2^i: 11417981541647679048466287755595961091061972992
PASS: numbers.test: logcount: 2^i: 22835963083295358096932575511191922182123945984
PASS: numbers.test: logcount: 2^i: 45671926166590716193865151022383844364247891968
PASS: numbers.test: logcount: 2^i: 91343852333181432387730302044767688728495783936
PASS: numbers.test: logcount: 2^i: 182687704666362864775460604089535377456991567872
PASS: numbers.test: logcount: 2^i: 365375409332725729550921208179070754913983135744
PASS: numbers.test: logcount: 2^i: 730750818665451459101842416358141509827966271488
PASS: numbers.test: logcount: 2^i: 1461501637330902918203684832716283019655932542976
PASS: numbers.test: logcount: 2^i: 2923003274661805836407369665432566039311865085952
PASS: numbers.test: logcount: 2^i: 5846006549323611672814739330865132078623730171904
PASS: numbers.test: logcount: 2^i: 11692013098647223345629478661730264157247460343808
PASS: numbers.test: logcount: 2^i: 23384026197294446691258957323460528314494920687616
PASS: numbers.test: logcount: 2^i: 46768052394588893382517914646921056628989841375232
PASS: numbers.test: logcount: 2^i: 93536104789177786765035829293842113257979682750464
PASS: numbers.test: logcount: 2^i: 187072209578355573530071658587684226515959365500928
PASS: numbers.test: logcount: 2^i: 374144419156711147060143317175368453031918731001856
PASS: numbers.test: logcount: 2^i: 748288838313422294120286634350736906063837462003712
PASS: numbers.test: logcount: 2^i: 1496577676626844588240573268701473812127674924007424
PASS: numbers.test: logcount: 2^i: 2993155353253689176481146537402947624255349848014848
PASS: numbers.test: logcount: 2^i: 5986310706507378352962293074805895248510699696029696
PASS: numbers.test: logcount: 2^i: 11972621413014756705924586149611790497021399392059392
PASS: numbers.test: logcount: 2^i: 23945242826029513411849172299223580994042798784118784
PASS: numbers.test: logcount: 2^i: 47890485652059026823698344598447161988085597568237568
PASS: numbers.test: logcount: 2^i: 95780971304118053647396689196894323976171195136475136
PASS: numbers.test: logcount: 2^i: 191561942608236107294793378393788647952342390272950272
PASS: numbers.test: logcount: 2^i: 383123885216472214589586756787577295904684780545900544
PASS: numbers.test: logcount: 2^i: 766247770432944429179173513575154591809369561091801088
PASS: numbers.test: logcount: 2^i: 1532495540865888858358347027150309183618739122183602176
PASS: numbers.test: logcount: 2^i: 3064991081731777716716694054300618367237478244367204352
PASS: numbers.test: logcount: 2^i: 6129982163463555433433388108601236734474956488734408704
PASS: numbers.test: logcount: 2^i: 12259964326927110866866776217202473468949912977468817408
PASS: numbers.test: logcount: 2^i: 24519928653854221733733552434404946937899825954937634816
PASS: numbers.test: logcount: 2^i: 49039857307708443467467104868809893875799651909875269632
PASS: numbers.test: logcount: 2^i: 98079714615416886934934209737619787751599303819750539264
PASS: numbers.test: logcount: 2^i: 196159429230833773869868419475239575503198607639501078528
PASS: numbers.test: logcount: 2^i: 392318858461667547739736838950479151006397215279002157056
PASS: numbers.test: logcount: 2^i: 784637716923335095479473677900958302012794430558004314112
PASS: numbers.test: logcount: 2^i: 1569275433846670190958947355801916604025588861116008628224
PASS: numbers.test: logcount: 2^i: 3138550867693340381917894711603833208051177722232017256448
PASS: numbers.test: logcount: 2^i: 6277101735386680763835789423207666416102355444464034512896
PASS: numbers.test: logcount: 2^i: 12554203470773361527671578846415332832204710888928069025792
PASS: numbers.test: logcount: 2^i: 25108406941546723055343157692830665664409421777856138051584
PASS: numbers.test: logcount: 2^i: 50216813883093446110686315385661331328818843555712276103168
PASS: numbers.test: logcount: 2^i: 100433627766186892221372630771322662657637687111424552206336
PASS: numbers.test: logcount: 2^i: 200867255532373784442745261542645325315275374222849104412672
PASS: numbers.test: logcount: 2^i: 401734511064747568885490523085290650630550748445698208825344
PASS: numbers.test: logcount: 2^i: 803469022129495137770981046170581301261101496891396417650688
PASS: numbers.test: logcount: 2^i: 1606938044258990275541962092341162602522202993782792835301376
PASS: numbers.test: logcount: 2^i: 3213876088517980551083924184682325205044405987565585670602752
PASS: numbers.test: logcount: 2^i: 6427752177035961102167848369364650410088811975131171341205504
PASS: numbers.test: logcount: 2^i: 12855504354071922204335696738729300820177623950262342682411008
PASS: numbers.test: logcount: 2^i: 25711008708143844408671393477458601640355247900524685364822016
PASS: numbers.test: logcount: 2^i: 51422017416287688817342786954917203280710495801049370729644032
PASS: numbers.test: logcount: 2^i: 102844034832575377634685573909834406561420991602098741459288064
PASS: numbers.test: logcount: 2^i: 205688069665150755269371147819668813122841983204197482918576128
PASS: numbers.test: logcount: 2^i: 411376139330301510538742295639337626245683966408394965837152256
PASS: numbers.test: logcount: 2^i: 822752278660603021077484591278675252491367932816789931674304512
PASS: numbers.test: logcount: 2^i: 1645504557321206042154969182557350504982735865633579863348609024
PASS: numbers.test: logcount: 2^i: 3291009114642412084309938365114701009965471731267159726697218048
PASS: numbers.test: logcount: 2^i: 6582018229284824168619876730229402019930943462534319453394436096
PASS: numbers.test: logcount: 2^i: 13164036458569648337239753460458804039861886925068638906788872192
PASS: numbers.test: logcount: 2^i: 26328072917139296674479506920917608079723773850137277813577744384
PASS: numbers.test: logcount: 2^i: 52656145834278593348959013841835216159447547700274555627155488768
PASS: numbers.test: logcount: 2^i: 105312291668557186697918027683670432318895095400549111254310977536
PASS: numbers.test: logcount: 2^i: 210624583337114373395836055367340864637790190801098222508621955072
PASS: numbers.test: logcount: 2^i: 421249166674228746791672110734681729275580381602196445017243910144
PASS: numbers.test: logcount: 2^i: 842498333348457493583344221469363458551160763204392890034487820288
PASS: numbers.test: logcount: 2^i: 1684996666696914987166688442938726917102321526408785780068975640576
PASS: numbers.test: logcount: 2^i: 3369993333393829974333376885877453834204643052817571560137951281152
PASS: numbers.test: logcount: 2^i: 6739986666787659948666753771754907668409286105635143120275902562304
PASS: numbers.test: logcount: 2^i: 13479973333575319897333507543509815336818572211270286240551805124608
PASS: numbers.test: logcount: 2^i: 26959946667150639794667015087019630673637144422540572481103610249216
PASS: numbers.test: logcount: 2^i: 53919893334301279589334030174039261347274288845081144962207220498432
PASS: numbers.test: logcount: 2^i: 107839786668602559178668060348078522694548577690162289924414440996864
PASS: numbers.test: logcount: 2^i: 215679573337205118357336120696157045389097155380324579848828881993728
PASS: numbers.test: logcount: 2^i: 431359146674410236714672241392314090778194310760649159697657763987456
PASS: numbers.test: logcount: 2^i: 862718293348820473429344482784628181556388621521298319395315527974912
PASS: numbers.test: logcount: 2^i: 1725436586697640946858688965569256363112777243042596638790631055949824
PASS: numbers.test: logcount: 2^i: 3450873173395281893717377931138512726225554486085193277581262111899648
PASS: numbers.test: logcount: 2^i: 6901746346790563787434755862277025452451108972170386555162524223799296
PASS: numbers.test: logcount: 2^i: 13803492693581127574869511724554050904902217944340773110325048447598592
PASS: numbers.test: logcount: 2^i: 27606985387162255149739023449108101809804435888681546220650096895197184
PASS: numbers.test: logcount: 2^i: 55213970774324510299478046898216203619608871777363092441300193790394368
PASS: numbers.test: logcount: 2^i: 110427941548649020598956093796432407239217743554726184882600387580788736
PASS: numbers.test: logcount: 2^i: 220855883097298041197912187592864814478435487109452369765200775161577472
PASS: numbers.test: logcount: 2^i: 441711766194596082395824375185729628956870974218904739530401550323154944
PASS: numbers.test: logcount: 2^i: 883423532389192164791648750371459257913741948437809479060803100646309888
PASS: numbers.test: logcount: 2^i: 1766847064778384329583297500742918515827483896875618958121606201292619776
PASS: numbers.test: logcount: 2^i: 3533694129556768659166595001485837031654967793751237916243212402585239552
PASS: numbers.test: logcount: 2^i: 7067388259113537318333190002971674063309935587502475832486424805170479104
PASS: numbers.test: logcount: 2^i: 14134776518227074636666380005943348126619871175004951664972849610340958208
PASS: numbers.test: logcount: 2^i: 28269553036454149273332760011886696253239742350009903329945699220681916416
PASS: numbers.test: logcount: 2^i: 56539106072908298546665520023773392506479484700019806659891398441363832832
PASS: numbers.test: logcount: 2^i: 113078212145816597093331040047546785012958969400039613319782796882727665664
PASS: numbers.test: logcount: 2^i: 226156424291633194186662080095093570025917938800079226639565593765455331328
PASS: numbers.test: logcount: 2^i: 452312848583266388373324160190187140051835877600158453279131187530910662656
PASS: numbers.test: logcount: 2^i: 904625697166532776746648320380374280103671755200316906558262375061821325312
PASS: numbers.test: logcount: 2^i: 1809251394333065553493296640760748560207343510400633813116524750123642650624
PASS: numbers.test: logcount: 2^i: 3618502788666131106986593281521497120414687020801267626233049500247285301248
PASS: numbers.test: logcount: 2^i: 7237005577332262213973186563042994240829374041602535252466099000494570602496
PASS: numbers.test: logcount: 2^i: 14474011154664524427946373126085988481658748083205070504932198000989141204992
PASS: numbers.test: logcount: 2^i: 28948022309329048855892746252171976963317496166410141009864396001978282409984
PASS: numbers.test: logcount: 2^i: 57896044618658097711785492504343953926634992332820282019728792003956564819968
PASS: numbers.test: logcount: 2^i: 115792089237316195423570985008687907853269984665640564039457584007913129639936
PASS: numbers.test: logcount: 2^i-1: 0
PASS: numbers.test: logcount: 2^i-1: 1
PASS: numbers.test: logcount: 2^i-1: 3
PASS: numbers.test: logcount: 2^i-1: 7
PASS: numbers.test: logcount: 2^i-1: 15
PASS: numbers.test: logcount: 2^i-1: 31
PASS: numbers.test: logcount: 2^i-1: 63
PASS: numbers.test: logcount: 2^i-1: 127
PASS: numbers.test: logcount: 2^i-1: 255
PASS: numbers.test: logcount: 2^i-1: 511
PASS: numbers.test: logcount: 2^i-1: 1023
PASS: numbers.test: logcount: 2^i-1: 2047
PASS: numbers.test: logcount: 2^i-1: 4095
PASS: numbers.test: logcount: 2^i-1: 8191
PASS: numbers.test: logcount: 2^i-1: 16383
PASS: numbers.test: logcount: 2^i-1: 32767
PASS: numbers.test: logcount: 2^i-1: 65535
PASS: numbers.test: logcount: 2^i-1: 131071
PASS: numbers.test: logcount: 2^i-1: 262143
PASS: numbers.test: logcount: 2^i-1: 524287
PASS: numbers.test: logcount: 2^i-1: 1048575
PASS: numbers.test: logcount: 2^i-1: 2097151
PASS: numbers.test: logcount: 2^i-1: 4194303
PASS: numbers.test: logcount: 2^i-1: 8388607
PASS: numbers.test: logcount: 2^i-1: 16777215
PASS: numbers.test: logcount: 2^i-1: 33554431
PASS: numbers.test: logcount: 2^i-1: 67108863
PASS: numbers.test: logcount: 2^i-1: 134217727
PASS: numbers.test: logcount: 2^i-1: 268435455
PASS: numbers.test: logcount: 2^i-1: 536870911
PASS: numbers.test: logcount: 2^i-1: 1073741823
PASS: numbers.test: logcount: 2^i-1: 2147483647
PASS: numbers.test: logcount: 2^i-1: 4294967295
PASS: numbers.test: logcount: 2^i-1: 8589934591
PASS: numbers.test: logcount: 2^i-1: 17179869183
PASS: numbers.test: logcount: 2^i-1: 34359738367
PASS: numbers.test: logcount: 2^i-1: 68719476735
PASS: numbers.test: logcount: 2^i-1: 137438953471
PASS: numbers.test: logcount: 2^i-1: 274877906943
PASS: numbers.test: logcount: 2^i-1: 549755813887
PASS: numbers.test: logcount: 2^i-1: 1099511627775
PASS: numbers.test: logcount: 2^i-1: 2199023255551
PASS: numbers.test: logcount: 2^i-1: 4398046511103
PASS: numbers.test: logcount: 2^i-1: 8796093022207
PASS: numbers.test: logcount: 2^i-1: 17592186044415
PASS: numbers.test: logcount: 2^i-1: 35184372088831
PASS: numbers.test: logcount: 2^i-1: 70368744177663
PASS: numbers.test: logcount: 2^i-1: 140737488355327
PASS: numbers.test: logcount: 2^i-1: 281474976710655
PASS: numbers.test: logcount: 2^i-1: 562949953421311
PASS: numbers.test: logcount: 2^i-1: 1125899906842623
PASS: numbers.test: logcount: 2^i-1: 2251799813685247
PASS: numbers.test: logcount: 2^i-1: 4503599627370495
PASS: numbers.test: logcount: 2^i-1: 9007199254740991
PASS: numbers.test: logcount: 2^i-1: 18014398509481983
PASS: numbers.test: logcount: 2^i-1: 36028797018963967
PASS: numbers.test: logcount: 2^i-1: 72057594037927935
PASS: numbers.test: logcount: 2^i-1: 144115188075855871
PASS: numbers.test: logcount: 2^i-1: 288230376151711743
PASS: numbers.test: logcount: 2^i-1: 576460752303423487
PASS: numbers.test: logcount: 2^i-1: 1152921504606846975
PASS: numbers.test: logcount: 2^i-1: 2305843009213693951
PASS: numbers.test: logcount: 2^i-1: 4611686018427387903
PASS: numbers.test: logcount: 2^i-1: 9223372036854775807
PASS: numbers.test: logcount: 2^i-1: 18446744073709551615
PASS: numbers.test: logcount: 2^i-1: 36893488147419103231
PASS: numbers.test: logcount: 2^i-1: 73786976294838206463
PASS: numbers.test: logcount: 2^i-1: 147573952589676412927
PASS: numbers.test: logcount: 2^i-1: 295147905179352825855
PASS: numbers.test: logcount: 2^i-1: 590295810358705651711
PASS: numbers.test: logcount: 2^i-1: 1180591620717411303423
PASS: numbers.test: logcount: 2^i-1: 2361183241434822606847
PASS: numbers.test: logcount: 2^i-1: 4722366482869645213695
PASS: numbers.test: logcount: 2^i-1: 9444732965739290427391
PASS: numbers.test: logcount: 2^i-1: 18889465931478580854783
PASS: numbers.test: logcount: 2^i-1: 37778931862957161709567
PASS: numbers.test: logcount: 2^i-1: 75557863725914323419135
PASS: numbers.test: logcount: 2^i-1: 151115727451828646838271
PASS: numbers.test: logcount: 2^i-1: 302231454903657293676543
PASS: numbers.test: logcount: 2^i-1: 604462909807314587353087
PASS: numbers.test: logcount: 2^i-1: 1208925819614629174706175
PASS: numbers.test: logcount: 2^i-1: 2417851639229258349412351
PASS: numbers.test: logcount: 2^i-1: 4835703278458516698824703
PASS: numbers.test: logcount: 2^i-1: 9671406556917033397649407
PASS: numbers.test: logcount: 2^i-1: 19342813113834066795298815
PASS: numbers.test: logcount: 2^i-1: 38685626227668133590597631
PASS: numbers.test: logcount: 2^i-1: 77371252455336267181195263
PASS: numbers.test: logcount: 2^i-1: 154742504910672534362390527
PASS: numbers.test: logcount: 2^i-1: 309485009821345068724781055
PASS: numbers.test: logcount: 2^i-1: 618970019642690137449562111
PASS: numbers.test: logcount: 2^i-1: 1237940039285380274899124223
PASS: numbers.test: logcount: 2^i-1: 2475880078570760549798248447
PASS: numbers.test: logcount: 2^i-1: 4951760157141521099596496895
PASS: numbers.test: logcount: 2^i-1: 9903520314283042199192993791
PASS: numbers.test: logcount: 2^i-1: 19807040628566084398385987583
PASS: numbers.test: logcount: 2^i-1: 39614081257132168796771975167
PASS: numbers.test: logcount: 2^i-1: 79228162514264337593543950335
PASS: numbers.test: logcount: 2^i-1: 158456325028528675187087900671
PASS: numbers.test: logcount: 2^i-1: 316912650057057350374175801343
PASS: numbers.test: logcount: 2^i-1: 633825300114114700748351602687
PASS: numbers.test: logcount: 2^i-1: 1267650600228229401496703205375
PASS: numbers.test: logcount: 2^i-1: 2535301200456458802993406410751
PASS: numbers.test: logcount: 2^i-1: 5070602400912917605986812821503
PASS: numbers.test: logcount: 2^i-1: 10141204801825835211973625643007
PASS: numbers.test: logcount: 2^i-1: 20282409603651670423947251286015
PASS: numbers.test: logcount: 2^i-1: 40564819207303340847894502572031
PASS: numbers.test: logcount: 2^i-1: 81129638414606681695789005144063
PASS: numbers.test: logcount: 2^i-1: 162259276829213363391578010288127
PASS: numbers.test: logcount: 2^i-1: 324518553658426726783156020576255
PASS: numbers.test: logcount: 2^i-1: 649037107316853453566312041152511
PASS: numbers.test: logcount: 2^i-1: 1298074214633706907132624082305023
PASS: numbers.test: logcount: 2^i-1: 2596148429267413814265248164610047
PASS: numbers.test: logcount: 2^i-1: 5192296858534827628530496329220095
PASS: numbers.test: logcount: 2^i-1: 10384593717069655257060992658440191
PASS: numbers.test: logcount: 2^i-1: 20769187434139310514121985316880383
PASS: numbers.test: logcount: 2^i-1: 41538374868278621028243970633760767
PASS: numbers.test: logcount: 2^i-1: 83076749736557242056487941267521535
PASS: numbers.test: logcount: 2^i-1: 166153499473114484112975882535043071
PASS: numbers.test: logcount: 2^i-1: 332306998946228968225951765070086143
PASS: numbers.test: logcount: 2^i-1: 664613997892457936451903530140172287
PASS: numbers.test: logcount: 2^i-1: 1329227995784915872903807060280344575
PASS: numbers.test: logcount: 2^i-1: 2658455991569831745807614120560689151
PASS: numbers.test: logcount: 2^i-1: 5316911983139663491615228241121378303
PASS: numbers.test: logcount: 2^i-1: 10633823966279326983230456482242756607
PASS: numbers.test: logcount: 2^i-1: 21267647932558653966460912964485513215
PASS: numbers.test: logcount: 2^i-1: 42535295865117307932921825928971026431
PASS: numbers.test: logcount: 2^i-1: 85070591730234615865843651857942052863
PASS: numbers.test: logcount: 2^i-1: 170141183460469231731687303715884105727
PASS: numbers.test: logcount: 2^i-1: 340282366920938463463374607431768211455
PASS: numbers.test: logcount: 2^i-1: 680564733841876926926749214863536422911
PASS: numbers.test: logcount: 2^i-1: 1361129467683753853853498429727072845823
PASS: numbers.test: logcount: 2^i-1: 2722258935367507707706996859454145691647
PASS: numbers.test: logcount: 2^i-1: 5444517870735015415413993718908291383295
PASS: numbers.test: logcount: 2^i-1: 10889035741470030830827987437816582766591
PASS: numbers.test: logcount: 2^i-1: 21778071482940061661655974875633165533183
PASS: numbers.test: logcount: 2^i-1: 43556142965880123323311949751266331066367
PASS: numbers.test: logcount: 2^i-1: 87112285931760246646623899502532662132735
PASS: numbers.test: logcount: 2^i-1: 174224571863520493293247799005065324265471
PASS: numbers.test: logcount: 2^i-1: 348449143727040986586495598010130648530943
PASS: numbers.test: logcount: 2^i-1: 696898287454081973172991196020261297061887
PASS: numbers.test: logcount: 2^i-1: 1393796574908163946345982392040522594123775
PASS: numbers.test: logcount: 2^i-1: 2787593149816327892691964784081045188247551
PASS: numbers.test: logcount: 2^i-1: 5575186299632655785383929568162090376495103
PASS: numbers.test: logcount: 2^i-1: 11150372599265311570767859136324180752990207
PASS: numbers.test: logcount: 2^i-1: 22300745198530623141535718272648361505980415
PASS: numbers.test: logcount: 2^i-1: 44601490397061246283071436545296723011960831
PASS: numbers.test: logcount: 2^i-1: 89202980794122492566142873090593446023921663
PASS: numbers.test: logcount: 2^i-1: 178405961588244985132285746181186892047843327
PASS: numbers.test: logcount: 2^i-1: 356811923176489970264571492362373784095686655
PASS: numbers.test: logcount: 2^i-1: 713623846352979940529142984724747568191373311
PASS: numbers.test: logcount: 2^i-1: 1427247692705959881058285969449495136382746623
PASS: numbers.test: logcount: 2^i-1: 2854495385411919762116571938898990272765493247
PASS: numbers.test: logcount: 2^i-1: 5708990770823839524233143877797980545530986495
PASS: numbers.test: logcount: 2^i-1: 11417981541647679048466287755595961091061972991
PASS: numbers.test: logcount: 2^i-1: 22835963083295358096932575511191922182123945983
PASS: numbers.test: logcount: 2^i-1: 45671926166590716193865151022383844364247891967
PASS: numbers.test: logcount: 2^i-1: 91343852333181432387730302044767688728495783935
PASS: numbers.test: logcount: 2^i-1: 182687704666362864775460604089535377456991567871
PASS: numbers.test: logcount: 2^i-1: 365375409332725729550921208179070754913983135743
PASS: numbers.test: logcount: 2^i-1: 730750818665451459101842416358141509827966271487
PASS: numbers.test: logcount: 2^i-1: 1461501637330902918203684832716283019655932542975
PASS: numbers.test: logcount: 2^i-1: 2923003274661805836407369665432566039311865085951
PASS: numbers.test: logcount: 2^i-1: 5846006549323611672814739330865132078623730171903
PASS: numbers.test: logcount: 2^i-1: 11692013098647223345629478661730264157247460343807
PASS: numbers.test: logcount: 2^i-1: 23384026197294446691258957323460528314494920687615
PASS: numbers.test: logcount: 2^i-1: 46768052394588893382517914646921056628989841375231
PASS: numbers.test: logcount: 2^i-1: 93536104789177786765035829293842113257979682750463
PASS: numbers.test: logcount: 2^i-1: 187072209578355573530071658587684226515959365500927
PASS: numbers.test: logcount: 2^i-1: 374144419156711147060143317175368453031918731001855
PASS: numbers.test: logcount: 2^i-1: 748288838313422294120286634350736906063837462003711
PASS: numbers.test: logcount: 2^i-1: 1496577676626844588240573268701473812127674924007423
PASS: numbers.test: logcount: 2^i-1: 2993155353253689176481146537402947624255349848014847
PASS: numbers.test: logcount: 2^i-1: 5986310706507378352962293074805895248510699696029695
PASS: numbers.test: logcount: 2^i-1: 11972621413014756705924586149611790497021399392059391
PASS: numbers.test: logcount: 2^i-1: 23945242826029513411849172299223580994042798784118783
PASS: numbers.test: logcount: 2^i-1: 47890485652059026823698344598447161988085597568237567
PASS: numbers.test: logcount: 2^i-1: 95780971304118053647396689196894323976171195136475135
PASS: numbers.test: logcount: 2^i-1: 191561942608236107294793378393788647952342390272950271
PASS: numbers.test: logcount: 2^i-1: 383123885216472214589586756787577295904684780545900543
PASS: numbers.test: logcount: 2^i-1: 766247770432944429179173513575154591809369561091801087
PASS: numbers.test: logcount: 2^i-1: 1532495540865888858358347027150309183618739122183602175
PASS: numbers.test: logcount: 2^i-1: 3064991081731777716716694054300618367237478244367204351
PASS: numbers.test: logcount: 2^i-1: 6129982163463555433433388108601236734474956488734408703
PASS: numbers.test: logcount: 2^i-1: 12259964326927110866866776217202473468949912977468817407
PASS: numbers.test: logcount: 2^i-1: 24519928653854221733733552434404946937899825954937634815
PASS: numbers.test: logcount: 2^i-1: 49039857307708443467467104868809893875799651909875269631
PASS: numbers.test: logcount: 2^i-1: 98079714615416886934934209737619787751599303819750539263
PASS: numbers.test: logcount: 2^i-1: 196159429230833773869868419475239575503198607639501078527
PASS: numbers.test: logcount: 2^i-1: 392318858461667547739736838950479151006397215279002157055
PASS: numbers.test: logcount: 2^i-1: 784637716923335095479473677900958302012794430558004314111
PASS: numbers.test: logcount: 2^i-1: 1569275433846670190958947355801916604025588861116008628223
PASS: numbers.test: logcount: 2^i-1: 3138550867693340381917894711603833208051177722232017256447
PASS: numbers.test: logcount: 2^i-1: 6277101735386680763835789423207666416102355444464034512895
PASS: numbers.test: logcount: 2^i-1: 12554203470773361527671578846415332832204710888928069025791
PASS: numbers.test: logcount: 2^i-1: 25108406941546723055343157692830665664409421777856138051583
PASS: numbers.test: logcount: 2^i-1: 50216813883093446110686315385661331328818843555712276103167
PASS: numbers.test: logcount: 2^i-1: 100433627766186892221372630771322662657637687111424552206335
PASS: numbers.test: logcount: 2^i-1: 200867255532373784442745261542645325315275374222849104412671
PASS: numbers.test: logcount: 2^i-1: 401734511064747568885490523085290650630550748445698208825343
PASS: numbers.test: logcount: 2^i-1: 803469022129495137770981046170581301261101496891396417650687
PASS: numbers.test: logcount: 2^i-1: 1606938044258990275541962092341162602522202993782792835301375
PASS: numbers.test: logcount: 2^i-1: 3213876088517980551083924184682325205044405987565585670602751
PASS: numbers.test: logcount: 2^i-1: 6427752177035961102167848369364650410088811975131171341205503
PASS: numbers.test: logcount: 2^i-1: 12855504354071922204335696738729300820177623950262342682411007
PASS: numbers.test: logcount: 2^i-1: 25711008708143844408671393477458601640355247900524685364822015
PASS: numbers.test: logcount: 2^i-1: 51422017416287688817342786954917203280710495801049370729644031
PASS: numbers.test: logcount: 2^i-1: 102844034832575377634685573909834406561420991602098741459288063
PASS: numbers.test: logcount: 2^i-1: 205688069665150755269371147819668813122841983204197482918576127
PASS: numbers.test: logcount: 2^i-1: 411376139330301510538742295639337626245683966408394965837152255
PASS: numbers.test: logcount: 2^i-1: 822752278660603021077484591278675252491367932816789931674304511
PASS: numbers.test: logcount: 2^i-1: 1645504557321206042154969182557350504982735865633579863348609023
PASS: numbers.test: logcount: 2^i-1: 3291009114642412084309938365114701009965471731267159726697218047
PASS: numbers.test: logcount: 2^i-1: 6582018229284824168619876730229402019930943462534319453394436095
PASS: numbers.test: logcount: 2^i-1: 13164036458569648337239753460458804039861886925068638906788872191
PASS: numbers.test: logcount: 2^i-1: 26328072917139296674479506920917608079723773850137277813577744383
PASS: numbers.test: logcount: 2^i-1: 52656145834278593348959013841835216159447547700274555627155488767
PASS: numbers.test: logcount: 2^i-1: 105312291668557186697918027683670432318895095400549111254310977535
PASS: numbers.test: logcount: 2^i-1: 210624583337114373395836055367340864637790190801098222508621955071
PASS: numbers.test: logcount: 2^i-1: 421249166674228746791672110734681729275580381602196445017243910143
PASS: numbers.test: logcount: 2^i-1: 842498333348457493583344221469363458551160763204392890034487820287
PASS: numbers.test: logcount: 2^i-1: 1684996666696914987166688442938726917102321526408785780068975640575
PASS: numbers.test: logcount: 2^i-1: 3369993333393829974333376885877453834204643052817571560137951281151
PASS: numbers.test: logcount: 2^i-1: 6739986666787659948666753771754907668409286105635143120275902562303
PASS: numbers.test: logcount: 2^i-1: 13479973333575319897333507543509815336818572211270286240551805124607
PASS: numbers.test: logcount: 2^i-1: 26959946667150639794667015087019630673637144422540572481103610249215
PASS: numbers.test: logcount: 2^i-1: 53919893334301279589334030174039261347274288845081144962207220498431
PASS: numbers.test: logcount: 2^i-1: 107839786668602559178668060348078522694548577690162289924414440996863
PASS: numbers.test: logcount: 2^i-1: 215679573337205118357336120696157045389097155380324579848828881993727
PASS: numbers.test: logcount: 2^i-1: 431359146674410236714672241392314090778194310760649159697657763987455
PASS: numbers.test: logcount: 2^i-1: 862718293348820473429344482784628181556388621521298319395315527974911
PASS: numbers.test: logcount: 2^i-1: 1725436586697640946858688965569256363112777243042596638790631055949823
PASS: numbers.test: logcount: 2^i-1: 3450873173395281893717377931138512726225554486085193277581262111899647
PASS: numbers.test: logcount: 2^i-1: 6901746346790563787434755862277025452451108972170386555162524223799295
PASS: numbers.test: logcount: 2^i-1: 13803492693581127574869511724554050904902217944340773110325048447598591
PASS: numbers.test: logcount: 2^i-1: 27606985387162255149739023449108101809804435888681546220650096895197183
PASS: numbers.test: logcount: 2^i-1: 55213970774324510299478046898216203619608871777363092441300193790394367
PASS: numbers.test: logcount: 2^i-1: 110427941548649020598956093796432407239217743554726184882600387580788735
PASS: numbers.test: logcount: 2^i-1: 220855883097298041197912187592864814478435487109452369765200775161577471
PASS: numbers.test: logcount: 2^i-1: 441711766194596082395824375185729628956870974218904739530401550323154943
PASS: numbers.test: logcount: 2^i-1: 883423532389192164791648750371459257913741948437809479060803100646309887
PASS: numbers.test: logcount: 2^i-1: 1766847064778384329583297500742918515827483896875618958121606201292619775
PASS: numbers.test: logcount: 2^i-1: 3533694129556768659166595001485837031654967793751237916243212402585239551
PASS: numbers.test: logcount: 2^i-1: 7067388259113537318333190002971674063309935587502475832486424805170479103
PASS: numbers.test: logcount: 2^i-1: 14134776518227074636666380005943348126619871175004951664972849610340958207
PASS: numbers.test: logcount: 2^i-1: 28269553036454149273332760011886696253239742350009903329945699220681916415
PASS: numbers.test: logcount: 2^i-1: 56539106072908298546665520023773392506479484700019806659891398441363832831
PASS: numbers.test: logcount: 2^i-1: 113078212145816597093331040047546785012958969400039613319782796882727665663
PASS: numbers.test: logcount: 2^i-1: 226156424291633194186662080095093570025917938800079226639565593765455331327
PASS: numbers.test: logcount: 2^i-1: 452312848583266388373324160190187140051835877600158453279131187530910662655
PASS: numbers.test: logcount: 2^i-1: 904625697166532776746648320380374280103671755200316906558262375061821325311
PASS: numbers.test: logcount: 2^i-1: 1809251394333065553493296640760748560207343510400633813116524750123642650623
PASS: numbers.test: logcount: 2^i-1: 3618502788666131106986593281521497120414687020801267626233049500247285301247
PASS: numbers.test: logcount: 2^i-1: 7237005577332262213973186563042994240829374041602535252466099000494570602495
PASS: numbers.test: logcount: 2^i-1: 14474011154664524427946373126085988481658748083205070504932198000989141204991
PASS: numbers.test: logcount: 2^i-1: 28948022309329048855892746252171976963317496166410141009864396001978282409983
PASS: numbers.test: logcount: 2^i-1: 57896044618658097711785492504343953926634992332820282019728792003956564819967
PASS: numbers.test: logcount: 2^i-1: 115792089237316195423570985008687907853269984665640564039457584007913129639935
PASS: numbers.test: logior: (documented? logior)
PASS: numbers.test: logior: (eqv? -1 (logior (ash -1 1) 1))
PASS: numbers.test: logior: (-256 255 => -1)
PASS: numbers.test: logior: (255 -256 => -1)
PASS: numbers.test: logior: (-268435456 268435455 => -1)
PASS: numbers.test: logior: (268435455 -268435456 => -1)
PASS: numbers.test: logior: (-536870912 536870911 => -1)
PASS: numbers.test: logior: (536870911 -536870912 => -1)
PASS: numbers.test: logior: (-1073741824 1073741823 => -1)
PASS: numbers.test: logior: (1073741823 -1073741824 => -1)
PASS: numbers.test: logior: (-2147483648 2147483647 => -1)
PASS: numbers.test: logior: (2147483647 -2147483648 => -1)
PASS: numbers.test: logior: (-4294967296 4294967295 => -1)
PASS: numbers.test: logior: (4294967295 -4294967296 => -1)
PASS: numbers.test: logior: (-8589934592 8589934591 => -1)
PASS: numbers.test: logior: (8589934591 -8589934592 => -1)
PASS: numbers.test: logior: (-1152921504606846976 1152921504606846975 => -1)
PASS: numbers.test: logior: (1152921504606846975 -1152921504606846976 => -1)
PASS: numbers.test: logior: (-2305843009213693952 2305843009213693951 => -1)
PASS: numbers.test: logior: (2305843009213693951 -2305843009213693952 => -1)
PASS: numbers.test: logior: (-4611686018427387904 4611686018427387903 => -1)
PASS: numbers.test: logior: (4611686018427387903 -4611686018427387904 => -1)
PASS: numbers.test: logior: (-9223372036854775808 9223372036854775807 => -1)
PASS: numbers.test: logior: (9223372036854775807 -9223372036854775808 => -1)
PASS: numbers.test: logior: (-18446744073709551616 18446744073709551615 => -1)
PASS: numbers.test: logior: (18446744073709551615 -18446744073709551616 => -1)
PASS: numbers.test: logior: (-36893488147419103232 36893488147419103231 => -1)
PASS: numbers.test: logior: (36893488147419103231 -36893488147419103232 => -1)
PASS: numbers.test: logior: (-340282366920938463463374607431768211456 340282366920938463463374607431768211455 => -1)
PASS: numbers.test: logior: (340282366920938463463374607431768211455 -340282366920938463463374607431768211456 => -1)
PASS: numbers.test: lognot: (documented? lognot)
PASS: numbers.test: lognot: (= -1 (lognot 0))
PASS: numbers.test: lognot: (= 0 (lognot -1))
PASS: numbers.test: lognot: (= -2 (lognot 1))
PASS: numbers.test: lognot: (= 1 (lognot -2))
PASS: numbers.test: lognot: (= -340282366920938463463374607431768211456 (lognot 340282366920938463463374607431768211455))
PASS: numbers.test: lognot: (= 340282366920938463463374607431768211455 (lognot -340282366920938463463374607431768211456))
PASS: numbers.test: exact-integer-sqrt: (documented? exact-integer-sqrt)
PASS: numbers.test: exact-integer-sqrt: no args
PASS: numbers.test: exact-integer-sqrt: two args
PASS: numbers.test: exact-integer-sqrt: 0
PASS: numbers.test: exact-integer-sqrt: 1
PASS: numbers.test: exact-integer-sqrt: 9
PASS: numbers.test: exact-integer-sqrt: 10
PASS: numbers.test: exact-integer-sqrt: 536870911
PASS: numbers.test: exact-integer-sqrt: 536870912
PASS: numbers.test: exact-integer-sqrt: 288230375077969921
PASS: numbers.test: exact-integer-sqrt: 288230375077969922
PASS: numbers.test: exact-integer-sqrt: 10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
PASS: numbers.test: exact-integer-sqrt: 10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000003
PASS: numbers.test: exact-integer-sqrt: -1
PASS: numbers.test: exact-integer-sqrt: 1/9
PASS: numbers.test: exact-integer-sqrt: -536870912
PASS: numbers.test: exact-integer-sqrt: -536870913
PASS: numbers.test: exact-integer-sqrt: 1.0
PASS: numbers.test: exact-integer-sqrt: 1.5
PASS: numbers.test: exact-integer-sqrt: foo
PASS: numbers.test: exact-integer-sqrt: foo
PASS: numbers.test: sqrt: (documented? sqrt)
PASS: numbers.test: sqrt: no args
PASS: numbers.test: sqrt: two args
PASS: numbers.test: sqrt: (eqv? 0 (sqrt 0))
PASS: numbers.test: sqrt: (eqv? 1 (sqrt 1))
PASS: numbers.test: sqrt: (eqv? 2 (sqrt 4))
PASS: numbers.test: sqrt: (eqv? 3 (sqrt 9))
PASS: numbers.test: sqrt: (eqv? 4 (sqrt 16))
PASS: numbers.test: sqrt: (eqv? fixnum-max (sqrt (expt fixnum-max 2)))
PASS: numbers.test: sqrt: (eqv? (+ 1 fixnum-max) (sqrt (expt (+ 1 fixnum-max) 2)))
PASS: numbers.test: sqrt: (eqv? (expt 10 400) (sqrt (expt 10 800)))
PASS: numbers.test: sqrt: (eqv? (/ (expt 10 1000) (expt 13 1000)) (sqrt (/ (expt 10 2000) (expt 13 2000))))
PASS: numbers.test: sqrt: exact sqrt: (189812531 exact)
PASS: numbers.test: sqrt: exact sqrt: (189812531 *2)
PASS: numbers.test: sqrt: exact sqrt: (189812531 -1)
PASS: numbers.test: sqrt: exact sqrt: (189812531 1)
PASS: numbers.test: sqrt: exact sqrt: (189812531 negative)
PASS: numbers.test: sqrt: exact sqrt: (134217727 exact)
PASS: numbers.test: sqrt: exact sqrt: (134217727 *2)
PASS: numbers.test: sqrt: exact sqrt: (134217727 -1)
PASS: numbers.test: sqrt: exact sqrt: (134217727 1)
PASS: numbers.test: sqrt: exact sqrt: (134217727 negative)
PASS: numbers.test: sqrt: exact sqrt: (94906265 exact)
PASS: numbers.test: sqrt: exact sqrt: (94906265 *2)
PASS: numbers.test: sqrt: exact sqrt: (94906265 -1)
PASS: numbers.test: sqrt: exact sqrt: (94906265 1)
PASS: numbers.test: sqrt: exact sqrt: (94906265 negative)
PASS: numbers.test: sqrt: exact sqrt: (67108863 exact)
PASS: numbers.test: sqrt: exact sqrt: (67108863 *2)
PASS: numbers.test: sqrt: exact sqrt: (67108863 -1)
PASS: numbers.test: sqrt: exact sqrt: (67108863 1)
PASS: numbers.test: sqrt: exact sqrt: (67108863 negative)
PASS: numbers.test: sqrt: exact sqrt: (47453132 exact)
PASS: numbers.test: sqrt: exact sqrt: (47453132 *2)
PASS: numbers.test: sqrt: exact sqrt: (47453132 -1)
PASS: numbers.test: sqrt: exact sqrt: (47453132 1)
PASS: numbers.test: sqrt: exact sqrt: (47453132 negative)
PASS: numbers.test: sqrt: exact sqrt: (179769313486231570814527423731704356798070567525844996598917476803157260780028538760589558632766878171540458953514382464234321326889464182768467546703537516986049910576551282076245490090389328944075868508455133942304583236903222948165808559332123348274797826204144723168738177180919299881250404026184124858368 exact)
PASS: numbers.test: sqrt: exact sqrt: (179769313486231570814527423731704356798070567525844996598917476803157260780028538760589558632766878171540458953514382464234321326889464182768467546703537516986049910576551282076245490090389328944075868508455133942304583236903222948165808559332123348274797826204144723168738177180919299881250404026184124858368 *2)
PASS: numbers.test: sqrt: exact sqrt: (179769313486231570814527423731704356798070567525844996598917476803157260780028538760589558632766878171540458953514382464234321326889464182768467546703537516986049910576551282076245490090389328944075868508455133942304583236903222948165808559332123348274797826204144723168738177180919299881250404026184124858368 -1)
PASS: numbers.test: sqrt: exact sqrt: (179769313486231570814527423731704356798070567525844996598917476803157260780028538760589558632766878171540458953514382464234321326889464182768467546703537516986049910576551282076245490090389328944075868508455133942304583236903222948165808559332123348274797826204144723168738177180919299881250404026184124858368 1)
PASS: numbers.test: sqrt: exact sqrt: (179769313486231570814527423731704356798070567525844996598917476803157260780028538760589558632766878171540458953514382464234321326889464182768467546703537516986049910576551282076245490090389328944075868508455133942304583236903222948165808559332123348274797826204144723168738177180919299881250404026184124858368 negative)
PASS: numbers.test: sqrt: smallest inexact
PASS: numbers.test: sqrt: extreme ratios: (/ (expt 3 2001) (expt 2 2001))
PASS: numbers.test: sqrt: extreme ratios: (/ (expt 3 2001) (expt 2 2000))
PASS: numbers.test: sqrt: extreme ratios: (/ (expt 3 2000) (expt 2 2001))
PASS: numbers.test: sqrt: extreme ratios: (/ (expt 2 2001) (expt 3 2001))
PASS: numbers.test: sqrt: extreme ratios: (/ (expt 2 2001) (expt 3 2000))
PASS: numbers.test: sqrt: extreme ratios: (/ (expt 2 2000) (expt 3 2001))
PASS: numbers.test: sqrt: (eqv? (/ (expt 2 1000) (expt 3 1000)) (sqrt (/ (expt 2 2000) (expt 3 2000))))
PASS: numbers.test: sqrt: (eqv? (/ (expt 3 1000) (expt 2 1000)) (sqrt (/ (expt 3 2000) (expt 2 2000))))
PASS: numbers.test: sqrt: (eqv? 0.0+4.0i (sqrt -16))
PASS: numbers.test: sqrt: (eqv-loosely? 0.0+1.0e150i (sqrt -1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
PASS: numbers.test: sqrt: (eqv-loosely? 0.0+0.7071i (sqrt -1/2))
PASS: numbers.test: sqrt: (eqv? 0.0 (sqrt 0.0))
PASS: numbers.test: sqrt: (eqv? 1.0 (sqrt 1.0))
PASS: numbers.test: sqrt: (eqv-loosely? 2.0 (sqrt 4.0))
PASS: numbers.test: sqrt: (eqv-loosely? 31.62 (sqrt 1000.0))
PASS: numbers.test: sqrt: (eqv? 0.0+1.0i (sqrt -1.0))
PASS: numbers.test: sqrt: (eqv-loosely? 0.0+2.0i (sqrt -4.0))
PASS: numbers.test: sqrt: (eqv-loosely? 0.0+31.62i (sqrt -1000.0))
PASS: numbers.test: sqrt: +i swings back to 45deg angle
PASS: numbers.test: sqrt: -100i swings back to 45deg down
PASS: numbers.test: Number-theoretic division: euclidean/: documented?
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: fixnum-min / -1: (-536870912 -1)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-2 1)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-2 -1)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (2 1)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (2 -1)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-1 1)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-1 -1)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (1 1)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (1 -1)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (0 1)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (0 -1)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (1 1)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (1 -1)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-1 1)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-1 -1)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (2 1)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (2 -1)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-2 1)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-2 -1)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (3 1)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (3 -1)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-3 1)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-3 -1)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (4 1)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (4 -1)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-4 1)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-4 -1)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (5 1)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (5 -1)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-5 1)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-5 -1)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (7 1)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (7 -1)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-7 1)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-7 -1)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (10 1)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (10 -1)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-10 1)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-10 -1)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (12 1)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (12 -1)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-12 1)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-12 -1)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (15 1)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (15 -1)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-15 1)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-15 -1)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (16 1)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (16 -1)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-16 1)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-16 -1)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (19 1)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (19 -1)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-19 1)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-19 -1)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (20 1)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (20 -1)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-20 1)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-20 -1)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-1 1)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-1 -1)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (1 1)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (1 -1)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (0 1)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (0 -1)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (1 1)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (1 -1)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-1 1)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-1 -1)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (2 1)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (2 -1)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-2 1)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-2 -1)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (3 1)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (3 -1)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-3 1)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-3 -1)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (4 1)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (4 -1)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-4 1)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-4 -1)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (5 1)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (5 -1)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-5 1)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-5 -1)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (6 1)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (6 -1)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-6 1)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-6 -1)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (8 1)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (8 -1)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-8 1)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-8 -1)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (11 1)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (11 -1)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-11 1)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-11 -1)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (13 1)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (13 -1)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-13 1)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-13 -1)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (16 1)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (16 -1)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-16 1)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-16 -1)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (17 1)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (17 -1)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-17 1)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-17 -1)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (20 1)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (20 -1)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-20 1)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-20 -1)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (21 1)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (21 -1)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-21 1)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-21 -1)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (0 1)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (0 -1)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (1 1)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (1 -1)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-1 1)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-1 -1)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (2 1)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (2 -1)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-2 1)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-2 -1)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (3 1)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (3 -1)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-3 1)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-3 -1)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (4 1)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (4 -1)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-4 1)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-4 -1)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (5 1)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (5 -1)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-5 1)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-5 -1)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (6 1)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (6 -1)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-6 1)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-6 -1)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (7 1)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (7 -1)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-7 1)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-7 -1)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (9 1)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (9 -1)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-9 1)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-9 -1)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (12 1)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (12 -1)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-12 1)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-12 -1)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (14 1)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (14 -1)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-14 1)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-14 -1)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (17 1)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (17 -1)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-17 1)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-17 -1)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (18 1)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (18 -1)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-18 1)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-18 -1)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (21 1)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (21 -1)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-21 1)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-21 -1)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (22 1)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (22 -1)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-22 1)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-22 -1)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (3 1)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (3 -1)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-3 1)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-3 -1)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (4 1)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (4 -1)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-4 1)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-4 -1)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (5 1)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (5 -1)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-5 1)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-5 -1)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (6 1)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (6 -1)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-6 1)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-6 -1)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (7 1)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (7 -1)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-7 1)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-7 -1)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (8 1)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (8 -1)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-8 1)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-8 -1)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (9 1)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (9 -1)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-9 1)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-9 -1)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (10 1)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (10 -1)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-10 1)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-10 -1)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (12 1)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (12 -1)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-12 1)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-12 -1)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (15 1)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (15 -1)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-15 1)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-15 -1)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (17 1)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (17 -1)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-17 1)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-17 -1)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (20 1)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (20 -1)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-20 1)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-20 -1)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (21 1)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (21 -1)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-21 1)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-21 -1)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (24 1)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (24 -1)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-24 1)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-24 -1)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (25 1)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (25 -1)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-25 1)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-25 -1)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (8 1)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (8 -1)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-8 1)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-8 -1)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (9 1)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (9 -1)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-9 1)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-9 -1)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (10 1)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (10 -1)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-10 1)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-10 -1)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (11 1)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (11 -1)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-11 1)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-11 -1)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (12 1)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (12 -1)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-12 1)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-12 -1)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (13 1)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (13 -1)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-13 1)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-13 -1)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (14 1)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (14 -1)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-14 1)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-14 -1)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (15 1)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (15 -1)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-15 1)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-15 -1)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (17 1)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (17 -1)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-17 1)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-17 -1)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (20 1)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (20 -1)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-20 1)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-20 -1)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (22 1)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (22 -1)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-22 1)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-22 -1)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (25 1)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (25 -1)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-25 1)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-25 -1)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (26 1)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (26 -1)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-26 1)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-26 -1)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (29 1)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (29 -1)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-29 1)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-29 -1)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (30 1)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (30 -1)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-30 1)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-30 -1)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-2 2)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-2 -2)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (2 2)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (2 -2)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-1 2)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-1 -2)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (1 2)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (1 -2)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (0 2)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (0 -2)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (1 2)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (1 -2)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-1 2)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-1 -2)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (2 2)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (2 -2)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-2 2)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-2 -2)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (3 2)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (3 -2)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-3 2)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-3 -2)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (4 2)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (4 -2)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-4 2)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-4 -2)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (5 2)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (5 -2)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-5 2)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-5 -2)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (7 2)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (7 -2)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-7 2)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-7 -2)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (10 2)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (10 -2)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-10 2)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-10 -2)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (12 2)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (12 -2)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-12 2)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-12 -2)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (15 2)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (15 -2)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-15 2)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-15 -2)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (16 2)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (16 -2)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-16 2)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-16 -2)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (19 2)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (19 -2)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-19 2)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-19 -2)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (20 2)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (20 -2)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-20 2)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-20 -2)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (0 2)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (0 -2)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (1 2)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (1 -2)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-1 2)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-1 -2)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (2 2)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (2 -2)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-2 2)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-2 -2)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (3 2)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (3 -2)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-3 2)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-3 -2)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (4 2)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (4 -2)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-4 2)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-4 -2)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (5 2)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (5 -2)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-5 2)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-5 -2)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (6 2)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (6 -2)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-6 2)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-6 -2)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (7 2)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (7 -2)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-7 2)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-7 -2)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (9 2)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (9 -2)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-9 2)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-9 -2)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (12 2)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (12 -2)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-12 2)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-12 -2)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (14 2)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (14 -2)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-14 2)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-14 -2)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (17 2)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (17 -2)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-17 2)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-17 -2)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (18 2)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (18 -2)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-18 2)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-18 -2)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (21 2)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (21 -2)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-21 2)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-21 -2)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (22 2)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (22 -2)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-22 2)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-22 -2)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (2 2)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (2 -2)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-2 2)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-2 -2)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (3 2)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (3 -2)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-3 2)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-3 -2)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (4 2)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (4 -2)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-4 2)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-4 -2)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (5 2)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (5 -2)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-5 2)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-5 -2)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (6 2)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (6 -2)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-6 2)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-6 -2)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (7 2)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (7 -2)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-7 2)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-7 -2)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (8 2)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (8 -2)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-8 2)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-8 -2)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (9 2)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (9 -2)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-9 2)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-9 -2)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (11 2)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (11 -2)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-11 2)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-11 -2)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (14 2)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (14 -2)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-14 2)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-14 -2)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (16 2)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (16 -2)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-16 2)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-16 -2)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (19 2)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (19 -2)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-19 2)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-19 -2)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (20 2)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (20 -2)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-20 2)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-20 -2)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (23 2)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (23 -2)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-23 2)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-23 -2)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (24 2)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (24 -2)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-24 2)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-24 -2)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (8 2)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (8 -2)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-8 2)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-8 -2)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (9 2)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (9 -2)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-9 2)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-9 -2)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (10 2)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (10 -2)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-10 2)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-10 -2)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (11 2)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (11 -2)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-11 2)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-11 -2)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (12 2)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (12 -2)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-12 2)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-12 -2)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (13 2)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (13 -2)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-13 2)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-13 -2)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (14 2)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (14 -2)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-14 2)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-14 -2)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (15 2)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (15 -2)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-15 2)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-15 -2)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (17 2)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (17 -2)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-17 2)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-17 -2)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (20 2)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (20 -2)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-20 2)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-20 -2)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (22 2)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (22 -2)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-22 2)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-22 -2)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (25 2)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (25 -2)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-25 2)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-25 -2)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (26 2)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (26 -2)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-26 2)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-26 -2)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (29 2)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (29 -2)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-29 2)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-29 -2)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (30 2)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (30 -2)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-30 2)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-30 -2)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (18 2)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (18 -2)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-18 2)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-18 -2)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (19 2)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (19 -2)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-19 2)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-19 -2)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (20 2)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (20 -2)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-20 2)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-20 -2)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (21 2)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (21 -2)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-21 2)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-21 -2)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (22 2)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (22 -2)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-22 2)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-22 -2)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (23 2)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (23 -2)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-23 2)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-23 -2)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (24 2)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (24 -2)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-24 2)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-24 -2)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (25 2)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (25 -2)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-25 2)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-25 -2)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (27 2)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (27 -2)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-27 2)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-27 -2)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (30 2)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (30 -2)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-30 2)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-30 -2)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (32 2)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (32 -2)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-32 2)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-32 -2)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (35 2)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (35 -2)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-35 2)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-35 -2)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (36 2)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (36 -2)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-36 2)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-36 -2)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (39 2)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (39 -2)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-39 2)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-39 -2)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (40 2)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (40 -2)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-40 2)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-40 -2)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-2 5)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-2 -5)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (2 5)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (2 -5)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-1 5)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-1 -5)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (1 5)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (1 -5)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (0 5)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (0 -5)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (1 5)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (1 -5)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-1 5)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-1 -5)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (2 5)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (2 -5)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-2 5)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-2 -5)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (3 5)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (3 -5)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-3 5)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-3 -5)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (4 5)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (4 -5)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-4 5)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-4 -5)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (5 5)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (5 -5)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-5 5)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-5 -5)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (7 5)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (7 -5)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-7 5)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-7 -5)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (10 5)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (10 -5)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-10 5)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-10 -5)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (12 5)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (12 -5)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-12 5)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-12 -5)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (15 5)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (15 -5)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-15 5)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-15 -5)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (16 5)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (16 -5)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-16 5)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-16 -5)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (19 5)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (19 -5)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-19 5)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-19 -5)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (20 5)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (20 -5)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-20 5)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-20 -5)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (3 5)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (3 -5)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-3 5)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-3 -5)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (4 5)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (4 -5)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-4 5)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-4 -5)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (5 5)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (5 -5)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-5 5)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-5 -5)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (6 5)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (6 -5)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-6 5)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-6 -5)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (7 5)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (7 -5)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-7 5)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-7 -5)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (8 5)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (8 -5)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-8 5)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-8 -5)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (9 5)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (9 -5)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-9 5)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-9 -5)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (10 5)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (10 -5)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-10 5)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-10 -5)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (12 5)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (12 -5)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-12 5)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-12 -5)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (15 5)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (15 -5)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-15 5)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-15 -5)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (17 5)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (17 -5)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-17 5)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-17 -5)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (20 5)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (20 -5)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-20 5)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-20 -5)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (21 5)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (21 -5)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-21 5)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-21 -5)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (24 5)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (24 -5)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-24 5)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-24 -5)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (25 5)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (25 -5)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-25 5)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-25 -5)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (8 5)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (8 -5)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-8 5)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-8 -5)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (9 5)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (9 -5)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-9 5)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-9 -5)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (10 5)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (10 -5)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-10 5)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-10 -5)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (11 5)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (11 -5)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-11 5)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-11 -5)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (12 5)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (12 -5)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-12 5)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-12 -5)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (13 5)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (13 -5)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-13 5)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-13 -5)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (14 5)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (14 -5)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-14 5)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-14 -5)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (15 5)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (15 -5)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-15 5)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-15 -5)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (17 5)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (17 -5)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-17 5)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-17 -5)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (20 5)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (20 -5)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-20 5)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-20 -5)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (22 5)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (22 -5)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-22 5)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-22 -5)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (25 5)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (25 -5)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-25 5)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-25 -5)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (26 5)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (26 -5)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-26 5)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-26 -5)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (29 5)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (29 -5)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-29 5)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-29 -5)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (30 5)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (30 -5)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-30 5)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-30 -5)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (23 5)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (23 -5)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-23 5)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-23 -5)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (24 5)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (24 -5)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-24 5)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-24 -5)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (25 5)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (25 -5)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-25 5)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-25 -5)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (26 5)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (26 -5)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-26 5)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-26 -5)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (27 5)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (27 -5)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-27 5)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-27 -5)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (28 5)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (28 -5)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-28 5)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-28 -5)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (29 5)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (29 -5)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-29 5)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-29 -5)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (30 5)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (30 -5)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-30 5)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-30 -5)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (32 5)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (32 -5)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-32 5)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-32 -5)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (35 5)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (35 -5)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-35 5)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-35 -5)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (37 5)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (37 -5)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-37 5)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-37 -5)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (40 5)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (40 -5)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-40 5)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-40 -5)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (41 5)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (41 -5)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-41 5)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-41 -5)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (44 5)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (44 -5)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-44 5)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-44 -5)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (45 5)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (45 -5)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-45 5)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-45 -5)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (48 5)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (48 -5)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-48 5)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-48 -5)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (49 5)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (49 -5)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-49 5)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-49 -5)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (50 5)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (50 -5)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-50 5)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-50 -5)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (51 5)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (51 -5)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-51 5)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-51 -5)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (52 5)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (52 -5)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-52 5)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-52 -5)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (53 5)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (53 -5)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-53 5)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-53 -5)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (54 5)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (54 -5)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-54 5)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-54 -5)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (55 5)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (55 -5)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-55 5)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-55 -5)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (57 5)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (57 -5)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-57 5)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-57 -5)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (60 5)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (60 -5)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-60 5)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-60 -5)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (62 5)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (62 -5)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-62 5)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-62 -5)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (65 5)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (65 -5)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-65 5)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-65 -5)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (66 5)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (66 -5)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-66 5)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-66 -5)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (69 5)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (69 -5)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-69 5)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-69 -5)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (70 5)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (70 -5)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-70 5)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-70 -5)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-2 10)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-2 -10)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (2 10)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (2 -10)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-1 10)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-1 -10)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (1 10)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (1 -10)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (0 10)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (0 -10)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (1 10)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (1 -10)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-1 10)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-1 -10)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (2 10)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (2 -10)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-2 10)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-2 -10)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (3 10)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (3 -10)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-3 10)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-3 -10)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (4 10)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (4 -10)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-4 10)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-4 -10)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (5 10)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (5 -10)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-5 10)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-5 -10)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (7 10)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (7 -10)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-7 10)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-7 -10)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (10 10)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (10 -10)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-10 10)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-10 -10)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (12 10)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (12 -10)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-12 10)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-12 -10)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (15 10)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (15 -10)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-15 10)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-15 -10)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (16 10)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (16 -10)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-16 10)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-16 -10)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (19 10)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (19 -10)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-19 10)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-19 -10)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (20 10)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (20 -10)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-20 10)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-20 -10)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (8 10)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (8 -10)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-8 10)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-8 -10)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (9 10)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (9 -10)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-9 10)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-9 -10)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (10 10)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (10 -10)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-10 10)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-10 -10)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (11 10)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (11 -10)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-11 10)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-11 -10)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (12 10)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (12 -10)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-12 10)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-12 -10)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (13 10)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (13 -10)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-13 10)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-13 -10)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (14 10)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (14 -10)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-14 10)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-14 -10)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (15 10)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (15 -10)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-15 10)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-15 -10)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (17 10)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (17 -10)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-17 10)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-17 -10)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (20 10)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (20 -10)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-20 10)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-20 -10)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (22 10)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (22 -10)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-22 10)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-22 -10)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (25 10)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (25 -10)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-25 10)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-25 -10)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (26 10)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (26 -10)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-26 10)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-26 -10)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (29 10)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (29 -10)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-29 10)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-29 -10)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (30 10)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (30 -10)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-30 10)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-30 -10)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (18 10)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (18 -10)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-18 10)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-18 -10)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (19 10)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (19 -10)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-19 10)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-19 -10)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (20 10)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (20 -10)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-20 10)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-20 -10)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (21 10)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (21 -10)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-21 10)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-21 -10)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (22 10)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (22 -10)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-22 10)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-22 -10)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (23 10)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (23 -10)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-23 10)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-23 -10)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (24 10)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (24 -10)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-24 10)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-24 -10)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (25 10)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (25 -10)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-25 10)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-25 -10)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (27 10)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (27 -10)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-27 10)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-27 -10)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (30 10)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (30 -10)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-30 10)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-30 -10)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (32 10)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (32 -10)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-32 10)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-32 -10)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (35 10)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (35 -10)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-35 10)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-35 -10)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (36 10)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (36 -10)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-36 10)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-36 -10)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (39 10)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (39 -10)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-39 10)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-39 -10)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (40 10)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (40 -10)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-40 10)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-40 -10)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (48 10)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (48 -10)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-48 10)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-48 -10)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (49 10)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (49 -10)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-49 10)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-49 -10)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (50 10)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (50 -10)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-50 10)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-50 -10)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (51 10)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (51 -10)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-51 10)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-51 -10)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (52 10)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (52 -10)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-52 10)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-52 -10)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (53 10)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (53 -10)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-53 10)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-53 -10)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (54 10)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (54 -10)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-54 10)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-54 -10)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (55 10)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (55 -10)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-55 10)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-55 -10)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (57 10)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (57 -10)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-57 10)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-57 -10)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (60 10)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (60 -10)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-60 10)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-60 -10)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (62 10)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (62 -10)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-62 10)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-62 -10)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (65 10)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (65 -10)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-65 10)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-65 -10)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (66 10)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (66 -10)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-66 10)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-66 -10)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (69 10)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (69 -10)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-69 10)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-69 -10)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (70 10)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (70 -10)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-70 10)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-70 -10)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (98 10)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (98 -10)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-98 10)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-98 -10)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (99 10)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (99 -10)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-99 10)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-99 -10)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (100 10)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (100 -10)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-100 10)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-100 -10)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (101 10)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (101 -10)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-101 10)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-101 -10)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (102 10)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (102 -10)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-102 10)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-102 -10)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (103 10)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (103 -10)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-103 10)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-103 -10)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (104 10)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (104 -10)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-104 10)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-104 -10)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (105 10)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (105 -10)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-105 10)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-105 -10)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (107 10)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (107 -10)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-107 10)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-107 -10)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (110 10)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (110 -10)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-110 10)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-110 -10)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (112 10)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (112 -10)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-112 10)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-112 -10)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (115 10)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (115 -10)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-115 10)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-115 -10)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (116 10)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (116 -10)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-116 10)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-116 -10)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (119 10)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (119 -10)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-119 10)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-119 -10)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (120 10)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (120 -10)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-120 10)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / inum: (-120 -10)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / big: fixnum-min / -fixnum-min: (-536870912 536870912)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / big: fixnum-max / (2*fixnum-max): (536870911 1073741822)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / big: fixnum-max / (2*fixnum-max): (536870911 -1073741822)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / big: fixnum-max / (2*fixnum-max): (-536870911 1073741822)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / big: fixnum-max / (2*fixnum-max): (-536870911 -1073741822)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / big: (0 536870912)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / big: (0 536870912)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / big: (0 -536870913)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / big: (0 -536870913)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / big: (1 536870912)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / big: (-1 536870912)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / big: (1 -536870913)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / big: (-1 -536870913)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / big: (2 536870912)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / big: (-2 536870912)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / big: (2 -536870913)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / big: (-2 -536870913)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / big: (10 536870912)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / big: (-10 536870912)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / big: (10 -536870913)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / big: (-10 -536870913)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / big: (536870910 536870912)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / big: (-536870910 536870912)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / big: (536870910 -536870913)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / big: (-536870910 -536870913)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / big: (536870911 536870912)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / big: (-536870911 536870912)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / big: (536870911 -536870913)
PASS: numbers.test: Number-theoretic division: euclidean/: inum / big: (-536870911 -536870913)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: -fixnum-min / fixnum-min: (536870912 -536870912)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (9999999998 1)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (9999999998 -1)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (-9999999998 1)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (-9999999998 -1)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (9999999999 1)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (9999999999 -1)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (-9999999999 1)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (-9999999999 -1)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (10000000000 1)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (10000000000 -1)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (-10000000000 1)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (-10000000000 -1)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (10000000001 1)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (10000000001 -1)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (-10000000001 1)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (-10000000001 -1)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (10000000002 1)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (10000000002 -1)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (-10000000002 1)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (-10000000002 -1)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (19999999998 1)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (19999999998 -1)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (-19999999998 1)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (-19999999998 -1)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (19999999999 1)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (19999999999 -1)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (-19999999999 1)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (-19999999999 -1)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (20000000000 1)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (20000000000 -1)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (-20000000000 1)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (-20000000000 -1)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (20000000001 1)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (20000000001 -1)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (-20000000001 1)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (-20000000001 -1)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (20000000002 1)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (20000000002 -1)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (-20000000002 1)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (-20000000002 -1)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (49999999998 1)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (49999999998 -1)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (-49999999998 1)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (-49999999998 -1)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (49999999999 1)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (49999999999 -1)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (-49999999999 1)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (-49999999999 -1)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (50000000000 1)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (50000000000 -1)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (-50000000000 1)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (-50000000000 -1)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (50000000001 1)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (50000000001 -1)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (-50000000001 1)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (-50000000001 -1)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (50000000002 1)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (50000000002 -1)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (-50000000002 1)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (-50000000002 -1)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (39999999998 4)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (39999999998 -4)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (-39999999998 4)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (-39999999998 -4)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (39999999999 4)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (39999999999 -4)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (-39999999999 4)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (-39999999999 -4)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (40000000000 4)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (40000000000 -4)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (-40000000000 4)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (-40000000000 -4)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (40000000001 4)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (40000000001 -4)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (-40000000001 4)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (-40000000001 -4)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (40000000002 4)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (40000000002 -4)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (-40000000002 4)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (-40000000002 -4)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (79999999998 4)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (79999999998 -4)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (-79999999998 4)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (-79999999998 -4)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (79999999999 4)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (79999999999 -4)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (-79999999999 4)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (-79999999999 -4)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (80000000000 4)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (80000000000 -4)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (-80000000000 4)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (-80000000000 -4)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (80000000001 4)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (80000000001 -4)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (-80000000001 4)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (-80000000001 -4)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (80000000002 4)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (80000000002 -4)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (-80000000002 4)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (-80000000002 -4)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (199999999998 4)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (199999999998 -4)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (-199999999998 4)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (-199999999998 -4)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (199999999999 4)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (199999999999 -4)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (-199999999999 4)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (-199999999999 -4)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (200000000000 4)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (200000000000 -4)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (-200000000000 4)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (-200000000000 -4)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (200000000001 4)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (200000000001 -4)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (-200000000001 4)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (-200000000001 -4)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (200000000002 4)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (200000000002 -4)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (-200000000002 4)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (-200000000002 -4)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (19999999998 4)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (19999999998 -4)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (-19999999998 4)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (-19999999998 -4)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (19999999999 4)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (19999999999 -4)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (-19999999999 4)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (-19999999999 -4)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (20000000000 4)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (20000000000 -4)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (-20000000000 4)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (-20000000000 -4)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (20000000001 4)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (20000000001 -4)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (-20000000001 4)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (-20000000001 -4)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (20000000002 4)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (20000000002 -4)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (-20000000002 4)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (-20000000002 -4)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (59999999998 4)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (59999999998 -4)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (-59999999998 4)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (-59999999998 -4)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (59999999999 4)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (59999999999 -4)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (-59999999999 4)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (-59999999999 -4)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (60000000000 4)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (60000000000 -4)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (-60000000000 4)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (-60000000000 -4)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (60000000001 4)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (60000000001 -4)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (-60000000001 4)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (-60000000001 -4)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (60000000002 4)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (60000000002 -4)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (-60000000002 4)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (-60000000002 -4)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (99999999998 4)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (99999999998 -4)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (-99999999998 4)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (-99999999998 -4)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (99999999999 4)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (99999999999 -4)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (-99999999999 4)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (-99999999999 -4)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (100000000000 4)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (100000000000 -4)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (-100000000000 4)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (-100000000000 -4)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (100000000001 4)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (100000000001 -4)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (-100000000001 4)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (-100000000001 -4)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (100000000002 4)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (100000000002 -4)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (-100000000002 4)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (-100000000002 -4)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (49999999998 5)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (49999999998 -5)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (-49999999998 5)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (-49999999998 -5)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (49999999999 5)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (49999999999 -5)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (-49999999999 5)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (-49999999999 -5)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (50000000000 5)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (50000000000 -5)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (-50000000000 5)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (-50000000000 -5)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (50000000001 5)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (50000000001 -5)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (-50000000001 5)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (-50000000001 -5)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (50000000002 5)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (50000000002 -5)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (-50000000002 5)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (-50000000002 -5)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (99999999998 5)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (99999999998 -5)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (-99999999998 5)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (-99999999998 -5)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (99999999999 5)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (99999999999 -5)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (-99999999999 5)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (-99999999999 -5)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (100000000000 5)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (100000000000 -5)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (-100000000000 5)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (-100000000000 -5)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (100000000001 5)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (100000000001 -5)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (-100000000001 5)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (-100000000001 -5)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (100000000002 5)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (100000000002 -5)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (-100000000002 5)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (-100000000002 -5)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (249999999998 5)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (249999999998 -5)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (-249999999998 5)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (-249999999998 -5)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (249999999999 5)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (249999999999 -5)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (-249999999999 5)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (-249999999999 -5)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (250000000000 5)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (250000000000 -5)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (-250000000000 5)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (-250000000000 -5)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (250000000001 5)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (250000000001 -5)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (-250000000001 5)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (-250000000001 -5)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (250000000002 5)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (250000000002 -5)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (-250000000002 5)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (-250000000002 -5)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (99999999998 10)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (99999999998 -10)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (-99999999998 10)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (-99999999998 -10)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (99999999999 10)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (99999999999 -10)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (-99999999999 10)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (-99999999999 -10)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (100000000000 10)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (100000000000 -10)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (-100000000000 10)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (-100000000000 -10)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (100000000001 10)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (100000000001 -10)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (-100000000001 10)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (-100000000001 -10)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (100000000002 10)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (100000000002 -10)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (-100000000002 10)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (-100000000002 -10)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (199999999998 10)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (199999999998 -10)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (-199999999998 10)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (-199999999998 -10)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (199999999999 10)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (199999999999 -10)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (-199999999999 10)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (-199999999999 -10)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (200000000000 10)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (200000000000 -10)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (-200000000000 10)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (-200000000000 -10)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (200000000001 10)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (200000000001 -10)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (-200000000001 10)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (-200000000001 -10)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (200000000002 10)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (200000000002 -10)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (-200000000002 10)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (-200000000002 -10)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (499999999998 10)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (499999999998 -10)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (-499999999998 10)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (-499999999998 -10)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (499999999999 10)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (499999999999 -10)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (-499999999999 10)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (-499999999999 -10)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (500000000000 10)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (500000000000 -10)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (-500000000000 10)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (-500000000000 -10)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (500000000001 10)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (500000000001 -10)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (-500000000001 10)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (-500000000001 -10)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (500000000002 10)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (500000000002 -10)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (-500000000002 10)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (-500000000002 -10)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (49999999998 10)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (49999999998 -10)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (-49999999998 10)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (-49999999998 -10)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (49999999999 10)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (49999999999 -10)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (-49999999999 10)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (-49999999999 -10)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (50000000000 10)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (50000000000 -10)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (-50000000000 10)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (-50000000000 -10)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (50000000001 10)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (50000000001 -10)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (-50000000001 10)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (-50000000001 -10)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (50000000002 10)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (50000000002 -10)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (-50000000002 10)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (-50000000002 -10)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (149999999998 10)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (149999999998 -10)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (-149999999998 10)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (-149999999998 -10)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (149999999999 10)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (149999999999 -10)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (-149999999999 10)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (-149999999999 -10)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (150000000000 10)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (150000000000 -10)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (-150000000000 10)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (-150000000000 -10)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (150000000001 10)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (150000000001 -10)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (-150000000001 10)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (-150000000001 -10)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (150000000002 10)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (150000000002 -10)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (-150000000002 10)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (-150000000002 -10)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (249999999998 10)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (249999999998 -10)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (-249999999998 10)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (-249999999998 -10)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (249999999999 10)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (249999999999 -10)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (-249999999999 10)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (-249999999999 -10)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (250000000000 10)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (250000000000 -10)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (-250000000000 10)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (-250000000000 -10)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (250000000001 10)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (250000000001 -10)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (-250000000001 10)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (-250000000001 -10)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (250000000002 10)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (250000000002 -10)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (-250000000002 10)
PASS: numbers.test: Number-theoretic division: euclidean/: big / inum: (-250000000002 -10)
PASS: numbers.test: Number-theoretic division: euclidean/: big / big: (9999999998 10000000000)
PASS: numbers.test: Number-theoretic division: euclidean/: big / big: (9999999998 -10000000000)
PASS: numbers.test: Number-theoretic division: euclidean/: big / big: (-9999999998 10000000000)
PASS: numbers.test: Number-theoretic division: euclidean/: big / big: (-9999999998 -10000000000)
PASS: numbers.test: Number-theoretic division: euclidean/: big / big: (9999999999 10000000000)
PASS: numbers.test: Number-theoretic division: euclidean/: big / big: (9999999999 -10000000000)
PASS: numbers.test: Number-theoretic division: euclidean/: big / big: (-9999999999 10000000000)
PASS: numbers.test: Number-theoretic division: euclidean/: big / big: (-9999999999 -10000000000)
PASS: numbers.test: Number-theoretic division: euclidean/: big / big: (10000000000 10000000000)
PASS: numbers.test: Number-theoretic division: euclidean/: big / big: (10000000000 -10000000000)
PASS: numbers.test: Number-theoretic division: euclidean/: big / big: (-10000000000 10000000000)
PASS: numbers.test: Number-theoretic division: euclidean/: big / big: (-10000000000 -10000000000)
PASS: numbers.test: Number-theoretic division: euclidean/: big / big: (10000000001 10000000000)
PASS: numbers.test: Number-theoretic division: euclidean/: big / big: (10000000001 -10000000000)
PASS: numbers.test: Number-theoretic division: euclidean/: big / big: (-10000000001 10000000000)
PASS: numbers.test: Number-theoretic division: euclidean/: big / big: (-10000000001 -10000000000)
PASS: numbers.test: Number-theoretic division: euclidean/: big / big: (10000000002 10000000000)
PASS: numbers.test: Number-theoretic division: euclidean/: big / big: (10000000002 -10000000000)
PASS: numbers.test: Number-theoretic division: euclidean/: big / big: (-10000000002 10000000000)
PASS: numbers.test: Number-theoretic division: euclidean/: big / big: (-10000000002 -10000000000)
PASS: numbers.test: Number-theoretic division: euclidean/: big / big: (19999999998 10000000000)
PASS: numbers.test: Number-theoretic division: euclidean/: big / big: (19999999998 -10000000000)
PASS: numbers.test: Number-theoretic division: euclidean/: big / big: (-19999999998 10000000000)
PASS: numbers.test: Number-theoretic division: euclidean/: big / big: (-19999999998 -10000000000)
PASS: numbers.test: Number-theoretic division: euclidean/: big / big: (19999999999 10000000000)
PASS: numbers.test: Number-theoretic division: euclidean/: big / big: (19999999999 -10000000000)
PASS: numbers.test: Number-theoretic division: euclidean/: big / big: (-19999999999 10000000000)
PASS: numbers.test: Number-theoretic division: euclidean/: big / big: (-19999999999 -10000000000)
PASS: numbers.test: Number-theoretic division: euclidean/: big / big: (20000000000 10000000000)
PASS: numbers.test: Number-theoretic division: euclidean/: big / big: (20000000000 -10000000000)
PASS: numbers.test: Number-theoretic division: euclidean/: big / big: (-20000000000 10000000000)
PASS: numbers.test: Number-theoretic division: euclidean/: big / big: (-20000000000 -10000000000)
PASS: numbers.test: Number-theoretic division: euclidean/: big / big: (20000000001 10000000000)
PASS: numbers.test: Number-theoretic division: euclidean/: big / big: (20000000001 -10000000000)
PASS: numbers.test: Number-theoretic division: euclidean/: big / big: (-20000000001 10000000000)
PASS: numbers.test: Number-theoretic division: euclidean/: big / big: (-20000000001 -10000000000)
PASS: numbers.test: Number-theoretic division: euclidean/: big / big: (20000000002 10000000000)
PASS: numbers.test: Number-theoretic division: euclidean/: big / big: (20000000002 -10000000000)
PASS: numbers.test: Number-theoretic division: euclidean/: big / big: (-20000000002 10000000000)
PASS: numbers.test: Number-theoretic division: euclidean/: big / big: (-20000000002 -10000000000)
PASS: numbers.test: Number-theoretic division: euclidean/: big / big: (49999999998 10000000000)
PASS: numbers.test: Number-theoretic division: euclidean/: big / big: (49999999998 -10000000000)
PASS: numbers.test: Number-theoretic division: euclidean/: big / big: (-49999999998 10000000000)
PASS: numbers.test: Number-theoretic division: euclidean/: big / big: (-49999999998 -10000000000)
PASS: numbers.test: Number-theoretic division: euclidean/: big / big: (49999999999 10000000000)
PASS: numbers.test: Number-theoretic division: euclidean/: big / big: (49999999999 -10000000000)
PASS: numbers.test: Number-theoretic division: euclidean/: big / big: (-49999999999 10000000000)
PASS: numbers.test: Number-theoretic division: euclidean/: big / big: (-49999999999 -10000000000)
PASS: numbers.test: Number-theoretic division: euclidean/: big / big: (50000000000 10000000000)
PASS: numbers.test: Number-theoretic division: euclidean/: big / big: (50000000000 -10000000000)
PASS: numbers.test: Number-theoretic division: euclidean/: big / big: (-50000000000 10000000000)
PASS: numbers.test: Number-theoretic division: euclidean/: big / big: (-50000000000 -10000000000)
PASS: numbers.test: Number-theoretic division: euclidean/: big / big: (50000000001 10000000000)
PASS: numbers.test: Number-theoretic division: euclidean/: big / big: (50000000001 -10000000000)
PASS: numbers.test: Number-theoretic division: euclidean/: big / big: (-50000000001 10000000000)
PASS: numbers.test: Number-theoretic division: euclidean/: big / big: (-50000000001 -10000000000)
PASS: numbers.test: Number-theoretic division: euclidean/: big / big: (50000000002 10000000000)
PASS: numbers.test: Number-theoretic division: euclidean/: big / big: (50000000002 -10000000000)
PASS: numbers.test: Number-theoretic division: euclidean/: big / big: (-50000000002 10000000000)
PASS: numbers.test: Number-theoretic division: euclidean/: big / big: (-50000000002 -10000000000)
PASS: numbers.test: Number-theoretic division: euclidean/: big / big: (4999999998 10000000000)
PASS: numbers.test: Number-theoretic division: euclidean/: big / big: (4999999998 -10000000000)
PASS: numbers.test: Number-theoretic division: euclidean/: big / big: (-4999999998 10000000000)
PASS: numbers.test: Number-theoretic division: euclidean/: big / big: (-4999999998 -10000000000)
PASS: numbers.test: Number-theoretic division: euclidean/: big / big: (4999999999 10000000000)
PASS: numbers.test: Number-theoretic division: euclidean/: big / big: (4999999999 -10000000000)
PASS: numbers.test: Number-theoretic division: euclidean/: big / big: (-4999999999 10000000000)
PASS: numbers.test: Number-theoretic division: euclidean/: big / big: (-4999999999 -10000000000)
PASS: numbers.test: Number-theoretic division: euclidean/: big / big: (5000000000 10000000000)
PASS: numbers.test: Number-theoretic division: euclidean/: big / big: (5000000000 -10000000000)
PASS: numbers.test: Number-theoretic division: euclidean/: big / big: (-5000000000 10000000000)
PASS: numbers.test: Number-theoretic division: euclidean/: big / big: (-5000000000 -10000000000)
PASS: numbers.test: Number-theoretic division: euclidean/: big / big: (5000000001 10000000000)
PASS: numbers.test: Number-theoretic division: euclidean/: big / big: (5000000001 -10000000000)
PASS: numbers.test: Number-theoretic division: euclidean/: big / big: (-5000000001 10000000000)
PASS: numbers.test: Number-theoretic division: euclidean/: big / big: (-5000000001 -10000000000)
PASS: numbers.test: Number-theoretic division: euclidean/: big / big: (5000000002 10000000000)
PASS: numbers.test: Number-theoretic division: euclidean/: big / big: (5000000002 -10000000000)
PASS: numbers.test: Number-theoretic division: euclidean/: big / big: (-5000000002 10000000000)
PASS: numbers.test: Number-theoretic division: euclidean/: big / big: (-5000000002 -10000000000)
PASS: numbers.test: Number-theoretic division: euclidean/: big / big: (14999999998 10000000000)
PASS: numbers.test: Number-theoretic division: euclidean/: big / big: (14999999998 -10000000000)
PASS: numbers.test: Number-theoretic division: euclidean/: big / big: (-14999999998 10000000000)
PASS: numbers.test: Number-theoretic division: euclidean/: big / big: (-14999999998 -10000000000)
PASS: numbers.test: Number-theoretic division: euclidean/: big / big: (14999999999 10000000000)
PASS: numbers.test: Number-theoretic division: euclidean/: big / big: (14999999999 -10000000000)
PASS: numbers.test: Number-theoretic division: euclidean/: big / big: (-14999999999 10000000000)
PASS: numbers.test: Number-theoretic division: euclidean/: big / big: (-14999999999 -10000000000)
PASS: numbers.test: Number-theoretic division: euclidean/: big / big: (15000000000 10000000000)
PASS: numbers.test: Number-theoretic division: euclidean/: big / big: (15000000000 -10000000000)
PASS: numbers.test: Number-theoretic division: euclidean/: big / big: (-15000000000 10000000000)
PASS: numbers.test: Number-theoretic division: euclidean/: big / big: (-15000000000 -10000000000)
PASS: numbers.test: Number-theoretic division: euclidean/: big / big: (15000000001 10000000000)
PASS: numbers.test: Number-theoretic division: euclidean/: big / big: (15000000001 -10000000000)
PASS: numbers.test: Number-theoretic division: euclidean/: big / big: (-15000000001 10000000000)
PASS: numbers.test: Number-theoretic division: euclidean/: big / big: (-15000000001 -10000000000)
PASS: numbers.test: Number-theoretic division: euclidean/: big / big: (15000000002 10000000000)
PASS: numbers.test: Number-theoretic division: euclidean/: big / big: (15000000002 -10000000000)
PASS: numbers.test: Number-theoretic division: euclidean/: big / big: (-15000000002 10000000000)
PASS: numbers.test: Number-theoretic division: euclidean/: big / big: (-15000000002 -10000000000)
PASS: numbers.test: Number-theoretic division: euclidean/: big / big: (24999999998 10000000000)
PASS: numbers.test: Number-theoretic division: euclidean/: big / big: (24999999998 -10000000000)
PASS: numbers.test: Number-theoretic division: euclidean/: big / big: (-24999999998 10000000000)
PASS: numbers.test: Number-theoretic division: euclidean/: big / big: (-24999999998 -10000000000)
PASS: numbers.test: Number-theoretic division: euclidean/: big / big: (24999999999 10000000000)
PASS: numbers.test: Number-theoretic division: euclidean/: big / big: (24999999999 -10000000000)
PASS: numbers.test: Number-theoretic division: euclidean/: big / big: (-24999999999 10000000000)
PASS: numbers.test: Number-theoretic division: euclidean/: big / big: (-24999999999 -10000000000)
PASS: numbers.test: Number-theoretic division: euclidean/: big / big: (25000000000 10000000000)
PASS: numbers.test: Number-theoretic division: euclidean/: big / big: (25000000000 -10000000000)
PASS: numbers.test: Number-theoretic division: euclidean/: big / big: (-25000000000 10000000000)
PASS: numbers.test: Number-theoretic division: euclidean/: big / big: (-25000000000 -10000000000)
PASS: numbers.test: Number-theoretic division: euclidean/: big / big: (25000000001 10000000000)
PASS: numbers.test: Number-theoretic division: euclidean/: big / big: (25000000001 -10000000000)
PASS: numbers.test: Number-theoretic division: euclidean/: big / big: (-25000000001 10000000000)
PASS: numbers.test: Number-theoretic division: euclidean/: big / big: (-25000000001 -10000000000)
PASS: numbers.test: Number-theoretic division: euclidean/: big / big: (25000000002 10000000000)
PASS: numbers.test: Number-theoretic division: euclidean/: big / big: (25000000002 -10000000000)
PASS: numbers.test: Number-theoretic division: euclidean/: big / big: (-25000000002 10000000000)
PASS: numbers.test: Number-theoretic division: euclidean/: big / big: (-25000000002 -10000000000)
PASS: numbers.test: Number-theoretic division: euclidean/: big / big: (9999999999 10000000001)
PASS: numbers.test: Number-theoretic division: euclidean/: big / big: (9999999999 -10000000001)
PASS: numbers.test: Number-theoretic division: euclidean/: big / big: (-9999999999 10000000001)
PASS: numbers.test: Number-theoretic division: euclidean/: big / big: (-9999999999 -10000000001)
PASS: numbers.test: Number-theoretic division: euclidean/: big / big: (10000000000 10000000001)
PASS: numbers.test: Number-theoretic division: euclidean/: big / big: (10000000000 -10000000001)
PASS: numbers.test: Number-theoretic division: euclidean/: big / big: (-10000000000 10000000001)
PASS: numbers.test: Number-theoretic division: euclidean/: big / big: (-10000000000 -10000000001)
PASS: numbers.test: Number-theoretic division: euclidean/: big / big: (10000000001 10000000001)
PASS: numbers.test: Number-theoretic division: euclidean/: big / big: (10000000001 -10000000001)
PASS: numbers.test: Number-theoretic division: euclidean/: big / big: (-10000000001 10000000001)
PASS: numbers.test: Number-theoretic division: euclidean/: big / big: (-10000000001 -10000000001)
PASS: numbers.test: Number-theoretic division: euclidean/: big / big: (10000000002 10000000001)
PASS: numbers.test: Number-theoretic division: euclidean/: big / big: (10000000002 -10000000001)
PASS: numbers.test: Number-theoretic division: euclidean/: big / big: (-10000000002 10000000001)
PASS: numbers.test: Number-theoretic division: euclidean/: big / big: (-10000000002 -10000000001)
PASS: numbers.test: Number-theoretic division: euclidean/: big / big: (10000000003 10000000001)
PASS: numbers.test: Number-theoretic division: euclidean/: big / big: (10000000003 -10000000001)
PASS: numbers.test: Number-theoretic division: euclidean/: big / big: (-10000000003 10000000001)
PASS: numbers.test: Number-theoretic division: euclidean/: big / big: (-10000000003 -10000000001)
PASS: numbers.test: Number-theoretic division: euclidean/: big / big: (20000000000 10000000001)
PASS: numbers.test: Number-theoretic division: euclidean/: big / big: (20000000000 -10000000001)
PASS: numbers.test: Number-theoretic division: euclidean/: big / big: (-20000000000 10000000001)
PASS: numbers.test: Number-theoretic division: euclidean/: big / big: (-20000000000 -10000000001)
PASS: numbers.test: Number-theoretic division: euclidean/: big / big: (20000000001 10000000001)
PASS: numbers.test: Number-theoretic division: euclidean/: big / big: (20000000001 -10000000001)
PASS: numbers.test: Number-theoretic division: euclidean/: big / big: (-20000000001 10000000001)
PASS: numbers.test: Number-theoretic division: euclidean/: big / big: (-20000000001 -10000000001)
PASS: numbers.test: Number-theoretic division: euclidean/: big / big: (20000000002 10000000001)
PASS: numbers.test: Number-theoretic division: euclidean/: big / big: (20000000002 -10000000001)
PASS: numbers.test: Number-theoretic division: euclidean/: big / big: (-20000000002 10000000001)
PASS: numbers.test: Number-theoretic division: euclidean/: big / big: (-20000000002 -10000000001)
PASS: numbers.test: Number-theoretic division: euclidean/: big / big: (20000000003 10000000001)
PASS: numbers.test: Number-theoretic division: euclidean/: big / big: (20000000003 -10000000001)
PASS: numbers.test: Number-theoretic division: euclidean/: big / big: (-20000000003 10000000001)
PASS: numbers.test: Number-theoretic division: euclidean/: big / big: (-20000000003 -10000000001)
PASS: numbers.test: Number-theoretic division: euclidean/: big / big: (20000000004 10000000001)
PASS: numbers.test: Number-theoretic division: euclidean/: big / big: (20000000004 -10000000001)
PASS: numbers.test: Number-theoretic division: euclidean/: big / big: (-20000000004 10000000001)
PASS: numbers.test: Number-theoretic division: euclidean/: big / big: (-20000000004 -10000000001)
PASS: numbers.test: Number-theoretic division: euclidean/: big / big: (50000000003 10000000001)
PASS: numbers.test: Number-theoretic division: euclidean/: big / big: (50000000003 -10000000001)
PASS: numbers.test: Number-theoretic division: euclidean/: big / big: (-50000000003 10000000001)
PASS: numbers.test: Number-theoretic division: euclidean/: big / big: (-50000000003 -10000000001)
PASS: numbers.test: Number-theoretic division: euclidean/: big / big: (50000000004 10000000001)
PASS: numbers.test: Number-theoretic division: euclidean/: big / big: (50000000004 -10000000001)
PASS: numbers.test: Number-theoretic division: euclidean/: big / big: (-50000000004 10000000001)
PASS: numbers.test: Number-theoretic division: euclidean/: big / big: (-50000000004 -10000000001)
PASS: numbers.test: Number-theoretic division: euclidean/: big / big: (50000000005 10000000001)
PASS: numbers.test: Number-theoretic division: euclidean/: big / big: (50000000005 -10000000001)
PASS: numbers.test: Number-theoretic division: euclidean/: big / big: (-50000000005 10000000001)
PASS: numbers.test: Number-theoretic division: euclidean/: big / big: (-50000000005 -10000000001)
PASS: numbers.test: Number-theoretic division: euclidean/: big / big: (50000000006 10000000001)
PASS: numbers.test: Number-theoretic division: euclidean/: big / big: (50000000006 -10000000001)
PASS: numbers.test: Number-theoretic division: euclidean/: big / big: (-50000000006 10000000001)
PASS: numbers.test: Number-theoretic division: euclidean/: big / big: (-50000000006 -10000000001)
PASS: numbers.test: Number-theoretic division: euclidean/: big / big: (50000000007 10000000001)
PASS: numbers.test: Number-theoretic division: euclidean/: big / big: (50000000007 -10000000001)
PASS: numbers.test: Number-theoretic division: euclidean/: big / big: (-50000000007 10000000001)
PASS: numbers.test: Number-theoretic division: euclidean/: big / big: (-50000000007 -10000000001)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (-2.0 0.5)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (-2.0 -0.5)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (2.0 0.5)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (2.0 -0.5)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (-1.0 0.5)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (-1.0 -0.5)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (1.0 0.5)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (1.0 -0.5)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (0.0 0.5)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (0.0 -0.5)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (1.0 0.5)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (1.0 -0.5)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (-1.0 0.5)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (-1.0 -0.5)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (2.0 0.5)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (2.0 -0.5)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (-2.0 0.5)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (-2.0 -0.5)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (-1.5 0.5)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (-1.5 -0.5)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (1.5 0.5)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (1.5 -0.5)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (-0.5 0.5)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (-0.5 -0.5)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (0.5 0.5)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (0.5 -0.5)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (0.5 0.5)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (0.5 -0.5)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (-0.5 0.5)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (-0.5 -0.5)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (1.5 0.5)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (1.5 -0.5)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (-1.5 0.5)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (-1.5 -0.5)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (2.5 0.5)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (2.5 -0.5)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (-2.5 0.5)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (-2.5 -0.5)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (-1.0 0.5)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (-1.0 -0.5)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (1.0 0.5)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (1.0 -0.5)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (0.0 0.5)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (0.0 -0.5)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (1.0 0.5)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (1.0 -0.5)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (-1.0 0.5)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (-1.0 -0.5)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (2.0 0.5)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (2.0 -0.5)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (-2.0 0.5)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (-2.0 -0.5)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (3.0 0.5)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (3.0 -0.5)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (-3.0 0.5)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (-3.0 -0.5)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (0.5 0.5)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (0.5 -0.5)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (-0.5 0.5)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (-0.5 -0.5)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (1.5 0.5)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (1.5 -0.5)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (-1.5 0.5)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (-1.5 -0.5)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (2.5 0.5)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (2.5 -0.5)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (-2.5 0.5)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (-2.5 -0.5)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (3.5 0.5)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (3.5 -0.5)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (-3.5 0.5)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (-3.5 -0.5)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (4.5 0.5)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (4.5 -0.5)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (-4.5 0.5)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (-4.5 -0.5)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (-1.75 0.5)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (-1.75 -0.5)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (1.75 0.5)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (1.75 -0.5)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (-0.75 0.5)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (-0.75 -0.5)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (0.75 0.5)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (0.75 -0.5)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (0.25 0.5)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (0.25 -0.5)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (-0.25 0.5)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (-0.25 -0.5)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (1.25 0.5)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (1.25 -0.5)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (-1.25 0.5)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (-1.25 -0.5)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (2.25 0.5)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (2.25 -0.5)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (-2.25 0.5)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (-2.25 -0.5)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (-1.25 0.5)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (-1.25 -0.5)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (1.25 0.5)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (1.25 -0.5)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (-0.25 0.5)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (-0.25 -0.5)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (0.25 0.5)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (0.25 -0.5)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (0.75 0.5)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (0.75 -0.5)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (-0.75 0.5)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (-0.75 -0.5)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (1.75 0.5)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (1.75 -0.5)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (-1.75 0.5)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (-1.75 -0.5)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (2.75 0.5)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (2.75 -0.5)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (-2.75 0.5)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (-2.75 -0.5)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (-0.75 0.5)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (-0.75 -0.5)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (0.75 0.5)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (0.75 -0.5)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (0.25 0.5)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (0.25 -0.5)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (-0.25 0.5)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (-0.25 -0.5)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (1.25 0.5)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (1.25 -0.5)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (-1.25 0.5)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (-1.25 -0.5)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (2.25 0.5)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (2.25 -0.5)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (-2.25 0.5)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (-2.25 -0.5)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (3.25 0.5)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (3.25 -0.5)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (-3.25 0.5)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (-3.25 -0.5)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (-2.0 1.5)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (-2.0 -1.5)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (2.0 1.5)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (2.0 -1.5)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (-1.0 1.5)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (-1.0 -1.5)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (1.0 1.5)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (1.0 -1.5)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (0.0 1.5)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (0.0 -1.5)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (1.0 1.5)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (1.0 -1.5)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (-1.0 1.5)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (-1.0 -1.5)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (2.0 1.5)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (2.0 -1.5)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (-2.0 1.5)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (-2.0 -1.5)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (-0.5 1.5)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (-0.5 -1.5)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (0.5 1.5)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (0.5 -1.5)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (0.5 1.5)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (0.5 -1.5)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (-0.5 1.5)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (-0.5 -1.5)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (1.5 1.5)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (1.5 -1.5)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (-1.5 1.5)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (-1.5 -1.5)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (2.5 1.5)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (2.5 -1.5)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (-2.5 1.5)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (-2.5 -1.5)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (3.5 1.5)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (3.5 -1.5)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (-3.5 1.5)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (-3.5 -1.5)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (1.0 1.5)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (1.0 -1.5)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (-1.0 1.5)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (-1.0 -1.5)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (2.0 1.5)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (2.0 -1.5)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (-2.0 1.5)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (-2.0 -1.5)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (3.0 1.5)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (3.0 -1.5)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (-3.0 1.5)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (-3.0 -1.5)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (4.0 1.5)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (4.0 -1.5)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (-4.0 1.5)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (-4.0 -1.5)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (5.0 1.5)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (5.0 -1.5)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (-5.0 1.5)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (-5.0 -1.5)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (5.5 1.5)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (5.5 -1.5)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (-5.5 1.5)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (-5.5 -1.5)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (6.5 1.5)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (6.5 -1.5)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (-6.5 1.5)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (-6.5 -1.5)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (7.5 1.5)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (7.5 -1.5)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (-7.5 1.5)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (-7.5 -1.5)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (8.5 1.5)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (8.5 -1.5)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (-8.5 1.5)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (-8.5 -1.5)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (9.5 1.5)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (9.5 -1.5)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (-9.5 1.5)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (-9.5 -1.5)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (-1.25 1.5)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (-1.25 -1.5)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (1.25 1.5)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (1.25 -1.5)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (-0.25 1.5)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (-0.25 -1.5)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (0.25 1.5)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (0.25 -1.5)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (0.75 1.5)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (0.75 -1.5)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (-0.75 1.5)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (-0.75 -1.5)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (1.75 1.5)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (1.75 -1.5)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (-1.75 1.5)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (-1.75 -1.5)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (2.75 1.5)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (2.75 -1.5)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (-2.75 1.5)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (-2.75 -1.5)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (0.25 1.5)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (0.25 -1.5)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (-0.25 1.5)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (-0.25 -1.5)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (1.25 1.5)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (1.25 -1.5)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (-1.25 1.5)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (-1.25 -1.5)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (2.25 1.5)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (2.25 -1.5)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (-2.25 1.5)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (-2.25 -1.5)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (3.25 1.5)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (3.25 -1.5)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (-3.25 1.5)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (-3.25 -1.5)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (4.25 1.5)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (4.25 -1.5)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (-4.25 1.5)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (-4.25 -1.5)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (1.75 1.5)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (1.75 -1.5)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (-1.75 1.5)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (-1.75 -1.5)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (2.75 1.5)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (2.75 -1.5)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (-2.75 1.5)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (-2.75 -1.5)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (3.75 1.5)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (3.75 -1.5)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (-3.75 1.5)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (-3.75 -1.5)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (4.75 1.5)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (4.75 -1.5)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (-4.75 1.5)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (-4.75 -1.5)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (5.75 1.5)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (5.75 -1.5)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (-5.75 1.5)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (-5.75 -1.5)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (-2.0 2.25)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (-2.0 -2.25)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (2.0 2.25)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (2.0 -2.25)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (-1.0 2.25)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (-1.0 -2.25)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (1.0 2.25)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (1.0 -2.25)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (0.0 2.25)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (0.0 -2.25)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (1.0 2.25)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (1.0 -2.25)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (-1.0 2.25)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (-1.0 -2.25)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (2.0 2.25)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (2.0 -2.25)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (-2.0 2.25)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (-2.0 -2.25)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (0.25 2.25)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (0.25 -2.25)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (-0.25 2.25)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (-0.25 -2.25)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (1.25 2.25)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (1.25 -2.25)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (-1.25 2.25)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (-1.25 -2.25)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (2.25 2.25)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (2.25 -2.25)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (-2.25 2.25)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (-2.25 -2.25)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (3.25 2.25)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (3.25 -2.25)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (-3.25 2.25)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (-3.25 -2.25)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (4.25 2.25)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (4.25 -2.25)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (-4.25 2.25)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (-4.25 -2.25)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (2.5 2.25)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (2.5 -2.25)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (-2.5 2.25)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (-2.5 -2.25)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (3.5 2.25)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (3.5 -2.25)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (-3.5 2.25)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (-3.5 -2.25)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (4.5 2.25)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (4.5 -2.25)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (-4.5 2.25)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (-4.5 -2.25)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (5.5 2.25)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (5.5 -2.25)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (-5.5 2.25)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (-5.5 -2.25)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (6.5 2.25)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (6.5 -2.25)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (-6.5 2.25)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (-6.5 -2.25)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (9.25 2.25)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (9.25 -2.25)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (-9.25 2.25)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (-9.25 -2.25)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (10.25 2.25)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (10.25 -2.25)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (-10.25 2.25)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (-10.25 -2.25)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (11.25 2.25)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (11.25 -2.25)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (-11.25 2.25)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (-11.25 -2.25)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (12.25 2.25)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (12.25 -2.25)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (-12.25 2.25)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (-12.25 -2.25)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (13.25 2.25)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (13.25 -2.25)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (-13.25 2.25)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (-13.25 -2.25)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (-0.875 2.25)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (-0.875 -2.25)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (0.875 2.25)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (0.875 -2.25)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (0.125 2.25)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (0.125 -2.25)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (-0.125 2.25)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (-0.125 -2.25)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (1.125 2.25)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (1.125 -2.25)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (-1.125 2.25)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (-1.125 -2.25)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (2.125 2.25)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (2.125 -2.25)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (-2.125 2.25)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (-2.125 -2.25)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (3.125 2.25)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (3.125 -2.25)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (-3.125 2.25)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (-3.125 -2.25)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (1.375 2.25)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (1.375 -2.25)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (-1.375 2.25)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (-1.375 -2.25)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (2.375 2.25)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (2.375 -2.25)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (-2.375 2.25)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (-2.375 -2.25)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (3.375 2.25)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (3.375 -2.25)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (-3.375 2.25)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (-3.375 -2.25)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (4.375 2.25)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (4.375 -2.25)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (-4.375 2.25)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (-4.375 -2.25)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (5.375 2.25)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (5.375 -2.25)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (-5.375 2.25)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (-5.375 -2.25)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (3.625 2.25)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (3.625 -2.25)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (-3.625 2.25)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (-3.625 -2.25)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (4.625 2.25)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (4.625 -2.25)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (-4.625 2.25)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (-4.625 -2.25)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (5.625 2.25)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (5.625 -2.25)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (-5.625 2.25)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (-5.625 -2.25)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (6.625 2.25)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (6.625 -2.25)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (-6.625 2.25)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (-6.625 -2.25)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (7.625 2.25)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (7.625 -2.25)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (-7.625 2.25)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (-7.625 -2.25)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (-2.0 5.75)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (-2.0 -5.75)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (2.0 5.75)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (2.0 -5.75)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (-1.0 5.75)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (-1.0 -5.75)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (1.0 5.75)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (1.0 -5.75)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (0.0 5.75)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (0.0 -5.75)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (1.0 5.75)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (1.0 -5.75)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (-1.0 5.75)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (-1.0 -5.75)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (2.0 5.75)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (2.0 -5.75)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (-2.0 5.75)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (-2.0 -5.75)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (3.75 5.75)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (3.75 -5.75)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (-3.75 5.75)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (-3.75 -5.75)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (4.75 5.75)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (4.75 -5.75)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (-4.75 5.75)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (-4.75 -5.75)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (5.75 5.75)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (5.75 -5.75)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (-5.75 5.75)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (-5.75 -5.75)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (6.75 5.75)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (6.75 -5.75)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (-6.75 5.75)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (-6.75 -5.75)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (7.75 5.75)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (7.75 -5.75)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (-7.75 5.75)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (-7.75 -5.75)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (9.5 5.75)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (9.5 -5.75)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (-9.5 5.75)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (-9.5 -5.75)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (10.5 5.75)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (10.5 -5.75)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (-10.5 5.75)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (-10.5 -5.75)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (11.5 5.75)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (11.5 -5.75)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (-11.5 5.75)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (-11.5 -5.75)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (12.5 5.75)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (12.5 -5.75)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (-12.5 5.75)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (-12.5 -5.75)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (13.5 5.75)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (13.5 -5.75)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (-13.5 5.75)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (-13.5 -5.75)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (26.75 5.75)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (26.75 -5.75)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (-26.75 5.75)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (-26.75 -5.75)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (27.75 5.75)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (27.75 -5.75)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (-27.75 5.75)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (-27.75 -5.75)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (28.75 5.75)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (28.75 -5.75)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (-28.75 5.75)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (-28.75 -5.75)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (29.75 5.75)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (29.75 -5.75)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (-29.75 5.75)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (-29.75 -5.75)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (30.75 5.75)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (30.75 -5.75)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (-30.75 5.75)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (-30.75 -5.75)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (0.875 5.75)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (0.875 -5.75)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (-0.875 5.75)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (-0.875 -5.75)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (1.875 5.75)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (1.875 -5.75)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (-1.875 5.75)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (-1.875 -5.75)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (2.875 5.75)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (2.875 -5.75)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (-2.875 5.75)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (-2.875 -5.75)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (3.875 5.75)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (3.875 -5.75)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (-3.875 5.75)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (-3.875 -5.75)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (4.875 5.75)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (4.875 -5.75)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (-4.875 5.75)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (-4.875 -5.75)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (6.625 5.75)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (6.625 -5.75)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (-6.625 5.75)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (-6.625 -5.75)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (7.625 5.75)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (7.625 -5.75)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (-7.625 5.75)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (-7.625 -5.75)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (8.625 5.75)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (8.625 -5.75)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (-8.625 5.75)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (-8.625 -5.75)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (9.625 5.75)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (9.625 -5.75)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (-9.625 5.75)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (-9.625 -5.75)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (10.625 5.75)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (10.625 -5.75)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (-10.625 5.75)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (-10.625 -5.75)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (12.375 5.75)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (12.375 -5.75)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (-12.375 5.75)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (-12.375 -5.75)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (13.375 5.75)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (13.375 -5.75)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (-13.375 5.75)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (-13.375 -5.75)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (14.375 5.75)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (14.375 -5.75)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (-14.375 5.75)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (-14.375 -5.75)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (15.375 5.75)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (15.375 -5.75)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (-15.375 5.75)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (-15.375 -5.75)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (16.375 5.75)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (16.375 -5.75)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (-16.375 5.75)
PASS: numbers.test: Number-theoretic division: euclidean/: inexact: (-16.375 -5.75)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (-2/9 1/10)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (-2/9 -1/10)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (2/9 1/10)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (2/9 -1/10)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (-1/11 1/10)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (-1/11 -1/10)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (1/11 1/10)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (1/11 -1/10)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (0 1/10)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (0 -1/10)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (1/3 1/10)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (1/3 -1/10)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (-1/3 1/10)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (-1/3 -1/10)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (2/3 1/10)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (2/3 -1/10)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (-2/3 1/10)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (-2/3 -1/10)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (-11/90 1/10)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (-11/90 -1/10)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (11/90 1/10)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (11/90 -1/10)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (1/110 1/10)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (1/110 -1/10)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (-1/110 1/10)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (-1/110 -1/10)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (1/10 1/10)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (1/10 -1/10)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (-1/10 1/10)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (-1/10 -1/10)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (13/30 1/10)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (13/30 -1/10)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (-13/30 1/10)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (-13/30 -1/10)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (23/30 1/10)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (23/30 -1/10)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (-23/30 1/10)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (-23/30 -1/10)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (-1/45 1/10)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (-1/45 -1/10)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (1/45 1/10)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (1/45 -1/10)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (6/55 1/10)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (6/55 -1/10)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (-6/55 1/10)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (-6/55 -1/10)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (1/5 1/10)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (1/5 -1/10)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (-1/5 1/10)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (-1/5 -1/10)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (8/15 1/10)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (8/15 -1/10)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (-8/15 1/10)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (-8/15 -1/10)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (13/15 1/10)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (13/15 -1/10)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (-13/15 1/10)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (-13/15 -1/10)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (5/18 1/10)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (5/18 -1/10)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (-5/18 1/10)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (-5/18 -1/10)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (9/22 1/10)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (9/22 -1/10)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (-9/22 1/10)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (-9/22 -1/10)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (1/2 1/10)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (1/2 -1/10)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (-1/2 1/10)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (-1/2 -1/10)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (5/6 1/10)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (5/6 -1/10)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (-5/6 1/10)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (-5/6 -1/10)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (7/6 1/10)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (7/6 -1/10)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (-7/6 1/10)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (-7/6 -1/10)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (-31/180 1/10)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (-31/180 -1/10)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (31/180 1/10)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (31/180 -1/10)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (-9/220 1/10)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (-9/220 -1/10)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (9/220 1/10)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (9/220 -1/10)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (1/20 1/10)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (1/20 -1/10)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (-1/20 1/10)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (-1/20 -1/10)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (23/60 1/10)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (23/60 -1/10)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (-23/60 1/10)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (-23/60 -1/10)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (43/60 1/10)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (43/60 -1/10)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (-43/60 1/10)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (-43/60 -1/10)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (-13/180 1/10)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (-13/180 -1/10)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (13/180 1/10)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (13/180 -1/10)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (13/220 1/10)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (13/220 -1/10)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (-13/220 1/10)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (-13/220 -1/10)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (3/20 1/10)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (3/20 -1/10)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (-3/20 1/10)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (-3/20 -1/10)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (29/60 1/10)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (29/60 -1/10)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (-29/60 1/10)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (-29/60 -1/10)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (49/60 1/10)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (49/60 -1/10)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (-49/60 1/10)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (-49/60 -1/10)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (1/36 1/10)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (1/36 -1/10)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (-1/36 1/10)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (-1/36 -1/10)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (7/44 1/10)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (7/44 -1/10)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (-7/44 1/10)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (-7/44 -1/10)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (1/4 1/10)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (1/4 -1/10)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (-1/4 1/10)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (-1/4 -1/10)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (7/12 1/10)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (7/12 -1/10)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (-7/12 1/10)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (-7/12 -1/10)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (11/12 1/10)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (11/12 -1/10)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (-11/12 1/10)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (-11/12 -1/10)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (-2/9 16/3)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (-2/9 -16/3)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (2/9 16/3)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (2/9 -16/3)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (-1/11 16/3)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (-1/11 -16/3)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (1/11 16/3)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (1/11 -16/3)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (0 16/3)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (0 -16/3)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (1/3 16/3)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (1/3 -16/3)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (-1/3 16/3)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (-1/3 -16/3)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (2/3 16/3)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (2/3 -16/3)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (-2/3 16/3)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (-2/3 -16/3)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (46/9 16/3)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (46/9 -16/3)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (-46/9 16/3)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (-46/9 -16/3)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (173/33 16/3)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (173/33 -16/3)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (-173/33 16/3)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (-173/33 -16/3)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (16/3 16/3)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (16/3 -16/3)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (-16/3 16/3)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (-16/3 -16/3)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (17/3 16/3)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (17/3 -16/3)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (-17/3 16/3)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (-17/3 -16/3)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (6 16/3)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (6 -16/3)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (-6 16/3)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (-6 -16/3)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (94/9 16/3)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (94/9 -16/3)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (-94/9 16/3)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (-94/9 -16/3)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (349/33 16/3)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (349/33 -16/3)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (-349/33 16/3)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (-349/33 -16/3)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (32/3 16/3)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (32/3 -16/3)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (-32/3 16/3)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (-32/3 -16/3)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (11 16/3)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (11 -16/3)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (-11 16/3)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (-11 -16/3)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (34/3 16/3)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (34/3 -16/3)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (-34/3 16/3)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (-34/3 -16/3)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (238/9 16/3)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (238/9 -16/3)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (-238/9 16/3)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (-238/9 -16/3)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (877/33 16/3)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (877/33 -16/3)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (-877/33 16/3)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (-877/33 -16/3)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (80/3 16/3)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (80/3 -16/3)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (-80/3 16/3)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (-80/3 -16/3)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (27 16/3)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (27 -16/3)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (-27 16/3)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (-27 -16/3)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (82/3 16/3)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (82/3 -16/3)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (-82/3 16/3)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (-82/3 -16/3)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (22/9 16/3)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (22/9 -16/3)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (-22/9 16/3)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (-22/9 -16/3)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (85/33 16/3)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (85/33 -16/3)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (-85/33 16/3)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (-85/33 -16/3)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (8/3 16/3)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (8/3 -16/3)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (-8/3 16/3)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (-8/3 -16/3)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (3 16/3)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (3 -16/3)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (-3 16/3)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (-3 -16/3)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (10/3 16/3)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (10/3 -16/3)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (-10/3 16/3)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (-10/3 -16/3)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (70/9 16/3)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (70/9 -16/3)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (-70/9 16/3)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (-70/9 -16/3)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (87/11 16/3)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (87/11 -16/3)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (-87/11 16/3)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (-87/11 -16/3)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (8 16/3)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (8 -16/3)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (-8 16/3)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (-8 -16/3)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (25/3 16/3)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (25/3 -16/3)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (-25/3 16/3)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (-25/3 -16/3)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (26/3 16/3)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (26/3 -16/3)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (-26/3 16/3)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (-26/3 -16/3)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (118/9 16/3)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (118/9 -16/3)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (-118/9 16/3)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (-118/9 -16/3)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (437/33 16/3)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (437/33 -16/3)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (-437/33 16/3)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (-437/33 -16/3)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (40/3 16/3)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (40/3 -16/3)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (-40/3 16/3)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (-40/3 -16/3)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (41/3 16/3)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (41/3 -16/3)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (-41/3 16/3)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (-41/3 -16/3)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (14 16/3)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (14 -16/3)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (-14 16/3)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (-14 -16/3)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (-2/9 10/7)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (-2/9 -10/7)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (2/9 10/7)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (2/9 -10/7)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (-1/11 10/7)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (-1/11 -10/7)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (1/11 10/7)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (1/11 -10/7)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (0 10/7)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (0 -10/7)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (1/3 10/7)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (1/3 -10/7)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (-1/3 10/7)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (-1/3 -10/7)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (2/3 10/7)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (2/3 -10/7)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (-2/3 10/7)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (-2/3 -10/7)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (76/63 10/7)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (76/63 -10/7)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (-76/63 10/7)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (-76/63 -10/7)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (103/77 10/7)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (103/77 -10/7)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (-103/77 10/7)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (-103/77 -10/7)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (10/7 10/7)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (10/7 -10/7)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (-10/7 10/7)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (-10/7 -10/7)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (37/21 10/7)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (37/21 -10/7)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (-37/21 10/7)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (-37/21 -10/7)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (44/21 10/7)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (44/21 -10/7)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (-44/21 10/7)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (-44/21 -10/7)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (166/63 10/7)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (166/63 -10/7)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (-166/63 10/7)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (-166/63 -10/7)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (213/77 10/7)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (213/77 -10/7)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (-213/77 10/7)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (-213/77 -10/7)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (20/7 10/7)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (20/7 -10/7)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (-20/7 10/7)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (-20/7 -10/7)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (67/21 10/7)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (67/21 -10/7)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (-67/21 10/7)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (-67/21 -10/7)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (74/21 10/7)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (74/21 -10/7)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (-74/21 10/7)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (-74/21 -10/7)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (436/63 10/7)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (436/63 -10/7)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (-436/63 10/7)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (-436/63 -10/7)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (543/77 10/7)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (543/77 -10/7)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (-543/77 10/7)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (-543/77 -10/7)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (50/7 10/7)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (50/7 -10/7)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (-50/7 10/7)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (-50/7 -10/7)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (157/21 10/7)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (157/21 -10/7)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (-157/21 10/7)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (-157/21 -10/7)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (164/21 10/7)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (164/21 -10/7)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (-164/21 10/7)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (-164/21 -10/7)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (31/63 10/7)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (31/63 -10/7)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (-31/63 10/7)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (-31/63 -10/7)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (48/77 10/7)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (48/77 -10/7)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (-48/77 10/7)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (-48/77 -10/7)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (5/7 10/7)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (5/7 -10/7)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (-5/7 10/7)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (-5/7 -10/7)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (22/21 10/7)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (22/21 -10/7)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (-22/21 10/7)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (-22/21 -10/7)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (29/21 10/7)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (29/21 -10/7)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (-29/21 10/7)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (-29/21 -10/7)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (121/63 10/7)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (121/63 -10/7)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (-121/63 10/7)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (-121/63 -10/7)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (158/77 10/7)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (158/77 -10/7)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (-158/77 10/7)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (-158/77 -10/7)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (15/7 10/7)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (15/7 -10/7)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (-15/7 10/7)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (-15/7 -10/7)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (52/21 10/7)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (52/21 -10/7)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (-52/21 10/7)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (-52/21 -10/7)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (59/21 10/7)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (59/21 -10/7)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (-59/21 10/7)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (-59/21 -10/7)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (211/63 10/7)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (211/63 -10/7)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (-211/63 10/7)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (-211/63 -10/7)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (268/77 10/7)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (268/77 -10/7)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (-268/77 10/7)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (-268/77 -10/7)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (25/7 10/7)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (25/7 -10/7)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (-25/7 10/7)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (-25/7 -10/7)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (82/21 10/7)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (82/21 -10/7)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (-82/21 10/7)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (-82/21 -10/7)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (89/21 10/7)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (89/21 -10/7)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (-89/21 10/7)
PASS: numbers.test: Number-theoretic division: euclidean/: fractions: (-89/21 -10/7)
PASS: numbers.test: Number-theoretic division: euclidean/: mixed types: (25 10)
PASS: numbers.test: Number-theoretic division: euclidean/: mixed types: (25 -10)
PASS: numbers.test: Number-theoretic division: euclidean/: mixed types: (-25 10)
PASS: numbers.test: Number-theoretic division: euclidean/: mixed types: (-25 -10)
PASS: numbers.test: Number-theoretic division: euclidean/: mixed types: (15000000000 10)
PASS: numbers.test: Number-theoretic division: euclidean/: mixed types: (15000000000 -10)
PASS: numbers.test: Number-theoretic division: euclidean/: mixed types: (-15000000000 10)
PASS: numbers.test: Number-theoretic division: euclidean/: mixed types: (-15000000000 -10)
PASS: numbers.test: Number-theoretic division: euclidean/: mixed types: (130.0 10)
PASS: numbers.test: Number-theoretic division: euclidean/: mixed types: (130.0 -10)
PASS: numbers.test: Number-theoretic division: euclidean/: mixed types: (-130.0 10)
PASS: numbers.test: Number-theoretic division: euclidean/: mixed types: (-130.0 -10)
PASS: numbers.test: Number-theoretic division: euclidean/: mixed types: (15/7 10)
PASS: numbers.test: Number-theoretic division: euclidean/: mixed types: (15/7 -10)
PASS: numbers.test: Number-theoretic division: euclidean/: mixed types: (-15/7 10)
PASS: numbers.test: Number-theoretic division: euclidean/: mixed types: (-15/7 -10)
PASS: numbers.test: Number-theoretic division: euclidean/: mixed types: (0 10)
PASS: numbers.test: Number-theoretic division: euclidean/: mixed types: (0 -10)
PASS: numbers.test: Number-theoretic division: euclidean/: mixed types: (0.0 10)
PASS: numbers.test: Number-theoretic division: euclidean/: mixed types: (0.0 -10)
PASS: numbers.test: Number-theoretic division: euclidean/: mixed types: (-0.0 10)
PASS: numbers.test: Number-theoretic division: euclidean/: mixed types: (-0.0 -10)
PASS: numbers.test: Number-theoretic division: euclidean/: mixed types: (+inf.0 10)
PASS: numbers.test: Number-theoretic division: euclidean/: mixed types: (+inf.0 -10)
PASS: numbers.test: Number-theoretic division: euclidean/: mixed types: (-inf.0 10)
PASS: numbers.test: Number-theoretic division: euclidean/: mixed types: (-inf.0 -10)
PASS: numbers.test: Number-theoretic division: euclidean/: mixed types: (-inf.0 10)
PASS: numbers.test: Number-theoretic division: euclidean/: mixed types: (-inf.0 -10)
PASS: numbers.test: Number-theoretic division: euclidean/: mixed types: (+inf.0 10)
PASS: numbers.test: Number-theoretic division: euclidean/: mixed types: (+inf.0 -10)
PASS: numbers.test: Number-theoretic division: euclidean/: mixed types: (+nan.0 10)
PASS: numbers.test: Number-theoretic division: euclidean/: mixed types: (+nan.0 -10)
PASS: numbers.test: Number-theoretic division: euclidean/: mixed types: (+nan.0 10)
PASS: numbers.test: Number-theoretic division: euclidean/: mixed types: (+nan.0 -10)
PASS: numbers.test: Number-theoretic division: euclidean/: mixed types: (25 10000000000)
PASS: numbers.test: Number-theoretic division: euclidean/: mixed types: (25 -10000000000)
PASS: numbers.test: Number-theoretic division: euclidean/: mixed types: (-25 10000000000)
PASS: numbers.test: Number-theoretic division: euclidean/: mixed types: (-25 -10000000000)
PASS: numbers.test: Number-theoretic division: euclidean/: mixed types: (15000000000 10000000000)
PASS: numbers.test: Number-theoretic division: euclidean/: mixed types: (15000000000 -10000000000)
PASS: numbers.test: Number-theoretic division: euclidean/: mixed types: (-15000000000 10000000000)
PASS: numbers.test: Number-theoretic division: euclidean/: mixed types: (-15000000000 -10000000000)
PASS: numbers.test: Number-theoretic division: euclidean/: mixed types: (130.0 10000000000)
PASS: numbers.test: Number-theoretic division: euclidean/: mixed types: (130.0 -10000000000)
PASS: numbers.test: Number-theoretic division: euclidean/: mixed types: (-130.0 10000000000)
PASS: numbers.test: Number-theoretic division: euclidean/: mixed types: (-130.0 -10000000000)
PASS: numbers.test: Number-theoretic division: euclidean/: mixed types: (15/7 10000000000)
PASS: numbers.test: Number-theoretic division: euclidean/: mixed types: (15/7 -10000000000)
PASS: numbers.test: Number-theoretic division: euclidean/: mixed types: (-15/7 10000000000)
PASS: numbers.test: Number-theoretic division: euclidean/: mixed types: (-15/7 -10000000000)
PASS: numbers.test: Number-theoretic division: euclidean/: mixed types: (0 10000000000)
PASS: numbers.test: Number-theoretic division: euclidean/: mixed types: (0 -10000000000)
PASS: numbers.test: Number-theoretic division: euclidean/: mixed types: (0.0 10000000000)
PASS: numbers.test: Number-theoretic division: euclidean/: mixed types: (0.0 -10000000000)
PASS: numbers.test: Number-theoretic division: euclidean/: mixed types: (-0.0 10000000000)
PASS: numbers.test: Number-theoretic division: euclidean/: mixed types: (-0.0 -10000000000)
PASS: numbers.test: Number-theoretic division: euclidean/: mixed types: (+inf.0 10000000000)
PASS: numbers.test: Number-theoretic division: euclidean/: mixed types: (+inf.0 -10000000000)
PASS: numbers.test: Number-theoretic division: euclidean/: mixed types: (-inf.0 10000000000)
PASS: numbers.test: Number-theoretic division: euclidean/: mixed types: (-inf.0 -10000000000)
PASS: numbers.test: Number-theoretic division: euclidean/: mixed types: (-inf.0 10000000000)
PASS: numbers.test: Number-theoretic division: euclidean/: mixed types: (-inf.0 -10000000000)
PASS: numbers.test: Number-theoretic division: euclidean/: mixed types: (+inf.0 10000000000)
PASS: numbers.test: Number-theoretic division: euclidean/: mixed types: (+inf.0 -10000000000)
PASS: numbers.test: Number-theoretic division: euclidean/: mixed types: (+nan.0 10000000000)
PASS: numbers.test: Number-theoretic division: euclidean/: mixed types: (+nan.0 -10000000000)
PASS: numbers.test: Number-theoretic division: euclidean/: mixed types: (+nan.0 10000000000)
PASS: numbers.test: Number-theoretic division: euclidean/: mixed types: (+nan.0 -10000000000)
PASS: numbers.test: Number-theoretic division: euclidean/: mixed types: (25 12.0)
PASS: numbers.test: Number-theoretic division: euclidean/: mixed types: (25 -12.0)
PASS: numbers.test: Number-theoretic division: euclidean/: mixed types: (-25 12.0)
PASS: numbers.test: Number-theoretic division: euclidean/: mixed types: (-25 -12.0)
PASS: numbers.test: Number-theoretic division: euclidean/: mixed types: (15000000000 12.0)
PASS: numbers.test: Number-theoretic division: euclidean/: mixed types: (15000000000 -12.0)
PASS: numbers.test: Number-theoretic division: euclidean/: mixed types: (-15000000000 12.0)
PASS: numbers.test: Number-theoretic division: euclidean/: mixed types: (-15000000000 -12.0)
PASS: numbers.test: Number-theoretic division: euclidean/: mixed types: (130.0 12.0)
PASS: numbers.test: Number-theoretic division: euclidean/: mixed types: (130.0 -12.0)
PASS: numbers.test: Number-theoretic division: euclidean/: mixed types: (-130.0 12.0)
PASS: numbers.test: Number-theoretic division: euclidean/: mixed types: (-130.0 -12.0)
PASS: numbers.test: Number-theoretic division: euclidean/: mixed types: (15/7 12.0)
PASS: numbers.test: Number-theoretic division: euclidean/: mixed types: (15/7 -12.0)
PASS: numbers.test: Number-theoretic division: euclidean/: mixed types: (-15/7 12.0)
PASS: numbers.test: Number-theoretic division: euclidean/: mixed types: (-15/7 -12.0)
PASS: numbers.test: Number-theoretic division: euclidean/: mixed types: (0 12.0)
PASS: numbers.test: Number-theoretic division: euclidean/: mixed types: (0 -12.0)
PASS: numbers.test: Number-theoretic division: euclidean/: mixed types: (0.0 12.0)
PASS: numbers.test: Number-theoretic division: euclidean/: mixed types: (0.0 -12.0)
PASS: numbers.test: Number-theoretic division: euclidean/: mixed types: (-0.0 12.0)
PASS: numbers.test: Number-theoretic division: euclidean/: mixed types: (-0.0 -12.0)
PASS: numbers.test: Number-theoretic division: euclidean/: mixed types: (+inf.0 12.0)
PASS: numbers.test: Number-theoretic division: euclidean/: mixed types: (+inf.0 -12.0)
PASS: numbers.test: Number-theoretic division: euclidean/: mixed types: (-inf.0 12.0)
PASS: numbers.test: Number-theoretic division: euclidean/: mixed types: (-inf.0 -12.0)
PASS: numbers.test: Number-theoretic division: euclidean/: mixed types: (-inf.0 12.0)
PASS: numbers.test: Number-theoretic division: euclidean/: mixed types: (-inf.0 -12.0)
PASS: numbers.test: Number-theoretic division: euclidean/: mixed types: (+inf.0 12.0)
PASS: numbers.test: Number-theoretic division: euclidean/: mixed types: (+inf.0 -12.0)
PASS: numbers.test: Number-theoretic division: euclidean/: mixed types: (+nan.0 12.0)
PASS: numbers.test: Number-theoretic division: euclidean/: mixed types: (+nan.0 -12.0)
PASS: numbers.test: Number-theoretic division: euclidean/: mixed types: (+nan.0 12.0)
PASS: numbers.test: Number-theoretic division: euclidean/: mixed types: (+nan.0 -12.0)
PASS: numbers.test: Number-theoretic division: euclidean/: mixed types: (25 10/7)
PASS: numbers.test: Number-theoretic division: euclidean/: mixed types: (25 -10/7)
PASS: numbers.test: Number-theoretic division: euclidean/: mixed types: (-25 10/7)
PASS: numbers.test: Number-theoretic division: euclidean/: mixed types: (-25 -10/7)
PASS: numbers.test: Number-theoretic division: euclidean/: mixed types: (15000000000 10/7)
PASS: numbers.test: Number-theoretic division: euclidean/: mixed types: (15000000000 -10/7)
PASS: numbers.test: Number-theoretic division: euclidean/: mixed types: (-15000000000 10/7)
PASS: numbers.test: Number-theoretic division: euclidean/: mixed types: (-15000000000 -10/7)
PASS: numbers.test: Number-theoretic division: euclidean/: mixed types: (130.0 10/7)
PASS: numbers.test: Number-theoretic division: euclidean/: mixed types: (130.0 -10/7)
PASS: numbers.test: Number-theoretic division: euclidean/: mixed types: (-130.0 10/7)
PASS: numbers.test: Number-theoretic division: euclidean/: mixed types: (-130.0 -10/7)
PASS: numbers.test: Number-theoretic division: euclidean/: mixed types: (15/7 10/7)
PASS: numbers.test: Number-theoretic division: euclidean/: mixed types: (15/7 -10/7)
PASS: numbers.test: Number-theoretic division: euclidean/: mixed types: (-15/7 10/7)
PASS: numbers.test: Number-theoretic division: euclidean/: mixed types: (-15/7 -10/7)
PASS: numbers.test: Number-theoretic division: euclidean/: mixed types: (0 10/7)
PASS: numbers.test: Number-theoretic division: euclidean/: mixed types: (0 -10/7)
PASS: numbers.test: Number-theoretic division: euclidean/: mixed types: (0.0 10/7)
PASS: numbers.test: Number-theoretic division: euclidean/: mixed types: (0.0 -10/7)
PASS: numbers.test: Number-theoretic division: euclidean/: mixed types: (-0.0 10/7)
PASS: numbers.test: Number-theoretic division: euclidean/: mixed types: (-0.0 -10/7)
PASS: numbers.test: Number-theoretic division: euclidean/: mixed types: (+inf.0 10/7)
PASS: numbers.test: Number-theoretic division: euclidean/: mixed types: (+inf.0 -10/7)
PASS: numbers.test: Number-theoretic division: euclidean/: mixed types: (-inf.0 10/7)
PASS: numbers.test: Number-theoretic division: euclidean/: mixed types: (-inf.0 -10/7)
PASS: numbers.test: Number-theoretic division: euclidean/: mixed types: (-inf.0 10/7)
PASS: numbers.test: Number-theoretic division: euclidean/: mixed types: (-inf.0 -10/7)
PASS: numbers.test: Number-theoretic division: euclidean/: mixed types: (+inf.0 10/7)
PASS: numbers.test: Number-theoretic division: euclidean/: mixed types: (+inf.0 -10/7)
PASS: numbers.test: Number-theoretic division: euclidean/: mixed types: (+nan.0 10/7)
PASS: numbers.test: Number-theoretic division: euclidean/: mixed types: (+nan.0 -10/7)
PASS: numbers.test: Number-theoretic division: euclidean/: mixed types: (+nan.0 10/7)
PASS: numbers.test: Number-theoretic division: euclidean/: mixed types: (+nan.0 -10/7)
PASS: numbers.test: Number-theoretic division: euclidean/: mixed types: (25 +inf.0)
PASS: numbers.test: Number-theoretic division: euclidean/: mixed types: (25 -inf.0)
PASS: numbers.test: Number-theoretic division: euclidean/: mixed types: (-25 +inf.0)
PASS: numbers.test: Number-theoretic division: euclidean/: mixed types: (-25 -inf.0)
PASS: numbers.test: Number-theoretic division: euclidean/: mixed types: (15000000000 +inf.0)
PASS: numbers.test: Number-theoretic division: euclidean/: mixed types: (15000000000 -inf.0)
PASS: numbers.test: Number-theoretic division: euclidean/: mixed types: (-15000000000 +inf.0)
PASS: numbers.test: Number-theoretic division: euclidean/: mixed types: (-15000000000 -inf.0)
PASS: numbers.test: Number-theoretic division: euclidean/: mixed types: (130.0 +inf.0)
PASS: numbers.test: Number-theoretic division: euclidean/: mixed types: (130.0 -inf.0)
PASS: numbers.test: Number-theoretic division: euclidean/: mixed types: (-130.0 +inf.0)
PASS: numbers.test: Number-theoretic division: euclidean/: mixed types: (-130.0 -inf.0)
PASS: numbers.test: Number-theoretic division: euclidean/: mixed types: (15/7 +inf.0)
PASS: numbers.test: Number-theoretic division: euclidean/: mixed types: (15/7 -inf.0)
PASS: numbers.test: Number-theoretic division: euclidean/: mixed types: (-15/7 +inf.0)
PASS: numbers.test: Number-theoretic division: euclidean/: mixed types: (-15/7 -inf.0)
PASS: numbers.test: Number-theoretic division: euclidean/: mixed types: (0 +inf.0)
PASS: numbers.test: Number-theoretic division: euclidean/: mixed types: (0 -inf.0)
PASS: numbers.test: Number-theoretic division: euclidean/: mixed types: (0.0 +inf.0)
PASS: numbers.test: Number-theoretic division: euclidean/: mixed types: (0.0 -inf.0)
PASS: numbers.test: Number-theoretic division: euclidean/: mixed types: (-0.0 +inf.0)
PASS: numbers.test: Number-theoretic division: euclidean/: mixed types: (-0.0 -inf.0)
PASS: numbers.test: Number-theoretic division: euclidean/: mixed types: (+inf.0 +inf.0)
PASS: numbers.test: Number-theoretic division: euclidean/: mixed types: (+inf.0 -inf.0)
PASS: numbers.test: Number-theoretic division: euclidean/: mixed types: (-inf.0 +inf.0)
PASS: numbers.test: Number-theoretic division: euclidean/: mixed types: (-inf.0 -inf.0)
PASS: numbers.test: Number-theoretic division: euclidean/: mixed types: (-inf.0 +inf.0)
PASS: numbers.test: Number-theoretic division: euclidean/: mixed types: (-inf.0 -inf.0)
PASS: numbers.test: Number-theoretic division: euclidean/: mixed types: (+inf.0 +inf.0)
PASS: numbers.test: Number-theoretic division: euclidean/: mixed types: (+inf.0 -inf.0)
PASS: numbers.test: Number-theoretic division: euclidean/: mixed types: (+nan.0 +inf.0)
PASS: numbers.test: Number-theoretic division: euclidean/: mixed types: (+nan.0 -inf.0)
PASS: numbers.test: Number-theoretic division: euclidean/: mixed types: (+nan.0 +inf.0)
PASS: numbers.test: Number-theoretic division: euclidean/: mixed types: (+nan.0 -inf.0)
PASS: numbers.test: Number-theoretic division: euclidean/: mixed types: (25 -inf.0)
PASS: numbers.test: Number-theoretic division: euclidean/: mixed types: (25 +inf.0)
PASS: numbers.test: Number-theoretic division: euclidean/: mixed types: (-25 -inf.0)
PASS: numbers.test: Number-theoretic division: euclidean/: mixed types: (-25 +inf.0)
PASS: numbers.test: Number-theoretic division: euclidean/: mixed types: (15000000000 -inf.0)
PASS: numbers.test: Number-theoretic division: euclidean/: mixed types: (15000000000 +inf.0)
PASS: numbers.test: Number-theoretic division: euclidean/: mixed types: (-15000000000 -inf.0)
PASS: numbers.test: Number-theoretic division: euclidean/: mixed types: (-15000000000 +inf.0)
PASS: numbers.test: Number-theoretic division: euclidean/: mixed types: (130.0 -inf.0)
PASS: numbers.test: Number-theoretic division: euclidean/: mixed types: (130.0 +inf.0)
PASS: numbers.test: Number-theoretic division: euclidean/: mixed types: (-130.0 -inf.0)
PASS: numbers.test: Number-theoretic division: euclidean/: mixed types: (-130.0 +inf.0)
PASS: numbers.test: Number-theoretic division: euclidean/: mixed types: (15/7 -inf.0)
PASS: numbers.test: Number-theoretic division: euclidean/: mixed types: (15/7 +inf.0)
PASS: numbers.test: Number-theoretic division: euclidean/: mixed types: (-15/7 -inf.0)
PASS: numbers.test: Number-theoretic division: euclidean/: mixed types: (-15/7 +inf.0)
PASS: numbers.test: Number-theoretic division: euclidean/: mixed types: (0 -inf.0)
PASS: numbers.test: Number-theoretic division: euclidean/: mixed types: (0 +inf.0)
PASS: numbers.test: Number-theoretic division: euclidean/: mixed types: (0.0 -inf.0)
PASS: numbers.test: Number-theoretic division: euclidean/: mixed types: (0.0 +inf.0)
PASS: numbers.test: Number-theoretic division: euclidean/: mixed types: (-0.0 -inf.0)
PASS: numbers.test: Number-theoretic division: euclidean/: mixed types: (-0.0 +inf.0)
PASS: numbers.test: Number-theoretic division: euclidean/: mixed types: (+inf.0 -inf.0)
PASS: numbers.test: Number-theoretic division: euclidean/: mixed types: (+inf.0 +inf.0)
PASS: numbers.test: Number-theoretic division: euclidean/: mixed types: (-inf.0 -inf.0)
PASS: numbers.test: Number-theoretic division: euclidean/: mixed types: (-inf.0 +inf.0)
PASS: numbers.test: Number-theoretic division: euclidean/: mixed types: (-inf.0 -inf.0)
PASS: numbers.test: Number-theoretic division: euclidean/: mixed types: (-inf.0 +inf.0)
PASS: numbers.test: Number-theoretic division: euclidean/: mixed types: (+inf.0 -inf.0)
PASS: numbers.test: Number-theoretic division: euclidean/: mixed types: (+inf.0 +inf.0)
PASS: numbers.test: Number-theoretic division: euclidean/: mixed types: (+nan.0 -inf.0)
PASS: numbers.test: Number-theoretic division: euclidean/: mixed types: (+nan.0 +inf.0)
PASS: numbers.test: Number-theoretic division: euclidean/: mixed types: (+nan.0 -inf.0)
PASS: numbers.test: Number-theoretic division: euclidean/: mixed types: (+nan.0 +inf.0)
PASS: numbers.test: Number-theoretic division: euclidean/: mixed types: (25 +nan.0)
PASS: numbers.test: Number-theoretic division: euclidean/: mixed types: (25 +nan.0)
PASS: numbers.test: Number-theoretic division: euclidean/: mixed types: (-25 +nan.0)
PASS: numbers.test: Number-theoretic division: euclidean/: mixed types: (-25 +nan.0)
PASS: numbers.test: Number-theoretic division: euclidean/: mixed types: (15000000000 +nan.0)
PASS: numbers.test: Number-theoretic division: euclidean/: mixed types: (15000000000 +nan.0)
PASS: numbers.test: Number-theoretic division: euclidean/: mixed types: (-15000000000 +nan.0)
PASS: numbers.test: Number-theoretic division: euclidean/: mixed types: (-15000000000 +nan.0)
PASS: numbers.test: Number-theoretic division: euclidean/: mixed types: (130.0 +nan.0)
PASS: numbers.test: Number-theoretic division: euclidean/: mixed types: (130.0 +nan.0)
PASS: numbers.test: Number-theoretic division: euclidean/: mixed types: (-130.0 +nan.0)
PASS: numbers.test: Number-theoretic division: euclidean/: mixed types: (-130.0 +nan.0)
PASS: numbers.test: Number-theoretic division: euclidean/: mixed types: (15/7 +nan.0)
PASS: numbers.test: Number-theoretic division: euclidean/: mixed types: (15/7 +nan.0)
PASS: numbers.test: Number-theoretic division: euclidean/: mixed types: (-15/7 +nan.0)
PASS: numbers.test: Number-theoretic division: euclidean/: mixed types: (-15/7 +nan.0)
PASS: numbers.test: Number-theoretic division: euclidean/: mixed types: (0 +nan.0)
PASS: numbers.test: Number-theoretic division: euclidean/: mixed types: (0 +nan.0)
PASS: numbers.test: Number-theoretic division: euclidean/: mixed types: (0.0 +nan.0)
PASS: numbers.test: Number-theoretic division: euclidean/: mixed types: (0.0 +nan.0)
PASS: numbers.test: Number-theoretic division: euclidean/: mixed types: (-0.0 +nan.0)
PASS: numbers.test: Number-theoretic division: euclidean/: mixed types: (-0.0 +nan.0)
PASS: numbers.test: Number-theoretic division: euclidean/: mixed types: (+inf.0 +nan.0)
PASS: numbers.test: Number-theoretic division: euclidean/: mixed types: (+inf.0 +nan.0)
PASS: numbers.test: Number-theoretic division: euclidean/: mixed types: (-inf.0 +nan.0)
PASS: numbers.test: Number-theoretic division: euclidean/: mixed types: (-inf.0 +nan.0)
PASS: numbers.test: Number-theoretic division: euclidean/: mixed types: (-inf.0 +nan.0)
PASS: numbers.test: Number-theoretic division: euclidean/: mixed types: (-inf.0 +nan.0)
PASS: numbers.test: Number-theoretic division: euclidean/: mixed types: (+inf.0 +nan.0)
PASS: numbers.test: Number-theoretic division: euclidean/: mixed types: (+inf.0 +nan.0)
PASS: numbers.test: Number-theoretic division: euclidean/: mixed types: (+nan.0 +nan.0)
PASS: numbers.test: Number-theoretic division: euclidean/: mixed types: (+nan.0 +nan.0)
PASS: numbers.test: Number-theoretic division: euclidean/: mixed types: (+nan.0 +nan.0)
PASS: numbers.test: Number-theoretic division: euclidean/: mixed types: (+nan.0 +nan.0)
PASS: numbers.test: Number-theoretic division: euclidean/: divide by zero: (15 0)
PASS: numbers.test: Number-theoretic division: euclidean/: divide by zero: (15 0)
PASS: numbers.test: Number-theoretic division: euclidean/: divide by zero: (15 0)
PASS: numbers.test: Number-theoretic division: euclidean/: divide by zero: (15000000000 0)
PASS: numbers.test: Number-theoretic division: euclidean/: divide by zero: (15000000000 0)
PASS: numbers.test: Number-theoretic division: euclidean/: divide by zero: (15000000000 0)
PASS: numbers.test: Number-theoretic division: euclidean/: divide by zero: (18.0 0)
PASS: numbers.test: Number-theoretic division: euclidean/: divide by zero: (18.0 0)
PASS: numbers.test: Number-theoretic division: euclidean/: divide by zero: (18.0 0)
PASS: numbers.test: Number-theoretic division: euclidean/: divide by zero: (33/7 0)
PASS: numbers.test: Number-theoretic division: euclidean/: divide by zero: (33/7 0)
PASS: numbers.test: Number-theoretic division: euclidean/: divide by zero: (33/7 0)
PASS: numbers.test: Number-theoretic division: euclidean/: divide by zero: (0 0)
PASS: numbers.test: Number-theoretic division: euclidean/: divide by zero: (0 0)
PASS: numbers.test: Number-theoretic division: euclidean/: divide by zero: (0 0)
PASS: numbers.test: Number-theoretic division: euclidean/: divide by zero: (0.0 0)
PASS: numbers.test: Number-theoretic division: euclidean/: divide by zero: (0.0 0)
PASS: numbers.test: Number-theoretic division: euclidean/: divide by zero: (0.0 0)
PASS: numbers.test: Number-theoretic division: euclidean/: divide by zero: (-0.0 0)
PASS: numbers.test: Number-theoretic division: euclidean/: divide by zero: (-0.0 0)
PASS: numbers.test: Number-theoretic division: euclidean/: divide by zero: (-0.0 0)
PASS: numbers.test: Number-theoretic division: euclidean/: divide by zero: (+inf.0 0)
PASS: numbers.test: Number-theoretic division: euclidean/: divide by zero: (+inf.0 0)
PASS: numbers.test: Number-theoretic division: euclidean/: divide by zero: (+inf.0 0)
PASS: numbers.test: Number-theoretic division: euclidean/: divide by zero: (-inf.0 0)
PASS: numbers.test: Number-theoretic division: euclidean/: divide by zero: (-inf.0 0)
PASS: numbers.test: Number-theoretic division: euclidean/: divide by zero: (-inf.0 0)
PASS: numbers.test: Number-theoretic division: euclidean/: divide by zero: (+nan.0 0)
PASS: numbers.test: Number-theoretic division: euclidean/: divide by zero: (+nan.0 0)
PASS: numbers.test: Number-theoretic division: euclidean/: divide by zero: (+nan.0 0)
PASS: numbers.test: Number-theoretic division: euclidean/: divide by zero: (15 0.0)
PASS: numbers.test: Number-theoretic division: euclidean/: divide by zero: (15 0.0)
PASS: numbers.test: Number-theoretic division: euclidean/: divide by zero: (15 0.0)
PASS: numbers.test: Number-theoretic division: euclidean/: divide by zero: (15000000000 0.0)
PASS: numbers.test: Number-theoretic division: euclidean/: divide by zero: (15000000000 0.0)
PASS: numbers.test: Number-theoretic division: euclidean/: divide by zero: (15000000000 0.0)
PASS: numbers.test: Number-theoretic division: euclidean/: divide by zero: (18.0 0.0)
PASS: numbers.test: Number-theoretic division: euclidean/: divide by zero: (18.0 0.0)
PASS: numbers.test: Number-theoretic division: euclidean/: divide by zero: (18.0 0.0)
PASS: numbers.test: Number-theoretic division: euclidean/: divide by zero: (33/7 0.0)
PASS: numbers.test: Number-theoretic division: euclidean/: divide by zero: (33/7 0.0)
PASS: numbers.test: Number-theoretic division: euclidean/: divide by zero: (33/7 0.0)
PASS: numbers.test: Number-theoretic division: euclidean/: divide by zero: (0 0.0)
PASS: numbers.test: Number-theoretic division: euclidean/: divide by zero: (0 0.0)
PASS: numbers.test: Number-theoretic division: euclidean/: divide by zero: (0 0.0)
PASS: numbers.test: Number-theoretic division: euclidean/: divide by zero: (0.0 0.0)
PASS: numbers.test: Number-theoretic division: euclidean/: divide by zero: (0.0 0.0)
PASS: numbers.test: Number-theoretic division: euclidean/: divide by zero: (0.0 0.0)
PASS: numbers.test: Number-theoretic division: euclidean/: divide by zero: (-0.0 0.0)
PASS: numbers.test: Number-theoretic division: euclidean/: divide by zero: (-0.0 0.0)
PASS: numbers.test: Number-theoretic division: euclidean/: divide by zero: (-0.0 0.0)
PASS: numbers.test: Number-theoretic division: euclidean/: divide by zero: (+inf.0 0.0)
PASS: numbers.test: Number-theoretic division: euclidean/: divide by zero: (+inf.0 0.0)
PASS: numbers.test: Number-theoretic division: euclidean/: divide by zero: (+inf.0 0.0)
PASS: numbers.test: Number-theoretic division: euclidean/: divide by zero: (-inf.0 0.0)
PASS: numbers.test: Number-theoretic division: euclidean/: divide by zero: (-inf.0 0.0)
PASS: numbers.test: Number-theoretic division: euclidean/: divide by zero: (-inf.0 0.0)
PASS: numbers.test: Number-theoretic division: euclidean/: divide by zero: (+nan.0 0.0)
PASS: numbers.test: Number-theoretic division: euclidean/: divide by zero: (+nan.0 0.0)
PASS: numbers.test: Number-theoretic division: euclidean/: divide by zero: (+nan.0 0.0)
PASS: numbers.test: Number-theoretic division: euclidean/: divide by zero: (15 -0.0)
PASS: numbers.test: Number-theoretic division: euclidean/: divide by zero: (15 -0.0)
PASS: numbers.test: Number-theoretic division: euclidean/: divide by zero: (15 -0.0)
PASS: numbers.test: Number-theoretic division: euclidean/: divide by zero: (15000000000 -0.0)
PASS: numbers.test: Number-theoretic division: euclidean/: divide by zero: (15000000000 -0.0)
PASS: numbers.test: Number-theoretic division: euclidean/: divide by zero: (15000000000 -0.0)
PASS: numbers.test: Number-theoretic division: euclidean/: divide by zero: (18.0 -0.0)
PASS: numbers.test: Number-theoretic division: euclidean/: divide by zero: (18.0 -0.0)
PASS: numbers.test: Number-theoretic division: euclidean/: divide by zero: (18.0 -0.0)
PASS: numbers.test: Number-theoretic division: euclidean/: divide by zero: (33/7 -0.0)
PASS: numbers.test: Number-theoretic division: euclidean/: divide by zero: (33/7 -0.0)
PASS: numbers.test: Number-theoretic division: euclidean/: divide by zero: (33/7 -0.0)
PASS: numbers.test: Number-theoretic division: euclidean/: divide by zero: (0 -0.0)
PASS: numbers.test: Number-theoretic division: euclidean/: divide by zero: (0 -0.0)
PASS: numbers.test: Number-theoretic division: euclidean/: divide by zero: (0 -0.0)
PASS: numbers.test: Number-theoretic division: euclidean/: divide by zero: (0.0 -0.0)
PASS: numbers.test: Number-theoretic division: euclidean/: divide by zero: (0.0 -0.0)
PASS: numbers.test: Number-theoretic division: euclidean/: divide by zero: (0.0 -0.0)
PASS: numbers.test: Number-theoretic division: euclidean/: divide by zero: (-0.0 -0.0)
PASS: numbers.test: Number-theoretic division: euclidean/: divide by zero: (-0.0 -0.0)
PASS: numbers.test: Number-theoretic division: euclidean/: divide by zero: (-0.0 -0.0)
PASS: numbers.test: Number-theoretic division: euclidean/: divide by zero: (+inf.0 -0.0)
PASS: numbers.test: Number-theoretic division: euclidean/: divide by zero: (+inf.0 -0.0)
PASS: numbers.test: Number-theoretic division: euclidean/: divide by zero: (+inf.0 -0.0)
PASS: numbers.test: Number-theoretic division: euclidean/: divide by zero: (-inf.0 -0.0)
PASS: numbers.test: Number-theoretic division: euclidean/: divide by zero: (-inf.0 -0.0)
PASS: numbers.test: Number-theoretic division: euclidean/: divide by zero: (-inf.0 -0.0)
PASS: numbers.test: Number-theoretic division: euclidean/: divide by zero: (+nan.0 -0.0)
PASS: numbers.test: Number-theoretic division: euclidean/: divide by zero: (+nan.0 -0.0)
PASS: numbers.test: Number-theoretic division: euclidean/: divide by zero: (+nan.0 -0.0)
PASS: numbers.test: Number-theoretic division: floor/: documented?
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: fixnum-min / -1: (-536870912 -1)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-2 1)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-2 -1)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (2 1)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (2 -1)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-1 1)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-1 -1)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (1 1)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (1 -1)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (0 1)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (0 -1)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (1 1)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (1 -1)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-1 1)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-1 -1)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (2 1)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (2 -1)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-2 1)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-2 -1)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (3 1)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (3 -1)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-3 1)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-3 -1)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (4 1)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (4 -1)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-4 1)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-4 -1)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (5 1)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (5 -1)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-5 1)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-5 -1)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (7 1)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (7 -1)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-7 1)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-7 -1)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (10 1)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (10 -1)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-10 1)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-10 -1)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (12 1)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (12 -1)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-12 1)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-12 -1)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (15 1)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (15 -1)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-15 1)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-15 -1)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (16 1)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (16 -1)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-16 1)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-16 -1)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (19 1)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (19 -1)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-19 1)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-19 -1)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (20 1)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (20 -1)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-20 1)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-20 -1)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-1 1)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-1 -1)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (1 1)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (1 -1)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (0 1)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (0 -1)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (1 1)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (1 -1)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-1 1)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-1 -1)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (2 1)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (2 -1)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-2 1)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-2 -1)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (3 1)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (3 -1)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-3 1)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-3 -1)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (4 1)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (4 -1)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-4 1)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-4 -1)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (5 1)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (5 -1)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-5 1)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-5 -1)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (6 1)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (6 -1)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-6 1)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-6 -1)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (8 1)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (8 -1)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-8 1)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-8 -1)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (11 1)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (11 -1)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-11 1)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-11 -1)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (13 1)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (13 -1)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-13 1)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-13 -1)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (16 1)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (16 -1)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-16 1)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-16 -1)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (17 1)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (17 -1)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-17 1)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-17 -1)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (20 1)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (20 -1)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-20 1)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-20 -1)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (21 1)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (21 -1)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-21 1)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-21 -1)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (0 1)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (0 -1)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (1 1)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (1 -1)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-1 1)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-1 -1)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (2 1)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (2 -1)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-2 1)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-2 -1)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (3 1)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (3 -1)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-3 1)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-3 -1)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (4 1)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (4 -1)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-4 1)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-4 -1)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (5 1)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (5 -1)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-5 1)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-5 -1)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (6 1)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (6 -1)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-6 1)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-6 -1)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (7 1)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (7 -1)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-7 1)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-7 -1)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (9 1)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (9 -1)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-9 1)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-9 -1)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (12 1)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (12 -1)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-12 1)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-12 -1)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (14 1)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (14 -1)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-14 1)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-14 -1)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (17 1)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (17 -1)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-17 1)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-17 -1)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (18 1)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (18 -1)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-18 1)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-18 -1)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (21 1)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (21 -1)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-21 1)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-21 -1)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (22 1)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (22 -1)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-22 1)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-22 -1)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (3 1)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (3 -1)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-3 1)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-3 -1)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (4 1)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (4 -1)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-4 1)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-4 -1)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (5 1)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (5 -1)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-5 1)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-5 -1)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (6 1)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (6 -1)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-6 1)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-6 -1)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (7 1)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (7 -1)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-7 1)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-7 -1)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (8 1)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (8 -1)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-8 1)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-8 -1)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (9 1)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (9 -1)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-9 1)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-9 -1)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (10 1)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (10 -1)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-10 1)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-10 -1)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (12 1)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (12 -1)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-12 1)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-12 -1)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (15 1)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (15 -1)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-15 1)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-15 -1)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (17 1)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (17 -1)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-17 1)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-17 -1)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (20 1)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (20 -1)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-20 1)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-20 -1)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (21 1)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (21 -1)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-21 1)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-21 -1)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (24 1)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (24 -1)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-24 1)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-24 -1)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (25 1)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (25 -1)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-25 1)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-25 -1)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (8 1)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (8 -1)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-8 1)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-8 -1)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (9 1)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (9 -1)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-9 1)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-9 -1)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (10 1)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (10 -1)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-10 1)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-10 -1)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (11 1)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (11 -1)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-11 1)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-11 -1)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (12 1)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (12 -1)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-12 1)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-12 -1)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (13 1)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (13 -1)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-13 1)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-13 -1)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (14 1)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (14 -1)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-14 1)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-14 -1)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (15 1)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (15 -1)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-15 1)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-15 -1)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (17 1)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (17 -1)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-17 1)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-17 -1)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (20 1)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (20 -1)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-20 1)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-20 -1)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (22 1)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (22 -1)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-22 1)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-22 -1)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (25 1)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (25 -1)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-25 1)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-25 -1)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (26 1)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (26 -1)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-26 1)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-26 -1)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (29 1)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (29 -1)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-29 1)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-29 -1)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (30 1)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (30 -1)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-30 1)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-30 -1)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-2 2)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-2 -2)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (2 2)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (2 -2)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-1 2)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-1 -2)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (1 2)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (1 -2)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (0 2)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (0 -2)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (1 2)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (1 -2)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-1 2)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-1 -2)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (2 2)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (2 -2)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-2 2)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-2 -2)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (3 2)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (3 -2)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-3 2)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-3 -2)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (4 2)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (4 -2)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-4 2)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-4 -2)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (5 2)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (5 -2)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-5 2)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-5 -2)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (7 2)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (7 -2)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-7 2)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-7 -2)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (10 2)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (10 -2)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-10 2)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-10 -2)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (12 2)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (12 -2)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-12 2)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-12 -2)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (15 2)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (15 -2)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-15 2)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-15 -2)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (16 2)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (16 -2)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-16 2)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-16 -2)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (19 2)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (19 -2)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-19 2)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-19 -2)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (20 2)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (20 -2)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-20 2)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-20 -2)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (0 2)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (0 -2)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (1 2)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (1 -2)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-1 2)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-1 -2)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (2 2)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (2 -2)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-2 2)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-2 -2)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (3 2)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (3 -2)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-3 2)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-3 -2)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (4 2)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (4 -2)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-4 2)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-4 -2)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (5 2)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (5 -2)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-5 2)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-5 -2)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (6 2)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (6 -2)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-6 2)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-6 -2)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (7 2)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (7 -2)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-7 2)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-7 -2)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (9 2)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (9 -2)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-9 2)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-9 -2)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (12 2)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (12 -2)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-12 2)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-12 -2)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (14 2)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (14 -2)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-14 2)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-14 -2)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (17 2)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (17 -2)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-17 2)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-17 -2)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (18 2)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (18 -2)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-18 2)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-18 -2)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (21 2)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (21 -2)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-21 2)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-21 -2)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (22 2)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (22 -2)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-22 2)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-22 -2)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (2 2)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (2 -2)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-2 2)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-2 -2)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (3 2)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (3 -2)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-3 2)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-3 -2)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (4 2)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (4 -2)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-4 2)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-4 -2)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (5 2)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (5 -2)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-5 2)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-5 -2)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (6 2)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (6 -2)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-6 2)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-6 -2)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (7 2)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (7 -2)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-7 2)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-7 -2)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (8 2)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (8 -2)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-8 2)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-8 -2)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (9 2)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (9 -2)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-9 2)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-9 -2)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (11 2)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (11 -2)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-11 2)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-11 -2)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (14 2)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (14 -2)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-14 2)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-14 -2)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (16 2)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (16 -2)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-16 2)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-16 -2)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (19 2)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (19 -2)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-19 2)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-19 -2)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (20 2)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (20 -2)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-20 2)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-20 -2)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (23 2)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (23 -2)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-23 2)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-23 -2)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (24 2)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (24 -2)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-24 2)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-24 -2)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (8 2)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (8 -2)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-8 2)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-8 -2)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (9 2)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (9 -2)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-9 2)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-9 -2)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (10 2)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (10 -2)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-10 2)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-10 -2)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (11 2)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (11 -2)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-11 2)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-11 -2)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (12 2)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (12 -2)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-12 2)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-12 -2)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (13 2)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (13 -2)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-13 2)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-13 -2)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (14 2)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (14 -2)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-14 2)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-14 -2)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (15 2)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (15 -2)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-15 2)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-15 -2)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (17 2)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (17 -2)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-17 2)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-17 -2)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (20 2)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (20 -2)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-20 2)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-20 -2)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (22 2)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (22 -2)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-22 2)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-22 -2)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (25 2)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (25 -2)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-25 2)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-25 -2)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (26 2)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (26 -2)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-26 2)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-26 -2)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (29 2)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (29 -2)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-29 2)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-29 -2)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (30 2)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (30 -2)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-30 2)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-30 -2)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (18 2)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (18 -2)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-18 2)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-18 -2)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (19 2)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (19 -2)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-19 2)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-19 -2)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (20 2)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (20 -2)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-20 2)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-20 -2)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (21 2)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (21 -2)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-21 2)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-21 -2)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (22 2)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (22 -2)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-22 2)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-22 -2)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (23 2)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (23 -2)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-23 2)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-23 -2)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (24 2)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (24 -2)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-24 2)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-24 -2)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (25 2)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (25 -2)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-25 2)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-25 -2)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (27 2)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (27 -2)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-27 2)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-27 -2)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (30 2)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (30 -2)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-30 2)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-30 -2)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (32 2)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (32 -2)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-32 2)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-32 -2)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (35 2)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (35 -2)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-35 2)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-35 -2)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (36 2)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (36 -2)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-36 2)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-36 -2)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (39 2)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (39 -2)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-39 2)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-39 -2)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (40 2)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (40 -2)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-40 2)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-40 -2)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-2 5)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-2 -5)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (2 5)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (2 -5)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-1 5)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-1 -5)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (1 5)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (1 -5)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (0 5)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (0 -5)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (1 5)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (1 -5)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-1 5)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-1 -5)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (2 5)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (2 -5)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-2 5)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-2 -5)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (3 5)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (3 -5)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-3 5)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-3 -5)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (4 5)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (4 -5)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-4 5)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-4 -5)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (5 5)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (5 -5)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-5 5)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-5 -5)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (7 5)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (7 -5)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-7 5)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-7 -5)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (10 5)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (10 -5)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-10 5)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-10 -5)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (12 5)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (12 -5)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-12 5)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-12 -5)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (15 5)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (15 -5)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-15 5)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-15 -5)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (16 5)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (16 -5)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-16 5)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-16 -5)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (19 5)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (19 -5)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-19 5)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-19 -5)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (20 5)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (20 -5)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-20 5)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-20 -5)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (3 5)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (3 -5)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-3 5)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-3 -5)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (4 5)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (4 -5)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-4 5)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-4 -5)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (5 5)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (5 -5)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-5 5)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-5 -5)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (6 5)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (6 -5)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-6 5)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-6 -5)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (7 5)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (7 -5)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-7 5)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-7 -5)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (8 5)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (8 -5)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-8 5)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-8 -5)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (9 5)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (9 -5)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-9 5)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-9 -5)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (10 5)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (10 -5)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-10 5)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-10 -5)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (12 5)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (12 -5)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-12 5)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-12 -5)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (15 5)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (15 -5)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-15 5)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-15 -5)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (17 5)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (17 -5)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-17 5)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-17 -5)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (20 5)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (20 -5)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-20 5)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-20 -5)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (21 5)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (21 -5)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-21 5)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-21 -5)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (24 5)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (24 -5)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-24 5)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-24 -5)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (25 5)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (25 -5)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-25 5)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-25 -5)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (8 5)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (8 -5)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-8 5)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-8 -5)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (9 5)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (9 -5)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-9 5)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-9 -5)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (10 5)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (10 -5)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-10 5)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-10 -5)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (11 5)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (11 -5)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-11 5)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-11 -5)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (12 5)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (12 -5)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-12 5)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-12 -5)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (13 5)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (13 -5)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-13 5)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-13 -5)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (14 5)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (14 -5)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-14 5)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-14 -5)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (15 5)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (15 -5)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-15 5)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-15 -5)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (17 5)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (17 -5)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-17 5)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-17 -5)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (20 5)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (20 -5)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-20 5)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-20 -5)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (22 5)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (22 -5)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-22 5)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-22 -5)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (25 5)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (25 -5)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-25 5)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-25 -5)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (26 5)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (26 -5)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-26 5)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-26 -5)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (29 5)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (29 -5)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-29 5)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-29 -5)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (30 5)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (30 -5)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-30 5)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-30 -5)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (23 5)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (23 -5)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-23 5)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-23 -5)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (24 5)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (24 -5)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-24 5)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-24 -5)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (25 5)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (25 -5)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-25 5)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-25 -5)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (26 5)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (26 -5)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-26 5)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-26 -5)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (27 5)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (27 -5)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-27 5)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-27 -5)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (28 5)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (28 -5)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-28 5)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-28 -5)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (29 5)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (29 -5)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-29 5)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-29 -5)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (30 5)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (30 -5)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-30 5)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-30 -5)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (32 5)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (32 -5)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-32 5)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-32 -5)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (35 5)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (35 -5)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-35 5)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-35 -5)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (37 5)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (37 -5)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-37 5)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-37 -5)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (40 5)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (40 -5)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-40 5)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-40 -5)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (41 5)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (41 -5)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-41 5)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-41 -5)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (44 5)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (44 -5)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-44 5)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-44 -5)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (45 5)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (45 -5)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-45 5)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-45 -5)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (48 5)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (48 -5)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-48 5)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-48 -5)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (49 5)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (49 -5)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-49 5)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-49 -5)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (50 5)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (50 -5)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-50 5)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-50 -5)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (51 5)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (51 -5)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-51 5)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-51 -5)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (52 5)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (52 -5)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-52 5)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-52 -5)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (53 5)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (53 -5)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-53 5)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-53 -5)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (54 5)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (54 -5)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-54 5)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-54 -5)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (55 5)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (55 -5)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-55 5)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-55 -5)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (57 5)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (57 -5)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-57 5)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-57 -5)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (60 5)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (60 -5)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-60 5)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-60 -5)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (62 5)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (62 -5)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-62 5)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-62 -5)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (65 5)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (65 -5)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-65 5)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-65 -5)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (66 5)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (66 -5)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-66 5)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-66 -5)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (69 5)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (69 -5)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-69 5)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-69 -5)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (70 5)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (70 -5)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-70 5)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-70 -5)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-2 10)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-2 -10)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (2 10)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (2 -10)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-1 10)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-1 -10)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (1 10)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (1 -10)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (0 10)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (0 -10)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (1 10)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (1 -10)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-1 10)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-1 -10)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (2 10)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (2 -10)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-2 10)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-2 -10)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (3 10)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (3 -10)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-3 10)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-3 -10)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (4 10)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (4 -10)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-4 10)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-4 -10)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (5 10)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (5 -10)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-5 10)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-5 -10)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (7 10)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (7 -10)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-7 10)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-7 -10)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (10 10)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (10 -10)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-10 10)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-10 -10)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (12 10)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (12 -10)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-12 10)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-12 -10)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (15 10)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (15 -10)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-15 10)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-15 -10)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (16 10)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (16 -10)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-16 10)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-16 -10)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (19 10)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (19 -10)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-19 10)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-19 -10)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (20 10)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (20 -10)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-20 10)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-20 -10)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (8 10)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (8 -10)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-8 10)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-8 -10)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (9 10)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (9 -10)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-9 10)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-9 -10)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (10 10)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (10 -10)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-10 10)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-10 -10)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (11 10)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (11 -10)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-11 10)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-11 -10)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (12 10)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (12 -10)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-12 10)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-12 -10)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (13 10)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (13 -10)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-13 10)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-13 -10)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (14 10)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (14 -10)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-14 10)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-14 -10)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (15 10)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (15 -10)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-15 10)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-15 -10)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (17 10)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (17 -10)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-17 10)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-17 -10)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (20 10)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (20 -10)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-20 10)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-20 -10)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (22 10)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (22 -10)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-22 10)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-22 -10)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (25 10)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (25 -10)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-25 10)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-25 -10)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (26 10)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (26 -10)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-26 10)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-26 -10)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (29 10)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (29 -10)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-29 10)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-29 -10)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (30 10)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (30 -10)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-30 10)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-30 -10)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (18 10)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (18 -10)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-18 10)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-18 -10)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (19 10)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (19 -10)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-19 10)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-19 -10)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (20 10)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (20 -10)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-20 10)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-20 -10)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (21 10)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (21 -10)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-21 10)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-21 -10)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (22 10)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (22 -10)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-22 10)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-22 -10)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (23 10)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (23 -10)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-23 10)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-23 -10)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (24 10)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (24 -10)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-24 10)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-24 -10)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (25 10)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (25 -10)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-25 10)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-25 -10)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (27 10)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (27 -10)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-27 10)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-27 -10)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (30 10)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (30 -10)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-30 10)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-30 -10)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (32 10)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (32 -10)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-32 10)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-32 -10)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (35 10)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (35 -10)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-35 10)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-35 -10)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (36 10)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (36 -10)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-36 10)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-36 -10)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (39 10)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (39 -10)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-39 10)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-39 -10)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (40 10)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (40 -10)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-40 10)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-40 -10)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (48 10)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (48 -10)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-48 10)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-48 -10)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (49 10)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (49 -10)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-49 10)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-49 -10)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (50 10)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (50 -10)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-50 10)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-50 -10)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (51 10)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (51 -10)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-51 10)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-51 -10)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (52 10)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (52 -10)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-52 10)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-52 -10)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (53 10)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (53 -10)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-53 10)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-53 -10)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (54 10)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (54 -10)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-54 10)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-54 -10)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (55 10)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (55 -10)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-55 10)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-55 -10)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (57 10)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (57 -10)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-57 10)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-57 -10)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (60 10)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (60 -10)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-60 10)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-60 -10)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (62 10)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (62 -10)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-62 10)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-62 -10)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (65 10)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (65 -10)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-65 10)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-65 -10)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (66 10)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (66 -10)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-66 10)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-66 -10)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (69 10)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (69 -10)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-69 10)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-69 -10)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (70 10)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (70 -10)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-70 10)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-70 -10)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (98 10)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (98 -10)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-98 10)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-98 -10)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (99 10)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (99 -10)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-99 10)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-99 -10)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (100 10)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (100 -10)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-100 10)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-100 -10)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (101 10)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (101 -10)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-101 10)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-101 -10)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (102 10)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (102 -10)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-102 10)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-102 -10)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (103 10)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (103 -10)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-103 10)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-103 -10)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (104 10)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (104 -10)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-104 10)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-104 -10)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (105 10)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (105 -10)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-105 10)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-105 -10)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (107 10)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (107 -10)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-107 10)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-107 -10)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (110 10)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (110 -10)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-110 10)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-110 -10)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (112 10)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (112 -10)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-112 10)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-112 -10)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (115 10)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (115 -10)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-115 10)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-115 -10)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (116 10)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (116 -10)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-116 10)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-116 -10)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (119 10)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (119 -10)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-119 10)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-119 -10)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (120 10)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (120 -10)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-120 10)
PASS: numbers.test: Number-theoretic division: floor/: inum / inum: (-120 -10)
PASS: numbers.test: Number-theoretic division: floor/: inum / big: fixnum-min / -fixnum-min: (-536870912 536870912)
PASS: numbers.test: Number-theoretic division: floor/: inum / big: fixnum-max / (2*fixnum-max): (536870911 1073741822)
PASS: numbers.test: Number-theoretic division: floor/: inum / big: fixnum-max / (2*fixnum-max): (536870911 -1073741822)
PASS: numbers.test: Number-theoretic division: floor/: inum / big: fixnum-max / (2*fixnum-max): (-536870911 1073741822)
PASS: numbers.test: Number-theoretic division: floor/: inum / big: fixnum-max / (2*fixnum-max): (-536870911 -1073741822)
PASS: numbers.test: Number-theoretic division: floor/: inum / big: (0 536870912)
PASS: numbers.test: Number-theoretic division: floor/: inum / big: (0 536870912)
PASS: numbers.test: Number-theoretic division: floor/: inum / big: (0 -536870913)
PASS: numbers.test: Number-theoretic division: floor/: inum / big: (0 -536870913)
PASS: numbers.test: Number-theoretic division: floor/: inum / big: (1 536870912)
PASS: numbers.test: Number-theoretic division: floor/: inum / big: (-1 536870912)
PASS: numbers.test: Number-theoretic division: floor/: inum / big: (1 -536870913)
PASS: numbers.test: Number-theoretic division: floor/: inum / big: (-1 -536870913)
PASS: numbers.test: Number-theoretic division: floor/: inum / big: (2 536870912)
PASS: numbers.test: Number-theoretic division: floor/: inum / big: (-2 536870912)
PASS: numbers.test: Number-theoretic division: floor/: inum / big: (2 -536870913)
PASS: numbers.test: Number-theoretic division: floor/: inum / big: (-2 -536870913)
PASS: numbers.test: Number-theoretic division: floor/: inum / big: (10 536870912)
PASS: numbers.test: Number-theoretic division: floor/: inum / big: (-10 536870912)
PASS: numbers.test: Number-theoretic division: floor/: inum / big: (10 -536870913)
PASS: numbers.test: Number-theoretic division: floor/: inum / big: (-10 -536870913)
PASS: numbers.test: Number-theoretic division: floor/: inum / big: (536870910 536870912)
PASS: numbers.test: Number-theoretic division: floor/: inum / big: (-536870910 536870912)
PASS: numbers.test: Number-theoretic division: floor/: inum / big: (536870910 -536870913)
PASS: numbers.test: Number-theoretic division: floor/: inum / big: (-536870910 -536870913)
PASS: numbers.test: Number-theoretic division: floor/: inum / big: (536870911 536870912)
PASS: numbers.test: Number-theoretic division: floor/: inum / big: (-536870911 536870912)
PASS: numbers.test: Number-theoretic division: floor/: inum / big: (536870911 -536870913)
PASS: numbers.test: Number-theoretic division: floor/: inum / big: (-536870911 -536870913)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: -fixnum-min / fixnum-min: (536870912 -536870912)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (9999999998 1)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (9999999998 -1)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (-9999999998 1)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (-9999999998 -1)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (9999999999 1)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (9999999999 -1)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (-9999999999 1)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (-9999999999 -1)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (10000000000 1)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (10000000000 -1)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (-10000000000 1)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (-10000000000 -1)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (10000000001 1)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (10000000001 -1)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (-10000000001 1)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (-10000000001 -1)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (10000000002 1)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (10000000002 -1)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (-10000000002 1)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (-10000000002 -1)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (19999999998 1)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (19999999998 -1)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (-19999999998 1)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (-19999999998 -1)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (19999999999 1)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (19999999999 -1)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (-19999999999 1)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (-19999999999 -1)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (20000000000 1)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (20000000000 -1)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (-20000000000 1)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (-20000000000 -1)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (20000000001 1)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (20000000001 -1)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (-20000000001 1)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (-20000000001 -1)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (20000000002 1)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (20000000002 -1)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (-20000000002 1)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (-20000000002 -1)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (49999999998 1)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (49999999998 -1)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (-49999999998 1)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (-49999999998 -1)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (49999999999 1)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (49999999999 -1)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (-49999999999 1)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (-49999999999 -1)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (50000000000 1)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (50000000000 -1)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (-50000000000 1)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (-50000000000 -1)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (50000000001 1)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (50000000001 -1)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (-50000000001 1)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (-50000000001 -1)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (50000000002 1)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (50000000002 -1)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (-50000000002 1)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (-50000000002 -1)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (39999999998 4)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (39999999998 -4)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (-39999999998 4)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (-39999999998 -4)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (39999999999 4)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (39999999999 -4)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (-39999999999 4)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (-39999999999 -4)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (40000000000 4)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (40000000000 -4)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (-40000000000 4)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (-40000000000 -4)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (40000000001 4)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (40000000001 -4)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (-40000000001 4)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (-40000000001 -4)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (40000000002 4)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (40000000002 -4)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (-40000000002 4)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (-40000000002 -4)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (79999999998 4)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (79999999998 -4)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (-79999999998 4)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (-79999999998 -4)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (79999999999 4)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (79999999999 -4)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (-79999999999 4)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (-79999999999 -4)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (80000000000 4)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (80000000000 -4)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (-80000000000 4)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (-80000000000 -4)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (80000000001 4)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (80000000001 -4)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (-80000000001 4)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (-80000000001 -4)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (80000000002 4)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (80000000002 -4)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (-80000000002 4)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (-80000000002 -4)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (199999999998 4)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (199999999998 -4)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (-199999999998 4)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (-199999999998 -4)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (199999999999 4)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (199999999999 -4)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (-199999999999 4)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (-199999999999 -4)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (200000000000 4)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (200000000000 -4)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (-200000000000 4)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (-200000000000 -4)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (200000000001 4)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (200000000001 -4)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (-200000000001 4)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (-200000000001 -4)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (200000000002 4)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (200000000002 -4)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (-200000000002 4)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (-200000000002 -4)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (19999999998 4)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (19999999998 -4)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (-19999999998 4)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (-19999999998 -4)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (19999999999 4)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (19999999999 -4)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (-19999999999 4)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (-19999999999 -4)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (20000000000 4)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (20000000000 -4)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (-20000000000 4)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (-20000000000 -4)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (20000000001 4)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (20000000001 -4)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (-20000000001 4)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (-20000000001 -4)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (20000000002 4)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (20000000002 -4)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (-20000000002 4)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (-20000000002 -4)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (59999999998 4)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (59999999998 -4)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (-59999999998 4)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (-59999999998 -4)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (59999999999 4)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (59999999999 -4)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (-59999999999 4)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (-59999999999 -4)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (60000000000 4)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (60000000000 -4)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (-60000000000 4)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (-60000000000 -4)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (60000000001 4)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (60000000001 -4)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (-60000000001 4)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (-60000000001 -4)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (60000000002 4)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (60000000002 -4)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (-60000000002 4)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (-60000000002 -4)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (99999999998 4)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (99999999998 -4)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (-99999999998 4)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (-99999999998 -4)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (99999999999 4)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (99999999999 -4)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (-99999999999 4)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (-99999999999 -4)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (100000000000 4)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (100000000000 -4)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (-100000000000 4)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (-100000000000 -4)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (100000000001 4)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (100000000001 -4)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (-100000000001 4)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (-100000000001 -4)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (100000000002 4)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (100000000002 -4)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (-100000000002 4)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (-100000000002 -4)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (49999999998 5)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (49999999998 -5)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (-49999999998 5)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (-49999999998 -5)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (49999999999 5)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (49999999999 -5)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (-49999999999 5)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (-49999999999 -5)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (50000000000 5)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (50000000000 -5)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (-50000000000 5)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (-50000000000 -5)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (50000000001 5)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (50000000001 -5)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (-50000000001 5)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (-50000000001 -5)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (50000000002 5)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (50000000002 -5)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (-50000000002 5)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (-50000000002 -5)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (99999999998 5)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (99999999998 -5)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (-99999999998 5)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (-99999999998 -5)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (99999999999 5)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (99999999999 -5)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (-99999999999 5)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (-99999999999 -5)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (100000000000 5)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (100000000000 -5)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (-100000000000 5)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (-100000000000 -5)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (100000000001 5)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (100000000001 -5)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (-100000000001 5)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (-100000000001 -5)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (100000000002 5)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (100000000002 -5)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (-100000000002 5)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (-100000000002 -5)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (249999999998 5)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (249999999998 -5)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (-249999999998 5)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (-249999999998 -5)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (249999999999 5)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (249999999999 -5)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (-249999999999 5)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (-249999999999 -5)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (250000000000 5)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (250000000000 -5)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (-250000000000 5)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (-250000000000 -5)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (250000000001 5)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (250000000001 -5)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (-250000000001 5)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (-250000000001 -5)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (250000000002 5)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (250000000002 -5)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (-250000000002 5)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (-250000000002 -5)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (99999999998 10)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (99999999998 -10)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (-99999999998 10)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (-99999999998 -10)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (99999999999 10)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (99999999999 -10)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (-99999999999 10)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (-99999999999 -10)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (100000000000 10)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (100000000000 -10)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (-100000000000 10)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (-100000000000 -10)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (100000000001 10)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (100000000001 -10)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (-100000000001 10)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (-100000000001 -10)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (100000000002 10)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (100000000002 -10)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (-100000000002 10)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (-100000000002 -10)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (199999999998 10)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (199999999998 -10)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (-199999999998 10)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (-199999999998 -10)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (199999999999 10)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (199999999999 -10)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (-199999999999 10)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (-199999999999 -10)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (200000000000 10)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (200000000000 -10)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (-200000000000 10)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (-200000000000 -10)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (200000000001 10)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (200000000001 -10)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (-200000000001 10)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (-200000000001 -10)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (200000000002 10)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (200000000002 -10)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (-200000000002 10)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (-200000000002 -10)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (499999999998 10)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (499999999998 -10)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (-499999999998 10)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (-499999999998 -10)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (499999999999 10)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (499999999999 -10)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (-499999999999 10)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (-499999999999 -10)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (500000000000 10)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (500000000000 -10)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (-500000000000 10)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (-500000000000 -10)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (500000000001 10)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (500000000001 -10)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (-500000000001 10)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (-500000000001 -10)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (500000000002 10)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (500000000002 -10)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (-500000000002 10)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (-500000000002 -10)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (49999999998 10)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (49999999998 -10)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (-49999999998 10)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (-49999999998 -10)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (49999999999 10)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (49999999999 -10)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (-49999999999 10)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (-49999999999 -10)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (50000000000 10)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (50000000000 -10)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (-50000000000 10)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (-50000000000 -10)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (50000000001 10)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (50000000001 -10)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (-50000000001 10)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (-50000000001 -10)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (50000000002 10)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (50000000002 -10)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (-50000000002 10)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (-50000000002 -10)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (149999999998 10)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (149999999998 -10)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (-149999999998 10)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (-149999999998 -10)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (149999999999 10)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (149999999999 -10)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (-149999999999 10)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (-149999999999 -10)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (150000000000 10)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (150000000000 -10)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (-150000000000 10)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (-150000000000 -10)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (150000000001 10)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (150000000001 -10)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (-150000000001 10)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (-150000000001 -10)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (150000000002 10)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (150000000002 -10)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (-150000000002 10)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (-150000000002 -10)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (249999999998 10)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (249999999998 -10)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (-249999999998 10)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (-249999999998 -10)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (249999999999 10)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (249999999999 -10)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (-249999999999 10)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (-249999999999 -10)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (250000000000 10)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (250000000000 -10)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (-250000000000 10)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (-250000000000 -10)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (250000000001 10)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (250000000001 -10)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (-250000000001 10)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (-250000000001 -10)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (250000000002 10)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (250000000002 -10)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (-250000000002 10)
PASS: numbers.test: Number-theoretic division: floor/: big / inum: (-250000000002 -10)
PASS: numbers.test: Number-theoretic division: floor/: big / big: (9999999998 10000000000)
PASS: numbers.test: Number-theoretic division: floor/: big / big: (9999999998 -10000000000)
PASS: numbers.test: Number-theoretic division: floor/: big / big: (-9999999998 10000000000)
PASS: numbers.test: Number-theoretic division: floor/: big / big: (-9999999998 -10000000000)
PASS: numbers.test: Number-theoretic division: floor/: big / big: (9999999999 10000000000)
PASS: numbers.test: Number-theoretic division: floor/: big / big: (9999999999 -10000000000)
PASS: numbers.test: Number-theoretic division: floor/: big / big: (-9999999999 10000000000)
PASS: numbers.test: Number-theoretic division: floor/: big / big: (-9999999999 -10000000000)
PASS: numbers.test: Number-theoretic division: floor/: big / big: (10000000000 10000000000)
PASS: numbers.test: Number-theoretic division: floor/: big / big: (10000000000 -10000000000)
PASS: numbers.test: Number-theoretic division: floor/: big / big: (-10000000000 10000000000)
PASS: numbers.test: Number-theoretic division: floor/: big / big: (-10000000000 -10000000000)
PASS: numbers.test: Number-theoretic division: floor/: big / big: (10000000001 10000000000)
PASS: numbers.test: Number-theoretic division: floor/: big / big: (10000000001 -10000000000)
PASS: numbers.test: Number-theoretic division: floor/: big / big: (-10000000001 10000000000)
PASS: numbers.test: Number-theoretic division: floor/: big / big: (-10000000001 -10000000000)
PASS: numbers.test: Number-theoretic division: floor/: big / big: (10000000002 10000000000)
PASS: numbers.test: Number-theoretic division: floor/: big / big: (10000000002 -10000000000)
PASS: numbers.test: Number-theoretic division: floor/: big / big: (-10000000002 10000000000)
PASS: numbers.test: Number-theoretic division: floor/: big / big: (-10000000002 -10000000000)
PASS: numbers.test: Number-theoretic division: floor/: big / big: (19999999998 10000000000)
PASS: numbers.test: Number-theoretic division: floor/: big / big: (19999999998 -10000000000)
PASS: numbers.test: Number-theoretic division: floor/: big / big: (-19999999998 10000000000)
PASS: numbers.test: Number-theoretic division: floor/: big / big: (-19999999998 -10000000000)
PASS: numbers.test: Number-theoretic division: floor/: big / big: (19999999999 10000000000)
PASS: numbers.test: Number-theoretic division: floor/: big / big: (19999999999 -10000000000)
PASS: numbers.test: Number-theoretic division: floor/: big / big: (-19999999999 10000000000)
PASS: numbers.test: Number-theoretic division: floor/: big / big: (-19999999999 -10000000000)
PASS: numbers.test: Number-theoretic division: floor/: big / big: (20000000000 10000000000)
PASS: numbers.test: Number-theoretic division: floor/: big / big: (20000000000 -10000000000)
PASS: numbers.test: Number-theoretic division: floor/: big / big: (-20000000000 10000000000)
PASS: numbers.test: Number-theoretic division: floor/: big / big: (-20000000000 -10000000000)
PASS: numbers.test: Number-theoretic division: floor/: big / big: (20000000001 10000000000)
PASS: numbers.test: Number-theoretic division: floor/: big / big: (20000000001 -10000000000)
PASS: numbers.test: Number-theoretic division: floor/: big / big: (-20000000001 10000000000)
PASS: numbers.test: Number-theoretic division: floor/: big / big: (-20000000001 -10000000000)
PASS: numbers.test: Number-theoretic division: floor/: big / big: (20000000002 10000000000)
PASS: numbers.test: Number-theoretic division: floor/: big / big: (20000000002 -10000000000)
PASS: numbers.test: Number-theoretic division: floor/: big / big: (-20000000002 10000000000)
PASS: numbers.test: Number-theoretic division: floor/: big / big: (-20000000002 -10000000000)
PASS: numbers.test: Number-theoretic division: floor/: big / big: (49999999998 10000000000)
PASS: numbers.test: Number-theoretic division: floor/: big / big: (49999999998 -10000000000)
PASS: numbers.test: Number-theoretic division: floor/: big / big: (-49999999998 10000000000)
PASS: numbers.test: Number-theoretic division: floor/: big / big: (-49999999998 -10000000000)
PASS: numbers.test: Number-theoretic division: floor/: big / big: (49999999999 10000000000)
PASS: numbers.test: Number-theoretic division: floor/: big / big: (49999999999 -10000000000)
PASS: numbers.test: Number-theoretic division: floor/: big / big: (-49999999999 10000000000)
PASS: numbers.test: Number-theoretic division: floor/: big / big: (-49999999999 -10000000000)
PASS: numbers.test: Number-theoretic division: floor/: big / big: (50000000000 10000000000)
PASS: numbers.test: Number-theoretic division: floor/: big / big: (50000000000 -10000000000)
PASS: numbers.test: Number-theoretic division: floor/: big / big: (-50000000000 10000000000)
PASS: numbers.test: Number-theoretic division: floor/: big / big: (-50000000000 -10000000000)
PASS: numbers.test: Number-theoretic division: floor/: big / big: (50000000001 10000000000)
PASS: numbers.test: Number-theoretic division: floor/: big / big: (50000000001 -10000000000)
PASS: numbers.test: Number-theoretic division: floor/: big / big: (-50000000001 10000000000)
PASS: numbers.test: Number-theoretic division: floor/: big / big: (-50000000001 -10000000000)
PASS: numbers.test: Number-theoretic division: floor/: big / big: (50000000002 10000000000)
PASS: numbers.test: Number-theoretic division: floor/: big / big: (50000000002 -10000000000)
PASS: numbers.test: Number-theoretic division: floor/: big / big: (-50000000002 10000000000)
PASS: numbers.test: Number-theoretic division: floor/: big / big: (-50000000002 -10000000000)
PASS: numbers.test: Number-theoretic division: floor/: big / big: (4999999998 10000000000)
PASS: numbers.test: Number-theoretic division: floor/: big / big: (4999999998 -10000000000)
PASS: numbers.test: Number-theoretic division: floor/: big / big: (-4999999998 10000000000)
PASS: numbers.test: Number-theoretic division: floor/: big / big: (-4999999998 -10000000000)
PASS: numbers.test: Number-theoretic division: floor/: big / big: (4999999999 10000000000)
PASS: numbers.test: Number-theoretic division: floor/: big / big: (4999999999 -10000000000)
PASS: numbers.test: Number-theoretic division: floor/: big / big: (-4999999999 10000000000)
PASS: numbers.test: Number-theoretic division: floor/: big / big: (-4999999999 -10000000000)
PASS: numbers.test: Number-theoretic division: floor/: big / big: (5000000000 10000000000)
PASS: numbers.test: Number-theoretic division: floor/: big / big: (5000000000 -10000000000)
PASS: numbers.test: Number-theoretic division: floor/: big / big: (-5000000000 10000000000)
PASS: numbers.test: Number-theoretic division: floor/: big / big: (-5000000000 -10000000000)
PASS: numbers.test: Number-theoretic division: floor/: big / big: (5000000001 10000000000)
PASS: numbers.test: Number-theoretic division: floor/: big / big: (5000000001 -10000000000)
PASS: numbers.test: Number-theoretic division: floor/: big / big: (-5000000001 10000000000)
PASS: numbers.test: Number-theoretic division: floor/: big / big: (-5000000001 -10000000000)
PASS: numbers.test: Number-theoretic division: floor/: big / big: (5000000002 10000000000)
PASS: numbers.test: Number-theoretic division: floor/: big / big: (5000000002 -10000000000)
PASS: numbers.test: Number-theoretic division: floor/: big / big: (-5000000002 10000000000)
PASS: numbers.test: Number-theoretic division: floor/: big / big: (-5000000002 -10000000000)
PASS: numbers.test: Number-theoretic division: floor/: big / big: (14999999998 10000000000)
PASS: numbers.test: Number-theoretic division: floor/: big / big: (14999999998 -10000000000)
PASS: numbers.test: Number-theoretic division: floor/: big / big: (-14999999998 10000000000)
PASS: numbers.test: Number-theoretic division: floor/: big / big: (-14999999998 -10000000000)
PASS: numbers.test: Number-theoretic division: floor/: big / big: (14999999999 10000000000)
PASS: numbers.test: Number-theoretic division: floor/: big / big: (14999999999 -10000000000)
PASS: numbers.test: Number-theoretic division: floor/: big / big: (-14999999999 10000000000)
PASS: numbers.test: Number-theoretic division: floor/: big / big: (-14999999999 -10000000000)
PASS: numbers.test: Number-theoretic division: floor/: big / big: (15000000000 10000000000)
PASS: numbers.test: Number-theoretic division: floor/: big / big: (15000000000 -10000000000)
PASS: numbers.test: Number-theoretic division: floor/: big / big: (-15000000000 10000000000)
PASS: numbers.test: Number-theoretic division: floor/: big / big: (-15000000000 -10000000000)
PASS: numbers.test: Number-theoretic division: floor/: big / big: (15000000001 10000000000)
PASS: numbers.test: Number-theoretic division: floor/: big / big: (15000000001 -10000000000)
PASS: numbers.test: Number-theoretic division: floor/: big / big: (-15000000001 10000000000)
PASS: numbers.test: Number-theoretic division: floor/: big / big: (-15000000001 -10000000000)
PASS: numbers.test: Number-theoretic division: floor/: big / big: (15000000002 10000000000)
PASS: numbers.test: Number-theoretic division: floor/: big / big: (15000000002 -10000000000)
PASS: numbers.test: Number-theoretic division: floor/: big / big: (-15000000002 10000000000)
PASS: numbers.test: Number-theoretic division: floor/: big / big: (-15000000002 -10000000000)
PASS: numbers.test: Number-theoretic division: floor/: big / big: (24999999998 10000000000)
PASS: numbers.test: Number-theoretic division: floor/: big / big: (24999999998 -10000000000)
PASS: numbers.test: Number-theoretic division: floor/: big / big: (-24999999998 10000000000)
PASS: numbers.test: Number-theoretic division: floor/: big / big: (-24999999998 -10000000000)
PASS: numbers.test: Number-theoretic division: floor/: big / big: (24999999999 10000000000)
PASS: numbers.test: Number-theoretic division: floor/: big / big: (24999999999 -10000000000)
PASS: numbers.test: Number-theoretic division: floor/: big / big: (-24999999999 10000000000)
PASS: numbers.test: Number-theoretic division: floor/: big / big: (-24999999999 -10000000000)
PASS: numbers.test: Number-theoretic division: floor/: big / big: (25000000000 10000000000)
PASS: numbers.test: Number-theoretic division: floor/: big / big: (25000000000 -10000000000)
PASS: numbers.test: Number-theoretic division: floor/: big / big: (-25000000000 10000000000)
PASS: numbers.test: Number-theoretic division: floor/: big / big: (-25000000000 -10000000000)
PASS: numbers.test: Number-theoretic division: floor/: big / big: (25000000001 10000000000)
PASS: numbers.test: Number-theoretic division: floor/: big / big: (25000000001 -10000000000)
PASS: numbers.test: Number-theoretic division: floor/: big / big: (-25000000001 10000000000)
PASS: numbers.test: Number-theoretic division: floor/: big / big: (-25000000001 -10000000000)
PASS: numbers.test: Number-theoretic division: floor/: big / big: (25000000002 10000000000)
PASS: numbers.test: Number-theoretic division: floor/: big / big: (25000000002 -10000000000)
PASS: numbers.test: Number-theoretic division: floor/: big / big: (-25000000002 10000000000)
PASS: numbers.test: Number-theoretic division: floor/: big / big: (-25000000002 -10000000000)
PASS: numbers.test: Number-theoretic division: floor/: big / big: (9999999999 10000000001)
PASS: numbers.test: Number-theoretic division: floor/: big / big: (9999999999 -10000000001)
PASS: numbers.test: Number-theoretic division: floor/: big / big: (-9999999999 10000000001)
PASS: numbers.test: Number-theoretic division: floor/: big / big: (-9999999999 -10000000001)
PASS: numbers.test: Number-theoretic division: floor/: big / big: (10000000000 10000000001)
PASS: numbers.test: Number-theoretic division: floor/: big / big: (10000000000 -10000000001)
PASS: numbers.test: Number-theoretic division: floor/: big / big: (-10000000000 10000000001)
PASS: numbers.test: Number-theoretic division: floor/: big / big: (-10000000000 -10000000001)
PASS: numbers.test: Number-theoretic division: floor/: big / big: (10000000001 10000000001)
PASS: numbers.test: Number-theoretic division: floor/: big / big: (10000000001 -10000000001)
PASS: numbers.test: Number-theoretic division: floor/: big / big: (-10000000001 10000000001)
PASS: numbers.test: Number-theoretic division: floor/: big / big: (-10000000001 -10000000001)
PASS: numbers.test: Number-theoretic division: floor/: big / big: (10000000002 10000000001)
PASS: numbers.test: Number-theoretic division: floor/: big / big: (10000000002 -10000000001)
PASS: numbers.test: Number-theoretic division: floor/: big / big: (-10000000002 10000000001)
PASS: numbers.test: Number-theoretic division: floor/: big / big: (-10000000002 -10000000001)
PASS: numbers.test: Number-theoretic division: floor/: big / big: (10000000003 10000000001)
PASS: numbers.test: Number-theoretic division: floor/: big / big: (10000000003 -10000000001)
PASS: numbers.test: Number-theoretic division: floor/: big / big: (-10000000003 10000000001)
PASS: numbers.test: Number-theoretic division: floor/: big / big: (-10000000003 -10000000001)
PASS: numbers.test: Number-theoretic division: floor/: big / big: (20000000000 10000000001)
PASS: numbers.test: Number-theoretic division: floor/: big / big: (20000000000 -10000000001)
PASS: numbers.test: Number-theoretic division: floor/: big / big: (-20000000000 10000000001)
PASS: numbers.test: Number-theoretic division: floor/: big / big: (-20000000000 -10000000001)
PASS: numbers.test: Number-theoretic division: floor/: big / big: (20000000001 10000000001)
PASS: numbers.test: Number-theoretic division: floor/: big / big: (20000000001 -10000000001)
PASS: numbers.test: Number-theoretic division: floor/: big / big: (-20000000001 10000000001)
PASS: numbers.test: Number-theoretic division: floor/: big / big: (-20000000001 -10000000001)
PASS: numbers.test: Number-theoretic division: floor/: big / big: (20000000002 10000000001)
PASS: numbers.test: Number-theoretic division: floor/: big / big: (20000000002 -10000000001)
PASS: numbers.test: Number-theoretic division: floor/: big / big: (-20000000002 10000000001)
PASS: numbers.test: Number-theoretic division: floor/: big / big: (-20000000002 -10000000001)
PASS: numbers.test: Number-theoretic division: floor/: big / big: (20000000003 10000000001)
PASS: numbers.test: Number-theoretic division: floor/: big / big: (20000000003 -10000000001)
PASS: numbers.test: Number-theoretic division: floor/: big / big: (-20000000003 10000000001)
PASS: numbers.test: Number-theoretic division: floor/: big / big: (-20000000003 -10000000001)
PASS: numbers.test: Number-theoretic division: floor/: big / big: (20000000004 10000000001)
PASS: numbers.test: Number-theoretic division: floor/: big / big: (20000000004 -10000000001)
PASS: numbers.test: Number-theoretic division: floor/: big / big: (-20000000004 10000000001)
PASS: numbers.test: Number-theoretic division: floor/: big / big: (-20000000004 -10000000001)
PASS: numbers.test: Number-theoretic division: floor/: big / big: (50000000003 10000000001)
PASS: numbers.test: Number-theoretic division: floor/: big / big: (50000000003 -10000000001)
PASS: numbers.test: Number-theoretic division: floor/: big / big: (-50000000003 10000000001)
PASS: numbers.test: Number-theoretic division: floor/: big / big: (-50000000003 -10000000001)
PASS: numbers.test: Number-theoretic division: floor/: big / big: (50000000004 10000000001)
PASS: numbers.test: Number-theoretic division: floor/: big / big: (50000000004 -10000000001)
PASS: numbers.test: Number-theoretic division: floor/: big / big: (-50000000004 10000000001)
PASS: numbers.test: Number-theoretic division: floor/: big / big: (-50000000004 -10000000001)
PASS: numbers.test: Number-theoretic division: floor/: big / big: (50000000005 10000000001)
PASS: numbers.test: Number-theoretic division: floor/: big / big: (50000000005 -10000000001)
PASS: numbers.test: Number-theoretic division: floor/: big / big: (-50000000005 10000000001)
PASS: numbers.test: Number-theoretic division: floor/: big / big: (-50000000005 -10000000001)
PASS: numbers.test: Number-theoretic division: floor/: big / big: (50000000006 10000000001)
PASS: numbers.test: Number-theoretic division: floor/: big / big: (50000000006 -10000000001)
PASS: numbers.test: Number-theoretic division: floor/: big / big: (-50000000006 10000000001)
PASS: numbers.test: Number-theoretic division: floor/: big / big: (-50000000006 -10000000001)
PASS: numbers.test: Number-theoretic division: floor/: big / big: (50000000007 10000000001)
PASS: numbers.test: Number-theoretic division: floor/: big / big: (50000000007 -10000000001)
PASS: numbers.test: Number-theoretic division: floor/: big / big: (-50000000007 10000000001)
PASS: numbers.test: Number-theoretic division: floor/: big / big: (-50000000007 -10000000001)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (-2.0 0.5)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (-2.0 -0.5)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (2.0 0.5)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (2.0 -0.5)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (-1.0 0.5)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (-1.0 -0.5)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (1.0 0.5)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (1.0 -0.5)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (0.0 0.5)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (0.0 -0.5)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (1.0 0.5)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (1.0 -0.5)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (-1.0 0.5)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (-1.0 -0.5)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (2.0 0.5)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (2.0 -0.5)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (-2.0 0.5)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (-2.0 -0.5)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (-1.5 0.5)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (-1.5 -0.5)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (1.5 0.5)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (1.5 -0.5)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (-0.5 0.5)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (-0.5 -0.5)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (0.5 0.5)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (0.5 -0.5)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (0.5 0.5)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (0.5 -0.5)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (-0.5 0.5)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (-0.5 -0.5)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (1.5 0.5)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (1.5 -0.5)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (-1.5 0.5)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (-1.5 -0.5)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (2.5 0.5)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (2.5 -0.5)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (-2.5 0.5)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (-2.5 -0.5)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (-1.0 0.5)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (-1.0 -0.5)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (1.0 0.5)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (1.0 -0.5)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (0.0 0.5)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (0.0 -0.5)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (1.0 0.5)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (1.0 -0.5)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (-1.0 0.5)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (-1.0 -0.5)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (2.0 0.5)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (2.0 -0.5)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (-2.0 0.5)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (-2.0 -0.5)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (3.0 0.5)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (3.0 -0.5)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (-3.0 0.5)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (-3.0 -0.5)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (0.5 0.5)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (0.5 -0.5)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (-0.5 0.5)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (-0.5 -0.5)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (1.5 0.5)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (1.5 -0.5)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (-1.5 0.5)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (-1.5 -0.5)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (2.5 0.5)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (2.5 -0.5)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (-2.5 0.5)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (-2.5 -0.5)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (3.5 0.5)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (3.5 -0.5)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (-3.5 0.5)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (-3.5 -0.5)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (4.5 0.5)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (4.5 -0.5)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (-4.5 0.5)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (-4.5 -0.5)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (-1.75 0.5)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (-1.75 -0.5)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (1.75 0.5)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (1.75 -0.5)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (-0.75 0.5)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (-0.75 -0.5)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (0.75 0.5)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (0.75 -0.5)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (0.25 0.5)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (0.25 -0.5)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (-0.25 0.5)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (-0.25 -0.5)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (1.25 0.5)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (1.25 -0.5)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (-1.25 0.5)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (-1.25 -0.5)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (2.25 0.5)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (2.25 -0.5)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (-2.25 0.5)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (-2.25 -0.5)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (-1.25 0.5)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (-1.25 -0.5)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (1.25 0.5)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (1.25 -0.5)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (-0.25 0.5)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (-0.25 -0.5)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (0.25 0.5)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (0.25 -0.5)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (0.75 0.5)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (0.75 -0.5)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (-0.75 0.5)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (-0.75 -0.5)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (1.75 0.5)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (1.75 -0.5)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (-1.75 0.5)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (-1.75 -0.5)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (2.75 0.5)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (2.75 -0.5)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (-2.75 0.5)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (-2.75 -0.5)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (-0.75 0.5)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (-0.75 -0.5)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (0.75 0.5)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (0.75 -0.5)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (0.25 0.5)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (0.25 -0.5)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (-0.25 0.5)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (-0.25 -0.5)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (1.25 0.5)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (1.25 -0.5)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (-1.25 0.5)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (-1.25 -0.5)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (2.25 0.5)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (2.25 -0.5)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (-2.25 0.5)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (-2.25 -0.5)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (3.25 0.5)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (3.25 -0.5)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (-3.25 0.5)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (-3.25 -0.5)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (-2.0 1.5)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (-2.0 -1.5)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (2.0 1.5)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (2.0 -1.5)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (-1.0 1.5)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (-1.0 -1.5)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (1.0 1.5)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (1.0 -1.5)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (0.0 1.5)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (0.0 -1.5)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (1.0 1.5)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (1.0 -1.5)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (-1.0 1.5)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (-1.0 -1.5)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (2.0 1.5)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (2.0 -1.5)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (-2.0 1.5)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (-2.0 -1.5)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (-0.5 1.5)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (-0.5 -1.5)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (0.5 1.5)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (0.5 -1.5)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (0.5 1.5)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (0.5 -1.5)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (-0.5 1.5)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (-0.5 -1.5)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (1.5 1.5)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (1.5 -1.5)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (-1.5 1.5)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (-1.5 -1.5)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (2.5 1.5)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (2.5 -1.5)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (-2.5 1.5)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (-2.5 -1.5)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (3.5 1.5)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (3.5 -1.5)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (-3.5 1.5)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (-3.5 -1.5)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (1.0 1.5)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (1.0 -1.5)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (-1.0 1.5)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (-1.0 -1.5)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (2.0 1.5)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (2.0 -1.5)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (-2.0 1.5)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (-2.0 -1.5)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (3.0 1.5)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (3.0 -1.5)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (-3.0 1.5)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (-3.0 -1.5)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (4.0 1.5)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (4.0 -1.5)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (-4.0 1.5)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (-4.0 -1.5)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (5.0 1.5)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (5.0 -1.5)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (-5.0 1.5)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (-5.0 -1.5)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (5.5 1.5)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (5.5 -1.5)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (-5.5 1.5)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (-5.5 -1.5)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (6.5 1.5)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (6.5 -1.5)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (-6.5 1.5)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (-6.5 -1.5)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (7.5 1.5)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (7.5 -1.5)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (-7.5 1.5)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (-7.5 -1.5)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (8.5 1.5)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (8.5 -1.5)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (-8.5 1.5)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (-8.5 -1.5)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (9.5 1.5)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (9.5 -1.5)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (-9.5 1.5)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (-9.5 -1.5)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (-1.25 1.5)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (-1.25 -1.5)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (1.25 1.5)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (1.25 -1.5)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (-0.25 1.5)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (-0.25 -1.5)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (0.25 1.5)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (0.25 -1.5)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (0.75 1.5)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (0.75 -1.5)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (-0.75 1.5)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (-0.75 -1.5)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (1.75 1.5)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (1.75 -1.5)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (-1.75 1.5)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (-1.75 -1.5)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (2.75 1.5)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (2.75 -1.5)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (-2.75 1.5)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (-2.75 -1.5)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (0.25 1.5)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (0.25 -1.5)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (-0.25 1.5)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (-0.25 -1.5)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (1.25 1.5)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (1.25 -1.5)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (-1.25 1.5)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (-1.25 -1.5)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (2.25 1.5)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (2.25 -1.5)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (-2.25 1.5)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (-2.25 -1.5)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (3.25 1.5)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (3.25 -1.5)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (-3.25 1.5)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (-3.25 -1.5)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (4.25 1.5)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (4.25 -1.5)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (-4.25 1.5)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (-4.25 -1.5)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (1.75 1.5)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (1.75 -1.5)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (-1.75 1.5)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (-1.75 -1.5)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (2.75 1.5)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (2.75 -1.5)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (-2.75 1.5)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (-2.75 -1.5)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (3.75 1.5)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (3.75 -1.5)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (-3.75 1.5)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (-3.75 -1.5)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (4.75 1.5)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (4.75 -1.5)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (-4.75 1.5)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (-4.75 -1.5)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (5.75 1.5)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (5.75 -1.5)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (-5.75 1.5)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (-5.75 -1.5)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (-2.0 2.25)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (-2.0 -2.25)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (2.0 2.25)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (2.0 -2.25)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (-1.0 2.25)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (-1.0 -2.25)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (1.0 2.25)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (1.0 -2.25)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (0.0 2.25)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (0.0 -2.25)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (1.0 2.25)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (1.0 -2.25)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (-1.0 2.25)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (-1.0 -2.25)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (2.0 2.25)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (2.0 -2.25)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (-2.0 2.25)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (-2.0 -2.25)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (0.25 2.25)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (0.25 -2.25)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (-0.25 2.25)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (-0.25 -2.25)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (1.25 2.25)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (1.25 -2.25)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (-1.25 2.25)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (-1.25 -2.25)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (2.25 2.25)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (2.25 -2.25)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (-2.25 2.25)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (-2.25 -2.25)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (3.25 2.25)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (3.25 -2.25)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (-3.25 2.25)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (-3.25 -2.25)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (4.25 2.25)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (4.25 -2.25)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (-4.25 2.25)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (-4.25 -2.25)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (2.5 2.25)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (2.5 -2.25)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (-2.5 2.25)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (-2.5 -2.25)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (3.5 2.25)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (3.5 -2.25)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (-3.5 2.25)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (-3.5 -2.25)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (4.5 2.25)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (4.5 -2.25)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (-4.5 2.25)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (-4.5 -2.25)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (5.5 2.25)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (5.5 -2.25)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (-5.5 2.25)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (-5.5 -2.25)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (6.5 2.25)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (6.5 -2.25)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (-6.5 2.25)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (-6.5 -2.25)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (9.25 2.25)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (9.25 -2.25)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (-9.25 2.25)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (-9.25 -2.25)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (10.25 2.25)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (10.25 -2.25)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (-10.25 2.25)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (-10.25 -2.25)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (11.25 2.25)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (11.25 -2.25)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (-11.25 2.25)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (-11.25 -2.25)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (12.25 2.25)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (12.25 -2.25)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (-12.25 2.25)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (-12.25 -2.25)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (13.25 2.25)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (13.25 -2.25)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (-13.25 2.25)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (-13.25 -2.25)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (-0.875 2.25)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (-0.875 -2.25)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (0.875 2.25)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (0.875 -2.25)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (0.125 2.25)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (0.125 -2.25)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (-0.125 2.25)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (-0.125 -2.25)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (1.125 2.25)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (1.125 -2.25)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (-1.125 2.25)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (-1.125 -2.25)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (2.125 2.25)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (2.125 -2.25)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (-2.125 2.25)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (-2.125 -2.25)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (3.125 2.25)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (3.125 -2.25)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (-3.125 2.25)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (-3.125 -2.25)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (1.375 2.25)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (1.375 -2.25)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (-1.375 2.25)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (-1.375 -2.25)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (2.375 2.25)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (2.375 -2.25)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (-2.375 2.25)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (-2.375 -2.25)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (3.375 2.25)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (3.375 -2.25)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (-3.375 2.25)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (-3.375 -2.25)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (4.375 2.25)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (4.375 -2.25)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (-4.375 2.25)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (-4.375 -2.25)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (5.375 2.25)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (5.375 -2.25)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (-5.375 2.25)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (-5.375 -2.25)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (3.625 2.25)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (3.625 -2.25)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (-3.625 2.25)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (-3.625 -2.25)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (4.625 2.25)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (4.625 -2.25)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (-4.625 2.25)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (-4.625 -2.25)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (5.625 2.25)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (5.625 -2.25)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (-5.625 2.25)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (-5.625 -2.25)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (6.625 2.25)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (6.625 -2.25)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (-6.625 2.25)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (-6.625 -2.25)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (7.625 2.25)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (7.625 -2.25)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (-7.625 2.25)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (-7.625 -2.25)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (-2.0 5.75)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (-2.0 -5.75)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (2.0 5.75)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (2.0 -5.75)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (-1.0 5.75)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (-1.0 -5.75)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (1.0 5.75)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (1.0 -5.75)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (0.0 5.75)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (0.0 -5.75)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (1.0 5.75)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (1.0 -5.75)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (-1.0 5.75)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (-1.0 -5.75)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (2.0 5.75)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (2.0 -5.75)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (-2.0 5.75)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (-2.0 -5.75)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (3.75 5.75)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (3.75 -5.75)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (-3.75 5.75)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (-3.75 -5.75)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (4.75 5.75)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (4.75 -5.75)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (-4.75 5.75)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (-4.75 -5.75)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (5.75 5.75)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (5.75 -5.75)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (-5.75 5.75)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (-5.75 -5.75)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (6.75 5.75)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (6.75 -5.75)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (-6.75 5.75)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (-6.75 -5.75)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (7.75 5.75)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (7.75 -5.75)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (-7.75 5.75)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (-7.75 -5.75)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (9.5 5.75)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (9.5 -5.75)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (-9.5 5.75)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (-9.5 -5.75)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (10.5 5.75)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (10.5 -5.75)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (-10.5 5.75)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (-10.5 -5.75)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (11.5 5.75)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (11.5 -5.75)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (-11.5 5.75)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (-11.5 -5.75)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (12.5 5.75)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (12.5 -5.75)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (-12.5 5.75)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (-12.5 -5.75)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (13.5 5.75)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (13.5 -5.75)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (-13.5 5.75)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (-13.5 -5.75)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (26.75 5.75)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (26.75 -5.75)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (-26.75 5.75)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (-26.75 -5.75)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (27.75 5.75)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (27.75 -5.75)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (-27.75 5.75)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (-27.75 -5.75)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (28.75 5.75)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (28.75 -5.75)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (-28.75 5.75)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (-28.75 -5.75)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (29.75 5.75)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (29.75 -5.75)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (-29.75 5.75)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (-29.75 -5.75)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (30.75 5.75)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (30.75 -5.75)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (-30.75 5.75)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (-30.75 -5.75)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (0.875 5.75)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (0.875 -5.75)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (-0.875 5.75)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (-0.875 -5.75)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (1.875 5.75)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (1.875 -5.75)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (-1.875 5.75)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (-1.875 -5.75)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (2.875 5.75)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (2.875 -5.75)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (-2.875 5.75)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (-2.875 -5.75)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (3.875 5.75)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (3.875 -5.75)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (-3.875 5.75)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (-3.875 -5.75)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (4.875 5.75)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (4.875 -5.75)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (-4.875 5.75)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (-4.875 -5.75)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (6.625 5.75)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (6.625 -5.75)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (-6.625 5.75)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (-6.625 -5.75)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (7.625 5.75)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (7.625 -5.75)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (-7.625 5.75)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (-7.625 -5.75)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (8.625 5.75)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (8.625 -5.75)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (-8.625 5.75)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (-8.625 -5.75)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (9.625 5.75)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (9.625 -5.75)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (-9.625 5.75)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (-9.625 -5.75)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (10.625 5.75)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (10.625 -5.75)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (-10.625 5.75)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (-10.625 -5.75)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (12.375 5.75)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (12.375 -5.75)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (-12.375 5.75)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (-12.375 -5.75)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (13.375 5.75)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (13.375 -5.75)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (-13.375 5.75)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (-13.375 -5.75)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (14.375 5.75)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (14.375 -5.75)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (-14.375 5.75)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (-14.375 -5.75)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (15.375 5.75)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (15.375 -5.75)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (-15.375 5.75)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (-15.375 -5.75)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (16.375 5.75)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (16.375 -5.75)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (-16.375 5.75)
PASS: numbers.test: Number-theoretic division: floor/: inexact: (-16.375 -5.75)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (-2/9 1/10)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (-2/9 -1/10)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (2/9 1/10)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (2/9 -1/10)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (-1/11 1/10)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (-1/11 -1/10)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (1/11 1/10)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (1/11 -1/10)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (0 1/10)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (0 -1/10)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (1/3 1/10)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (1/3 -1/10)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (-1/3 1/10)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (-1/3 -1/10)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (2/3 1/10)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (2/3 -1/10)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (-2/3 1/10)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (-2/3 -1/10)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (-11/90 1/10)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (-11/90 -1/10)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (11/90 1/10)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (11/90 -1/10)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (1/110 1/10)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (1/110 -1/10)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (-1/110 1/10)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (-1/110 -1/10)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (1/10 1/10)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (1/10 -1/10)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (-1/10 1/10)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (-1/10 -1/10)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (13/30 1/10)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (13/30 -1/10)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (-13/30 1/10)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (-13/30 -1/10)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (23/30 1/10)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (23/30 -1/10)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (-23/30 1/10)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (-23/30 -1/10)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (-1/45 1/10)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (-1/45 -1/10)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (1/45 1/10)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (1/45 -1/10)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (6/55 1/10)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (6/55 -1/10)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (-6/55 1/10)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (-6/55 -1/10)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (1/5 1/10)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (1/5 -1/10)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (-1/5 1/10)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (-1/5 -1/10)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (8/15 1/10)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (8/15 -1/10)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (-8/15 1/10)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (-8/15 -1/10)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (13/15 1/10)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (13/15 -1/10)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (-13/15 1/10)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (-13/15 -1/10)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (5/18 1/10)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (5/18 -1/10)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (-5/18 1/10)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (-5/18 -1/10)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (9/22 1/10)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (9/22 -1/10)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (-9/22 1/10)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (-9/22 -1/10)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (1/2 1/10)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (1/2 -1/10)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (-1/2 1/10)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (-1/2 -1/10)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (5/6 1/10)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (5/6 -1/10)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (-5/6 1/10)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (-5/6 -1/10)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (7/6 1/10)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (7/6 -1/10)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (-7/6 1/10)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (-7/6 -1/10)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (-31/180 1/10)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (-31/180 -1/10)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (31/180 1/10)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (31/180 -1/10)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (-9/220 1/10)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (-9/220 -1/10)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (9/220 1/10)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (9/220 -1/10)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (1/20 1/10)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (1/20 -1/10)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (-1/20 1/10)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (-1/20 -1/10)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (23/60 1/10)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (23/60 -1/10)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (-23/60 1/10)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (-23/60 -1/10)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (43/60 1/10)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (43/60 -1/10)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (-43/60 1/10)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (-43/60 -1/10)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (-13/180 1/10)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (-13/180 -1/10)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (13/180 1/10)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (13/180 -1/10)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (13/220 1/10)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (13/220 -1/10)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (-13/220 1/10)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (-13/220 -1/10)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (3/20 1/10)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (3/20 -1/10)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (-3/20 1/10)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (-3/20 -1/10)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (29/60 1/10)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (29/60 -1/10)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (-29/60 1/10)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (-29/60 -1/10)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (49/60 1/10)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (49/60 -1/10)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (-49/60 1/10)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (-49/60 -1/10)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (1/36 1/10)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (1/36 -1/10)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (-1/36 1/10)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (-1/36 -1/10)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (7/44 1/10)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (7/44 -1/10)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (-7/44 1/10)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (-7/44 -1/10)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (1/4 1/10)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (1/4 -1/10)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (-1/4 1/10)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (-1/4 -1/10)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (7/12 1/10)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (7/12 -1/10)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (-7/12 1/10)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (-7/12 -1/10)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (11/12 1/10)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (11/12 -1/10)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (-11/12 1/10)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (-11/12 -1/10)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (-2/9 16/3)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (-2/9 -16/3)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (2/9 16/3)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (2/9 -16/3)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (-1/11 16/3)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (-1/11 -16/3)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (1/11 16/3)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (1/11 -16/3)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (0 16/3)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (0 -16/3)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (1/3 16/3)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (1/3 -16/3)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (-1/3 16/3)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (-1/3 -16/3)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (2/3 16/3)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (2/3 -16/3)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (-2/3 16/3)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (-2/3 -16/3)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (46/9 16/3)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (46/9 -16/3)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (-46/9 16/3)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (-46/9 -16/3)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (173/33 16/3)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (173/33 -16/3)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (-173/33 16/3)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (-173/33 -16/3)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (16/3 16/3)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (16/3 -16/3)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (-16/3 16/3)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (-16/3 -16/3)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (17/3 16/3)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (17/3 -16/3)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (-17/3 16/3)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (-17/3 -16/3)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (6 16/3)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (6 -16/3)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (-6 16/3)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (-6 -16/3)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (94/9 16/3)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (94/9 -16/3)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (-94/9 16/3)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (-94/9 -16/3)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (349/33 16/3)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (349/33 -16/3)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (-349/33 16/3)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (-349/33 -16/3)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (32/3 16/3)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (32/3 -16/3)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (-32/3 16/3)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (-32/3 -16/3)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (11 16/3)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (11 -16/3)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (-11 16/3)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (-11 -16/3)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (34/3 16/3)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (34/3 -16/3)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (-34/3 16/3)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (-34/3 -16/3)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (238/9 16/3)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (238/9 -16/3)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (-238/9 16/3)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (-238/9 -16/3)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (877/33 16/3)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (877/33 -16/3)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (-877/33 16/3)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (-877/33 -16/3)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (80/3 16/3)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (80/3 -16/3)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (-80/3 16/3)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (-80/3 -16/3)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (27 16/3)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (27 -16/3)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (-27 16/3)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (-27 -16/3)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (82/3 16/3)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (82/3 -16/3)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (-82/3 16/3)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (-82/3 -16/3)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (22/9 16/3)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (22/9 -16/3)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (-22/9 16/3)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (-22/9 -16/3)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (85/33 16/3)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (85/33 -16/3)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (-85/33 16/3)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (-85/33 -16/3)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (8/3 16/3)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (8/3 -16/3)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (-8/3 16/3)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (-8/3 -16/3)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (3 16/3)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (3 -16/3)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (-3 16/3)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (-3 -16/3)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (10/3 16/3)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (10/3 -16/3)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (-10/3 16/3)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (-10/3 -16/3)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (70/9 16/3)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (70/9 -16/3)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (-70/9 16/3)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (-70/9 -16/3)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (87/11 16/3)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (87/11 -16/3)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (-87/11 16/3)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (-87/11 -16/3)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (8 16/3)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (8 -16/3)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (-8 16/3)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (-8 -16/3)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (25/3 16/3)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (25/3 -16/3)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (-25/3 16/3)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (-25/3 -16/3)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (26/3 16/3)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (26/3 -16/3)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (-26/3 16/3)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (-26/3 -16/3)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (118/9 16/3)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (118/9 -16/3)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (-118/9 16/3)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (-118/9 -16/3)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (437/33 16/3)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (437/33 -16/3)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (-437/33 16/3)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (-437/33 -16/3)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (40/3 16/3)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (40/3 -16/3)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (-40/3 16/3)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (-40/3 -16/3)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (41/3 16/3)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (41/3 -16/3)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (-41/3 16/3)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (-41/3 -16/3)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (14 16/3)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (14 -16/3)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (-14 16/3)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (-14 -16/3)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (-2/9 10/7)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (-2/9 -10/7)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (2/9 10/7)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (2/9 -10/7)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (-1/11 10/7)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (-1/11 -10/7)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (1/11 10/7)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (1/11 -10/7)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (0 10/7)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (0 -10/7)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (1/3 10/7)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (1/3 -10/7)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (-1/3 10/7)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (-1/3 -10/7)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (2/3 10/7)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (2/3 -10/7)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (-2/3 10/7)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (-2/3 -10/7)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (76/63 10/7)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (76/63 -10/7)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (-76/63 10/7)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (-76/63 -10/7)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (103/77 10/7)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (103/77 -10/7)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (-103/77 10/7)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (-103/77 -10/7)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (10/7 10/7)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (10/7 -10/7)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (-10/7 10/7)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (-10/7 -10/7)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (37/21 10/7)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (37/21 -10/7)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (-37/21 10/7)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (-37/21 -10/7)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (44/21 10/7)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (44/21 -10/7)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (-44/21 10/7)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (-44/21 -10/7)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (166/63 10/7)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (166/63 -10/7)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (-166/63 10/7)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (-166/63 -10/7)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (213/77 10/7)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (213/77 -10/7)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (-213/77 10/7)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (-213/77 -10/7)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (20/7 10/7)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (20/7 -10/7)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (-20/7 10/7)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (-20/7 -10/7)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (67/21 10/7)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (67/21 -10/7)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (-67/21 10/7)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (-67/21 -10/7)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (74/21 10/7)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (74/21 -10/7)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (-74/21 10/7)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (-74/21 -10/7)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (436/63 10/7)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (436/63 -10/7)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (-436/63 10/7)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (-436/63 -10/7)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (543/77 10/7)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (543/77 -10/7)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (-543/77 10/7)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (-543/77 -10/7)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (50/7 10/7)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (50/7 -10/7)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (-50/7 10/7)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (-50/7 -10/7)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (157/21 10/7)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (157/21 -10/7)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (-157/21 10/7)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (-157/21 -10/7)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (164/21 10/7)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (164/21 -10/7)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (-164/21 10/7)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (-164/21 -10/7)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (31/63 10/7)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (31/63 -10/7)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (-31/63 10/7)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (-31/63 -10/7)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (48/77 10/7)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (48/77 -10/7)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (-48/77 10/7)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (-48/77 -10/7)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (5/7 10/7)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (5/7 -10/7)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (-5/7 10/7)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (-5/7 -10/7)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (22/21 10/7)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (22/21 -10/7)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (-22/21 10/7)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (-22/21 -10/7)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (29/21 10/7)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (29/21 -10/7)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (-29/21 10/7)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (-29/21 -10/7)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (121/63 10/7)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (121/63 -10/7)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (-121/63 10/7)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (-121/63 -10/7)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (158/77 10/7)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (158/77 -10/7)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (-158/77 10/7)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (-158/77 -10/7)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (15/7 10/7)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (15/7 -10/7)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (-15/7 10/7)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (-15/7 -10/7)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (52/21 10/7)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (52/21 -10/7)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (-52/21 10/7)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (-52/21 -10/7)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (59/21 10/7)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (59/21 -10/7)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (-59/21 10/7)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (-59/21 -10/7)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (211/63 10/7)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (211/63 -10/7)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (-211/63 10/7)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (-211/63 -10/7)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (268/77 10/7)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (268/77 -10/7)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (-268/77 10/7)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (-268/77 -10/7)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (25/7 10/7)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (25/7 -10/7)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (-25/7 10/7)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (-25/7 -10/7)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (82/21 10/7)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (82/21 -10/7)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (-82/21 10/7)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (-82/21 -10/7)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (89/21 10/7)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (89/21 -10/7)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (-89/21 10/7)
PASS: numbers.test: Number-theoretic division: floor/: fractions: (-89/21 -10/7)
PASS: numbers.test: Number-theoretic division: floor/: mixed types: (25 10)
PASS: numbers.test: Number-theoretic division: floor/: mixed types: (25 -10)
PASS: numbers.test: Number-theoretic division: floor/: mixed types: (-25 10)
PASS: numbers.test: Number-theoretic division: floor/: mixed types: (-25 -10)
PASS: numbers.test: Number-theoretic division: floor/: mixed types: (15000000000 10)
PASS: numbers.test: Number-theoretic division: floor/: mixed types: (15000000000 -10)
PASS: numbers.test: Number-theoretic division: floor/: mixed types: (-15000000000 10)
PASS: numbers.test: Number-theoretic division: floor/: mixed types: (-15000000000 -10)
PASS: numbers.test: Number-theoretic division: floor/: mixed types: (130.0 10)
PASS: numbers.test: Number-theoretic division: floor/: mixed types: (130.0 -10)
PASS: numbers.test: Number-theoretic division: floor/: mixed types: (-130.0 10)
PASS: numbers.test: Number-theoretic division: floor/: mixed types: (-130.0 -10)
PASS: numbers.test: Number-theoretic division: floor/: mixed types: (15/7 10)
PASS: numbers.test: Number-theoretic division: floor/: mixed types: (15/7 -10)
PASS: numbers.test: Number-theoretic division: floor/: mixed types: (-15/7 10)
PASS: numbers.test: Number-theoretic division: floor/: mixed types: (-15/7 -10)
PASS: numbers.test: Number-theoretic division: floor/: mixed types: (0 10)
PASS: numbers.test: Number-theoretic division: floor/: mixed types: (0 -10)
PASS: numbers.test: Number-theoretic division: floor/: mixed types: (0.0 10)
PASS: numbers.test: Number-theoretic division: floor/: mixed types: (0.0 -10)
PASS: numbers.test: Number-theoretic division: floor/: mixed types: (-0.0 10)
PASS: numbers.test: Number-theoretic division: floor/: mixed types: (-0.0 -10)
PASS: numbers.test: Number-theoretic division: floor/: mixed types: (+inf.0 10)
PASS: numbers.test: Number-theoretic division: floor/: mixed types: (+inf.0 -10)
PASS: numbers.test: Number-theoretic division: floor/: mixed types: (-inf.0 10)
PASS: numbers.test: Number-theoretic division: floor/: mixed types: (-inf.0 -10)
PASS: numbers.test: Number-theoretic division: floor/: mixed types: (-inf.0 10)
PASS: numbers.test: Number-theoretic division: floor/: mixed types: (-inf.0 -10)
PASS: numbers.test: Number-theoretic division: floor/: mixed types: (+inf.0 10)
PASS: numbers.test: Number-theoretic division: floor/: mixed types: (+inf.0 -10)
PASS: numbers.test: Number-theoretic division: floor/: mixed types: (+nan.0 10)
PASS: numbers.test: Number-theoretic division: floor/: mixed types: (+nan.0 -10)
PASS: numbers.test: Number-theoretic division: floor/: mixed types: (+nan.0 10)
PASS: numbers.test: Number-theoretic division: floor/: mixed types: (+nan.0 -10)
PASS: numbers.test: Number-theoretic division: floor/: mixed types: (25 10000000000)
PASS: numbers.test: Number-theoretic division: floor/: mixed types: (25 -10000000000)
PASS: numbers.test: Number-theoretic division: floor/: mixed types: (-25 10000000000)
PASS: numbers.test: Number-theoretic division: floor/: mixed types: (-25 -10000000000)
PASS: numbers.test: Number-theoretic division: floor/: mixed types: (15000000000 10000000000)
PASS: numbers.test: Number-theoretic division: floor/: mixed types: (15000000000 -10000000000)
PASS: numbers.test: Number-theoretic division: floor/: mixed types: (-15000000000 10000000000)
PASS: numbers.test: Number-theoretic division: floor/: mixed types: (-15000000000 -10000000000)
PASS: numbers.test: Number-theoretic division: floor/: mixed types: (130.0 10000000000)
PASS: numbers.test: Number-theoretic division: floor/: mixed types: (130.0 -10000000000)
PASS: numbers.test: Number-theoretic division: floor/: mixed types: (-130.0 10000000000)
PASS: numbers.test: Number-theoretic division: floor/: mixed types: (-130.0 -10000000000)
PASS: numbers.test: Number-theoretic division: floor/: mixed types: (15/7 10000000000)
PASS: numbers.test: Number-theoretic division: floor/: mixed types: (15/7 -10000000000)
PASS: numbers.test: Number-theoretic division: floor/: mixed types: (-15/7 10000000000)
PASS: numbers.test: Number-theoretic division: floor/: mixed types: (-15/7 -10000000000)
PASS: numbers.test: Number-theoretic division: floor/: mixed types: (0 10000000000)
PASS: numbers.test: Number-theoretic division: floor/: mixed types: (0 -10000000000)
PASS: numbers.test: Number-theoretic division: floor/: mixed types: (0.0 10000000000)
PASS: numbers.test: Number-theoretic division: floor/: mixed types: (0.0 -10000000000)
PASS: numbers.test: Number-theoretic division: floor/: mixed types: (-0.0 10000000000)
PASS: numbers.test: Number-theoretic division: floor/: mixed types: (-0.0 -10000000000)
PASS: numbers.test: Number-theoretic division: floor/: mixed types: (+inf.0 10000000000)
PASS: numbers.test: Number-theoretic division: floor/: mixed types: (+inf.0 -10000000000)
PASS: numbers.test: Number-theoretic division: floor/: mixed types: (-inf.0 10000000000)
PASS: numbers.test: Number-theoretic division: floor/: mixed types: (-inf.0 -10000000000)
PASS: numbers.test: Number-theoretic division: floor/: mixed types: (-inf.0 10000000000)
PASS: numbers.test: Number-theoretic division: floor/: mixed types: (-inf.0 -10000000000)
PASS: numbers.test: Number-theoretic division: floor/: mixed types: (+inf.0 10000000000)
PASS: numbers.test: Number-theoretic division: floor/: mixed types: (+inf.0 -10000000000)
PASS: numbers.test: Number-theoretic division: floor/: mixed types: (+nan.0 10000000000)
PASS: numbers.test: Number-theoretic division: floor/: mixed types: (+nan.0 -10000000000)
PASS: numbers.test: Number-theoretic division: floor/: mixed types: (+nan.0 10000000000)
PASS: numbers.test: Number-theoretic division: floor/: mixed types: (+nan.0 -10000000000)
PASS: numbers.test: Number-theoretic division: floor/: mixed types: (25 12.0)
PASS: numbers.test: Number-theoretic division: floor/: mixed types: (25 -12.0)
PASS: numbers.test: Number-theoretic division: floor/: mixed types: (-25 12.0)
PASS: numbers.test: Number-theoretic division: floor/: mixed types: (-25 -12.0)
PASS: numbers.test: Number-theoretic division: floor/: mixed types: (15000000000 12.0)
PASS: numbers.test: Number-theoretic division: floor/: mixed types: (15000000000 -12.0)
PASS: numbers.test: Number-theoretic division: floor/: mixed types: (-15000000000 12.0)
PASS: numbers.test: Number-theoretic division: floor/: mixed types: (-15000000000 -12.0)
PASS: numbers.test: Number-theoretic division: floor/: mixed types: (130.0 12.0)
PASS: numbers.test: Number-theoretic division: floor/: mixed types: (130.0 -12.0)
PASS: numbers.test: Number-theoretic division: floor/: mixed types: (-130.0 12.0)
PASS: numbers.test: Number-theoretic division: floor/: mixed types: (-130.0 -12.0)
PASS: numbers.test: Number-theoretic division: floor/: mixed types: (15/7 12.0)
PASS: numbers.test: Number-theoretic division: floor/: mixed types: (15/7 -12.0)
PASS: numbers.test: Number-theoretic division: floor/: mixed types: (-15/7 12.0)
PASS: numbers.test: Number-theoretic division: floor/: mixed types: (-15/7 -12.0)
PASS: numbers.test: Number-theoretic division: floor/: mixed types: (0 12.0)
PASS: numbers.test: Number-theoretic division: floor/: mixed types: (0 -12.0)
PASS: numbers.test: Number-theoretic division: floor/: mixed types: (0.0 12.0)
PASS: numbers.test: Number-theoretic division: floor/: mixed types: (0.0 -12.0)
PASS: numbers.test: Number-theoretic division: floor/: mixed types: (-0.0 12.0)
PASS: numbers.test: Number-theoretic division: floor/: mixed types: (-0.0 -12.0)
PASS: numbers.test: Number-theoretic division: floor/: mixed types: (+inf.0 12.0)
PASS: numbers.test: Number-theoretic division: floor/: mixed types: (+inf.0 -12.0)
PASS: numbers.test: Number-theoretic division: floor/: mixed types: (-inf.0 12.0)
PASS: numbers.test: Number-theoretic division: floor/: mixed types: (-inf.0 -12.0)
PASS: numbers.test: Number-theoretic division: floor/: mixed types: (-inf.0 12.0)
PASS: numbers.test: Number-theoretic division: floor/: mixed types: (-inf.0 -12.0)
PASS: numbers.test: Number-theoretic division: floor/: mixed types: (+inf.0 12.0)
PASS: numbers.test: Number-theoretic division: floor/: mixed types: (+inf.0 -12.0)
PASS: numbers.test: Number-theoretic division: floor/: mixed types: (+nan.0 12.0)
PASS: numbers.test: Number-theoretic division: floor/: mixed types: (+nan.0 -12.0)
PASS: numbers.test: Number-theoretic division: floor/: mixed types: (+nan.0 12.0)
PASS: numbers.test: Number-theoretic division: floor/: mixed types: (+nan.0 -12.0)
PASS: numbers.test: Number-theoretic division: floor/: mixed types: (25 10/7)
PASS: numbers.test: Number-theoretic division: floor/: mixed types: (25 -10/7)
PASS: numbers.test: Number-theoretic division: floor/: mixed types: (-25 10/7)
PASS: numbers.test: Number-theoretic division: floor/: mixed types: (-25 -10/7)
PASS: numbers.test: Number-theoretic division: floor/: mixed types: (15000000000 10/7)
PASS: numbers.test: Number-theoretic division: floor/: mixed types: (15000000000 -10/7)
PASS: numbers.test: Number-theoretic division: floor/: mixed types: (-15000000000 10/7)
PASS: numbers.test: Number-theoretic division: floor/: mixed types: (-15000000000 -10/7)
PASS: numbers.test: Number-theoretic division: floor/: mixed types: (130.0 10/7)
PASS: numbers.test: Number-theoretic division: floor/: mixed types: (130.0 -10/7)
PASS: numbers.test: Number-theoretic division: floor/: mixed types: (-130.0 10/7)
PASS: numbers.test: Number-theoretic division: floor/: mixed types: (-130.0 -10/7)
PASS: numbers.test: Number-theoretic division: floor/: mixed types: (15/7 10/7)
PASS: numbers.test: Number-theoretic division: floor/: mixed types: (15/7 -10/7)
PASS: numbers.test: Number-theoretic division: floor/: mixed types: (-15/7 10/7)
PASS: numbers.test: Number-theoretic division: floor/: mixed types: (-15/7 -10/7)
PASS: numbers.test: Number-theoretic division: floor/: mixed types: (0 10/7)
PASS: numbers.test: Number-theoretic division: floor/: mixed types: (0 -10/7)
PASS: numbers.test: Number-theoretic division: floor/: mixed types: (0.0 10/7)
PASS: numbers.test: Number-theoretic division: floor/: mixed types: (0.0 -10/7)
PASS: numbers.test: Number-theoretic division: floor/: mixed types: (-0.0 10/7)
PASS: numbers.test: Number-theoretic division: floor/: mixed types: (-0.0 -10/7)
PASS: numbers.test: Number-theoretic division: floor/: mixed types: (+inf.0 10/7)
PASS: numbers.test: Number-theoretic division: floor/: mixed types: (+inf.0 -10/7)
PASS: numbers.test: Number-theoretic division: floor/: mixed types: (-inf.0 10/7)
PASS: numbers.test: Number-theoretic division: floor/: mixed types: (-inf.0 -10/7)
PASS: numbers.test: Number-theoretic division: floor/: mixed types: (-inf.0 10/7)
PASS: numbers.test: Number-theoretic division: floor/: mixed types: (-inf.0 -10/7)
PASS: numbers.test: Number-theoretic division: floor/: mixed types: (+inf.0 10/7)
PASS: numbers.test: Number-theoretic division: floor/: mixed types: (+inf.0 -10/7)
PASS: numbers.test: Number-theoretic division: floor/: mixed types: (+nan.0 10/7)
PASS: numbers.test: Number-theoretic division: floor/: mixed types: (+nan.0 -10/7)
PASS: numbers.test: Number-theoretic division: floor/: mixed types: (+nan.0 10/7)
PASS: numbers.test: Number-theoretic division: floor/: mixed types: (+nan.0 -10/7)
PASS: numbers.test: Number-theoretic division: floor/: mixed types: (25 +inf.0)
PASS: numbers.test: Number-theoretic division: floor/: mixed types: (25 -inf.0)
PASS: numbers.test: Number-theoretic division: floor/: mixed types: (-25 +inf.0)
PASS: numbers.test: Number-theoretic division: floor/: mixed types: (-25 -inf.0)
PASS: numbers.test: Number-theoretic division: floor/: mixed types: (15000000000 +inf.0)
PASS: numbers.test: Number-theoretic division: floor/: mixed types: (15000000000 -inf.0)
PASS: numbers.test: Number-theoretic division: floor/: mixed types: (-15000000000 +inf.0)
PASS: numbers.test: Number-theoretic division: floor/: mixed types: (-15000000000 -inf.0)
PASS: numbers.test: Number-theoretic division: floor/: mixed types: (130.0 +inf.0)
PASS: numbers.test: Number-theoretic division: floor/: mixed types: (130.0 -inf.0)
PASS: numbers.test: Number-theoretic division: floor/: mixed types: (-130.0 +inf.0)
PASS: numbers.test: Number-theoretic division: floor/: mixed types: (-130.0 -inf.0)
PASS: numbers.test: Number-theoretic division: floor/: mixed types: (15/7 +inf.0)
PASS: numbers.test: Number-theoretic division: floor/: mixed types: (15/7 -inf.0)
PASS: numbers.test: Number-theoretic division: floor/: mixed types: (-15/7 +inf.0)
PASS: numbers.test: Number-theoretic division: floor/: mixed types: (-15/7 -inf.0)
PASS: numbers.test: Number-theoretic division: floor/: mixed types: (0 +inf.0)
PASS: numbers.test: Number-theoretic division: floor/: mixed types: (0 -inf.0)
PASS: numbers.test: Number-theoretic division: floor/: mixed types: (0.0 +inf.0)
PASS: numbers.test: Number-theoretic division: floor/: mixed types: (0.0 -inf.0)
PASS: numbers.test: Number-theoretic division: floor/: mixed types: (-0.0 +inf.0)
PASS: numbers.test: Number-theoretic division: floor/: mixed types: (-0.0 -inf.0)
PASS: numbers.test: Number-theoretic division: floor/: mixed types: (+inf.0 +inf.0)
PASS: numbers.test: Number-theoretic division: floor/: mixed types: (+inf.0 -inf.0)
PASS: numbers.test: Number-theoretic division: floor/: mixed types: (-inf.0 +inf.0)
PASS: numbers.test: Number-theoretic division: floor/: mixed types: (-inf.0 -inf.0)
PASS: numbers.test: Number-theoretic division: floor/: mixed types: (-inf.0 +inf.0)
PASS: numbers.test: Number-theoretic division: floor/: mixed types: (-inf.0 -inf.0)
PASS: numbers.test: Number-theoretic division: floor/: mixed types: (+inf.0 +inf.0)
PASS: numbers.test: Number-theoretic division: floor/: mixed types: (+inf.0 -inf.0)
PASS: numbers.test: Number-theoretic division: floor/: mixed types: (+nan.0 +inf.0)
PASS: numbers.test: Number-theoretic division: floor/: mixed types: (+nan.0 -inf.0)
PASS: numbers.test: Number-theoretic division: floor/: mixed types: (+nan.0 +inf.0)
PASS: numbers.test: Number-theoretic division: floor/: mixed types: (+nan.0 -inf.0)
PASS: numbers.test: Number-theoretic division: floor/: mixed types: (25 -inf.0)
PASS: numbers.test: Number-theoretic division: floor/: mixed types: (25 +inf.0)
PASS: numbers.test: Number-theoretic division: floor/: mixed types: (-25 -inf.0)
PASS: numbers.test: Number-theoretic division: floor/: mixed types: (-25 +inf.0)
PASS: numbers.test: Number-theoretic division: floor/: mixed types: (15000000000 -inf.0)
PASS: numbers.test: Number-theoretic division: floor/: mixed types: (15000000000 +inf.0)
PASS: numbers.test: Number-theoretic division: floor/: mixed types: (-15000000000 -inf.0)
PASS: numbers.test: Number-theoretic division: floor/: mixed types: (-15000000000 +inf.0)
PASS: numbers.test: Number-theoretic division: floor/: mixed types: (130.0 -inf.0)
PASS: numbers.test: Number-theoretic division: floor/: mixed types: (130.0 +inf.0)
PASS: numbers.test: Number-theoretic division: floor/: mixed types: (-130.0 -inf.0)
PASS: numbers.test: Number-theoretic division: floor/: mixed types: (-130.0 +inf.0)
PASS: numbers.test: Number-theoretic division: floor/: mixed types: (15/7 -inf.0)
PASS: numbers.test: Number-theoretic division: floor/: mixed types: (15/7 +inf.0)
PASS: numbers.test: Number-theoretic division: floor/: mixed types: (-15/7 -inf.0)
PASS: numbers.test: Number-theoretic division: floor/: mixed types: (-15/7 +inf.0)
PASS: numbers.test: Number-theoretic division: floor/: mixed types: (0 -inf.0)
PASS: numbers.test: Number-theoretic division: floor/: mixed types: (0 +inf.0)
PASS: numbers.test: Number-theoretic division: floor/: mixed types: (0.0 -inf.0)
PASS: numbers.test: Number-theoretic division: floor/: mixed types: (0.0 +inf.0)
PASS: numbers.test: Number-theoretic division: floor/: mixed types: (-0.0 -inf.0)
PASS: numbers.test: Number-theoretic division: floor/: mixed types: (-0.0 +inf.0)
PASS: numbers.test: Number-theoretic division: floor/: mixed types: (+inf.0 -inf.0)
PASS: numbers.test: Number-theoretic division: floor/: mixed types: (+inf.0 +inf.0)
PASS: numbers.test: Number-theoretic division: floor/: mixed types: (-inf.0 -inf.0)
PASS: numbers.test: Number-theoretic division: floor/: mixed types: (-inf.0 +inf.0)
PASS: numbers.test: Number-theoretic division: floor/: mixed types: (-inf.0 -inf.0)
PASS: numbers.test: Number-theoretic division: floor/: mixed types: (-inf.0 +inf.0)
PASS: numbers.test: Number-theoretic division: floor/: mixed types: (+inf.0 -inf.0)
PASS: numbers.test: Number-theoretic division: floor/: mixed types: (+inf.0 +inf.0)
PASS: numbers.test: Number-theoretic division: floor/: mixed types: (+nan.0 -inf.0)
PASS: numbers.test: Number-theoretic division: floor/: mixed types: (+nan.0 +inf.0)
PASS: numbers.test: Number-theoretic division: floor/: mixed types: (+nan.0 -inf.0)
PASS: numbers.test: Number-theoretic division: floor/: mixed types: (+nan.0 +inf.0)
PASS: numbers.test: Number-theoretic division: floor/: mixed types: (25 +nan.0)
PASS: numbers.test: Number-theoretic division: floor/: mixed types: (25 +nan.0)
PASS: numbers.test: Number-theoretic division: floor/: mixed types: (-25 +nan.0)
PASS: numbers.test: Number-theoretic division: floor/: mixed types: (-25 +nan.0)
PASS: numbers.test: Number-theoretic division: floor/: mixed types: (15000000000 +nan.0)
PASS: numbers.test: Number-theoretic division: floor/: mixed types: (15000000000 +nan.0)
PASS: numbers.test: Number-theoretic division: floor/: mixed types: (-15000000000 +nan.0)
PASS: numbers.test: Number-theoretic division: floor/: mixed types: (-15000000000 +nan.0)
PASS: numbers.test: Number-theoretic division: floor/: mixed types: (130.0 +nan.0)
PASS: numbers.test: Number-theoretic division: floor/: mixed types: (130.0 +nan.0)
PASS: numbers.test: Number-theoretic division: floor/: mixed types: (-130.0 +nan.0)
PASS: numbers.test: Number-theoretic division: floor/: mixed types: (-130.0 +nan.0)
PASS: numbers.test: Number-theoretic division: floor/: mixed types: (15/7 +nan.0)
PASS: numbers.test: Number-theoretic division: floor/: mixed types: (15/7 +nan.0)
PASS: numbers.test: Number-theoretic division: floor/: mixed types: (-15/7 +nan.0)
PASS: numbers.test: Number-theoretic division: floor/: mixed types: (-15/7 +nan.0)
PASS: numbers.test: Number-theoretic division: floor/: mixed types: (0 +nan.0)
PASS: numbers.test: Number-theoretic division: floor/: mixed types: (0 +nan.0)
PASS: numbers.test: Number-theoretic division: floor/: mixed types: (0.0 +nan.0)
PASS: numbers.test: Number-theoretic division: floor/: mixed types: (0.0 +nan.0)
PASS: numbers.test: Number-theoretic division: floor/: mixed types: (-0.0 +nan.0)
PASS: numbers.test: Number-theoretic division: floor/: mixed types: (-0.0 +nan.0)
PASS: numbers.test: Number-theoretic division: floor/: mixed types: (+inf.0 +nan.0)
PASS: numbers.test: Number-theoretic division: floor/: mixed types: (+inf.0 +nan.0)
PASS: numbers.test: Number-theoretic division: floor/: mixed types: (-inf.0 +nan.0)
PASS: numbers.test: Number-theoretic division: floor/: mixed types: (-inf.0 +nan.0)
PASS: numbers.test: Number-theoretic division: floor/: mixed types: (-inf.0 +nan.0)
PASS: numbers.test: Number-theoretic division: floor/: mixed types: (-inf.0 +nan.0)
PASS: numbers.test: Number-theoretic division: floor/: mixed types: (+inf.0 +nan.0)
PASS: numbers.test: Number-theoretic division: floor/: mixed types: (+inf.0 +nan.0)
PASS: numbers.test: Number-theoretic division: floor/: mixed types: (+nan.0 +nan.0)
PASS: numbers.test: Number-theoretic division: floor/: mixed types: (+nan.0 +nan.0)
PASS: numbers.test: Number-theoretic division: floor/: mixed types: (+nan.0 +nan.0)
PASS: numbers.test: Number-theoretic division: floor/: mixed types: (+nan.0 +nan.0)
PASS: numbers.test: Number-theoretic division: floor/: divide by zero: (15 0)
PASS: numbers.test: Number-theoretic division: floor/: divide by zero: (15 0)
PASS: numbers.test: Number-theoretic division: floor/: divide by zero: (15 0)
PASS: numbers.test: Number-theoretic division: floor/: divide by zero: (15000000000 0)
PASS: numbers.test: Number-theoretic division: floor/: divide by zero: (15000000000 0)
PASS: numbers.test: Number-theoretic division: floor/: divide by zero: (15000000000 0)
PASS: numbers.test: Number-theoretic division: floor/: divide by zero: (18.0 0)
PASS: numbers.test: Number-theoretic division: floor/: divide by zero: (18.0 0)
PASS: numbers.test: Number-theoretic division: floor/: divide by zero: (18.0 0)
PASS: numbers.test: Number-theoretic division: floor/: divide by zero: (33/7 0)
PASS: numbers.test: Number-theoretic division: floor/: divide by zero: (33/7 0)
PASS: numbers.test: Number-theoretic division: floor/: divide by zero: (33/7 0)
PASS: numbers.test: Number-theoretic division: floor/: divide by zero: (0 0)
PASS: numbers.test: Number-theoretic division: floor/: divide by zero: (0 0)
PASS: numbers.test: Number-theoretic division: floor/: divide by zero: (0 0)
PASS: numbers.test: Number-theoretic division: floor/: divide by zero: (0.0 0)
PASS: numbers.test: Number-theoretic division: floor/: divide by zero: (0.0 0)
PASS: numbers.test: Number-theoretic division: floor/: divide by zero: (0.0 0)
PASS: numbers.test: Number-theoretic division: floor/: divide by zero: (-0.0 0)
PASS: numbers.test: Number-theoretic division: floor/: divide by zero: (-0.0 0)
PASS: numbers.test: Number-theoretic division: floor/: divide by zero: (-0.0 0)
PASS: numbers.test: Number-theoretic division: floor/: divide by zero: (+inf.0 0)
PASS: numbers.test: Number-theoretic division: floor/: divide by zero: (+inf.0 0)
PASS: numbers.test: Number-theoretic division: floor/: divide by zero: (+inf.0 0)
PASS: numbers.test: Number-theoretic division: floor/: divide by zero: (-inf.0 0)
PASS: numbers.test: Number-theoretic division: floor/: divide by zero: (-inf.0 0)
PASS: numbers.test: Number-theoretic division: floor/: divide by zero: (-inf.0 0)
PASS: numbers.test: Number-theoretic division: floor/: divide by zero: (+nan.0 0)
PASS: numbers.test: Number-theoretic division: floor/: divide by zero: (+nan.0 0)
PASS: numbers.test: Number-theoretic division: floor/: divide by zero: (+nan.0 0)
PASS: numbers.test: Number-theoretic division: floor/: divide by zero: (15 0.0)
PASS: numbers.test: Number-theoretic division: floor/: divide by zero: (15 0.0)
PASS: numbers.test: Number-theoretic division: floor/: divide by zero: (15 0.0)
PASS: numbers.test: Number-theoretic division: floor/: divide by zero: (15000000000 0.0)
PASS: numbers.test: Number-theoretic division: floor/: divide by zero: (15000000000 0.0)
PASS: numbers.test: Number-theoretic division: floor/: divide by zero: (15000000000 0.0)
PASS: numbers.test: Number-theoretic division: floor/: divide by zero: (18.0 0.0)
PASS: numbers.test: Number-theoretic division: floor/: divide by zero: (18.0 0.0)
PASS: numbers.test: Number-theoretic division: floor/: divide by zero: (18.0 0.0)
PASS: numbers.test: Number-theoretic division: floor/: divide by zero: (33/7 0.0)
PASS: numbers.test: Number-theoretic division: floor/: divide by zero: (33/7 0.0)
PASS: numbers.test: Number-theoretic division: floor/: divide by zero: (33/7 0.0)
PASS: numbers.test: Number-theoretic division: floor/: divide by zero: (0 0.0)
PASS: numbers.test: Number-theoretic division: floor/: divide by zero: (0 0.0)
PASS: numbers.test: Number-theoretic division: floor/: divide by zero: (0 0.0)
PASS: numbers.test: Number-theoretic division: floor/: divide by zero: (0.0 0.0)
PASS: numbers.test: Number-theoretic division: floor/: divide by zero: (0.0 0.0)
PASS: numbers.test: Number-theoretic division: floor/: divide by zero: (0.0 0.0)
PASS: numbers.test: Number-theoretic division: floor/: divide by zero: (-0.0 0.0)
PASS: numbers.test: Number-theoretic division: floor/: divide by zero: (-0.0 0.0)
PASS: numbers.test: Number-theoretic division: floor/: divide by zero: (-0.0 0.0)
PASS: numbers.test: Number-theoretic division: floor/: divide by zero: (+inf.0 0.0)
PASS: numbers.test: Number-theoretic division: floor/: divide by zero: (+inf.0 0.0)
PASS: numbers.test: Number-theoretic division: floor/: divide by zero: (+inf.0 0.0)
PASS: numbers.test: Number-theoretic division: floor/: divide by zero: (-inf.0 0.0)
PASS: numbers.test: Number-theoretic division: floor/: divide by zero: (-inf.0 0.0)
PASS: numbers.test: Number-theoretic division: floor/: divide by zero: (-inf.0 0.0)
PASS: numbers.test: Number-theoretic division: floor/: divide by zero: (+nan.0 0.0)
PASS: numbers.test: Number-theoretic division: floor/: divide by zero: (+nan.0 0.0)
PASS: numbers.test: Number-theoretic division: floor/: divide by zero: (+nan.0 0.0)
PASS: numbers.test: Number-theoretic division: floor/: divide by zero: (15 -0.0)
PASS: numbers.test: Number-theoretic division: floor/: divide by zero: (15 -0.0)
PASS: numbers.test: Number-theoretic division: floor/: divide by zero: (15 -0.0)
PASS: numbers.test: Number-theoretic division: floor/: divide by zero: (15000000000 -0.0)
PASS: numbers.test: Number-theoretic division: floor/: divide by zero: (15000000000 -0.0)
PASS: numbers.test: Number-theoretic division: floor/: divide by zero: (15000000000 -0.0)
PASS: numbers.test: Number-theoretic division: floor/: divide by zero: (18.0 -0.0)
PASS: numbers.test: Number-theoretic division: floor/: divide by zero: (18.0 -0.0)
PASS: numbers.test: Number-theoretic division: floor/: divide by zero: (18.0 -0.0)
PASS: numbers.test: Number-theoretic division: floor/: divide by zero: (33/7 -0.0)
PASS: numbers.test: Number-theoretic division: floor/: divide by zero: (33/7 -0.0)
PASS: numbers.test: Number-theoretic division: floor/: divide by zero: (33/7 -0.0)
PASS: numbers.test: Number-theoretic division: floor/: divide by zero: (0 -0.0)
PASS: numbers.test: Number-theoretic division: floor/: divide by zero: (0 -0.0)
PASS: numbers.test: Number-theoretic division: floor/: divide by zero: (0 -0.0)
PASS: numbers.test: Number-theoretic division: floor/: divide by zero: (0.0 -0.0)
PASS: numbers.test: Number-theoretic division: floor/: divide by zero: (0.0 -0.0)
PASS: numbers.test: Number-theoretic division: floor/: divide by zero: (0.0 -0.0)
PASS: numbers.test: Number-theoretic division: floor/: divide by zero: (-0.0 -0.0)
PASS: numbers.test: Number-theoretic division: floor/: divide by zero: (-0.0 -0.0)
PASS: numbers.test: Number-theoretic division: floor/: divide by zero: (-0.0 -0.0)
PASS: numbers.test: Number-theoretic division: floor/: divide by zero: (+inf.0 -0.0)
PASS: numbers.test: Number-theoretic division: floor/: divide by zero: (+inf.0 -0.0)
PASS: numbers.test: Number-theoretic division: floor/: divide by zero: (+inf.0 -0.0)
PASS: numbers.test: Number-theoretic division: floor/: divide by zero: (-inf.0 -0.0)
PASS: numbers.test: Number-theoretic division: floor/: divide by zero: (-inf.0 -0.0)
PASS: numbers.test: Number-theoretic division: floor/: divide by zero: (-inf.0 -0.0)
PASS: numbers.test: Number-theoretic division: floor/: divide by zero: (+nan.0 -0.0)
PASS: numbers.test: Number-theoretic division: floor/: divide by zero: (+nan.0 -0.0)
PASS: numbers.test: Number-theoretic division: floor/: divide by zero: (+nan.0 -0.0)
PASS: numbers.test: Number-theoretic division: ceiling/: documented?
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: fixnum-min / -1: (-536870912 -1)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-2 1)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-2 -1)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (2 1)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (2 -1)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-1 1)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-1 -1)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (1 1)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (1 -1)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (0 1)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (0 -1)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (1 1)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (1 -1)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-1 1)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-1 -1)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (2 1)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (2 -1)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-2 1)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-2 -1)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (3 1)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (3 -1)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-3 1)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-3 -1)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (4 1)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (4 -1)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-4 1)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-4 -1)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (5 1)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (5 -1)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-5 1)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-5 -1)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (7 1)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (7 -1)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-7 1)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-7 -1)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (10 1)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (10 -1)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-10 1)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-10 -1)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (12 1)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (12 -1)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-12 1)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-12 -1)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (15 1)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (15 -1)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-15 1)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-15 -1)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (16 1)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (16 -1)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-16 1)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-16 -1)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (19 1)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (19 -1)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-19 1)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-19 -1)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (20 1)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (20 -1)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-20 1)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-20 -1)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-1 1)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-1 -1)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (1 1)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (1 -1)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (0 1)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (0 -1)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (1 1)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (1 -1)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-1 1)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-1 -1)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (2 1)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (2 -1)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-2 1)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-2 -1)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (3 1)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (3 -1)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-3 1)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-3 -1)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (4 1)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (4 -1)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-4 1)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-4 -1)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (5 1)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (5 -1)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-5 1)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-5 -1)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (6 1)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (6 -1)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-6 1)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-6 -1)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (8 1)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (8 -1)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-8 1)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-8 -1)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (11 1)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (11 -1)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-11 1)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-11 -1)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (13 1)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (13 -1)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-13 1)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-13 -1)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (16 1)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (16 -1)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-16 1)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-16 -1)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (17 1)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (17 -1)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-17 1)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-17 -1)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (20 1)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (20 -1)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-20 1)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-20 -1)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (21 1)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (21 -1)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-21 1)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-21 -1)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (0 1)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (0 -1)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (1 1)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (1 -1)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-1 1)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-1 -1)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (2 1)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (2 -1)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-2 1)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-2 -1)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (3 1)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (3 -1)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-3 1)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-3 -1)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (4 1)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (4 -1)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-4 1)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-4 -1)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (5 1)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (5 -1)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-5 1)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-5 -1)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (6 1)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (6 -1)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-6 1)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-6 -1)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (7 1)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (7 -1)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-7 1)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-7 -1)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (9 1)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (9 -1)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-9 1)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-9 -1)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (12 1)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (12 -1)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-12 1)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-12 -1)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (14 1)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (14 -1)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-14 1)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-14 -1)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (17 1)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (17 -1)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-17 1)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-17 -1)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (18 1)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (18 -1)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-18 1)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-18 -1)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (21 1)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (21 -1)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-21 1)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-21 -1)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (22 1)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (22 -1)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-22 1)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-22 -1)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (3 1)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (3 -1)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-3 1)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-3 -1)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (4 1)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (4 -1)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-4 1)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-4 -1)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (5 1)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (5 -1)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-5 1)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-5 -1)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (6 1)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (6 -1)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-6 1)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-6 -1)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (7 1)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (7 -1)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-7 1)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-7 -1)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (8 1)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (8 -1)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-8 1)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-8 -1)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (9 1)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (9 -1)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-9 1)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-9 -1)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (10 1)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (10 -1)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-10 1)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-10 -1)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (12 1)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (12 -1)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-12 1)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-12 -1)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (15 1)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (15 -1)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-15 1)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-15 -1)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (17 1)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (17 -1)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-17 1)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-17 -1)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (20 1)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (20 -1)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-20 1)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-20 -1)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (21 1)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (21 -1)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-21 1)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-21 -1)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (24 1)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (24 -1)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-24 1)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-24 -1)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (25 1)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (25 -1)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-25 1)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-25 -1)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (8 1)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (8 -1)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-8 1)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-8 -1)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (9 1)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (9 -1)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-9 1)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-9 -1)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (10 1)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (10 -1)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-10 1)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-10 -1)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (11 1)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (11 -1)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-11 1)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-11 -1)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (12 1)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (12 -1)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-12 1)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-12 -1)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (13 1)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (13 -1)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-13 1)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-13 -1)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (14 1)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (14 -1)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-14 1)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-14 -1)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (15 1)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (15 -1)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-15 1)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-15 -1)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (17 1)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (17 -1)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-17 1)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-17 -1)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (20 1)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (20 -1)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-20 1)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-20 -1)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (22 1)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (22 -1)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-22 1)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-22 -1)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (25 1)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (25 -1)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-25 1)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-25 -1)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (26 1)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (26 -1)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-26 1)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-26 -1)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (29 1)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (29 -1)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-29 1)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-29 -1)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (30 1)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (30 -1)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-30 1)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-30 -1)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-2 2)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-2 -2)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (2 2)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (2 -2)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-1 2)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-1 -2)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (1 2)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (1 -2)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (0 2)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (0 -2)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (1 2)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (1 -2)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-1 2)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-1 -2)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (2 2)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (2 -2)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-2 2)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-2 -2)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (3 2)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (3 -2)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-3 2)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-3 -2)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (4 2)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (4 -2)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-4 2)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-4 -2)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (5 2)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (5 -2)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-5 2)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-5 -2)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (7 2)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (7 -2)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-7 2)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-7 -2)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (10 2)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (10 -2)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-10 2)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-10 -2)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (12 2)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (12 -2)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-12 2)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-12 -2)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (15 2)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (15 -2)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-15 2)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-15 -2)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (16 2)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (16 -2)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-16 2)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-16 -2)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (19 2)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (19 -2)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-19 2)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-19 -2)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (20 2)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (20 -2)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-20 2)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-20 -2)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (0 2)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (0 -2)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (1 2)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (1 -2)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-1 2)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-1 -2)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (2 2)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (2 -2)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-2 2)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-2 -2)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (3 2)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (3 -2)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-3 2)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-3 -2)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (4 2)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (4 -2)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-4 2)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-4 -2)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (5 2)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (5 -2)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-5 2)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-5 -2)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (6 2)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (6 -2)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-6 2)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-6 -2)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (7 2)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (7 -2)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-7 2)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-7 -2)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (9 2)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (9 -2)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-9 2)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-9 -2)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (12 2)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (12 -2)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-12 2)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-12 -2)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (14 2)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (14 -2)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-14 2)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-14 -2)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (17 2)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (17 -2)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-17 2)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-17 -2)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (18 2)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (18 -2)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-18 2)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-18 -2)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (21 2)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (21 -2)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-21 2)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-21 -2)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (22 2)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (22 -2)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-22 2)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-22 -2)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (2 2)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (2 -2)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-2 2)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-2 -2)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (3 2)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (3 -2)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-3 2)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-3 -2)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (4 2)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (4 -2)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-4 2)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-4 -2)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (5 2)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (5 -2)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-5 2)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-5 -2)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (6 2)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (6 -2)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-6 2)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-6 -2)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (7 2)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (7 -2)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-7 2)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-7 -2)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (8 2)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (8 -2)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-8 2)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-8 -2)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (9 2)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (9 -2)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-9 2)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-9 -2)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (11 2)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (11 -2)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-11 2)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-11 -2)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (14 2)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (14 -2)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-14 2)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-14 -2)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (16 2)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (16 -2)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-16 2)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-16 -2)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (19 2)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (19 -2)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-19 2)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-19 -2)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (20 2)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (20 -2)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-20 2)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-20 -2)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (23 2)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (23 -2)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-23 2)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-23 -2)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (24 2)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (24 -2)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-24 2)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-24 -2)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (8 2)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (8 -2)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-8 2)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-8 -2)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (9 2)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (9 -2)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-9 2)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-9 -2)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (10 2)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (10 -2)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-10 2)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-10 -2)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (11 2)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (11 -2)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-11 2)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-11 -2)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (12 2)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (12 -2)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-12 2)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-12 -2)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (13 2)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (13 -2)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-13 2)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-13 -2)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (14 2)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (14 -2)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-14 2)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-14 -2)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (15 2)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (15 -2)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-15 2)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-15 -2)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (17 2)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (17 -2)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-17 2)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-17 -2)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (20 2)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (20 -2)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-20 2)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-20 -2)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (22 2)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (22 -2)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-22 2)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-22 -2)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (25 2)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (25 -2)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-25 2)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-25 -2)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (26 2)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (26 -2)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-26 2)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-26 -2)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (29 2)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (29 -2)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-29 2)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-29 -2)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (30 2)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (30 -2)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-30 2)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-30 -2)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (18 2)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (18 -2)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-18 2)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-18 -2)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (19 2)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (19 -2)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-19 2)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-19 -2)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (20 2)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (20 -2)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-20 2)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-20 -2)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (21 2)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (21 -2)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-21 2)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-21 -2)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (22 2)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (22 -2)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-22 2)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-22 -2)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (23 2)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (23 -2)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-23 2)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-23 -2)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (24 2)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (24 -2)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-24 2)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-24 -2)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (25 2)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (25 -2)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-25 2)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-25 -2)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (27 2)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (27 -2)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-27 2)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-27 -2)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (30 2)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (30 -2)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-30 2)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-30 -2)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (32 2)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (32 -2)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-32 2)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-32 -2)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (35 2)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (35 -2)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-35 2)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-35 -2)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (36 2)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (36 -2)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-36 2)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-36 -2)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (39 2)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (39 -2)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-39 2)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-39 -2)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (40 2)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (40 -2)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-40 2)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-40 -2)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-2 5)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-2 -5)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (2 5)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (2 -5)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-1 5)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-1 -5)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (1 5)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (1 -5)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (0 5)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (0 -5)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (1 5)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (1 -5)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-1 5)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-1 -5)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (2 5)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (2 -5)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-2 5)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-2 -5)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (3 5)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (3 -5)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-3 5)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-3 -5)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (4 5)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (4 -5)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-4 5)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-4 -5)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (5 5)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (5 -5)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-5 5)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-5 -5)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (7 5)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (7 -5)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-7 5)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-7 -5)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (10 5)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (10 -5)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-10 5)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-10 -5)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (12 5)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (12 -5)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-12 5)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-12 -5)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (15 5)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (15 -5)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-15 5)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-15 -5)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (16 5)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (16 -5)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-16 5)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-16 -5)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (19 5)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (19 -5)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-19 5)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-19 -5)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (20 5)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (20 -5)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-20 5)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-20 -5)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (3 5)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (3 -5)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-3 5)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-3 -5)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (4 5)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (4 -5)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-4 5)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-4 -5)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (5 5)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (5 -5)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-5 5)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-5 -5)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (6 5)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (6 -5)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-6 5)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-6 -5)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (7 5)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (7 -5)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-7 5)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-7 -5)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (8 5)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (8 -5)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-8 5)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-8 -5)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (9 5)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (9 -5)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-9 5)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-9 -5)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (10 5)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (10 -5)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-10 5)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-10 -5)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (12 5)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (12 -5)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-12 5)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-12 -5)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (15 5)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (15 -5)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-15 5)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-15 -5)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (17 5)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (17 -5)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-17 5)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-17 -5)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (20 5)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (20 -5)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-20 5)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-20 -5)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (21 5)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (21 -5)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-21 5)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-21 -5)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (24 5)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (24 -5)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-24 5)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-24 -5)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (25 5)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (25 -5)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-25 5)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-25 -5)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (8 5)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (8 -5)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-8 5)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-8 -5)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (9 5)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (9 -5)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-9 5)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-9 -5)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (10 5)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (10 -5)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-10 5)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-10 -5)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (11 5)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (11 -5)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-11 5)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-11 -5)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (12 5)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (12 -5)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-12 5)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-12 -5)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (13 5)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (13 -5)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-13 5)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-13 -5)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (14 5)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (14 -5)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-14 5)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-14 -5)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (15 5)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (15 -5)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-15 5)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-15 -5)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (17 5)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (17 -5)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-17 5)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-17 -5)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (20 5)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (20 -5)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-20 5)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-20 -5)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (22 5)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (22 -5)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-22 5)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-22 -5)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (25 5)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (25 -5)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-25 5)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-25 -5)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (26 5)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (26 -5)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-26 5)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-26 -5)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (29 5)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (29 -5)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-29 5)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-29 -5)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (30 5)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (30 -5)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-30 5)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-30 -5)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (23 5)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (23 -5)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-23 5)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-23 -5)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (24 5)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (24 -5)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-24 5)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-24 -5)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (25 5)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (25 -5)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-25 5)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-25 -5)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (26 5)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (26 -5)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-26 5)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-26 -5)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (27 5)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (27 -5)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-27 5)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-27 -5)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (28 5)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (28 -5)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-28 5)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-28 -5)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (29 5)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (29 -5)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-29 5)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-29 -5)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (30 5)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (30 -5)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-30 5)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-30 -5)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (32 5)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (32 -5)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-32 5)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-32 -5)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (35 5)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (35 -5)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-35 5)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-35 -5)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (37 5)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (37 -5)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-37 5)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-37 -5)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (40 5)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (40 -5)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-40 5)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-40 -5)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (41 5)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (41 -5)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-41 5)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-41 -5)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (44 5)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (44 -5)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-44 5)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-44 -5)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (45 5)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (45 -5)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-45 5)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-45 -5)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (48 5)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (48 -5)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-48 5)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-48 -5)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (49 5)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (49 -5)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-49 5)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-49 -5)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (50 5)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (50 -5)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-50 5)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-50 -5)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (51 5)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (51 -5)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-51 5)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-51 -5)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (52 5)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (52 -5)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-52 5)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-52 -5)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (53 5)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (53 -5)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-53 5)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-53 -5)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (54 5)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (54 -5)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-54 5)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-54 -5)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (55 5)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (55 -5)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-55 5)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-55 -5)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (57 5)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (57 -5)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-57 5)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-57 -5)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (60 5)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (60 -5)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-60 5)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-60 -5)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (62 5)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (62 -5)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-62 5)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-62 -5)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (65 5)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (65 -5)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-65 5)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-65 -5)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (66 5)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (66 -5)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-66 5)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-66 -5)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (69 5)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (69 -5)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-69 5)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-69 -5)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (70 5)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (70 -5)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-70 5)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-70 -5)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-2 10)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-2 -10)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (2 10)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (2 -10)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-1 10)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-1 -10)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (1 10)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (1 -10)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (0 10)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (0 -10)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (1 10)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (1 -10)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-1 10)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-1 -10)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (2 10)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (2 -10)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-2 10)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-2 -10)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (3 10)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (3 -10)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-3 10)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-3 -10)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (4 10)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (4 -10)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-4 10)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-4 -10)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (5 10)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (5 -10)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-5 10)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-5 -10)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (7 10)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (7 -10)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-7 10)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-7 -10)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (10 10)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (10 -10)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-10 10)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-10 -10)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (12 10)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (12 -10)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-12 10)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-12 -10)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (15 10)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (15 -10)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-15 10)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-15 -10)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (16 10)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (16 -10)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-16 10)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-16 -10)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (19 10)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (19 -10)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-19 10)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-19 -10)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (20 10)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (20 -10)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-20 10)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-20 -10)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (8 10)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (8 -10)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-8 10)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-8 -10)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (9 10)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (9 -10)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-9 10)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-9 -10)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (10 10)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (10 -10)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-10 10)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-10 -10)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (11 10)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (11 -10)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-11 10)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-11 -10)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (12 10)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (12 -10)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-12 10)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-12 -10)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (13 10)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (13 -10)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-13 10)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-13 -10)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (14 10)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (14 -10)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-14 10)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-14 -10)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (15 10)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (15 -10)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-15 10)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-15 -10)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (17 10)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (17 -10)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-17 10)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-17 -10)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (20 10)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (20 -10)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-20 10)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-20 -10)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (22 10)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (22 -10)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-22 10)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-22 -10)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (25 10)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (25 -10)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-25 10)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-25 -10)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (26 10)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (26 -10)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-26 10)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-26 -10)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (29 10)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (29 -10)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-29 10)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-29 -10)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (30 10)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (30 -10)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-30 10)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-30 -10)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (18 10)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (18 -10)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-18 10)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-18 -10)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (19 10)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (19 -10)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-19 10)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-19 -10)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (20 10)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (20 -10)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-20 10)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-20 -10)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (21 10)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (21 -10)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-21 10)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-21 -10)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (22 10)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (22 -10)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-22 10)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-22 -10)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (23 10)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (23 -10)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-23 10)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-23 -10)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (24 10)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (24 -10)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-24 10)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-24 -10)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (25 10)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (25 -10)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-25 10)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-25 -10)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (27 10)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (27 -10)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-27 10)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-27 -10)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (30 10)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (30 -10)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-30 10)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-30 -10)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (32 10)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (32 -10)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-32 10)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-32 -10)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (35 10)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (35 -10)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-35 10)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-35 -10)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (36 10)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (36 -10)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-36 10)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-36 -10)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (39 10)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (39 -10)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-39 10)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-39 -10)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (40 10)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (40 -10)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-40 10)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-40 -10)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (48 10)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (48 -10)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-48 10)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-48 -10)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (49 10)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (49 -10)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-49 10)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-49 -10)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (50 10)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (50 -10)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-50 10)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-50 -10)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (51 10)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (51 -10)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-51 10)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-51 -10)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (52 10)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (52 -10)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-52 10)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-52 -10)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (53 10)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (53 -10)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-53 10)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-53 -10)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (54 10)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (54 -10)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-54 10)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-54 -10)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (55 10)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (55 -10)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-55 10)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-55 -10)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (57 10)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (57 -10)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-57 10)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-57 -10)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (60 10)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (60 -10)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-60 10)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-60 -10)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (62 10)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (62 -10)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-62 10)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-62 -10)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (65 10)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (65 -10)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-65 10)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-65 -10)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (66 10)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (66 -10)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-66 10)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-66 -10)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (69 10)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (69 -10)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-69 10)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-69 -10)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (70 10)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (70 -10)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-70 10)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-70 -10)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (98 10)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (98 -10)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-98 10)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-98 -10)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (99 10)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (99 -10)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-99 10)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-99 -10)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (100 10)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (100 -10)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-100 10)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-100 -10)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (101 10)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (101 -10)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-101 10)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-101 -10)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (102 10)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (102 -10)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-102 10)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-102 -10)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (103 10)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (103 -10)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-103 10)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-103 -10)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (104 10)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (104 -10)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-104 10)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-104 -10)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (105 10)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (105 -10)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-105 10)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-105 -10)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (107 10)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (107 -10)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-107 10)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-107 -10)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (110 10)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (110 -10)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-110 10)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-110 -10)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (112 10)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (112 -10)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-112 10)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-112 -10)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (115 10)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (115 -10)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-115 10)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-115 -10)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (116 10)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (116 -10)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-116 10)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-116 -10)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (119 10)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (119 -10)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-119 10)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-119 -10)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (120 10)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (120 -10)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-120 10)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / inum: (-120 -10)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / big: fixnum-min / -fixnum-min: (-536870912 536870912)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / big: fixnum-max / (2*fixnum-max): (536870911 1073741822)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / big: fixnum-max / (2*fixnum-max): (536870911 -1073741822)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / big: fixnum-max / (2*fixnum-max): (-536870911 1073741822)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / big: fixnum-max / (2*fixnum-max): (-536870911 -1073741822)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / big: (0 536870912)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / big: (0 536870912)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / big: (0 -536870913)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / big: (0 -536870913)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / big: (1 536870912)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / big: (-1 536870912)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / big: (1 -536870913)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / big: (-1 -536870913)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / big: (2 536870912)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / big: (-2 536870912)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / big: (2 -536870913)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / big: (-2 -536870913)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / big: (10 536870912)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / big: (-10 536870912)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / big: (10 -536870913)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / big: (-10 -536870913)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / big: (536870910 536870912)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / big: (-536870910 536870912)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / big: (536870910 -536870913)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / big: (-536870910 -536870913)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / big: (536870911 536870912)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / big: (-536870911 536870912)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / big: (536870911 -536870913)
PASS: numbers.test: Number-theoretic division: ceiling/: inum / big: (-536870911 -536870913)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: -fixnum-min / fixnum-min: (536870912 -536870912)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (9999999998 1)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (9999999998 -1)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (-9999999998 1)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (-9999999998 -1)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (9999999999 1)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (9999999999 -1)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (-9999999999 1)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (-9999999999 -1)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (10000000000 1)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (10000000000 -1)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (-10000000000 1)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (-10000000000 -1)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (10000000001 1)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (10000000001 -1)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (-10000000001 1)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (-10000000001 -1)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (10000000002 1)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (10000000002 -1)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (-10000000002 1)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (-10000000002 -1)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (19999999998 1)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (19999999998 -1)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (-19999999998 1)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (-19999999998 -1)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (19999999999 1)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (19999999999 -1)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (-19999999999 1)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (-19999999999 -1)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (20000000000 1)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (20000000000 -1)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (-20000000000 1)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (-20000000000 -1)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (20000000001 1)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (20000000001 -1)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (-20000000001 1)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (-20000000001 -1)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (20000000002 1)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (20000000002 -1)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (-20000000002 1)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (-20000000002 -1)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (49999999998 1)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (49999999998 -1)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (-49999999998 1)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (-49999999998 -1)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (49999999999 1)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (49999999999 -1)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (-49999999999 1)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (-49999999999 -1)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (50000000000 1)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (50000000000 -1)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (-50000000000 1)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (-50000000000 -1)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (50000000001 1)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (50000000001 -1)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (-50000000001 1)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (-50000000001 -1)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (50000000002 1)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (50000000002 -1)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (-50000000002 1)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (-50000000002 -1)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (39999999998 4)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (39999999998 -4)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (-39999999998 4)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (-39999999998 -4)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (39999999999 4)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (39999999999 -4)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (-39999999999 4)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (-39999999999 -4)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (40000000000 4)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (40000000000 -4)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (-40000000000 4)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (-40000000000 -4)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (40000000001 4)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (40000000001 -4)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (-40000000001 4)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (-40000000001 -4)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (40000000002 4)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (40000000002 -4)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (-40000000002 4)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (-40000000002 -4)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (79999999998 4)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (79999999998 -4)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (-79999999998 4)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (-79999999998 -4)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (79999999999 4)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (79999999999 -4)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (-79999999999 4)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (-79999999999 -4)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (80000000000 4)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (80000000000 -4)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (-80000000000 4)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (-80000000000 -4)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (80000000001 4)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (80000000001 -4)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (-80000000001 4)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (-80000000001 -4)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (80000000002 4)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (80000000002 -4)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (-80000000002 4)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (-80000000002 -4)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (199999999998 4)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (199999999998 -4)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (-199999999998 4)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (-199999999998 -4)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (199999999999 4)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (199999999999 -4)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (-199999999999 4)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (-199999999999 -4)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (200000000000 4)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (200000000000 -4)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (-200000000000 4)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (-200000000000 -4)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (200000000001 4)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (200000000001 -4)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (-200000000001 4)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (-200000000001 -4)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (200000000002 4)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (200000000002 -4)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (-200000000002 4)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (-200000000002 -4)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (19999999998 4)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (19999999998 -4)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (-19999999998 4)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (-19999999998 -4)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (19999999999 4)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (19999999999 -4)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (-19999999999 4)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (-19999999999 -4)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (20000000000 4)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (20000000000 -4)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (-20000000000 4)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (-20000000000 -4)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (20000000001 4)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (20000000001 -4)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (-20000000001 4)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (-20000000001 -4)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (20000000002 4)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (20000000002 -4)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (-20000000002 4)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (-20000000002 -4)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (59999999998 4)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (59999999998 -4)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (-59999999998 4)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (-59999999998 -4)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (59999999999 4)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (59999999999 -4)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (-59999999999 4)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (-59999999999 -4)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (60000000000 4)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (60000000000 -4)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (-60000000000 4)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (-60000000000 -4)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (60000000001 4)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (60000000001 -4)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (-60000000001 4)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (-60000000001 -4)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (60000000002 4)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (60000000002 -4)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (-60000000002 4)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (-60000000002 -4)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (99999999998 4)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (99999999998 -4)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (-99999999998 4)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (-99999999998 -4)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (99999999999 4)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (99999999999 -4)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (-99999999999 4)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (-99999999999 -4)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (100000000000 4)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (100000000000 -4)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (-100000000000 4)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (-100000000000 -4)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (100000000001 4)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (100000000001 -4)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (-100000000001 4)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (-100000000001 -4)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (100000000002 4)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (100000000002 -4)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (-100000000002 4)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (-100000000002 -4)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (49999999998 5)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (49999999998 -5)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (-49999999998 5)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (-49999999998 -5)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (49999999999 5)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (49999999999 -5)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (-49999999999 5)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (-49999999999 -5)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (50000000000 5)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (50000000000 -5)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (-50000000000 5)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (-50000000000 -5)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (50000000001 5)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (50000000001 -5)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (-50000000001 5)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (-50000000001 -5)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (50000000002 5)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (50000000002 -5)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (-50000000002 5)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (-50000000002 -5)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (99999999998 5)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (99999999998 -5)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (-99999999998 5)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (-99999999998 -5)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (99999999999 5)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (99999999999 -5)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (-99999999999 5)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (-99999999999 -5)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (100000000000 5)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (100000000000 -5)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (-100000000000 5)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (-100000000000 -5)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (100000000001 5)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (100000000001 -5)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (-100000000001 5)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (-100000000001 -5)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (100000000002 5)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (100000000002 -5)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (-100000000002 5)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (-100000000002 -5)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (249999999998 5)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (249999999998 -5)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (-249999999998 5)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (-249999999998 -5)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (249999999999 5)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (249999999999 -5)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (-249999999999 5)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (-249999999999 -5)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (250000000000 5)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (250000000000 -5)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (-250000000000 5)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (-250000000000 -5)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (250000000001 5)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (250000000001 -5)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (-250000000001 5)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (-250000000001 -5)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (250000000002 5)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (250000000002 -5)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (-250000000002 5)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (-250000000002 -5)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (99999999998 10)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (99999999998 -10)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (-99999999998 10)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (-99999999998 -10)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (99999999999 10)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (99999999999 -10)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (-99999999999 10)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (-99999999999 -10)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (100000000000 10)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (100000000000 -10)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (-100000000000 10)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (-100000000000 -10)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (100000000001 10)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (100000000001 -10)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (-100000000001 10)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (-100000000001 -10)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (100000000002 10)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (100000000002 -10)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (-100000000002 10)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (-100000000002 -10)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (199999999998 10)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (199999999998 -10)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (-199999999998 10)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (-199999999998 -10)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (199999999999 10)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (199999999999 -10)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (-199999999999 10)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (-199999999999 -10)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (200000000000 10)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (200000000000 -10)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (-200000000000 10)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (-200000000000 -10)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (200000000001 10)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (200000000001 -10)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (-200000000001 10)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (-200000000001 -10)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (200000000002 10)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (200000000002 -10)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (-200000000002 10)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (-200000000002 -10)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (499999999998 10)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (499999999998 -10)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (-499999999998 10)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (-499999999998 -10)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (499999999999 10)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (499999999999 -10)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (-499999999999 10)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (-499999999999 -10)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (500000000000 10)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (500000000000 -10)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (-500000000000 10)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (-500000000000 -10)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (500000000001 10)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (500000000001 -10)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (-500000000001 10)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (-500000000001 -10)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (500000000002 10)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (500000000002 -10)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (-500000000002 10)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (-500000000002 -10)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (49999999998 10)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (49999999998 -10)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (-49999999998 10)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (-49999999998 -10)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (49999999999 10)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (49999999999 -10)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (-49999999999 10)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (-49999999999 -10)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (50000000000 10)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (50000000000 -10)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (-50000000000 10)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (-50000000000 -10)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (50000000001 10)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (50000000001 -10)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (-50000000001 10)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (-50000000001 -10)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (50000000002 10)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (50000000002 -10)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (-50000000002 10)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (-50000000002 -10)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (149999999998 10)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (149999999998 -10)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (-149999999998 10)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (-149999999998 -10)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (149999999999 10)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (149999999999 -10)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (-149999999999 10)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (-149999999999 -10)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (150000000000 10)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (150000000000 -10)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (-150000000000 10)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (-150000000000 -10)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (150000000001 10)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (150000000001 -10)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (-150000000001 10)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (-150000000001 -10)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (150000000002 10)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (150000000002 -10)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (-150000000002 10)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (-150000000002 -10)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (249999999998 10)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (249999999998 -10)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (-249999999998 10)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (-249999999998 -10)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (249999999999 10)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (249999999999 -10)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (-249999999999 10)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (-249999999999 -10)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (250000000000 10)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (250000000000 -10)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (-250000000000 10)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (-250000000000 -10)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (250000000001 10)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (250000000001 -10)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (-250000000001 10)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (-250000000001 -10)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (250000000002 10)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (250000000002 -10)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (-250000000002 10)
PASS: numbers.test: Number-theoretic division: ceiling/: big / inum: (-250000000002 -10)
PASS: numbers.test: Number-theoretic division: ceiling/: big / big: (9999999998 10000000000)
PASS: numbers.test: Number-theoretic division: ceiling/: big / big: (9999999998 -10000000000)
PASS: numbers.test: Number-theoretic division: ceiling/: big / big: (-9999999998 10000000000)
PASS: numbers.test: Number-theoretic division: ceiling/: big / big: (-9999999998 -10000000000)
PASS: numbers.test: Number-theoretic division: ceiling/: big / big: (9999999999 10000000000)
PASS: numbers.test: Number-theoretic division: ceiling/: big / big: (9999999999 -10000000000)
PASS: numbers.test: Number-theoretic division: ceiling/: big / big: (-9999999999 10000000000)
PASS: numbers.test: Number-theoretic division: ceiling/: big / big: (-9999999999 -10000000000)
PASS: numbers.test: Number-theoretic division: ceiling/: big / big: (10000000000 10000000000)
PASS: numbers.test: Number-theoretic division: ceiling/: big / big: (10000000000 -10000000000)
PASS: numbers.test: Number-theoretic division: ceiling/: big / big: (-10000000000 10000000000)
PASS: numbers.test: Number-theoretic division: ceiling/: big / big: (-10000000000 -10000000000)
PASS: numbers.test: Number-theoretic division: ceiling/: big / big: (10000000001 10000000000)
PASS: numbers.test: Number-theoretic division: ceiling/: big / big: (10000000001 -10000000000)
PASS: numbers.test: Number-theoretic division: ceiling/: big / big: (-10000000001 10000000000)
PASS: numbers.test: Number-theoretic division: ceiling/: big / big: (-10000000001 -10000000000)
PASS: numbers.test: Number-theoretic division: ceiling/: big / big: (10000000002 10000000000)
PASS: numbers.test: Number-theoretic division: ceiling/: big / big: (10000000002 -10000000000)
PASS: numbers.test: Number-theoretic division: ceiling/: big / big: (-10000000002 10000000000)
PASS: numbers.test: Number-theoretic division: ceiling/: big / big: (-10000000002 -10000000000)
PASS: numbers.test: Number-theoretic division: ceiling/: big / big: (19999999998 10000000000)
PASS: numbers.test: Number-theoretic division: ceiling/: big / big: (19999999998 -10000000000)
PASS: numbers.test: Number-theoretic division: ceiling/: big / big: (-19999999998 10000000000)
PASS: numbers.test: Number-theoretic division: ceiling/: big / big: (-19999999998 -10000000000)
PASS: numbers.test: Number-theoretic division: ceiling/: big / big: (19999999999 10000000000)
PASS: numbers.test: Number-theoretic division: ceiling/: big / big: (19999999999 -10000000000)
PASS: numbers.test: Number-theoretic division: ceiling/: big / big: (-19999999999 10000000000)
PASS: numbers.test: Number-theoretic division: ceiling/: big / big: (-19999999999 -10000000000)
PASS: numbers.test: Number-theoretic division: ceiling/: big / big: (20000000000 10000000000)
PASS: numbers.test: Number-theoretic division: ceiling/: big / big: (20000000000 -10000000000)
PASS: numbers.test: Number-theoretic division: ceiling/: big / big: (-20000000000 10000000000)
PASS: numbers.test: Number-theoretic division: ceiling/: big / big: (-20000000000 -10000000000)
PASS: numbers.test: Number-theoretic division: ceiling/: big / big: (20000000001 10000000000)
PASS: numbers.test: Number-theoretic division: ceiling/: big / big: (20000000001 -10000000000)
PASS: numbers.test: Number-theoretic division: ceiling/: big / big: (-20000000001 10000000000)
PASS: numbers.test: Number-theoretic division: ceiling/: big / big: (-20000000001 -10000000000)
PASS: numbers.test: Number-theoretic division: ceiling/: big / big: (20000000002 10000000000)
PASS: numbers.test: Number-theoretic division: ceiling/: big / big: (20000000002 -10000000000)
PASS: numbers.test: Number-theoretic division: ceiling/: big / big: (-20000000002 10000000000)
PASS: numbers.test: Number-theoretic division: ceiling/: big / big: (-20000000002 -10000000000)
PASS: numbers.test: Number-theoretic division: ceiling/: big / big: (49999999998 10000000000)
PASS: numbers.test: Number-theoretic division: ceiling/: big / big: (49999999998 -10000000000)
PASS: numbers.test: Number-theoretic division: ceiling/: big / big: (-49999999998 10000000000)
PASS: numbers.test: Number-theoretic division: ceiling/: big / big: (-49999999998 -10000000000)
PASS: numbers.test: Number-theoretic division: ceiling/: big / big: (49999999999 10000000000)
PASS: numbers.test: Number-theoretic division: ceiling/: big / big: (49999999999 -10000000000)
PASS: numbers.test: Number-theoretic division: ceiling/: big / big: (-49999999999 10000000000)
PASS: numbers.test: Number-theoretic division: ceiling/: big / big: (-49999999999 -10000000000)
PASS: numbers.test: Number-theoretic division: ceiling/: big / big: (50000000000 10000000000)
PASS: numbers.test: Number-theoretic division: ceiling/: big / big: (50000000000 -10000000000)
PASS: numbers.test: Number-theoretic division: ceiling/: big / big: (-50000000000 10000000000)
PASS: numbers.test: Number-theoretic division: ceiling/: big / big: (-50000000000 -10000000000)
PASS: numbers.test: Number-theoretic division: ceiling/: big / big: (50000000001 10000000000)
PASS: numbers.test: Number-theoretic division: ceiling/: big / big: (50000000001 -10000000000)
PASS: numbers.test: Number-theoretic division: ceiling/: big / big: (-50000000001 10000000000)
PASS: numbers.test: Number-theoretic division: ceiling/: big / big: (-50000000001 -10000000000)
PASS: numbers.test: Number-theoretic division: ceiling/: big / big: (50000000002 10000000000)
PASS: numbers.test: Number-theoretic division: ceiling/: big / big: (50000000002 -10000000000)
PASS: numbers.test: Number-theoretic division: ceiling/: big / big: (-50000000002 10000000000)
PASS: numbers.test: Number-theoretic division: ceiling/: big / big: (-50000000002 -10000000000)
PASS: numbers.test: Number-theoretic division: ceiling/: big / big: (4999999998 10000000000)
PASS: numbers.test: Number-theoretic division: ceiling/: big / big: (4999999998 -10000000000)
PASS: numbers.test: Number-theoretic division: ceiling/: big / big: (-4999999998 10000000000)
PASS: numbers.test: Number-theoretic division: ceiling/: big / big: (-4999999998 -10000000000)
PASS: numbers.test: Number-theoretic division: ceiling/: big / big: (4999999999 10000000000)
PASS: numbers.test: Number-theoretic division: ceiling/: big / big: (4999999999 -10000000000)
PASS: numbers.test: Number-theoretic division: ceiling/: big / big: (-4999999999 10000000000)
PASS: numbers.test: Number-theoretic division: ceiling/: big / big: (-4999999999 -10000000000)
PASS: numbers.test: Number-theoretic division: ceiling/: big / big: (5000000000 10000000000)
PASS: numbers.test: Number-theoretic division: ceiling/: big / big: (5000000000 -10000000000)
PASS: numbers.test: Number-theoretic division: ceiling/: big / big: (-5000000000 10000000000)
PASS: numbers.test: Number-theoretic division: ceiling/: big / big: (-5000000000 -10000000000)
PASS: numbers.test: Number-theoretic division: ceiling/: big / big: (5000000001 10000000000)
PASS: numbers.test: Number-theoretic division: ceiling/: big / big: (5000000001 -10000000000)
PASS: numbers.test: Number-theoretic division: ceiling/: big / big: (-5000000001 10000000000)
PASS: numbers.test: Number-theoretic division: ceiling/: big / big: (-5000000001 -10000000000)
PASS: numbers.test: Number-theoretic division: ceiling/: big / big: (5000000002 10000000000)
PASS: numbers.test: Number-theoretic division: ceiling/: big / big: (5000000002 -10000000000)
PASS: numbers.test: Number-theoretic division: ceiling/: big / big: (-5000000002 10000000000)
PASS: numbers.test: Number-theoretic division: ceiling/: big / big: (-5000000002 -10000000000)
PASS: numbers.test: Number-theoretic division: ceiling/: big / big: (14999999998 10000000000)
PASS: numbers.test: Number-theoretic division: ceiling/: big / big: (14999999998 -10000000000)
PASS: numbers.test: Number-theoretic division: ceiling/: big / big: (-14999999998 10000000000)
PASS: numbers.test: Number-theoretic division: ceiling/: big / big: (-14999999998 -10000000000)
PASS: numbers.test: Number-theoretic division: ceiling/: big / big: (14999999999 10000000000)
PASS: numbers.test: Number-theoretic division: ceiling/: big / big: (14999999999 -10000000000)
PASS: numbers.test: Number-theoretic division: ceiling/: big / big: (-14999999999 10000000000)
PASS: numbers.test: Number-theoretic division: ceiling/: big / big: (-14999999999 -10000000000)
PASS: numbers.test: Number-theoretic division: ceiling/: big / big: (15000000000 10000000000)
PASS: numbers.test: Number-theoretic division: ceiling/: big / big: (15000000000 -10000000000)
PASS: numbers.test: Number-theoretic division: ceiling/: big / big: (-15000000000 10000000000)
PASS: numbers.test: Number-theoretic division: ceiling/: big / big: (-15000000000 -10000000000)
PASS: numbers.test: Number-theoretic division: ceiling/: big / big: (15000000001 10000000000)
PASS: numbers.test: Number-theoretic division: ceiling/: big / big: (15000000001 -10000000000)
PASS: numbers.test: Number-theoretic division: ceiling/: big / big: (-15000000001 10000000000)
PASS: numbers.test: Number-theoretic division: ceiling/: big / big: (-15000000001 -10000000000)
PASS: numbers.test: Number-theoretic division: ceiling/: big / big: (15000000002 10000000000)
PASS: numbers.test: Number-theoretic division: ceiling/: big / big: (15000000002 -10000000000)
PASS: numbers.test: Number-theoretic division: ceiling/: big / big: (-15000000002 10000000000)
PASS: numbers.test: Number-theoretic division: ceiling/: big / big: (-15000000002 -10000000000)
PASS: numbers.test: Number-theoretic division: ceiling/: big / big: (24999999998 10000000000)
PASS: numbers.test: Number-theoretic division: ceiling/: big / big: (24999999998 -10000000000)
PASS: numbers.test: Number-theoretic division: ceiling/: big / big: (-24999999998 10000000000)
PASS: numbers.test: Number-theoretic division: ceiling/: big / big: (-24999999998 -10000000000)
PASS: numbers.test: Number-theoretic division: ceiling/: big / big: (24999999999 10000000000)
PASS: numbers.test: Number-theoretic division: ceiling/: big / big: (24999999999 -10000000000)
PASS: numbers.test: Number-theoretic division: ceiling/: big / big: (-24999999999 10000000000)
PASS: numbers.test: Number-theoretic division: ceiling/: big / big: (-24999999999 -10000000000)
PASS: numbers.test: Number-theoretic division: ceiling/: big / big: (25000000000 10000000000)
PASS: numbers.test: Number-theoretic division: ceiling/: big / big: (25000000000 -10000000000)
PASS: numbers.test: Number-theoretic division: ceiling/: big / big: (-25000000000 10000000000)
PASS: numbers.test: Number-theoretic division: ceiling/: big / big: (-25000000000 -10000000000)
PASS: numbers.test: Number-theoretic division: ceiling/: big / big: (25000000001 10000000000)
PASS: numbers.test: Number-theoretic division: ceiling/: big / big: (25000000001 -10000000000)
PASS: numbers.test: Number-theoretic division: ceiling/: big / big: (-25000000001 10000000000)
PASS: numbers.test: Number-theoretic division: ceiling/: big / big: (-25000000001 -10000000000)
PASS: numbers.test: Number-theoretic division: ceiling/: big / big: (25000000002 10000000000)
PASS: numbers.test: Number-theoretic division: ceiling/: big / big: (25000000002 -10000000000)
PASS: numbers.test: Number-theoretic division: ceiling/: big / big: (-25000000002 10000000000)
PASS: numbers.test: Number-theoretic division: ceiling/: big / big: (-25000000002 -10000000000)
PASS: numbers.test: Number-theoretic division: ceiling/: big / big: (9999999999 10000000001)
PASS: numbers.test: Number-theoretic division: ceiling/: big / big: (9999999999 -10000000001)
PASS: numbers.test: Number-theoretic division: ceiling/: big / big: (-9999999999 10000000001)
PASS: numbers.test: Number-theoretic division: ceiling/: big / big: (-9999999999 -10000000001)
PASS: numbers.test: Number-theoretic division: ceiling/: big / big: (10000000000 10000000001)
PASS: numbers.test: Number-theoretic division: ceiling/: big / big: (10000000000 -10000000001)
PASS: numbers.test: Number-theoretic division: ceiling/: big / big: (-10000000000 10000000001)
PASS: numbers.test: Number-theoretic division: ceiling/: big / big: (-10000000000 -10000000001)
PASS: numbers.test: Number-theoretic division: ceiling/: big / big: (10000000001 10000000001)
PASS: numbers.test: Number-theoretic division: ceiling/: big / big: (10000000001 -10000000001)
PASS: numbers.test: Number-theoretic division: ceiling/: big / big: (-10000000001 10000000001)
PASS: numbers.test: Number-theoretic division: ceiling/: big / big: (-10000000001 -10000000001)
PASS: numbers.test: Number-theoretic division: ceiling/: big / big: (10000000002 10000000001)
PASS: numbers.test: Number-theoretic division: ceiling/: big / big: (10000000002 -10000000001)
PASS: numbers.test: Number-theoretic division: ceiling/: big / big: (-10000000002 10000000001)
PASS: numbers.test: Number-theoretic division: ceiling/: big / big: (-10000000002 -10000000001)
PASS: numbers.test: Number-theoretic division: ceiling/: big / big: (10000000003 10000000001)
PASS: numbers.test: Number-theoretic division: ceiling/: big / big: (10000000003 -10000000001)
PASS: numbers.test: Number-theoretic division: ceiling/: big / big: (-10000000003 10000000001)
PASS: numbers.test: Number-theoretic division: ceiling/: big / big: (-10000000003 -10000000001)
PASS: numbers.test: Number-theoretic division: ceiling/: big / big: (20000000000 10000000001)
PASS: numbers.test: Number-theoretic division: ceiling/: big / big: (20000000000 -10000000001)
PASS: numbers.test: Number-theoretic division: ceiling/: big / big: (-20000000000 10000000001)
PASS: numbers.test: Number-theoretic division: ceiling/: big / big: (-20000000000 -10000000001)
PASS: numbers.test: Number-theoretic division: ceiling/: big / big: (20000000001 10000000001)
PASS: numbers.test: Number-theoretic division: ceiling/: big / big: (20000000001 -10000000001)
PASS: numbers.test: Number-theoretic division: ceiling/: big / big: (-20000000001 10000000001)
PASS: numbers.test: Number-theoretic division: ceiling/: big / big: (-20000000001 -10000000001)
PASS: numbers.test: Number-theoretic division: ceiling/: big / big: (20000000002 10000000001)
PASS: numbers.test: Number-theoretic division: ceiling/: big / big: (20000000002 -10000000001)
PASS: numbers.test: Number-theoretic division: ceiling/: big / big: (-20000000002 10000000001)
PASS: numbers.test: Number-theoretic division: ceiling/: big / big: (-20000000002 -10000000001)
PASS: numbers.test: Number-theoretic division: ceiling/: big / big: (20000000003 10000000001)
PASS: numbers.test: Number-theoretic division: ceiling/: big / big: (20000000003 -10000000001)
PASS: numbers.test: Number-theoretic division: ceiling/: big / big: (-20000000003 10000000001)
PASS: numbers.test: Number-theoretic division: ceiling/: big / big: (-20000000003 -10000000001)
PASS: numbers.test: Number-theoretic division: ceiling/: big / big: (20000000004 10000000001)
PASS: numbers.test: Number-theoretic division: ceiling/: big / big: (20000000004 -10000000001)
PASS: numbers.test: Number-theoretic division: ceiling/: big / big: (-20000000004 10000000001)
PASS: numbers.test: Number-theoretic division: ceiling/: big / big: (-20000000004 -10000000001)
PASS: numbers.test: Number-theoretic division: ceiling/: big / big: (50000000003 10000000001)
PASS: numbers.test: Number-theoretic division: ceiling/: big / big: (50000000003 -10000000001)
PASS: numbers.test: Number-theoretic division: ceiling/: big / big: (-50000000003 10000000001)
PASS: numbers.test: Number-theoretic division: ceiling/: big / big: (-50000000003 -10000000001)
PASS: numbers.test: Number-theoretic division: ceiling/: big / big: (50000000004 10000000001)
PASS: numbers.test: Number-theoretic division: ceiling/: big / big: (50000000004 -10000000001)
PASS: numbers.test: Number-theoretic division: ceiling/: big / big: (-50000000004 10000000001)
PASS: numbers.test: Number-theoretic division: ceiling/: big / big: (-50000000004 -10000000001)
PASS: numbers.test: Number-theoretic division: ceiling/: big / big: (50000000005 10000000001)
PASS: numbers.test: Number-theoretic division: ceiling/: big / big: (50000000005 -10000000001)
PASS: numbers.test: Number-theoretic division: ceiling/: big / big: (-50000000005 10000000001)
PASS: numbers.test: Number-theoretic division: ceiling/: big / big: (-50000000005 -10000000001)
PASS: numbers.test: Number-theoretic division: ceiling/: big / big: (50000000006 10000000001)
PASS: numbers.test: Number-theoretic division: ceiling/: big / big: (50000000006 -10000000001)
PASS: numbers.test: Number-theoretic division: ceiling/: big / big: (-50000000006 10000000001)
PASS: numbers.test: Number-theoretic division: ceiling/: big / big: (-50000000006 -10000000001)
PASS: numbers.test: Number-theoretic division: ceiling/: big / big: (50000000007 10000000001)
PASS: numbers.test: Number-theoretic division: ceiling/: big / big: (50000000007 -10000000001)
PASS: numbers.test: Number-theoretic division: ceiling/: big / big: (-50000000007 10000000001)
PASS: numbers.test: Number-theoretic division: ceiling/: big / big: (-50000000007 -10000000001)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (-2.0 0.5)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (-2.0 -0.5)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (2.0 0.5)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (2.0 -0.5)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (-1.0 0.5)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (-1.0 -0.5)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (1.0 0.5)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (1.0 -0.5)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (0.0 0.5)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (0.0 -0.5)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (1.0 0.5)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (1.0 -0.5)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (-1.0 0.5)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (-1.0 -0.5)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (2.0 0.5)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (2.0 -0.5)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (-2.0 0.5)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (-2.0 -0.5)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (-1.5 0.5)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (-1.5 -0.5)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (1.5 0.5)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (1.5 -0.5)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (-0.5 0.5)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (-0.5 -0.5)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (0.5 0.5)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (0.5 -0.5)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (0.5 0.5)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (0.5 -0.5)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (-0.5 0.5)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (-0.5 -0.5)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (1.5 0.5)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (1.5 -0.5)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (-1.5 0.5)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (-1.5 -0.5)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (2.5 0.5)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (2.5 -0.5)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (-2.5 0.5)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (-2.5 -0.5)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (-1.0 0.5)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (-1.0 -0.5)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (1.0 0.5)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (1.0 -0.5)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (0.0 0.5)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (0.0 -0.5)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (1.0 0.5)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (1.0 -0.5)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (-1.0 0.5)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (-1.0 -0.5)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (2.0 0.5)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (2.0 -0.5)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (-2.0 0.5)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (-2.0 -0.5)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (3.0 0.5)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (3.0 -0.5)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (-3.0 0.5)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (-3.0 -0.5)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (0.5 0.5)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (0.5 -0.5)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (-0.5 0.5)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (-0.5 -0.5)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (1.5 0.5)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (1.5 -0.5)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (-1.5 0.5)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (-1.5 -0.5)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (2.5 0.5)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (2.5 -0.5)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (-2.5 0.5)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (-2.5 -0.5)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (3.5 0.5)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (3.5 -0.5)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (-3.5 0.5)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (-3.5 -0.5)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (4.5 0.5)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (4.5 -0.5)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (-4.5 0.5)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (-4.5 -0.5)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (-1.75 0.5)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (-1.75 -0.5)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (1.75 0.5)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (1.75 -0.5)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (-0.75 0.5)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (-0.75 -0.5)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (0.75 0.5)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (0.75 -0.5)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (0.25 0.5)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (0.25 -0.5)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (-0.25 0.5)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (-0.25 -0.5)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (1.25 0.5)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (1.25 -0.5)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (-1.25 0.5)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (-1.25 -0.5)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (2.25 0.5)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (2.25 -0.5)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (-2.25 0.5)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (-2.25 -0.5)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (-1.25 0.5)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (-1.25 -0.5)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (1.25 0.5)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (1.25 -0.5)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (-0.25 0.5)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (-0.25 -0.5)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (0.25 0.5)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (0.25 -0.5)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (0.75 0.5)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (0.75 -0.5)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (-0.75 0.5)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (-0.75 -0.5)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (1.75 0.5)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (1.75 -0.5)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (-1.75 0.5)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (-1.75 -0.5)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (2.75 0.5)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (2.75 -0.5)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (-2.75 0.5)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (-2.75 -0.5)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (-0.75 0.5)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (-0.75 -0.5)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (0.75 0.5)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (0.75 -0.5)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (0.25 0.5)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (0.25 -0.5)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (-0.25 0.5)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (-0.25 -0.5)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (1.25 0.5)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (1.25 -0.5)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (-1.25 0.5)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (-1.25 -0.5)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (2.25 0.5)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (2.25 -0.5)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (-2.25 0.5)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (-2.25 -0.5)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (3.25 0.5)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (3.25 -0.5)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (-3.25 0.5)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (-3.25 -0.5)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (-2.0 1.5)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (-2.0 -1.5)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (2.0 1.5)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (2.0 -1.5)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (-1.0 1.5)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (-1.0 -1.5)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (1.0 1.5)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (1.0 -1.5)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (0.0 1.5)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (0.0 -1.5)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (1.0 1.5)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (1.0 -1.5)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (-1.0 1.5)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (-1.0 -1.5)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (2.0 1.5)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (2.0 -1.5)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (-2.0 1.5)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (-2.0 -1.5)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (-0.5 1.5)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (-0.5 -1.5)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (0.5 1.5)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (0.5 -1.5)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (0.5 1.5)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (0.5 -1.5)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (-0.5 1.5)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (-0.5 -1.5)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (1.5 1.5)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (1.5 -1.5)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (-1.5 1.5)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (-1.5 -1.5)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (2.5 1.5)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (2.5 -1.5)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (-2.5 1.5)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (-2.5 -1.5)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (3.5 1.5)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (3.5 -1.5)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (-3.5 1.5)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (-3.5 -1.5)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (1.0 1.5)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (1.0 -1.5)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (-1.0 1.5)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (-1.0 -1.5)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (2.0 1.5)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (2.0 -1.5)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (-2.0 1.5)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (-2.0 -1.5)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (3.0 1.5)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (3.0 -1.5)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (-3.0 1.5)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (-3.0 -1.5)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (4.0 1.5)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (4.0 -1.5)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (-4.0 1.5)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (-4.0 -1.5)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (5.0 1.5)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (5.0 -1.5)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (-5.0 1.5)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (-5.0 -1.5)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (5.5 1.5)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (5.5 -1.5)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (-5.5 1.5)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (-5.5 -1.5)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (6.5 1.5)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (6.5 -1.5)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (-6.5 1.5)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (-6.5 -1.5)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (7.5 1.5)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (7.5 -1.5)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (-7.5 1.5)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (-7.5 -1.5)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (8.5 1.5)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (8.5 -1.5)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (-8.5 1.5)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (-8.5 -1.5)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (9.5 1.5)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (9.5 -1.5)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (-9.5 1.5)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (-9.5 -1.5)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (-1.25 1.5)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (-1.25 -1.5)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (1.25 1.5)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (1.25 -1.5)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (-0.25 1.5)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (-0.25 -1.5)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (0.25 1.5)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (0.25 -1.5)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (0.75 1.5)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (0.75 -1.5)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (-0.75 1.5)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (-0.75 -1.5)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (1.75 1.5)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (1.75 -1.5)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (-1.75 1.5)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (-1.75 -1.5)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (2.75 1.5)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (2.75 -1.5)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (-2.75 1.5)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (-2.75 -1.5)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (0.25 1.5)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (0.25 -1.5)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (-0.25 1.5)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (-0.25 -1.5)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (1.25 1.5)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (1.25 -1.5)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (-1.25 1.5)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (-1.25 -1.5)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (2.25 1.5)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (2.25 -1.5)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (-2.25 1.5)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (-2.25 -1.5)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (3.25 1.5)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (3.25 -1.5)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (-3.25 1.5)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (-3.25 -1.5)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (4.25 1.5)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (4.25 -1.5)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (-4.25 1.5)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (-4.25 -1.5)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (1.75 1.5)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (1.75 -1.5)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (-1.75 1.5)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (-1.75 -1.5)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (2.75 1.5)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (2.75 -1.5)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (-2.75 1.5)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (-2.75 -1.5)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (3.75 1.5)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (3.75 -1.5)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (-3.75 1.5)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (-3.75 -1.5)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (4.75 1.5)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (4.75 -1.5)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (-4.75 1.5)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (-4.75 -1.5)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (5.75 1.5)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (5.75 -1.5)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (-5.75 1.5)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (-5.75 -1.5)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (-2.0 2.25)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (-2.0 -2.25)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (2.0 2.25)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (2.0 -2.25)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (-1.0 2.25)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (-1.0 -2.25)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (1.0 2.25)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (1.0 -2.25)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (0.0 2.25)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (0.0 -2.25)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (1.0 2.25)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (1.0 -2.25)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (-1.0 2.25)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (-1.0 -2.25)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (2.0 2.25)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (2.0 -2.25)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (-2.0 2.25)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (-2.0 -2.25)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (0.25 2.25)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (0.25 -2.25)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (-0.25 2.25)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (-0.25 -2.25)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (1.25 2.25)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (1.25 -2.25)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (-1.25 2.25)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (-1.25 -2.25)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (2.25 2.25)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (2.25 -2.25)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (-2.25 2.25)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (-2.25 -2.25)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (3.25 2.25)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (3.25 -2.25)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (-3.25 2.25)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (-3.25 -2.25)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (4.25 2.25)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (4.25 -2.25)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (-4.25 2.25)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (-4.25 -2.25)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (2.5 2.25)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (2.5 -2.25)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (-2.5 2.25)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (-2.5 -2.25)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (3.5 2.25)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (3.5 -2.25)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (-3.5 2.25)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (-3.5 -2.25)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (4.5 2.25)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (4.5 -2.25)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (-4.5 2.25)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (-4.5 -2.25)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (5.5 2.25)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (5.5 -2.25)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (-5.5 2.25)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (-5.5 -2.25)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (6.5 2.25)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (6.5 -2.25)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (-6.5 2.25)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (-6.5 -2.25)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (9.25 2.25)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (9.25 -2.25)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (-9.25 2.25)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (-9.25 -2.25)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (10.25 2.25)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (10.25 -2.25)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (-10.25 2.25)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (-10.25 -2.25)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (11.25 2.25)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (11.25 -2.25)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (-11.25 2.25)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (-11.25 -2.25)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (12.25 2.25)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (12.25 -2.25)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (-12.25 2.25)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (-12.25 -2.25)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (13.25 2.25)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (13.25 -2.25)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (-13.25 2.25)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (-13.25 -2.25)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (-0.875 2.25)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (-0.875 -2.25)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (0.875 2.25)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (0.875 -2.25)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (0.125 2.25)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (0.125 -2.25)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (-0.125 2.25)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (-0.125 -2.25)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (1.125 2.25)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (1.125 -2.25)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (-1.125 2.25)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (-1.125 -2.25)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (2.125 2.25)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (2.125 -2.25)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (-2.125 2.25)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (-2.125 -2.25)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (3.125 2.25)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (3.125 -2.25)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (-3.125 2.25)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (-3.125 -2.25)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (1.375 2.25)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (1.375 -2.25)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (-1.375 2.25)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (-1.375 -2.25)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (2.375 2.25)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (2.375 -2.25)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (-2.375 2.25)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (-2.375 -2.25)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (3.375 2.25)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (3.375 -2.25)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (-3.375 2.25)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (-3.375 -2.25)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (4.375 2.25)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (4.375 -2.25)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (-4.375 2.25)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (-4.375 -2.25)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (5.375 2.25)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (5.375 -2.25)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (-5.375 2.25)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (-5.375 -2.25)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (3.625 2.25)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (3.625 -2.25)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (-3.625 2.25)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (-3.625 -2.25)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (4.625 2.25)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (4.625 -2.25)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (-4.625 2.25)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (-4.625 -2.25)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (5.625 2.25)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (5.625 -2.25)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (-5.625 2.25)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (-5.625 -2.25)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (6.625 2.25)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (6.625 -2.25)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (-6.625 2.25)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (-6.625 -2.25)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (7.625 2.25)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (7.625 -2.25)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (-7.625 2.25)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (-7.625 -2.25)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (-2.0 5.75)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (-2.0 -5.75)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (2.0 5.75)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (2.0 -5.75)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (-1.0 5.75)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (-1.0 -5.75)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (1.0 5.75)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (1.0 -5.75)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (0.0 5.75)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (0.0 -5.75)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (1.0 5.75)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (1.0 -5.75)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (-1.0 5.75)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (-1.0 -5.75)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (2.0 5.75)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (2.0 -5.75)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (-2.0 5.75)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (-2.0 -5.75)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (3.75 5.75)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (3.75 -5.75)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (-3.75 5.75)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (-3.75 -5.75)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (4.75 5.75)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (4.75 -5.75)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (-4.75 5.75)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (-4.75 -5.75)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (5.75 5.75)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (5.75 -5.75)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (-5.75 5.75)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (-5.75 -5.75)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (6.75 5.75)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (6.75 -5.75)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (-6.75 5.75)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (-6.75 -5.75)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (7.75 5.75)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (7.75 -5.75)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (-7.75 5.75)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (-7.75 -5.75)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (9.5 5.75)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (9.5 -5.75)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (-9.5 5.75)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (-9.5 -5.75)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (10.5 5.75)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (10.5 -5.75)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (-10.5 5.75)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (-10.5 -5.75)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (11.5 5.75)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (11.5 -5.75)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (-11.5 5.75)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (-11.5 -5.75)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (12.5 5.75)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (12.5 -5.75)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (-12.5 5.75)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (-12.5 -5.75)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (13.5 5.75)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (13.5 -5.75)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (-13.5 5.75)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (-13.5 -5.75)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (26.75 5.75)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (26.75 -5.75)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (-26.75 5.75)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (-26.75 -5.75)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (27.75 5.75)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (27.75 -5.75)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (-27.75 5.75)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (-27.75 -5.75)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (28.75 5.75)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (28.75 -5.75)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (-28.75 5.75)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (-28.75 -5.75)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (29.75 5.75)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (29.75 -5.75)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (-29.75 5.75)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (-29.75 -5.75)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (30.75 5.75)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (30.75 -5.75)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (-30.75 5.75)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (-30.75 -5.75)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (0.875 5.75)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (0.875 -5.75)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (-0.875 5.75)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (-0.875 -5.75)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (1.875 5.75)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (1.875 -5.75)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (-1.875 5.75)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (-1.875 -5.75)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (2.875 5.75)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (2.875 -5.75)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (-2.875 5.75)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (-2.875 -5.75)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (3.875 5.75)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (3.875 -5.75)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (-3.875 5.75)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (-3.875 -5.75)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (4.875 5.75)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (4.875 -5.75)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (-4.875 5.75)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (-4.875 -5.75)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (6.625 5.75)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (6.625 -5.75)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (-6.625 5.75)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (-6.625 -5.75)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (7.625 5.75)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (7.625 -5.75)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (-7.625 5.75)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (-7.625 -5.75)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (8.625 5.75)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (8.625 -5.75)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (-8.625 5.75)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (-8.625 -5.75)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (9.625 5.75)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (9.625 -5.75)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (-9.625 5.75)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (-9.625 -5.75)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (10.625 5.75)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (10.625 -5.75)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (-10.625 5.75)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (-10.625 -5.75)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (12.375 5.75)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (12.375 -5.75)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (-12.375 5.75)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (-12.375 -5.75)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (13.375 5.75)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (13.375 -5.75)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (-13.375 5.75)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (-13.375 -5.75)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (14.375 5.75)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (14.375 -5.75)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (-14.375 5.75)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (-14.375 -5.75)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (15.375 5.75)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (15.375 -5.75)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (-15.375 5.75)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (-15.375 -5.75)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (16.375 5.75)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (16.375 -5.75)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (-16.375 5.75)
PASS: numbers.test: Number-theoretic division: ceiling/: inexact: (-16.375 -5.75)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (-2/9 1/10)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (-2/9 -1/10)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (2/9 1/10)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (2/9 -1/10)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (-1/11 1/10)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (-1/11 -1/10)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (1/11 1/10)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (1/11 -1/10)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (0 1/10)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (0 -1/10)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (1/3 1/10)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (1/3 -1/10)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (-1/3 1/10)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (-1/3 -1/10)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (2/3 1/10)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (2/3 -1/10)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (-2/3 1/10)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (-2/3 -1/10)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (-11/90 1/10)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (-11/90 -1/10)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (11/90 1/10)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (11/90 -1/10)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (1/110 1/10)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (1/110 -1/10)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (-1/110 1/10)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (-1/110 -1/10)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (1/10 1/10)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (1/10 -1/10)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (-1/10 1/10)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (-1/10 -1/10)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (13/30 1/10)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (13/30 -1/10)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (-13/30 1/10)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (-13/30 -1/10)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (23/30 1/10)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (23/30 -1/10)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (-23/30 1/10)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (-23/30 -1/10)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (-1/45 1/10)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (-1/45 -1/10)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (1/45 1/10)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (1/45 -1/10)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (6/55 1/10)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (6/55 -1/10)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (-6/55 1/10)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (-6/55 -1/10)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (1/5 1/10)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (1/5 -1/10)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (-1/5 1/10)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (-1/5 -1/10)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (8/15 1/10)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (8/15 -1/10)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (-8/15 1/10)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (-8/15 -1/10)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (13/15 1/10)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (13/15 -1/10)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (-13/15 1/10)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (-13/15 -1/10)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (5/18 1/10)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (5/18 -1/10)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (-5/18 1/10)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (-5/18 -1/10)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (9/22 1/10)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (9/22 -1/10)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (-9/22 1/10)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (-9/22 -1/10)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (1/2 1/10)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (1/2 -1/10)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (-1/2 1/10)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (-1/2 -1/10)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (5/6 1/10)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (5/6 -1/10)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (-5/6 1/10)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (-5/6 -1/10)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (7/6 1/10)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (7/6 -1/10)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (-7/6 1/10)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (-7/6 -1/10)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (-31/180 1/10)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (-31/180 -1/10)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (31/180 1/10)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (31/180 -1/10)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (-9/220 1/10)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (-9/220 -1/10)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (9/220 1/10)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (9/220 -1/10)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (1/20 1/10)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (1/20 -1/10)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (-1/20 1/10)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (-1/20 -1/10)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (23/60 1/10)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (23/60 -1/10)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (-23/60 1/10)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (-23/60 -1/10)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (43/60 1/10)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (43/60 -1/10)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (-43/60 1/10)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (-43/60 -1/10)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (-13/180 1/10)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (-13/180 -1/10)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (13/180 1/10)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (13/180 -1/10)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (13/220 1/10)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (13/220 -1/10)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (-13/220 1/10)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (-13/220 -1/10)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (3/20 1/10)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (3/20 -1/10)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (-3/20 1/10)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (-3/20 -1/10)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (29/60 1/10)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (29/60 -1/10)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (-29/60 1/10)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (-29/60 -1/10)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (49/60 1/10)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (49/60 -1/10)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (-49/60 1/10)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (-49/60 -1/10)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (1/36 1/10)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (1/36 -1/10)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (-1/36 1/10)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (-1/36 -1/10)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (7/44 1/10)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (7/44 -1/10)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (-7/44 1/10)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (-7/44 -1/10)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (1/4 1/10)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (1/4 -1/10)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (-1/4 1/10)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (-1/4 -1/10)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (7/12 1/10)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (7/12 -1/10)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (-7/12 1/10)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (-7/12 -1/10)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (11/12 1/10)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (11/12 -1/10)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (-11/12 1/10)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (-11/12 -1/10)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (-2/9 16/3)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (-2/9 -16/3)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (2/9 16/3)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (2/9 -16/3)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (-1/11 16/3)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (-1/11 -16/3)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (1/11 16/3)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (1/11 -16/3)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (0 16/3)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (0 -16/3)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (1/3 16/3)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (1/3 -16/3)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (-1/3 16/3)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (-1/3 -16/3)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (2/3 16/3)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (2/3 -16/3)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (-2/3 16/3)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (-2/3 -16/3)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (46/9 16/3)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (46/9 -16/3)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (-46/9 16/3)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (-46/9 -16/3)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (173/33 16/3)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (173/33 -16/3)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (-173/33 16/3)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (-173/33 -16/3)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (16/3 16/3)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (16/3 -16/3)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (-16/3 16/3)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (-16/3 -16/3)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (17/3 16/3)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (17/3 -16/3)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (-17/3 16/3)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (-17/3 -16/3)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (6 16/3)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (6 -16/3)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (-6 16/3)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (-6 -16/3)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (94/9 16/3)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (94/9 -16/3)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (-94/9 16/3)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (-94/9 -16/3)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (349/33 16/3)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (349/33 -16/3)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (-349/33 16/3)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (-349/33 -16/3)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (32/3 16/3)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (32/3 -16/3)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (-32/3 16/3)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (-32/3 -16/3)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (11 16/3)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (11 -16/3)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (-11 16/3)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (-11 -16/3)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (34/3 16/3)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (34/3 -16/3)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (-34/3 16/3)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (-34/3 -16/3)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (238/9 16/3)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (238/9 -16/3)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (-238/9 16/3)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (-238/9 -16/3)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (877/33 16/3)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (877/33 -16/3)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (-877/33 16/3)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (-877/33 -16/3)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (80/3 16/3)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (80/3 -16/3)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (-80/3 16/3)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (-80/3 -16/3)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (27 16/3)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (27 -16/3)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (-27 16/3)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (-27 -16/3)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (82/3 16/3)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (82/3 -16/3)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (-82/3 16/3)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (-82/3 -16/3)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (22/9 16/3)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (22/9 -16/3)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (-22/9 16/3)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (-22/9 -16/3)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (85/33 16/3)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (85/33 -16/3)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (-85/33 16/3)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (-85/33 -16/3)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (8/3 16/3)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (8/3 -16/3)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (-8/3 16/3)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (-8/3 -16/3)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (3 16/3)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (3 -16/3)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (-3 16/3)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (-3 -16/3)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (10/3 16/3)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (10/3 -16/3)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (-10/3 16/3)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (-10/3 -16/3)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (70/9 16/3)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (70/9 -16/3)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (-70/9 16/3)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (-70/9 -16/3)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (87/11 16/3)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (87/11 -16/3)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (-87/11 16/3)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (-87/11 -16/3)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (8 16/3)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (8 -16/3)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (-8 16/3)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (-8 -16/3)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (25/3 16/3)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (25/3 -16/3)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (-25/3 16/3)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (-25/3 -16/3)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (26/3 16/3)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (26/3 -16/3)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (-26/3 16/3)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (-26/3 -16/3)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (118/9 16/3)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (118/9 -16/3)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (-118/9 16/3)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (-118/9 -16/3)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (437/33 16/3)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (437/33 -16/3)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (-437/33 16/3)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (-437/33 -16/3)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (40/3 16/3)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (40/3 -16/3)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (-40/3 16/3)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (-40/3 -16/3)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (41/3 16/3)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (41/3 -16/3)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (-41/3 16/3)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (-41/3 -16/3)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (14 16/3)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (14 -16/3)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (-14 16/3)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (-14 -16/3)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (-2/9 10/7)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (-2/9 -10/7)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (2/9 10/7)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (2/9 -10/7)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (-1/11 10/7)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (-1/11 -10/7)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (1/11 10/7)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (1/11 -10/7)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (0 10/7)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (0 -10/7)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (1/3 10/7)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (1/3 -10/7)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (-1/3 10/7)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (-1/3 -10/7)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (2/3 10/7)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (2/3 -10/7)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (-2/3 10/7)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (-2/3 -10/7)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (76/63 10/7)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (76/63 -10/7)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (-76/63 10/7)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (-76/63 -10/7)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (103/77 10/7)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (103/77 -10/7)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (-103/77 10/7)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (-103/77 -10/7)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (10/7 10/7)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (10/7 -10/7)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (-10/7 10/7)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (-10/7 -10/7)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (37/21 10/7)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (37/21 -10/7)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (-37/21 10/7)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (-37/21 -10/7)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (44/21 10/7)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (44/21 -10/7)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (-44/21 10/7)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (-44/21 -10/7)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (166/63 10/7)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (166/63 -10/7)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (-166/63 10/7)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (-166/63 -10/7)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (213/77 10/7)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (213/77 -10/7)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (-213/77 10/7)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (-213/77 -10/7)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (20/7 10/7)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (20/7 -10/7)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (-20/7 10/7)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (-20/7 -10/7)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (67/21 10/7)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (67/21 -10/7)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (-67/21 10/7)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (-67/21 -10/7)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (74/21 10/7)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (74/21 -10/7)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (-74/21 10/7)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (-74/21 -10/7)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (436/63 10/7)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (436/63 -10/7)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (-436/63 10/7)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (-436/63 -10/7)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (543/77 10/7)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (543/77 -10/7)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (-543/77 10/7)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (-543/77 -10/7)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (50/7 10/7)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (50/7 -10/7)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (-50/7 10/7)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (-50/7 -10/7)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (157/21 10/7)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (157/21 -10/7)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (-157/21 10/7)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (-157/21 -10/7)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (164/21 10/7)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (164/21 -10/7)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (-164/21 10/7)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (-164/21 -10/7)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (31/63 10/7)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (31/63 -10/7)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (-31/63 10/7)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (-31/63 -10/7)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (48/77 10/7)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (48/77 -10/7)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (-48/77 10/7)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (-48/77 -10/7)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (5/7 10/7)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (5/7 -10/7)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (-5/7 10/7)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (-5/7 -10/7)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (22/21 10/7)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (22/21 -10/7)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (-22/21 10/7)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (-22/21 -10/7)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (29/21 10/7)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (29/21 -10/7)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (-29/21 10/7)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (-29/21 -10/7)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (121/63 10/7)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (121/63 -10/7)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (-121/63 10/7)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (-121/63 -10/7)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (158/77 10/7)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (158/77 -10/7)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (-158/77 10/7)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (-158/77 -10/7)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (15/7 10/7)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (15/7 -10/7)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (-15/7 10/7)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (-15/7 -10/7)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (52/21 10/7)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (52/21 -10/7)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (-52/21 10/7)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (-52/21 -10/7)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (59/21 10/7)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (59/21 -10/7)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (-59/21 10/7)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (-59/21 -10/7)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (211/63 10/7)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (211/63 -10/7)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (-211/63 10/7)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (-211/63 -10/7)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (268/77 10/7)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (268/77 -10/7)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (-268/77 10/7)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (-268/77 -10/7)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (25/7 10/7)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (25/7 -10/7)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (-25/7 10/7)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (-25/7 -10/7)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (82/21 10/7)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (82/21 -10/7)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (-82/21 10/7)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (-82/21 -10/7)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (89/21 10/7)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (89/21 -10/7)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (-89/21 10/7)
PASS: numbers.test: Number-theoretic division: ceiling/: fractions: (-89/21 -10/7)
PASS: numbers.test: Number-theoretic division: ceiling/: mixed types: (25 10)
PASS: numbers.test: Number-theoretic division: ceiling/: mixed types: (25 -10)
PASS: numbers.test: Number-theoretic division: ceiling/: mixed types: (-25 10)
PASS: numbers.test: Number-theoretic division: ceiling/: mixed types: (-25 -10)
PASS: numbers.test: Number-theoretic division: ceiling/: mixed types: (15000000000 10)
PASS: numbers.test: Number-theoretic division: ceiling/: mixed types: (15000000000 -10)
PASS: numbers.test: Number-theoretic division: ceiling/: mixed types: (-15000000000 10)
PASS: numbers.test: Number-theoretic division: ceiling/: mixed types: (-15000000000 -10)
PASS: numbers.test: Number-theoretic division: ceiling/: mixed types: (130.0 10)
PASS: numbers.test: Number-theoretic division: ceiling/: mixed types: (130.0 -10)
PASS: numbers.test: Number-theoretic division: ceiling/: mixed types: (-130.0 10)
PASS: numbers.test: Number-theoretic division: ceiling/: mixed types: (-130.0 -10)
PASS: numbers.test: Number-theoretic division: ceiling/: mixed types: (15/7 10)
PASS: numbers.test: Number-theoretic division: ceiling/: mixed types: (15/7 -10)
PASS: numbers.test: Number-theoretic division: ceiling/: mixed types: (-15/7 10)
PASS: numbers.test: Number-theoretic division: ceiling/: mixed types: (-15/7 -10)
PASS: numbers.test: Number-theoretic division: ceiling/: mixed types: (0 10)
PASS: numbers.test: Number-theoretic division: ceiling/: mixed types: (0 -10)
PASS: numbers.test: Number-theoretic division: ceiling/: mixed types: (0.0 10)
PASS: numbers.test: Number-theoretic division: ceiling/: mixed types: (0.0 -10)
PASS: numbers.test: Number-theoretic division: ceiling/: mixed types: (-0.0 10)
PASS: numbers.test: Number-theoretic division: ceiling/: mixed types: (-0.0 -10)
PASS: numbers.test: Number-theoretic division: ceiling/: mixed types: (+inf.0 10)
PASS: numbers.test: Number-theoretic division: ceiling/: mixed types: (+inf.0 -10)
PASS: numbers.test: Number-theoretic division: ceiling/: mixed types: (-inf.0 10)
PASS: numbers.test: Number-theoretic division: ceiling/: mixed types: (-inf.0 -10)
PASS: numbers.test: Number-theoretic division: ceiling/: mixed types: (-inf.0 10)
PASS: numbers.test: Number-theoretic division: ceiling/: mixed types: (-inf.0 -10)
PASS: numbers.test: Number-theoretic division: ceiling/: mixed types: (+inf.0 10)
PASS: numbers.test: Number-theoretic division: ceiling/: mixed types: (+inf.0 -10)
PASS: numbers.test: Number-theoretic division: ceiling/: mixed types: (+nan.0 10)
PASS: numbers.test: Number-theoretic division: ceiling/: mixed types: (+nan.0 -10)
PASS: numbers.test: Number-theoretic division: ceiling/: mixed types: (+nan.0 10)
PASS: numbers.test: Number-theoretic division: ceiling/: mixed types: (+nan.0 -10)
PASS: numbers.test: Number-theoretic division: ceiling/: mixed types: (25 10000000000)
PASS: numbers.test: Number-theoretic division: ceiling/: mixed types: (25 -10000000000)
PASS: numbers.test: Number-theoretic division: ceiling/: mixed types: (-25 10000000000)
PASS: numbers.test: Number-theoretic division: ceiling/: mixed types: (-25 -10000000000)
PASS: numbers.test: Number-theoretic division: ceiling/: mixed types: (15000000000 10000000000)
PASS: numbers.test: Number-theoretic division: ceiling/: mixed types: (15000000000 -10000000000)
PASS: numbers.test: Number-theoretic division: ceiling/: mixed types: (-15000000000 10000000000)
PASS: numbers.test: Number-theoretic division: ceiling/: mixed types: (-15000000000 -10000000000)
PASS: numbers.test: Number-theoretic division: ceiling/: mixed types: (130.0 10000000000)
PASS: numbers.test: Number-theoretic division: ceiling/: mixed types: (130.0 -10000000000)
PASS: numbers.test: Number-theoretic division: ceiling/: mixed types: (-130.0 10000000000)
PASS: numbers.test: Number-theoretic division: ceiling/: mixed types: (-130.0 -10000000000)
PASS: numbers.test: Number-theoretic division: ceiling/: mixed types: (15/7 10000000000)
PASS: numbers.test: Number-theoretic division: ceiling/: mixed types: (15/7 -10000000000)
PASS: numbers.test: Number-theoretic division: ceiling/: mixed types: (-15/7 10000000000)
PASS: numbers.test: Number-theoretic division: ceiling/: mixed types: (-15/7 -10000000000)
PASS: numbers.test: Number-theoretic division: ceiling/: mixed types: (0 10000000000)
PASS: numbers.test: Number-theoretic division: ceiling/: mixed types: (0 -10000000000)
PASS: numbers.test: Number-theoretic division: ceiling/: mixed types: (0.0 10000000000)
PASS: numbers.test: Number-theoretic division: ceiling/: mixed types: (0.0 -10000000000)
PASS: numbers.test: Number-theoretic division: ceiling/: mixed types: (-0.0 10000000000)
PASS: numbers.test: Number-theoretic division: ceiling/: mixed types: (-0.0 -10000000000)
PASS: numbers.test: Number-theoretic division: ceiling/: mixed types: (+inf.0 10000000000)
PASS: numbers.test: Number-theoretic division: ceiling/: mixed types: (+inf.0 -10000000000)
PASS: numbers.test: Number-theoretic division: ceiling/: mixed types: (-inf.0 10000000000)
PASS: numbers.test: Number-theoretic division: ceiling/: mixed types: (-inf.0 -10000000000)
PASS: numbers.test: Number-theoretic division: ceiling/: mixed types: (-inf.0 10000000000)
PASS: numbers.test: Number-theoretic division: ceiling/: mixed types: (-inf.0 -10000000000)
PASS: numbers.test: Number-theoretic division: ceiling/: mixed types: (+inf.0 10000000000)
PASS: numbers.test: Number-theoretic division: ceiling/: mixed types: (+inf.0 -10000000000)
PASS: numbers.test: Number-theoretic division: ceiling/: mixed types: (+nan.0 10000000000)
PASS: numbers.test: Number-theoretic division: ceiling/: mixed types: (+nan.0 -10000000000)
PASS: numbers.test: Number-theoretic division: ceiling/: mixed types: (+nan.0 10000000000)
PASS: numbers.test: Number-theoretic division: ceiling/: mixed types: (+nan.0 -10000000000)
PASS: numbers.test: Number-theoretic division: ceiling/: mixed types: (25 12.0)
PASS: numbers.test: Number-theoretic division: ceiling/: mixed types: (25 -12.0)
PASS: numbers.test: Number-theoretic division: ceiling/: mixed types: (-25 12.0)
PASS: numbers.test: Number-theoretic division: ceiling/: mixed types: (-25 -12.0)
PASS: numbers.test: Number-theoretic division: ceiling/: mixed types: (15000000000 12.0)
PASS: numbers.test: Number-theoretic division: ceiling/: mixed types: (15000000000 -12.0)
PASS: numbers.test: Number-theoretic division: ceiling/: mixed types: (-15000000000 12.0)
PASS: numbers.test: Number-theoretic division: ceiling/: mixed types: (-15000000000 -12.0)
PASS: numbers.test: Number-theoretic division: ceiling/: mixed types: (130.0 12.0)
PASS: numbers.test: Number-theoretic division: ceiling/: mixed types: (130.0 -12.0)
PASS: numbers.test: Number-theoretic division: ceiling/: mixed types: (-130.0 12.0)
PASS: numbers.test: Number-theoretic division: ceiling/: mixed types: (-130.0 -12.0)
PASS: numbers.test: Number-theoretic division: ceiling/: mixed types: (15/7 12.0)
PASS: numbers.test: Number-theoretic division: ceiling/: mixed types: (15/7 -12.0)
PASS: numbers.test: Number-theoretic division: ceiling/: mixed types: (-15/7 12.0)
PASS: numbers.test: Number-theoretic division: ceiling/: mixed types: (-15/7 -12.0)
PASS: numbers.test: Number-theoretic division: ceiling/: mixed types: (0 12.0)
PASS: numbers.test: Number-theoretic division: ceiling/: mixed types: (0 -12.0)
PASS: numbers.test: Number-theoretic division: ceiling/: mixed types: (0.0 12.0)
PASS: numbers.test: Number-theoretic division: ceiling/: mixed types: (0.0 -12.0)
PASS: numbers.test: Number-theoretic division: ceiling/: mixed types: (-0.0 12.0)
PASS: numbers.test: Number-theoretic division: ceiling/: mixed types: (-0.0 -12.0)
PASS: numbers.test: Number-theoretic division: ceiling/: mixed types: (+inf.0 12.0)
PASS: numbers.test: Number-theoretic division: ceiling/: mixed types: (+inf.0 -12.0)
PASS: numbers.test: Number-theoretic division: ceiling/: mixed types: (-inf.0 12.0)
PASS: numbers.test: Number-theoretic division: ceiling/: mixed types: (-inf.0 -12.0)
PASS: numbers.test: Number-theoretic division: ceiling/: mixed types: (-inf.0 12.0)
PASS: numbers.test: Number-theoretic division: ceiling/: mixed types: (-inf.0 -12.0)
PASS: numbers.test: Number-theoretic division: ceiling/: mixed types: (+inf.0 12.0)
PASS: numbers.test: Number-theoretic division: ceiling/: mixed types: (+inf.0 -12.0)
PASS: numbers.test: Number-theoretic division: ceiling/: mixed types: (+nan.0 12.0)
PASS: numbers.test: Number-theoretic division: ceiling/: mixed types: (+nan.0 -12.0)
PASS: numbers.test: Number-theoretic division: ceiling/: mixed types: (+nan.0 12.0)
PASS: numbers.test: Number-theoretic division: ceiling/: mixed types: (+nan.0 -12.0)
PASS: numbers.test: Number-theoretic division: ceiling/: mixed types: (25 10/7)
PASS: numbers.test: Number-theoretic division: ceiling/: mixed types: (25 -10/7)
PASS: numbers.test: Number-theoretic division: ceiling/: mixed types: (-25 10/7)
PASS: numbers.test: Number-theoretic division: ceiling/: mixed types: (-25 -10/7)
PASS: numbers.test: Number-theoretic division: ceiling/: mixed types: (15000000000 10/7)
PASS: numbers.test: Number-theoretic division: ceiling/: mixed types: (15000000000 -10/7)
PASS: numbers.test: Number-theoretic division: ceiling/: mixed types: (-15000000000 10/7)
PASS: numbers.test: Number-theoretic division: ceiling/: mixed types: (-15000000000 -10/7)
PASS: numbers.test: Number-theoretic division: ceiling/: mixed types: (130.0 10/7)
PASS: numbers.test: Number-theoretic division: ceiling/: mixed types: (130.0 -10/7)
PASS: numbers.test: Number-theoretic division: ceiling/: mixed types: (-130.0 10/7)
PASS: numbers.test: Number-theoretic division: ceiling/: mixed types: (-130.0 -10/7)
PASS: numbers.test: Number-theoretic division: ceiling/: mixed types: (15/7 10/7)
PASS: numbers.test: Number-theoretic division: ceiling/: mixed types: (15/7 -10/7)
PASS: numbers.test: Number-theoretic division: ceiling/: mixed types: (-15/7 10/7)
PASS: numbers.test: Number-theoretic division: ceiling/: mixed types: (-15/7 -10/7)
PASS: numbers.test: Number-theoretic division: ceiling/: mixed types: (0 10/7)
PASS: numbers.test: Number-theoretic division: ceiling/: mixed types: (0 -10/7)
PASS: numbers.test: Number-theoretic division: ceiling/: mixed types: (0.0 10/7)
PASS: numbers.test: Number-theoretic division: ceiling/: mixed types: (0.0 -10/7)
PASS: numbers.test: Number-theoretic division: ceiling/: mixed types: (-0.0 10/7)
PASS: numbers.test: Number-theoretic division: ceiling/: mixed types: (-0.0 -10/7)
PASS: numbers.test: Number-theoretic division: ceiling/: mixed types: (+inf.0 10/7)
PASS: numbers.test: Number-theoretic division: ceiling/: mixed types: (+inf.0 -10/7)
PASS: numbers.test: Number-theoretic division: ceiling/: mixed types: (-inf.0 10/7)
PASS: numbers.test: Number-theoretic division: ceiling/: mixed types: (-inf.0 -10/7)
PASS: numbers.test: Number-theoretic division: ceiling/: mixed types: (-inf.0 10/7)
PASS: numbers.test: Number-theoretic division: ceiling/: mixed types: (-inf.0 -10/7)
PASS: numbers.test: Number-theoretic division: ceiling/: mixed types: (+inf.0 10/7)
PASS: numbers.test: Number-theoretic division: ceiling/: mixed types: (+inf.0 -10/7)
PASS: numbers.test: Number-theoretic division: ceiling/: mixed types: (+nan.0 10/7)
PASS: numbers.test: Number-theoretic division: ceiling/: mixed types: (+nan.0 -10/7)
PASS: numbers.test: Number-theoretic division: ceiling/: mixed types: (+nan.0 10/7)
PASS: numbers.test: Number-theoretic division: ceiling/: mixed types: (+nan.0 -10/7)
PASS: numbers.test: Number-theoretic division: ceiling/: mixed types: (25 +inf.0)
PASS: numbers.test: Number-theoretic division: ceiling/: mixed types: (25 -inf.0)
PASS: numbers.test: Number-theoretic division: ceiling/: mixed types: (-25 +inf.0)
PASS: numbers.test: Number-theoretic division: ceiling/: mixed types: (-25 -inf.0)
PASS: numbers.test: Number-theoretic division: ceiling/: mixed types: (15000000000 +inf.0)
PASS: numbers.test: Number-theoretic division: ceiling/: mixed types: (15000000000 -inf.0)
PASS: numbers.test: Number-theoretic division: ceiling/: mixed types: (-15000000000 +inf.0)
PASS: numbers.test: Number-theoretic division: ceiling/: mixed types: (-15000000000 -inf.0)
PASS: numbers.test: Number-theoretic division: ceiling/: mixed types: (130.0 +inf.0)
PASS: numbers.test: Number-theoretic division: ceiling/: mixed types: (130.0 -inf.0)
PASS: numbers.test: Number-theoretic division: ceiling/: mixed types: (-130.0 +inf.0)
PASS: numbers.test: Number-theoretic division: ceiling/: mixed types: (-130.0 -inf.0)
PASS: numbers.test: Number-theoretic division: ceiling/: mixed types: (15/7 +inf.0)
PASS: numbers.test: Number-theoretic division: ceiling/: mixed types: (15/7 -inf.0)
PASS: numbers.test: Number-theoretic division: ceiling/: mixed types: (-15/7 +inf.0)
PASS: numbers.test: Number-theoretic division: ceiling/: mixed types: (-15/7 -inf.0)
PASS: numbers.test: Number-theoretic division: ceiling/: mixed types: (0 +inf.0)
PASS: numbers.test: Number-theoretic division: ceiling/: mixed types: (0 -inf.0)
PASS: numbers.test: Number-theoretic division: ceiling/: mixed types: (0.0 +inf.0)
PASS: numbers.test: Number-theoretic division: ceiling/: mixed types: (0.0 -inf.0)
PASS: numbers.test: Number-theoretic division: ceiling/: mixed types: (-0.0 +inf.0)
PASS: numbers.test: Number-theoretic division: ceiling/: mixed types: (-0.0 -inf.0)
PASS: numbers.test: Number-theoretic division: ceiling/: mixed types: (+inf.0 +inf.0)
PASS: numbers.test: Number-theoretic division: ceiling/: mixed types: (+inf.0 -inf.0)
PASS: numbers.test: Number-theoretic division: ceiling/: mixed types: (-inf.0 +inf.0)
PASS: numbers.test: Number-theoretic division: ceiling/: mixed types: (-inf.0 -inf.0)
PASS: numbers.test: Number-theoretic division: ceiling/: mixed types: (-inf.0 +inf.0)
PASS: numbers.test: Number-theoretic division: ceiling/: mixed types: (-inf.0 -inf.0)
PASS: numbers.test: Number-theoretic division: ceiling/: mixed types: (+inf.0 +inf.0)
PASS: numbers.test: Number-theoretic division: ceiling/: mixed types: (+inf.0 -inf.0)
PASS: numbers.test: Number-theoretic division: ceiling/: mixed types: (+nan.0 +inf.0)
PASS: numbers.test: Number-theoretic division: ceiling/: mixed types: (+nan.0 -inf.0)
PASS: numbers.test: Number-theoretic division: ceiling/: mixed types: (+nan.0 +inf.0)
PASS: numbers.test: Number-theoretic division: ceiling/: mixed types: (+nan.0 -inf.0)
PASS: numbers.test: Number-theoretic division: ceiling/: mixed types: (25 -inf.0)
PASS: numbers.test: Number-theoretic division: ceiling/: mixed types: (25 +inf.0)
PASS: numbers.test: Number-theoretic division: ceiling/: mixed types: (-25 -inf.0)
PASS: numbers.test: Number-theoretic division: ceiling/: mixed types: (-25 +inf.0)
PASS: numbers.test: Number-theoretic division: ceiling/: mixed types: (15000000000 -inf.0)
PASS: numbers.test: Number-theoretic division: ceiling/: mixed types: (15000000000 +inf.0)
PASS: numbers.test: Number-theoretic division: ceiling/: mixed types: (-15000000000 -inf.0)
PASS: numbers.test: Number-theoretic division: ceiling/: mixed types: (-15000000000 +inf.0)
PASS: numbers.test: Number-theoretic division: ceiling/: mixed types: (130.0 -inf.0)
PASS: numbers.test: Number-theoretic division: ceiling/: mixed types: (130.0 +inf.0)
PASS: numbers.test: Number-theoretic division: ceiling/: mixed types: (-130.0 -inf.0)
PASS: numbers.test: Number-theoretic division: ceiling/: mixed types: (-130.0 +inf.0)
PASS: numbers.test: Number-theoretic division: ceiling/: mixed types: (15/7 -inf.0)
PASS: numbers.test: Number-theoretic division: ceiling/: mixed types: (15/7 +inf.0)
PASS: numbers.test: Number-theoretic division: ceiling/: mixed types: (-15/7 -inf.0)
PASS: numbers.test: Number-theoretic division: ceiling/: mixed types: (-15/7 +inf.0)
PASS: numbers.test: Number-theoretic division: ceiling/: mixed types: (0 -inf.0)
PASS: numbers.test: Number-theoretic division: ceiling/: mixed types: (0 +inf.0)
PASS: numbers.test: Number-theoretic division: ceiling/: mixed types: (0.0 -inf.0)
PASS: numbers.test: Number-theoretic division: ceiling/: mixed types: (0.0 +inf.0)
PASS: numbers.test: Number-theoretic division: ceiling/: mixed types: (-0.0 -inf.0)
PASS: numbers.test: Number-theoretic division: ceiling/: mixed types: (-0.0 +inf.0)
PASS: numbers.test: Number-theoretic division: ceiling/: mixed types: (+inf.0 -inf.0)
PASS: numbers.test: Number-theoretic division: ceiling/: mixed types: (+inf.0 +inf.0)
PASS: numbers.test: Number-theoretic division: ceiling/: mixed types: (-inf.0 -inf.0)
PASS: numbers.test: Number-theoretic division: ceiling/: mixed types: (-inf.0 +inf.0)
PASS: numbers.test: Number-theoretic division: ceiling/: mixed types: (-inf.0 -inf.0)
PASS: numbers.test: Number-theoretic division: ceiling/: mixed types: (-inf.0 +inf.0)
PASS: numbers.test: Number-theoretic division: ceiling/: mixed types: (+inf.0 -inf.0)
PASS: numbers.test: Number-theoretic division: ceiling/: mixed types: (+inf.0 +inf.0)
PASS: numbers.test: Number-theoretic division: ceiling/: mixed types: (+nan.0 -inf.0)
PASS: numbers.test: Number-theoretic division: ceiling/: mixed types: (+nan.0 +inf.0)
PASS: numbers.test: Number-theoretic division: ceiling/: mixed types: (+nan.0 -inf.0)
PASS: numbers.test: Number-theoretic division: ceiling/: mixed types: (+nan.0 +inf.0)
PASS: numbers.test: Number-theoretic division: ceiling/: mixed types: (25 +nan.0)
PASS: numbers.test: Number-theoretic division: ceiling/: mixed types: (25 +nan.0)
PASS: numbers.test: Number-theoretic division: ceiling/: mixed types: (-25 +nan.0)
PASS: numbers.test: Number-theoretic division: ceiling/: mixed types: (-25 +nan.0)
PASS: numbers.test: Number-theoretic division: ceiling/: mixed types: (15000000000 +nan.0)
PASS: numbers.test: Number-theoretic division: ceiling/: mixed types: (15000000000 +nan.0)
PASS: numbers.test: Number-theoretic division: ceiling/: mixed types: (-15000000000 +nan.0)
PASS: numbers.test: Number-theoretic division: ceiling/: mixed types: (-15000000000 +nan.0)
PASS: numbers.test: Number-theoretic division: ceiling/: mixed types: (130.0 +nan.0)
PASS: numbers.test: Number-theoretic division: ceiling/: mixed types: (130.0 +nan.0)
PASS: numbers.test: Number-theoretic division: ceiling/: mixed types: (-130.0 +nan.0)
PASS: numbers.test: Number-theoretic division: ceiling/: mixed types: (-130.0 +nan.0)
PASS: numbers.test: Number-theoretic division: ceiling/: mixed types: (15/7 +nan.0)
PASS: numbers.test: Number-theoretic division: ceiling/: mixed types: (15/7 +nan.0)
PASS: numbers.test: Number-theoretic division: ceiling/: mixed types: (-15/7 +nan.0)
PASS: numbers.test: Number-theoretic division: ceiling/: mixed types: (-15/7 +nan.0)
PASS: numbers.test: Number-theoretic division: ceiling/: mixed types: (0 +nan.0)
PASS: numbers.test: Number-theoretic division: ceiling/: mixed types: (0 +nan.0)
PASS: numbers.test: Number-theoretic division: ceiling/: mixed types: (0.0 +nan.0)
PASS: numbers.test: Number-theoretic division: ceiling/: mixed types: (0.0 +nan.0)
PASS: numbers.test: Number-theoretic division: ceiling/: mixed types: (-0.0 +nan.0)
PASS: numbers.test: Number-theoretic division: ceiling/: mixed types: (-0.0 +nan.0)
PASS: numbers.test: Number-theoretic division: ceiling/: mixed types: (+inf.0 +nan.0)
PASS: numbers.test: Number-theoretic division: ceiling/: mixed types: (+inf.0 +nan.0)
PASS: numbers.test: Number-theoretic division: ceiling/: mixed types: (-inf.0 +nan.0)
PASS: numbers.test: Number-theoretic division: ceiling/: mixed types: (-inf.0 +nan.0)
PASS: numbers.test: Number-theoretic division: ceiling/: mixed types: (-inf.0 +nan.0)
PASS: numbers.test: Number-theoretic division: ceiling/: mixed types: (-inf.0 +nan.0)
PASS: numbers.test: Number-theoretic division: ceiling/: mixed types: (+inf.0 +nan.0)
PASS: numbers.test: Number-theoretic division: ceiling/: mixed types: (+inf.0 +nan.0)
PASS: numbers.test: Number-theoretic division: ceiling/: mixed types: (+nan.0 +nan.0)
PASS: numbers.test: Number-theoretic division: ceiling/: mixed types: (+nan.0 +nan.0)
PASS: numbers.test: Number-theoretic division: ceiling/: mixed types: (+nan.0 +nan.0)
PASS: numbers.test: Number-theoretic division: ceiling/: mixed types: (+nan.0 +nan.0)
PASS: numbers.test: Number-theoretic division: ceiling/: divide by zero: (15 0)
PASS: numbers.test: Number-theoretic division: ceiling/: divide by zero: (15 0)
PASS: numbers.test: Number-theoretic division: ceiling/: divide by zero: (15 0)
PASS: numbers.test: Number-theoretic division: ceiling/: divide by zero: (15000000000 0)
PASS: numbers.test: Number-theoretic division: ceiling/: divide by zero: (15000000000 0)
PASS: numbers.test: Number-theoretic division: ceiling/: divide by zero: (15000000000 0)
PASS: numbers.test: Number-theoretic division: ceiling/: divide by zero: (18.0 0)
PASS: numbers.test: Number-theoretic division: ceiling/: divide by zero: (18.0 0)
PASS: numbers.test: Number-theoretic division: ceiling/: divide by zero: (18.0 0)
PASS: numbers.test: Number-theoretic division: ceiling/: divide by zero: (33/7 0)
PASS: numbers.test: Number-theoretic division: ceiling/: divide by zero: (33/7 0)
PASS: numbers.test: Number-theoretic division: ceiling/: divide by zero: (33/7 0)
PASS: numbers.test: Number-theoretic division: ceiling/: divide by zero: (0 0)
PASS: numbers.test: Number-theoretic division: ceiling/: divide by zero: (0 0)
PASS: numbers.test: Number-theoretic division: ceiling/: divide by zero: (0 0)
PASS: numbers.test: Number-theoretic division: ceiling/: divide by zero: (0.0 0)
PASS: numbers.test: Number-theoretic division: ceiling/: divide by zero: (0.0 0)
PASS: numbers.test: Number-theoretic division: ceiling/: divide by zero: (0.0 0)
PASS: numbers.test: Number-theoretic division: ceiling/: divide by zero: (-0.0 0)
PASS: numbers.test: Number-theoretic division: ceiling/: divide by zero: (-0.0 0)
PASS: numbers.test: Number-theoretic division: ceiling/: divide by zero: (-0.0 0)
PASS: numbers.test: Number-theoretic division: ceiling/: divide by zero: (+inf.0 0)
PASS: numbers.test: Number-theoretic division: ceiling/: divide by zero: (+inf.0 0)
PASS: numbers.test: Number-theoretic division: ceiling/: divide by zero: (+inf.0 0)
PASS: numbers.test: Number-theoretic division: ceiling/: divide by zero: (-inf.0 0)
PASS: numbers.test: Number-theoretic division: ceiling/: divide by zero: (-inf.0 0)
PASS: numbers.test: Number-theoretic division: ceiling/: divide by zero: (-inf.0 0)
PASS: numbers.test: Number-theoretic division: ceiling/: divide by zero: (+nan.0 0)
PASS: numbers.test: Number-theoretic division: ceiling/: divide by zero: (+nan.0 0)
PASS: numbers.test: Number-theoretic division: ceiling/: divide by zero: (+nan.0 0)
PASS: numbers.test: Number-theoretic division: ceiling/: divide by zero: (15 0.0)
PASS: numbers.test: Number-theoretic division: ceiling/: divide by zero: (15 0.0)
PASS: numbers.test: Number-theoretic division: ceiling/: divide by zero: (15 0.0)
PASS: numbers.test: Number-theoretic division: ceiling/: divide by zero: (15000000000 0.0)
PASS: numbers.test: Number-theoretic division: ceiling/: divide by zero: (15000000000 0.0)
PASS: numbers.test: Number-theoretic division: ceiling/: divide by zero: (15000000000 0.0)
PASS: numbers.test: Number-theoretic division: ceiling/: divide by zero: (18.0 0.0)
PASS: numbers.test: Number-theoretic division: ceiling/: divide by zero: (18.0 0.0)
PASS: numbers.test: Number-theoretic division: ceiling/: divide by zero: (18.0 0.0)
PASS: numbers.test: Number-theoretic division: ceiling/: divide by zero: (33/7 0.0)
PASS: numbers.test: Number-theoretic division: ceiling/: divide by zero: (33/7 0.0)
PASS: numbers.test: Number-theoretic division: ceiling/: divide by zero: (33/7 0.0)
PASS: numbers.test: Number-theoretic division: ceiling/: divide by zero: (0 0.0)
PASS: numbers.test: Number-theoretic division: ceiling/: divide by zero: (0 0.0)
PASS: numbers.test: Number-theoretic division: ceiling/: divide by zero: (0 0.0)
PASS: numbers.test: Number-theoretic division: ceiling/: divide by zero: (0.0 0.0)
PASS: numbers.test: Number-theoretic division: ceiling/: divide by zero: (0.0 0.0)
PASS: numbers.test: Number-theoretic division: ceiling/: divide by zero: (0.0 0.0)
PASS: numbers.test: Number-theoretic division: ceiling/: divide by zero: (-0.0 0.0)
PASS: numbers.test: Number-theoretic division: ceiling/: divide by zero: (-0.0 0.0)
PASS: numbers.test: Number-theoretic division: ceiling/: divide by zero: (-0.0 0.0)
PASS: numbers.test: Number-theoretic division: ceiling/: divide by zero: (+inf.0 0.0)
PASS: numbers.test: Number-theoretic division: ceiling/: divide by zero: (+inf.0 0.0)
PASS: numbers.test: Number-theoretic division: ceiling/: divide by zero: (+inf.0 0.0)
PASS: numbers.test: Number-theoretic division: ceiling/: divide by zero: (-inf.0 0.0)
PASS: numbers.test: Number-theoretic division: ceiling/: divide by zero: (-inf.0 0.0)
PASS: numbers.test: Number-theoretic division: ceiling/: divide by zero: (-inf.0 0.0)
PASS: numbers.test: Number-theoretic division: ceiling/: divide by zero: (+nan.0 0.0)
PASS: numbers.test: Number-theoretic division: ceiling/: divide by zero: (+nan.0 0.0)
PASS: numbers.test: Number-theoretic division: ceiling/: divide by zero: (+nan.0 0.0)
PASS: numbers.test: Number-theoretic division: ceiling/: divide by zero: (15 -0.0)
PASS: numbers.test: Number-theoretic division: ceiling/: divide by zero: (15 -0.0)
PASS: numbers.test: Number-theoretic division: ceiling/: divide by zero: (15 -0.0)
PASS: numbers.test: Number-theoretic division: ceiling/: divide by zero: (15000000000 -0.0)
PASS: numbers.test: Number-theoretic division: ceiling/: divide by zero: (15000000000 -0.0)
PASS: numbers.test: Number-theoretic division: ceiling/: divide by zero: (15000000000 -0.0)
PASS: numbers.test: Number-theoretic division: ceiling/: divide by zero: (18.0 -0.0)
PASS: numbers.test: Number-theoretic division: ceiling/: divide by zero: (18.0 -0.0)
PASS: numbers.test: Number-theoretic division: ceiling/: divide by zero: (18.0 -0.0)
PASS: numbers.test: Number-theoretic division: ceiling/: divide by zero: (33/7 -0.0)
PASS: numbers.test: Number-theoretic division: ceiling/: divide by zero: (33/7 -0.0)
PASS: numbers.test: Number-theoretic division: ceiling/: divide by zero: (33/7 -0.0)
PASS: numbers.test: Number-theoretic division: ceiling/: divide by zero: (0 -0.0)
PASS: numbers.test: Number-theoretic division: ceiling/: divide by zero: (0 -0.0)
PASS: numbers.test: Number-theoretic division: ceiling/: divide by zero: (0 -0.0)
PASS: numbers.test: Number-theoretic division: ceiling/: divide by zero: (0.0 -0.0)
PASS: numbers.test: Number-theoretic division: ceiling/: divide by zero: (0.0 -0.0)
PASS: numbers.test: Number-theoretic division: ceiling/: divide by zero: (0.0 -0.0)
PASS: numbers.test: Number-theoretic division: ceiling/: divide by zero: (-0.0 -0.0)
PASS: numbers.test: Number-theoretic division: ceiling/: divide by zero: (-0.0 -0.0)
PASS: numbers.test: Number-theoretic division: ceiling/: divide by zero: (-0.0 -0.0)
PASS: numbers.test: Number-theoretic division: ceiling/: divide by zero: (+inf.0 -0.0)
PASS: numbers.test: Number-theoretic division: ceiling/: divide by zero: (+inf.0 -0.0)
PASS: numbers.test: Number-theoretic division: ceiling/: divide by zero: (+inf.0 -0.0)
PASS: numbers.test: Number-theoretic division: ceiling/: divide by zero: (-inf.0 -0.0)
PASS: numbers.test: Number-theoretic division: ceiling/: divide by zero: (-inf.0 -0.0)
PASS: numbers.test: Number-theoretic division: ceiling/: divide by zero: (-inf.0 -0.0)
PASS: numbers.test: Number-theoretic division: ceiling/: divide by zero: (+nan.0 -0.0)
PASS: numbers.test: Number-theoretic division: ceiling/: divide by zero: (+nan.0 -0.0)
PASS: numbers.test: Number-theoretic division: ceiling/: divide by zero: (+nan.0 -0.0)
PASS: numbers.test: Number-theoretic division: truncate/: documented?
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: fixnum-min / -1: (-536870912 -1)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-2 1)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-2 -1)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (2 1)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (2 -1)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-1 1)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-1 -1)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (1 1)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (1 -1)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (0 1)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (0 -1)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (1 1)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (1 -1)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-1 1)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-1 -1)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (2 1)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (2 -1)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-2 1)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-2 -1)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (3 1)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (3 -1)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-3 1)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-3 -1)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (4 1)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (4 -1)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-4 1)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-4 -1)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (5 1)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (5 -1)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-5 1)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-5 -1)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (7 1)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (7 -1)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-7 1)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-7 -1)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (10 1)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (10 -1)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-10 1)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-10 -1)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (12 1)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (12 -1)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-12 1)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-12 -1)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (15 1)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (15 -1)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-15 1)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-15 -1)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (16 1)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (16 -1)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-16 1)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-16 -1)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (19 1)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (19 -1)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-19 1)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-19 -1)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (20 1)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (20 -1)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-20 1)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-20 -1)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-1 1)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-1 -1)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (1 1)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (1 -1)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (0 1)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (0 -1)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (1 1)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (1 -1)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-1 1)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-1 -1)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (2 1)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (2 -1)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-2 1)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-2 -1)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (3 1)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (3 -1)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-3 1)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-3 -1)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (4 1)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (4 -1)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-4 1)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-4 -1)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (5 1)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (5 -1)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-5 1)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-5 -1)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (6 1)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (6 -1)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-6 1)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-6 -1)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (8 1)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (8 -1)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-8 1)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-8 -1)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (11 1)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (11 -1)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-11 1)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-11 -1)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (13 1)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (13 -1)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-13 1)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-13 -1)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (16 1)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (16 -1)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-16 1)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-16 -1)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (17 1)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (17 -1)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-17 1)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-17 -1)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (20 1)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (20 -1)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-20 1)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-20 -1)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (21 1)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (21 -1)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-21 1)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-21 -1)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (0 1)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (0 -1)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (1 1)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (1 -1)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-1 1)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-1 -1)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (2 1)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (2 -1)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-2 1)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-2 -1)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (3 1)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (3 -1)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-3 1)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-3 -1)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (4 1)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (4 -1)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-4 1)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-4 -1)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (5 1)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (5 -1)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-5 1)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-5 -1)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (6 1)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (6 -1)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-6 1)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-6 -1)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (7 1)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (7 -1)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-7 1)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-7 -1)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (9 1)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (9 -1)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-9 1)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-9 -1)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (12 1)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (12 -1)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-12 1)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-12 -1)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (14 1)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (14 -1)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-14 1)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-14 -1)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (17 1)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (17 -1)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-17 1)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-17 -1)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (18 1)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (18 -1)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-18 1)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-18 -1)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (21 1)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (21 -1)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-21 1)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-21 -1)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (22 1)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (22 -1)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-22 1)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-22 -1)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (3 1)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (3 -1)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-3 1)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-3 -1)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (4 1)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (4 -1)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-4 1)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-4 -1)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (5 1)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (5 -1)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-5 1)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-5 -1)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (6 1)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (6 -1)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-6 1)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-6 -1)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (7 1)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (7 -1)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-7 1)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-7 -1)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (8 1)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (8 -1)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-8 1)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-8 -1)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (9 1)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (9 -1)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-9 1)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-9 -1)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (10 1)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (10 -1)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-10 1)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-10 -1)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (12 1)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (12 -1)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-12 1)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-12 -1)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (15 1)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (15 -1)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-15 1)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-15 -1)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (17 1)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (17 -1)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-17 1)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-17 -1)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (20 1)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (20 -1)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-20 1)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-20 -1)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (21 1)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (21 -1)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-21 1)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-21 -1)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (24 1)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (24 -1)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-24 1)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-24 -1)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (25 1)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (25 -1)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-25 1)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-25 -1)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (8 1)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (8 -1)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-8 1)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-8 -1)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (9 1)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (9 -1)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-9 1)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-9 -1)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (10 1)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (10 -1)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-10 1)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-10 -1)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (11 1)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (11 -1)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-11 1)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-11 -1)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (12 1)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (12 -1)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-12 1)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-12 -1)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (13 1)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (13 -1)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-13 1)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-13 -1)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (14 1)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (14 -1)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-14 1)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-14 -1)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (15 1)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (15 -1)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-15 1)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-15 -1)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (17 1)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (17 -1)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-17 1)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-17 -1)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (20 1)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (20 -1)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-20 1)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-20 -1)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (22 1)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (22 -1)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-22 1)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-22 -1)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (25 1)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (25 -1)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-25 1)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-25 -1)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (26 1)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (26 -1)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-26 1)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-26 -1)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (29 1)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (29 -1)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-29 1)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-29 -1)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (30 1)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (30 -1)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-30 1)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-30 -1)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-2 2)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-2 -2)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (2 2)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (2 -2)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-1 2)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-1 -2)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (1 2)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (1 -2)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (0 2)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (0 -2)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (1 2)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (1 -2)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-1 2)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-1 -2)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (2 2)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (2 -2)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-2 2)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-2 -2)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (3 2)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (3 -2)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-3 2)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-3 -2)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (4 2)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (4 -2)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-4 2)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-4 -2)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (5 2)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (5 -2)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-5 2)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-5 -2)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (7 2)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (7 -2)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-7 2)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-7 -2)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (10 2)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (10 -2)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-10 2)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-10 -2)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (12 2)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (12 -2)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-12 2)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-12 -2)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (15 2)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (15 -2)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-15 2)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-15 -2)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (16 2)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (16 -2)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-16 2)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-16 -2)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (19 2)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (19 -2)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-19 2)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-19 -2)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (20 2)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (20 -2)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-20 2)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-20 -2)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (0 2)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (0 -2)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (1 2)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (1 -2)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-1 2)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-1 -2)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (2 2)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (2 -2)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-2 2)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-2 -2)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (3 2)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (3 -2)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-3 2)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-3 -2)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (4 2)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (4 -2)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-4 2)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-4 -2)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (5 2)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (5 -2)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-5 2)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-5 -2)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (6 2)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (6 -2)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-6 2)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-6 -2)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (7 2)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (7 -2)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-7 2)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-7 -2)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (9 2)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (9 -2)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-9 2)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-9 -2)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (12 2)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (12 -2)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-12 2)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-12 -2)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (14 2)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (14 -2)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-14 2)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-14 -2)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (17 2)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (17 -2)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-17 2)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-17 -2)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (18 2)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (18 -2)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-18 2)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-18 -2)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (21 2)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (21 -2)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-21 2)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-21 -2)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (22 2)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (22 -2)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-22 2)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-22 -2)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (2 2)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (2 -2)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-2 2)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-2 -2)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (3 2)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (3 -2)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-3 2)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-3 -2)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (4 2)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (4 -2)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-4 2)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-4 -2)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (5 2)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (5 -2)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-5 2)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-5 -2)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (6 2)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (6 -2)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-6 2)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-6 -2)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (7 2)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (7 -2)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-7 2)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-7 -2)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (8 2)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (8 -2)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-8 2)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-8 -2)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (9 2)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (9 -2)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-9 2)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-9 -2)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (11 2)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (11 -2)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-11 2)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-11 -2)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (14 2)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (14 -2)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-14 2)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-14 -2)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (16 2)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (16 -2)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-16 2)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-16 -2)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (19 2)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (19 -2)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-19 2)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-19 -2)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (20 2)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (20 -2)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-20 2)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-20 -2)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (23 2)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (23 -2)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-23 2)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-23 -2)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (24 2)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (24 -2)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-24 2)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-24 -2)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (8 2)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (8 -2)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-8 2)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-8 -2)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (9 2)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (9 -2)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-9 2)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-9 -2)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (10 2)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (10 -2)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-10 2)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-10 -2)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (11 2)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (11 -2)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-11 2)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-11 -2)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (12 2)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (12 -2)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-12 2)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-12 -2)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (13 2)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (13 -2)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-13 2)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-13 -2)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (14 2)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (14 -2)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-14 2)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-14 -2)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (15 2)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (15 -2)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-15 2)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-15 -2)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (17 2)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (17 -2)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-17 2)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-17 -2)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (20 2)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (20 -2)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-20 2)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-20 -2)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (22 2)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (22 -2)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-22 2)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-22 -2)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (25 2)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (25 -2)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-25 2)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-25 -2)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (26 2)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (26 -2)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-26 2)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-26 -2)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (29 2)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (29 -2)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-29 2)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-29 -2)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (30 2)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (30 -2)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-30 2)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-30 -2)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (18 2)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (18 -2)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-18 2)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-18 -2)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (19 2)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (19 -2)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-19 2)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-19 -2)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (20 2)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (20 -2)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-20 2)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-20 -2)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (21 2)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (21 -2)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-21 2)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-21 -2)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (22 2)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (22 -2)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-22 2)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-22 -2)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (23 2)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (23 -2)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-23 2)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-23 -2)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (24 2)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (24 -2)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-24 2)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-24 -2)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (25 2)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (25 -2)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-25 2)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-25 -2)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (27 2)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (27 -2)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-27 2)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-27 -2)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (30 2)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (30 -2)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-30 2)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-30 -2)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (32 2)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (32 -2)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-32 2)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-32 -2)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (35 2)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (35 -2)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-35 2)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-35 -2)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (36 2)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (36 -2)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-36 2)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-36 -2)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (39 2)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (39 -2)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-39 2)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-39 -2)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (40 2)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (40 -2)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-40 2)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-40 -2)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-2 5)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-2 -5)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (2 5)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (2 -5)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-1 5)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-1 -5)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (1 5)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (1 -5)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (0 5)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (0 -5)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (1 5)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (1 -5)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-1 5)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-1 -5)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (2 5)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (2 -5)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-2 5)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-2 -5)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (3 5)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (3 -5)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-3 5)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-3 -5)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (4 5)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (4 -5)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-4 5)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-4 -5)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (5 5)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (5 -5)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-5 5)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-5 -5)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (7 5)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (7 -5)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-7 5)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-7 -5)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (10 5)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (10 -5)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-10 5)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-10 -5)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (12 5)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (12 -5)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-12 5)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-12 -5)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (15 5)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (15 -5)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-15 5)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-15 -5)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (16 5)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (16 -5)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-16 5)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-16 -5)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (19 5)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (19 -5)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-19 5)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-19 -5)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (20 5)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (20 -5)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-20 5)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-20 -5)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (3 5)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (3 -5)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-3 5)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-3 -5)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (4 5)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (4 -5)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-4 5)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-4 -5)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (5 5)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (5 -5)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-5 5)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-5 -5)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (6 5)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (6 -5)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-6 5)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-6 -5)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (7 5)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (7 -5)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-7 5)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-7 -5)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (8 5)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (8 -5)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-8 5)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-8 -5)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (9 5)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (9 -5)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-9 5)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-9 -5)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (10 5)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (10 -5)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-10 5)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-10 -5)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (12 5)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (12 -5)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-12 5)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-12 -5)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (15 5)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (15 -5)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-15 5)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-15 -5)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (17 5)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (17 -5)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-17 5)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-17 -5)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (20 5)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (20 -5)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-20 5)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-20 -5)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (21 5)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (21 -5)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-21 5)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-21 -5)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (24 5)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (24 -5)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-24 5)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-24 -5)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (25 5)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (25 -5)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-25 5)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-25 -5)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (8 5)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (8 -5)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-8 5)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-8 -5)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (9 5)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (9 -5)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-9 5)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-9 -5)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (10 5)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (10 -5)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-10 5)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-10 -5)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (11 5)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (11 -5)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-11 5)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-11 -5)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (12 5)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (12 -5)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-12 5)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-12 -5)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (13 5)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (13 -5)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-13 5)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-13 -5)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (14 5)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (14 -5)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-14 5)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-14 -5)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (15 5)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (15 -5)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-15 5)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-15 -5)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (17 5)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (17 -5)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-17 5)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-17 -5)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (20 5)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (20 -5)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-20 5)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-20 -5)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (22 5)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (22 -5)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-22 5)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-22 -5)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (25 5)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (25 -5)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-25 5)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-25 -5)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (26 5)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (26 -5)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-26 5)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-26 -5)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (29 5)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (29 -5)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-29 5)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-29 -5)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (30 5)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (30 -5)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-30 5)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-30 -5)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (23 5)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (23 -5)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-23 5)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-23 -5)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (24 5)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (24 -5)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-24 5)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-24 -5)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (25 5)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (25 -5)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-25 5)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-25 -5)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (26 5)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (26 -5)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-26 5)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-26 -5)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (27 5)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (27 -5)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-27 5)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-27 -5)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (28 5)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (28 -5)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-28 5)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-28 -5)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (29 5)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (29 -5)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-29 5)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-29 -5)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (30 5)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (30 -5)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-30 5)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-30 -5)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (32 5)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (32 -5)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-32 5)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-32 -5)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (35 5)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (35 -5)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-35 5)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-35 -5)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (37 5)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (37 -5)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-37 5)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-37 -5)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (40 5)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (40 -5)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-40 5)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-40 -5)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (41 5)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (41 -5)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-41 5)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-41 -5)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (44 5)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (44 -5)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-44 5)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-44 -5)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (45 5)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (45 -5)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-45 5)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-45 -5)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (48 5)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (48 -5)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-48 5)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-48 -5)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (49 5)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (49 -5)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-49 5)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-49 -5)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (50 5)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (50 -5)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-50 5)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-50 -5)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (51 5)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (51 -5)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-51 5)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-51 -5)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (52 5)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (52 -5)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-52 5)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-52 -5)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (53 5)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (53 -5)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-53 5)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-53 -5)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (54 5)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (54 -5)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-54 5)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-54 -5)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (55 5)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (55 -5)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-55 5)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-55 -5)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (57 5)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (57 -5)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-57 5)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-57 -5)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (60 5)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (60 -5)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-60 5)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-60 -5)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (62 5)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (62 -5)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-62 5)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-62 -5)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (65 5)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (65 -5)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-65 5)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-65 -5)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (66 5)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (66 -5)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-66 5)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-66 -5)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (69 5)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (69 -5)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-69 5)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-69 -5)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (70 5)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (70 -5)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-70 5)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-70 -5)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-2 10)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-2 -10)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (2 10)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (2 -10)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-1 10)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-1 -10)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (1 10)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (1 -10)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (0 10)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (0 -10)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (1 10)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (1 -10)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-1 10)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-1 -10)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (2 10)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (2 -10)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-2 10)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-2 -10)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (3 10)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (3 -10)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-3 10)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-3 -10)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (4 10)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (4 -10)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-4 10)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-4 -10)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (5 10)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (5 -10)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-5 10)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-5 -10)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (7 10)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (7 -10)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-7 10)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-7 -10)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (10 10)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (10 -10)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-10 10)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-10 -10)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (12 10)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (12 -10)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-12 10)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-12 -10)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (15 10)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (15 -10)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-15 10)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-15 -10)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (16 10)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (16 -10)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-16 10)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-16 -10)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (19 10)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (19 -10)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-19 10)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-19 -10)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (20 10)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (20 -10)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-20 10)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-20 -10)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (8 10)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (8 -10)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-8 10)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-8 -10)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (9 10)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (9 -10)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-9 10)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-9 -10)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (10 10)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (10 -10)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-10 10)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-10 -10)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (11 10)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (11 -10)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-11 10)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-11 -10)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (12 10)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (12 -10)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-12 10)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-12 -10)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (13 10)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (13 -10)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-13 10)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-13 -10)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (14 10)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (14 -10)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-14 10)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-14 -10)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (15 10)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (15 -10)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-15 10)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-15 -10)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (17 10)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (17 -10)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-17 10)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-17 -10)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (20 10)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (20 -10)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-20 10)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-20 -10)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (22 10)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (22 -10)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-22 10)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-22 -10)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (25 10)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (25 -10)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-25 10)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-25 -10)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (26 10)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (26 -10)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-26 10)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-26 -10)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (29 10)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (29 -10)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-29 10)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-29 -10)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (30 10)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (30 -10)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-30 10)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-30 -10)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (18 10)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (18 -10)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-18 10)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-18 -10)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (19 10)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (19 -10)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-19 10)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-19 -10)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (20 10)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (20 -10)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-20 10)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-20 -10)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (21 10)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (21 -10)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-21 10)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-21 -10)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (22 10)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (22 -10)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-22 10)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-22 -10)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (23 10)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (23 -10)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-23 10)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-23 -10)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (24 10)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (24 -10)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-24 10)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-24 -10)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (25 10)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (25 -10)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-25 10)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-25 -10)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (27 10)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (27 -10)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-27 10)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-27 -10)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (30 10)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (30 -10)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-30 10)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-30 -10)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (32 10)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (32 -10)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-32 10)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-32 -10)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (35 10)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (35 -10)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-35 10)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-35 -10)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (36 10)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (36 -10)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-36 10)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-36 -10)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (39 10)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (39 -10)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-39 10)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-39 -10)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (40 10)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (40 -10)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-40 10)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-40 -10)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (48 10)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (48 -10)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-48 10)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-48 -10)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (49 10)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (49 -10)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-49 10)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-49 -10)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (50 10)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (50 -10)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-50 10)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-50 -10)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (51 10)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (51 -10)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-51 10)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-51 -10)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (52 10)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (52 -10)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-52 10)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-52 -10)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (53 10)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (53 -10)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-53 10)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-53 -10)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (54 10)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (54 -10)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-54 10)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-54 -10)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (55 10)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (55 -10)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-55 10)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-55 -10)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (57 10)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (57 -10)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-57 10)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-57 -10)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (60 10)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (60 -10)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-60 10)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-60 -10)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (62 10)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (62 -10)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-62 10)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-62 -10)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (65 10)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (65 -10)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-65 10)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-65 -10)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (66 10)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (66 -10)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-66 10)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-66 -10)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (69 10)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (69 -10)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-69 10)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-69 -10)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (70 10)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (70 -10)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-70 10)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-70 -10)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (98 10)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (98 -10)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-98 10)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-98 -10)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (99 10)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (99 -10)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-99 10)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-99 -10)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (100 10)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (100 -10)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-100 10)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-100 -10)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (101 10)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (101 -10)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-101 10)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-101 -10)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (102 10)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (102 -10)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-102 10)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-102 -10)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (103 10)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (103 -10)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-103 10)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-103 -10)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (104 10)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (104 -10)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-104 10)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-104 -10)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (105 10)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (105 -10)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-105 10)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-105 -10)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (107 10)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (107 -10)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-107 10)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-107 -10)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (110 10)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (110 -10)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-110 10)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-110 -10)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (112 10)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (112 -10)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-112 10)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-112 -10)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (115 10)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (115 -10)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-115 10)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-115 -10)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (116 10)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (116 -10)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-116 10)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-116 -10)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (119 10)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (119 -10)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-119 10)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-119 -10)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (120 10)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (120 -10)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-120 10)
PASS: numbers.test: Number-theoretic division: truncate/: inum / inum: (-120 -10)
PASS: numbers.test: Number-theoretic division: truncate/: inum / big: fixnum-min / -fixnum-min: (-536870912 536870912)
PASS: numbers.test: Number-theoretic division: truncate/: inum / big: fixnum-max / (2*fixnum-max): (536870911 1073741822)
PASS: numbers.test: Number-theoretic division: truncate/: inum / big: fixnum-max / (2*fixnum-max): (536870911 -1073741822)
PASS: numbers.test: Number-theoretic division: truncate/: inum / big: fixnum-max / (2*fixnum-max): (-536870911 1073741822)
PASS: numbers.test: Number-theoretic division: truncate/: inum / big: fixnum-max / (2*fixnum-max): (-536870911 -1073741822)
PASS: numbers.test: Number-theoretic division: truncate/: inum / big: (0 536870912)
PASS: numbers.test: Number-theoretic division: truncate/: inum / big: (0 536870912)
PASS: numbers.test: Number-theoretic division: truncate/: inum / big: (0 -536870913)
PASS: numbers.test: Number-theoretic division: truncate/: inum / big: (0 -536870913)
PASS: numbers.test: Number-theoretic division: truncate/: inum / big: (1 536870912)
PASS: numbers.test: Number-theoretic division: truncate/: inum / big: (-1 536870912)
PASS: numbers.test: Number-theoretic division: truncate/: inum / big: (1 -536870913)
PASS: numbers.test: Number-theoretic division: truncate/: inum / big: (-1 -536870913)
PASS: numbers.test: Number-theoretic division: truncate/: inum / big: (2 536870912)
PASS: numbers.test: Number-theoretic division: truncate/: inum / big: (-2 536870912)
PASS: numbers.test: Number-theoretic division: truncate/: inum / big: (2 -536870913)
PASS: numbers.test: Number-theoretic division: truncate/: inum / big: (-2 -536870913)
PASS: numbers.test: Number-theoretic division: truncate/: inum / big: (10 536870912)
PASS: numbers.test: Number-theoretic division: truncate/: inum / big: (-10 536870912)
PASS: numbers.test: Number-theoretic division: truncate/: inum / big: (10 -536870913)
PASS: numbers.test: Number-theoretic division: truncate/: inum / big: (-10 -536870913)
PASS: numbers.test: Number-theoretic division: truncate/: inum / big: (536870910 536870912)
PASS: numbers.test: Number-theoretic division: truncate/: inum / big: (-536870910 536870912)
PASS: numbers.test: Number-theoretic division: truncate/: inum / big: (536870910 -536870913)
PASS: numbers.test: Number-theoretic division: truncate/: inum / big: (-536870910 -536870913)
PASS: numbers.test: Number-theoretic division: truncate/: inum / big: (536870911 536870912)
PASS: numbers.test: Number-theoretic division: truncate/: inum / big: (-536870911 536870912)
PASS: numbers.test: Number-theoretic division: truncate/: inum / big: (536870911 -536870913)
PASS: numbers.test: Number-theoretic division: truncate/: inum / big: (-536870911 -536870913)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: -fixnum-min / fixnum-min: (536870912 -536870912)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (9999999998 1)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (9999999998 -1)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (-9999999998 1)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (-9999999998 -1)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (9999999999 1)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (9999999999 -1)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (-9999999999 1)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (-9999999999 -1)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (10000000000 1)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (10000000000 -1)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (-10000000000 1)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (-10000000000 -1)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (10000000001 1)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (10000000001 -1)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (-10000000001 1)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (-10000000001 -1)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (10000000002 1)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (10000000002 -1)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (-10000000002 1)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (-10000000002 -1)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (19999999998 1)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (19999999998 -1)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (-19999999998 1)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (-19999999998 -1)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (19999999999 1)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (19999999999 -1)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (-19999999999 1)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (-19999999999 -1)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (20000000000 1)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (20000000000 -1)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (-20000000000 1)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (-20000000000 -1)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (20000000001 1)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (20000000001 -1)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (-20000000001 1)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (-20000000001 -1)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (20000000002 1)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (20000000002 -1)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (-20000000002 1)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (-20000000002 -1)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (49999999998 1)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (49999999998 -1)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (-49999999998 1)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (-49999999998 -1)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (49999999999 1)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (49999999999 -1)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (-49999999999 1)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (-49999999999 -1)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (50000000000 1)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (50000000000 -1)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (-50000000000 1)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (-50000000000 -1)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (50000000001 1)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (50000000001 -1)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (-50000000001 1)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (-50000000001 -1)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (50000000002 1)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (50000000002 -1)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (-50000000002 1)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (-50000000002 -1)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (39999999998 4)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (39999999998 -4)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (-39999999998 4)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (-39999999998 -4)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (39999999999 4)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (39999999999 -4)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (-39999999999 4)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (-39999999999 -4)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (40000000000 4)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (40000000000 -4)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (-40000000000 4)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (-40000000000 -4)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (40000000001 4)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (40000000001 -4)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (-40000000001 4)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (-40000000001 -4)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (40000000002 4)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (40000000002 -4)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (-40000000002 4)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (-40000000002 -4)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (79999999998 4)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (79999999998 -4)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (-79999999998 4)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (-79999999998 -4)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (79999999999 4)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (79999999999 -4)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (-79999999999 4)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (-79999999999 -4)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (80000000000 4)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (80000000000 -4)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (-80000000000 4)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (-80000000000 -4)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (80000000001 4)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (80000000001 -4)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (-80000000001 4)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (-80000000001 -4)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (80000000002 4)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (80000000002 -4)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (-80000000002 4)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (-80000000002 -4)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (199999999998 4)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (199999999998 -4)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (-199999999998 4)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (-199999999998 -4)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (199999999999 4)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (199999999999 -4)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (-199999999999 4)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (-199999999999 -4)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (200000000000 4)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (200000000000 -4)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (-200000000000 4)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (-200000000000 -4)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (200000000001 4)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (200000000001 -4)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (-200000000001 4)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (-200000000001 -4)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (200000000002 4)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (200000000002 -4)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (-200000000002 4)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (-200000000002 -4)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (19999999998 4)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (19999999998 -4)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (-19999999998 4)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (-19999999998 -4)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (19999999999 4)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (19999999999 -4)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (-19999999999 4)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (-19999999999 -4)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (20000000000 4)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (20000000000 -4)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (-20000000000 4)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (-20000000000 -4)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (20000000001 4)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (20000000001 -4)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (-20000000001 4)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (-20000000001 -4)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (20000000002 4)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (20000000002 -4)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (-20000000002 4)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (-20000000002 -4)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (59999999998 4)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (59999999998 -4)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (-59999999998 4)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (-59999999998 -4)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (59999999999 4)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (59999999999 -4)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (-59999999999 4)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (-59999999999 -4)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (60000000000 4)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (60000000000 -4)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (-60000000000 4)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (-60000000000 -4)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (60000000001 4)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (60000000001 -4)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (-60000000001 4)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (-60000000001 -4)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (60000000002 4)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (60000000002 -4)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (-60000000002 4)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (-60000000002 -4)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (99999999998 4)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (99999999998 -4)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (-99999999998 4)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (-99999999998 -4)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (99999999999 4)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (99999999999 -4)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (-99999999999 4)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (-99999999999 -4)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (100000000000 4)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (100000000000 -4)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (-100000000000 4)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (-100000000000 -4)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (100000000001 4)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (100000000001 -4)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (-100000000001 4)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (-100000000001 -4)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (100000000002 4)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (100000000002 -4)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (-100000000002 4)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (-100000000002 -4)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (49999999998 5)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (49999999998 -5)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (-49999999998 5)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (-49999999998 -5)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (49999999999 5)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (49999999999 -5)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (-49999999999 5)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (-49999999999 -5)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (50000000000 5)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (50000000000 -5)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (-50000000000 5)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (-50000000000 -5)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (50000000001 5)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (50000000001 -5)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (-50000000001 5)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (-50000000001 -5)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (50000000002 5)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (50000000002 -5)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (-50000000002 5)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (-50000000002 -5)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (99999999998 5)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (99999999998 -5)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (-99999999998 5)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (-99999999998 -5)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (99999999999 5)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (99999999999 -5)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (-99999999999 5)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (-99999999999 -5)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (100000000000 5)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (100000000000 -5)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (-100000000000 5)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (-100000000000 -5)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (100000000001 5)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (100000000001 -5)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (-100000000001 5)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (-100000000001 -5)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (100000000002 5)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (100000000002 -5)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (-100000000002 5)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (-100000000002 -5)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (249999999998 5)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (249999999998 -5)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (-249999999998 5)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (-249999999998 -5)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (249999999999 5)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (249999999999 -5)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (-249999999999 5)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (-249999999999 -5)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (250000000000 5)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (250000000000 -5)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (-250000000000 5)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (-250000000000 -5)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (250000000001 5)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (250000000001 -5)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (-250000000001 5)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (-250000000001 -5)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (250000000002 5)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (250000000002 -5)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (-250000000002 5)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (-250000000002 -5)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (99999999998 10)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (99999999998 -10)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (-99999999998 10)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (-99999999998 -10)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (99999999999 10)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (99999999999 -10)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (-99999999999 10)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (-99999999999 -10)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (100000000000 10)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (100000000000 -10)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (-100000000000 10)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (-100000000000 -10)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (100000000001 10)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (100000000001 -10)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (-100000000001 10)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (-100000000001 -10)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (100000000002 10)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (100000000002 -10)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (-100000000002 10)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (-100000000002 -10)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (199999999998 10)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (199999999998 -10)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (-199999999998 10)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (-199999999998 -10)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (199999999999 10)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (199999999999 -10)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (-199999999999 10)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (-199999999999 -10)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (200000000000 10)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (200000000000 -10)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (-200000000000 10)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (-200000000000 -10)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (200000000001 10)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (200000000001 -10)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (-200000000001 10)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (-200000000001 -10)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (200000000002 10)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (200000000002 -10)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (-200000000002 10)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (-200000000002 -10)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (499999999998 10)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (499999999998 -10)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (-499999999998 10)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (-499999999998 -10)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (499999999999 10)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (499999999999 -10)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (-499999999999 10)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (-499999999999 -10)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (500000000000 10)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (500000000000 -10)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (-500000000000 10)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (-500000000000 -10)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (500000000001 10)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (500000000001 -10)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (-500000000001 10)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (-500000000001 -10)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (500000000002 10)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (500000000002 -10)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (-500000000002 10)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (-500000000002 -10)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (49999999998 10)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (49999999998 -10)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (-49999999998 10)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (-49999999998 -10)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (49999999999 10)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (49999999999 -10)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (-49999999999 10)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (-49999999999 -10)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (50000000000 10)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (50000000000 -10)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (-50000000000 10)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (-50000000000 -10)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (50000000001 10)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (50000000001 -10)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (-50000000001 10)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (-50000000001 -10)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (50000000002 10)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (50000000002 -10)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (-50000000002 10)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (-50000000002 -10)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (149999999998 10)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (149999999998 -10)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (-149999999998 10)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (-149999999998 -10)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (149999999999 10)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (149999999999 -10)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (-149999999999 10)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (-149999999999 -10)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (150000000000 10)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (150000000000 -10)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (-150000000000 10)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (-150000000000 -10)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (150000000001 10)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (150000000001 -10)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (-150000000001 10)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (-150000000001 -10)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (150000000002 10)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (150000000002 -10)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (-150000000002 10)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (-150000000002 -10)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (249999999998 10)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (249999999998 -10)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (-249999999998 10)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (-249999999998 -10)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (249999999999 10)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (249999999999 -10)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (-249999999999 10)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (-249999999999 -10)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (250000000000 10)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (250000000000 -10)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (-250000000000 10)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (-250000000000 -10)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (250000000001 10)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (250000000001 -10)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (-250000000001 10)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (-250000000001 -10)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (250000000002 10)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (250000000002 -10)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (-250000000002 10)
PASS: numbers.test: Number-theoretic division: truncate/: big / inum: (-250000000002 -10)
PASS: numbers.test: Number-theoretic division: truncate/: big / big: (9999999998 10000000000)
PASS: numbers.test: Number-theoretic division: truncate/: big / big: (9999999998 -10000000000)
PASS: numbers.test: Number-theoretic division: truncate/: big / big: (-9999999998 10000000000)
PASS: numbers.test: Number-theoretic division: truncate/: big / big: (-9999999998 -10000000000)
PASS: numbers.test: Number-theoretic division: truncate/: big / big: (9999999999 10000000000)
PASS: numbers.test: Number-theoretic division: truncate/: big / big: (9999999999 -10000000000)
PASS: numbers.test: Number-theoretic division: truncate/: big / big: (-9999999999 10000000000)
PASS: numbers.test: Number-theoretic division: truncate/: big / big: (-9999999999 -10000000000)
PASS: numbers.test: Number-theoretic division: truncate/: big / big: (10000000000 10000000000)
PASS: numbers.test: Number-theoretic division: truncate/: big / big: (10000000000 -10000000000)
PASS: numbers.test: Number-theoretic division: truncate/: big / big: (-10000000000 10000000000)
PASS: numbers.test: Number-theoretic division: truncate/: big / big: (-10000000000 -10000000000)
PASS: numbers.test: Number-theoretic division: truncate/: big / big: (10000000001 10000000000)
PASS: numbers.test: Number-theoretic division: truncate/: big / big: (10000000001 -10000000000)
PASS: numbers.test: Number-theoretic division: truncate/: big / big: (-10000000001 10000000000)
PASS: numbers.test: Number-theoretic division: truncate/: big / big: (-10000000001 -10000000000)
PASS: numbers.test: Number-theoretic division: truncate/: big / big: (10000000002 10000000000)
PASS: numbers.test: Number-theoretic division: truncate/: big / big: (10000000002 -10000000000)
PASS: numbers.test: Number-theoretic division: truncate/: big / big: (-10000000002 10000000000)
PASS: numbers.test: Number-theoretic division: truncate/: big / big: (-10000000002 -10000000000)
PASS: numbers.test: Number-theoretic division: truncate/: big / big: (19999999998 10000000000)
PASS: numbers.test: Number-theoretic division: truncate/: big / big: (19999999998 -10000000000)
PASS: numbers.test: Number-theoretic division: truncate/: big / big: (-19999999998 10000000000)
PASS: numbers.test: Number-theoretic division: truncate/: big / big: (-19999999998 -10000000000)
PASS: numbers.test: Number-theoretic division: truncate/: big / big: (19999999999 10000000000)
PASS: numbers.test: Number-theoretic division: truncate/: big / big: (19999999999 -10000000000)
PASS: numbers.test: Number-theoretic division: truncate/: big / big: (-19999999999 10000000000)
PASS: numbers.test: Number-theoretic division: truncate/: big / big: (-19999999999 -10000000000)
PASS: numbers.test: Number-theoretic division: truncate/: big / big: (20000000000 10000000000)
PASS: numbers.test: Number-theoretic division: truncate/: big / big: (20000000000 -10000000000)
PASS: numbers.test: Number-theoretic division: truncate/: big / big: (-20000000000 10000000000)
PASS: numbers.test: Number-theoretic division: truncate/: big / big: (-20000000000 -10000000000)
PASS: numbers.test: Number-theoretic division: truncate/: big / big: (20000000001 10000000000)
PASS: numbers.test: Number-theoretic division: truncate/: big / big: (20000000001 -10000000000)
PASS: numbers.test: Number-theoretic division: truncate/: big / big: (-20000000001 10000000000)
PASS: numbers.test: Number-theoretic division: truncate/: big / big: (-20000000001 -10000000000)
PASS: numbers.test: Number-theoretic division: truncate/: big / big: (20000000002 10000000000)
PASS: numbers.test: Number-theoretic division: truncate/: big / big: (20000000002 -10000000000)
PASS: numbers.test: Number-theoretic division: truncate/: big / big: (-20000000002 10000000000)
PASS: numbers.test: Number-theoretic division: truncate/: big / big: (-20000000002 -10000000000)
PASS: numbers.test: Number-theoretic division: truncate/: big / big: (49999999998 10000000000)
PASS: numbers.test: Number-theoretic division: truncate/: big / big: (49999999998 -10000000000)
PASS: numbers.test: Number-theoretic division: truncate/: big / big: (-49999999998 10000000000)
PASS: numbers.test: Number-theoretic division: truncate/: big / big: (-49999999998 -10000000000)
PASS: numbers.test: Number-theoretic division: truncate/: big / big: (49999999999 10000000000)
PASS: numbers.test: Number-theoretic division: truncate/: big / big: (49999999999 -10000000000)
PASS: numbers.test: Number-theoretic division: truncate/: big / big: (-49999999999 10000000000)
PASS: numbers.test: Number-theoretic division: truncate/: big / big: (-49999999999 -10000000000)
PASS: numbers.test: Number-theoretic division: truncate/: big / big: (50000000000 10000000000)
PASS: numbers.test: Number-theoretic division: truncate/: big / big: (50000000000 -10000000000)
PASS: numbers.test: Number-theoretic division: truncate/: big / big: (-50000000000 10000000000)
PASS: numbers.test: Number-theoretic division: truncate/: big / big: (-50000000000 -10000000000)
PASS: numbers.test: Number-theoretic division: truncate/: big / big: (50000000001 10000000000)
PASS: numbers.test: Number-theoretic division: truncate/: big / big: (50000000001 -10000000000)
PASS: numbers.test: Number-theoretic division: truncate/: big / big: (-50000000001 10000000000)
PASS: numbers.test: Number-theoretic division: truncate/: big / big: (-50000000001 -10000000000)
PASS: numbers.test: Number-theoretic division: truncate/: big / big: (50000000002 10000000000)
PASS: numbers.test: Number-theoretic division: truncate/: big / big: (50000000002 -10000000000)
PASS: numbers.test: Number-theoretic division: truncate/: big / big: (-50000000002 10000000000)
PASS: numbers.test: Number-theoretic division: truncate/: big / big: (-50000000002 -10000000000)
PASS: numbers.test: Number-theoretic division: truncate/: big / big: (4999999998 10000000000)
PASS: numbers.test: Number-theoretic division: truncate/: big / big: (4999999998 -10000000000)
PASS: numbers.test: Number-theoretic division: truncate/: big / big: (-4999999998 10000000000)
PASS: numbers.test: Number-theoretic division: truncate/: big / big: (-4999999998 -10000000000)
PASS: numbers.test: Number-theoretic division: truncate/: big / big: (4999999999 10000000000)
PASS: numbers.test: Number-theoretic division: truncate/: big / big: (4999999999 -10000000000)
PASS: numbers.test: Number-theoretic division: truncate/: big / big: (-4999999999 10000000000)
PASS: numbers.test: Number-theoretic division: truncate/: big / big: (-4999999999 -10000000000)
PASS: numbers.test: Number-theoretic division: truncate/: big / big: (5000000000 10000000000)
PASS: numbers.test: Number-theoretic division: truncate/: big / big: (5000000000 -10000000000)
PASS: numbers.test: Number-theoretic division: truncate/: big / big: (-5000000000 10000000000)
PASS: numbers.test: Number-theoretic division: truncate/: big / big: (-5000000000 -10000000000)
PASS: numbers.test: Number-theoretic division: truncate/: big / big: (5000000001 10000000000)
PASS: numbers.test: Number-theoretic division: truncate/: big / big: (5000000001 -10000000000)
PASS: numbers.test: Number-theoretic division: truncate/: big / big: (-5000000001 10000000000)
PASS: numbers.test: Number-theoretic division: truncate/: big / big: (-5000000001 -10000000000)
PASS: numbers.test: Number-theoretic division: truncate/: big / big: (5000000002 10000000000)
PASS: numbers.test: Number-theoretic division: truncate/: big / big: (5000000002 -10000000000)
PASS: numbers.test: Number-theoretic division: truncate/: big / big: (-5000000002 10000000000)
PASS: numbers.test: Number-theoretic division: truncate/: big / big: (-5000000002 -10000000000)
PASS: numbers.test: Number-theoretic division: truncate/: big / big: (14999999998 10000000000)
PASS: numbers.test: Number-theoretic division: truncate/: big / big: (14999999998 -10000000000)
PASS: numbers.test: Number-theoretic division: truncate/: big / big: (-14999999998 10000000000)
PASS: numbers.test: Number-theoretic division: truncate/: big / big: (-14999999998 -10000000000)
PASS: numbers.test: Number-theoretic division: truncate/: big / big: (14999999999 10000000000)
PASS: numbers.test: Number-theoretic division: truncate/: big / big: (14999999999 -10000000000)
PASS: numbers.test: Number-theoretic division: truncate/: big / big: (-14999999999 10000000000)
PASS: numbers.test: Number-theoretic division: truncate/: big / big: (-14999999999 -10000000000)
PASS: numbers.test: Number-theoretic division: truncate/: big / big: (15000000000 10000000000)
PASS: numbers.test: Number-theoretic division: truncate/: big / big: (15000000000 -10000000000)
PASS: numbers.test: Number-theoretic division: truncate/: big / big: (-15000000000 10000000000)
PASS: numbers.test: Number-theoretic division: truncate/: big / big: (-15000000000 -10000000000)
PASS: numbers.test: Number-theoretic division: truncate/: big / big: (15000000001 10000000000)
PASS: numbers.test: Number-theoretic division: truncate/: big / big: (15000000001 -10000000000)
PASS: numbers.test: Number-theoretic division: truncate/: big / big: (-15000000001 10000000000)
PASS: numbers.test: Number-theoretic division: truncate/: big / big: (-15000000001 -10000000000)
PASS: numbers.test: Number-theoretic division: truncate/: big / big: (15000000002 10000000000)
PASS: numbers.test: Number-theoretic division: truncate/: big / big: (15000000002 -10000000000)
PASS: numbers.test: Number-theoretic division: truncate/: big / big: (-15000000002 10000000000)
PASS: numbers.test: Number-theoretic division: truncate/: big / big: (-15000000002 -10000000000)
PASS: numbers.test: Number-theoretic division: truncate/: big / big: (24999999998 10000000000)
PASS: numbers.test: Number-theoretic division: truncate/: big / big: (24999999998 -10000000000)
PASS: numbers.test: Number-theoretic division: truncate/: big / big: (-24999999998 10000000000)
PASS: numbers.test: Number-theoretic division: truncate/: big / big: (-24999999998 -10000000000)
PASS: numbers.test: Number-theoretic division: truncate/: big / big: (24999999999 10000000000)
PASS: numbers.test: Number-theoretic division: truncate/: big / big: (24999999999 -10000000000)
PASS: numbers.test: Number-theoretic division: truncate/: big / big: (-24999999999 10000000000)
PASS: numbers.test: Number-theoretic division: truncate/: big / big: (-24999999999 -10000000000)
PASS: numbers.test: Number-theoretic division: truncate/: big / big: (25000000000 10000000000)
PASS: numbers.test: Number-theoretic division: truncate/: big / big: (25000000000 -10000000000)
PASS: numbers.test: Number-theoretic division: truncate/: big / big: (-25000000000 10000000000)
PASS: numbers.test: Number-theoretic division: truncate/: big / big: (-25000000000 -10000000000)
PASS: numbers.test: Number-theoretic division: truncate/: big / big: (25000000001 10000000000)
PASS: numbers.test: Number-theoretic division: truncate/: big / big: (25000000001 -10000000000)
PASS: numbers.test: Number-theoretic division: truncate/: big / big: (-25000000001 10000000000)
PASS: numbers.test: Number-theoretic division: truncate/: big / big: (-25000000001 -10000000000)
PASS: numbers.test: Number-theoretic division: truncate/: big / big: (25000000002 10000000000)
PASS: numbers.test: Number-theoretic division: truncate/: big / big: (25000000002 -10000000000)
PASS: numbers.test: Number-theoretic division: truncate/: big / big: (-25000000002 10000000000)
PASS: numbers.test: Number-theoretic division: truncate/: big / big: (-25000000002 -10000000000)
PASS: numbers.test: Number-theoretic division: truncate/: big / big: (9999999999 10000000001)
PASS: numbers.test: Number-theoretic division: truncate/: big / big: (9999999999 -10000000001)
PASS: numbers.test: Number-theoretic division: truncate/: big / big: (-9999999999 10000000001)
PASS: numbers.test: Number-theoretic division: truncate/: big / big: (-9999999999 -10000000001)
PASS: numbers.test: Number-theoretic division: truncate/: big / big: (10000000000 10000000001)
PASS: numbers.test: Number-theoretic division: truncate/: big / big: (10000000000 -10000000001)
PASS: numbers.test: Number-theoretic division: truncate/: big / big: (-10000000000 10000000001)
PASS: numbers.test: Number-theoretic division: truncate/: big / big: (-10000000000 -10000000001)
PASS: numbers.test: Number-theoretic division: truncate/: big / big: (10000000001 10000000001)
PASS: numbers.test: Number-theoretic division: truncate/: big / big: (10000000001 -10000000001)
PASS: numbers.test: Number-theoretic division: truncate/: big / big: (-10000000001 10000000001)
PASS: numbers.test: Number-theoretic division: truncate/: big / big: (-10000000001 -10000000001)
PASS: numbers.test: Number-theoretic division: truncate/: big / big: (10000000002 10000000001)
PASS: numbers.test: Number-theoretic division: truncate/: big / big: (10000000002 -10000000001)
PASS: numbers.test: Number-theoretic division: truncate/: big / big: (-10000000002 10000000001)
PASS: numbers.test: Number-theoretic division: truncate/: big / big: (-10000000002 -10000000001)
PASS: numbers.test: Number-theoretic division: truncate/: big / big: (10000000003 10000000001)
PASS: numbers.test: Number-theoretic division: truncate/: big / big: (10000000003 -10000000001)
PASS: numbers.test: Number-theoretic division: truncate/: big / big: (-10000000003 10000000001)
PASS: numbers.test: Number-theoretic division: truncate/: big / big: (-10000000003 -10000000001)
PASS: numbers.test: Number-theoretic division: truncate/: big / big: (20000000000 10000000001)
PASS: numbers.test: Number-theoretic division: truncate/: big / big: (20000000000 -10000000001)
PASS: numbers.test: Number-theoretic division: truncate/: big / big: (-20000000000 10000000001)
PASS: numbers.test: Number-theoretic division: truncate/: big / big: (-20000000000 -10000000001)
PASS: numbers.test: Number-theoretic division: truncate/: big / big: (20000000001 10000000001)
PASS: numbers.test: Number-theoretic division: truncate/: big / big: (20000000001 -10000000001)
PASS: numbers.test: Number-theoretic division: truncate/: big / big: (-20000000001 10000000001)
PASS: numbers.test: Number-theoretic division: truncate/: big / big: (-20000000001 -10000000001)
PASS: numbers.test: Number-theoretic division: truncate/: big / big: (20000000002 10000000001)
PASS: numbers.test: Number-theoretic division: truncate/: big / big: (20000000002 -10000000001)
PASS: numbers.test: Number-theoretic division: truncate/: big / big: (-20000000002 10000000001)
PASS: numbers.test: Number-theoretic division: truncate/: big / big: (-20000000002 -10000000001)
PASS: numbers.test: Number-theoretic division: truncate/: big / big: (20000000003 10000000001)
PASS: numbers.test: Number-theoretic division: truncate/: big / big: (20000000003 -10000000001)
PASS: numbers.test: Number-theoretic division: truncate/: big / big: (-20000000003 10000000001)
PASS: numbers.test: Number-theoretic division: truncate/: big / big: (-20000000003 -10000000001)
PASS: numbers.test: Number-theoretic division: truncate/: big / big: (20000000004 10000000001)
PASS: numbers.test: Number-theoretic division: truncate/: big / big: (20000000004 -10000000001)
PASS: numbers.test: Number-theoretic division: truncate/: big / big: (-20000000004 10000000001)
PASS: numbers.test: Number-theoretic division: truncate/: big / big: (-20000000004 -10000000001)
PASS: numbers.test: Number-theoretic division: truncate/: big / big: (50000000003 10000000001)
PASS: numbers.test: Number-theoretic division: truncate/: big / big: (50000000003 -10000000001)
PASS: numbers.test: Number-theoretic division: truncate/: big / big: (-50000000003 10000000001)
PASS: numbers.test: Number-theoretic division: truncate/: big / big: (-50000000003 -10000000001)
PASS: numbers.test: Number-theoretic division: truncate/: big / big: (50000000004 10000000001)
PASS: numbers.test: Number-theoretic division: truncate/: big / big: (50000000004 -10000000001)
PASS: numbers.test: Number-theoretic division: truncate/: big / big: (-50000000004 10000000001)
PASS: numbers.test: Number-theoretic division: truncate/: big / big: (-50000000004 -10000000001)
PASS: numbers.test: Number-theoretic division: truncate/: big / big: (50000000005 10000000001)
PASS: numbers.test: Number-theoretic division: truncate/: big / big: (50000000005 -10000000001)
PASS: numbers.test: Number-theoretic division: truncate/: big / big: (-50000000005 10000000001)
PASS: numbers.test: Number-theoretic division: truncate/: big / big: (-50000000005 -10000000001)
PASS: numbers.test: Number-theoretic division: truncate/: big / big: (50000000006 10000000001)
PASS: numbers.test: Number-theoretic division: truncate/: big / big: (50000000006 -10000000001)
PASS: numbers.test: Number-theoretic division: truncate/: big / big: (-50000000006 10000000001)
PASS: numbers.test: Number-theoretic division: truncate/: big / big: (-50000000006 -10000000001)
PASS: numbers.test: Number-theoretic division: truncate/: big / big: (50000000007 10000000001)
PASS: numbers.test: Number-theoretic division: truncate/: big / big: (50000000007 -10000000001)
PASS: numbers.test: Number-theoretic division: truncate/: big / big: (-50000000007 10000000001)
PASS: numbers.test: Number-theoretic division: truncate/: big / big: (-50000000007 -10000000001)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (-2.0 0.5)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (-2.0 -0.5)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (2.0 0.5)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (2.0 -0.5)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (-1.0 0.5)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (-1.0 -0.5)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (1.0 0.5)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (1.0 -0.5)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (0.0 0.5)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (0.0 -0.5)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (1.0 0.5)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (1.0 -0.5)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (-1.0 0.5)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (-1.0 -0.5)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (2.0 0.5)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (2.0 -0.5)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (-2.0 0.5)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (-2.0 -0.5)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (-1.5 0.5)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (-1.5 -0.5)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (1.5 0.5)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (1.5 -0.5)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (-0.5 0.5)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (-0.5 -0.5)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (0.5 0.5)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (0.5 -0.5)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (0.5 0.5)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (0.5 -0.5)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (-0.5 0.5)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (-0.5 -0.5)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (1.5 0.5)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (1.5 -0.5)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (-1.5 0.5)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (-1.5 -0.5)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (2.5 0.5)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (2.5 -0.5)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (-2.5 0.5)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (-2.5 -0.5)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (-1.0 0.5)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (-1.0 -0.5)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (1.0 0.5)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (1.0 -0.5)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (0.0 0.5)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (0.0 -0.5)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (1.0 0.5)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (1.0 -0.5)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (-1.0 0.5)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (-1.0 -0.5)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (2.0 0.5)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (2.0 -0.5)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (-2.0 0.5)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (-2.0 -0.5)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (3.0 0.5)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (3.0 -0.5)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (-3.0 0.5)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (-3.0 -0.5)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (0.5 0.5)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (0.5 -0.5)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (-0.5 0.5)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (-0.5 -0.5)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (1.5 0.5)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (1.5 -0.5)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (-1.5 0.5)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (-1.5 -0.5)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (2.5 0.5)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (2.5 -0.5)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (-2.5 0.5)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (-2.5 -0.5)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (3.5 0.5)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (3.5 -0.5)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (-3.5 0.5)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (-3.5 -0.5)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (4.5 0.5)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (4.5 -0.5)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (-4.5 0.5)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (-4.5 -0.5)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (-1.75 0.5)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (-1.75 -0.5)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (1.75 0.5)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (1.75 -0.5)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (-0.75 0.5)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (-0.75 -0.5)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (0.75 0.5)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (0.75 -0.5)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (0.25 0.5)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (0.25 -0.5)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (-0.25 0.5)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (-0.25 -0.5)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (1.25 0.5)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (1.25 -0.5)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (-1.25 0.5)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (-1.25 -0.5)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (2.25 0.5)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (2.25 -0.5)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (-2.25 0.5)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (-2.25 -0.5)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (-1.25 0.5)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (-1.25 -0.5)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (1.25 0.5)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (1.25 -0.5)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (-0.25 0.5)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (-0.25 -0.5)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (0.25 0.5)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (0.25 -0.5)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (0.75 0.5)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (0.75 -0.5)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (-0.75 0.5)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (-0.75 -0.5)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (1.75 0.5)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (1.75 -0.5)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (-1.75 0.5)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (-1.75 -0.5)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (2.75 0.5)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (2.75 -0.5)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (-2.75 0.5)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (-2.75 -0.5)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (-0.75 0.5)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (-0.75 -0.5)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (0.75 0.5)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (0.75 -0.5)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (0.25 0.5)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (0.25 -0.5)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (-0.25 0.5)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (-0.25 -0.5)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (1.25 0.5)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (1.25 -0.5)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (-1.25 0.5)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (-1.25 -0.5)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (2.25 0.5)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (2.25 -0.5)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (-2.25 0.5)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (-2.25 -0.5)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (3.25 0.5)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (3.25 -0.5)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (-3.25 0.5)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (-3.25 -0.5)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (-2.0 1.5)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (-2.0 -1.5)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (2.0 1.5)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (2.0 -1.5)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (-1.0 1.5)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (-1.0 -1.5)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (1.0 1.5)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (1.0 -1.5)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (0.0 1.5)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (0.0 -1.5)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (1.0 1.5)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (1.0 -1.5)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (-1.0 1.5)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (-1.0 -1.5)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (2.0 1.5)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (2.0 -1.5)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (-2.0 1.5)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (-2.0 -1.5)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (-0.5 1.5)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (-0.5 -1.5)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (0.5 1.5)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (0.5 -1.5)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (0.5 1.5)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (0.5 -1.5)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (-0.5 1.5)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (-0.5 -1.5)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (1.5 1.5)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (1.5 -1.5)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (-1.5 1.5)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (-1.5 -1.5)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (2.5 1.5)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (2.5 -1.5)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (-2.5 1.5)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (-2.5 -1.5)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (3.5 1.5)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (3.5 -1.5)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (-3.5 1.5)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (-3.5 -1.5)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (1.0 1.5)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (1.0 -1.5)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (-1.0 1.5)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (-1.0 -1.5)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (2.0 1.5)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (2.0 -1.5)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (-2.0 1.5)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (-2.0 -1.5)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (3.0 1.5)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (3.0 -1.5)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (-3.0 1.5)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (-3.0 -1.5)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (4.0 1.5)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (4.0 -1.5)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (-4.0 1.5)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (-4.0 -1.5)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (5.0 1.5)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (5.0 -1.5)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (-5.0 1.5)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (-5.0 -1.5)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (5.5 1.5)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (5.5 -1.5)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (-5.5 1.5)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (-5.5 -1.5)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (6.5 1.5)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (6.5 -1.5)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (-6.5 1.5)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (-6.5 -1.5)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (7.5 1.5)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (7.5 -1.5)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (-7.5 1.5)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (-7.5 -1.5)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (8.5 1.5)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (8.5 -1.5)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (-8.5 1.5)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (-8.5 -1.5)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (9.5 1.5)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (9.5 -1.5)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (-9.5 1.5)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (-9.5 -1.5)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (-1.25 1.5)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (-1.25 -1.5)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (1.25 1.5)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (1.25 -1.5)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (-0.25 1.5)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (-0.25 -1.5)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (0.25 1.5)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (0.25 -1.5)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (0.75 1.5)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (0.75 -1.5)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (-0.75 1.5)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (-0.75 -1.5)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (1.75 1.5)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (1.75 -1.5)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (-1.75 1.5)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (-1.75 -1.5)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (2.75 1.5)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (2.75 -1.5)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (-2.75 1.5)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (-2.75 -1.5)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (0.25 1.5)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (0.25 -1.5)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (-0.25 1.5)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (-0.25 -1.5)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (1.25 1.5)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (1.25 -1.5)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (-1.25 1.5)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (-1.25 -1.5)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (2.25 1.5)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (2.25 -1.5)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (-2.25 1.5)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (-2.25 -1.5)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (3.25 1.5)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (3.25 -1.5)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (-3.25 1.5)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (-3.25 -1.5)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (4.25 1.5)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (4.25 -1.5)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (-4.25 1.5)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (-4.25 -1.5)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (1.75 1.5)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (1.75 -1.5)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (-1.75 1.5)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (-1.75 -1.5)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (2.75 1.5)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (2.75 -1.5)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (-2.75 1.5)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (-2.75 -1.5)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (3.75 1.5)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (3.75 -1.5)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (-3.75 1.5)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (-3.75 -1.5)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (4.75 1.5)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (4.75 -1.5)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (-4.75 1.5)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (-4.75 -1.5)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (5.75 1.5)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (5.75 -1.5)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (-5.75 1.5)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (-5.75 -1.5)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (-2.0 2.25)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (-2.0 -2.25)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (2.0 2.25)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (2.0 -2.25)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (-1.0 2.25)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (-1.0 -2.25)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (1.0 2.25)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (1.0 -2.25)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (0.0 2.25)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (0.0 -2.25)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (1.0 2.25)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (1.0 -2.25)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (-1.0 2.25)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (-1.0 -2.25)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (2.0 2.25)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (2.0 -2.25)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (-2.0 2.25)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (-2.0 -2.25)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (0.25 2.25)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (0.25 -2.25)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (-0.25 2.25)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (-0.25 -2.25)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (1.25 2.25)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (1.25 -2.25)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (-1.25 2.25)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (-1.25 -2.25)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (2.25 2.25)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (2.25 -2.25)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (-2.25 2.25)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (-2.25 -2.25)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (3.25 2.25)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (3.25 -2.25)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (-3.25 2.25)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (-3.25 -2.25)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (4.25 2.25)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (4.25 -2.25)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (-4.25 2.25)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (-4.25 -2.25)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (2.5 2.25)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (2.5 -2.25)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (-2.5 2.25)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (-2.5 -2.25)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (3.5 2.25)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (3.5 -2.25)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (-3.5 2.25)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (-3.5 -2.25)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (4.5 2.25)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (4.5 -2.25)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (-4.5 2.25)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (-4.5 -2.25)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (5.5 2.25)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (5.5 -2.25)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (-5.5 2.25)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (-5.5 -2.25)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (6.5 2.25)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (6.5 -2.25)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (-6.5 2.25)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (-6.5 -2.25)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (9.25 2.25)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (9.25 -2.25)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (-9.25 2.25)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (-9.25 -2.25)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (10.25 2.25)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (10.25 -2.25)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (-10.25 2.25)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (-10.25 -2.25)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (11.25 2.25)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (11.25 -2.25)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (-11.25 2.25)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (-11.25 -2.25)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (12.25 2.25)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (12.25 -2.25)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (-12.25 2.25)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (-12.25 -2.25)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (13.25 2.25)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (13.25 -2.25)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (-13.25 2.25)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (-13.25 -2.25)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (-0.875 2.25)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (-0.875 -2.25)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (0.875 2.25)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (0.875 -2.25)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (0.125 2.25)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (0.125 -2.25)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (-0.125 2.25)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (-0.125 -2.25)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (1.125 2.25)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (1.125 -2.25)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (-1.125 2.25)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (-1.125 -2.25)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (2.125 2.25)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (2.125 -2.25)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (-2.125 2.25)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (-2.125 -2.25)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (3.125 2.25)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (3.125 -2.25)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (-3.125 2.25)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (-3.125 -2.25)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (1.375 2.25)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (1.375 -2.25)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (-1.375 2.25)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (-1.375 -2.25)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (2.375 2.25)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (2.375 -2.25)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (-2.375 2.25)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (-2.375 -2.25)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (3.375 2.25)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (3.375 -2.25)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (-3.375 2.25)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (-3.375 -2.25)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (4.375 2.25)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (4.375 -2.25)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (-4.375 2.25)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (-4.375 -2.25)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (5.375 2.25)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (5.375 -2.25)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (-5.375 2.25)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (-5.375 -2.25)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (3.625 2.25)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (3.625 -2.25)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (-3.625 2.25)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (-3.625 -2.25)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (4.625 2.25)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (4.625 -2.25)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (-4.625 2.25)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (-4.625 -2.25)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (5.625 2.25)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (5.625 -2.25)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (-5.625 2.25)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (-5.625 -2.25)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (6.625 2.25)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (6.625 -2.25)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (-6.625 2.25)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (-6.625 -2.25)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (7.625 2.25)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (7.625 -2.25)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (-7.625 2.25)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (-7.625 -2.25)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (-2.0 5.75)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (-2.0 -5.75)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (2.0 5.75)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (2.0 -5.75)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (-1.0 5.75)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (-1.0 -5.75)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (1.0 5.75)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (1.0 -5.75)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (0.0 5.75)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (0.0 -5.75)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (1.0 5.75)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (1.0 -5.75)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (-1.0 5.75)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (-1.0 -5.75)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (2.0 5.75)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (2.0 -5.75)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (-2.0 5.75)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (-2.0 -5.75)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (3.75 5.75)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (3.75 -5.75)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (-3.75 5.75)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (-3.75 -5.75)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (4.75 5.75)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (4.75 -5.75)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (-4.75 5.75)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (-4.75 -5.75)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (5.75 5.75)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (5.75 -5.75)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (-5.75 5.75)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (-5.75 -5.75)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (6.75 5.75)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (6.75 -5.75)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (-6.75 5.75)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (-6.75 -5.75)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (7.75 5.75)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (7.75 -5.75)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (-7.75 5.75)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (-7.75 -5.75)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (9.5 5.75)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (9.5 -5.75)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (-9.5 5.75)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (-9.5 -5.75)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (10.5 5.75)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (10.5 -5.75)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (-10.5 5.75)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (-10.5 -5.75)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (11.5 5.75)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (11.5 -5.75)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (-11.5 5.75)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (-11.5 -5.75)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (12.5 5.75)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (12.5 -5.75)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (-12.5 5.75)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (-12.5 -5.75)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (13.5 5.75)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (13.5 -5.75)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (-13.5 5.75)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (-13.5 -5.75)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (26.75 5.75)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (26.75 -5.75)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (-26.75 5.75)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (-26.75 -5.75)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (27.75 5.75)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (27.75 -5.75)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (-27.75 5.75)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (-27.75 -5.75)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (28.75 5.75)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (28.75 -5.75)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (-28.75 5.75)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (-28.75 -5.75)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (29.75 5.75)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (29.75 -5.75)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (-29.75 5.75)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (-29.75 -5.75)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (30.75 5.75)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (30.75 -5.75)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (-30.75 5.75)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (-30.75 -5.75)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (0.875 5.75)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (0.875 -5.75)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (-0.875 5.75)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (-0.875 -5.75)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (1.875 5.75)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (1.875 -5.75)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (-1.875 5.75)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (-1.875 -5.75)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (2.875 5.75)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (2.875 -5.75)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (-2.875 5.75)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (-2.875 -5.75)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (3.875 5.75)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (3.875 -5.75)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (-3.875 5.75)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (-3.875 -5.75)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (4.875 5.75)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (4.875 -5.75)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (-4.875 5.75)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (-4.875 -5.75)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (6.625 5.75)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (6.625 -5.75)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (-6.625 5.75)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (-6.625 -5.75)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (7.625 5.75)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (7.625 -5.75)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (-7.625 5.75)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (-7.625 -5.75)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (8.625 5.75)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (8.625 -5.75)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (-8.625 5.75)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (-8.625 -5.75)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (9.625 5.75)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (9.625 -5.75)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (-9.625 5.75)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (-9.625 -5.75)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (10.625 5.75)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (10.625 -5.75)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (-10.625 5.75)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (-10.625 -5.75)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (12.375 5.75)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (12.375 -5.75)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (-12.375 5.75)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (-12.375 -5.75)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (13.375 5.75)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (13.375 -5.75)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (-13.375 5.75)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (-13.375 -5.75)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (14.375 5.75)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (14.375 -5.75)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (-14.375 5.75)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (-14.375 -5.75)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (15.375 5.75)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (15.375 -5.75)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (-15.375 5.75)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (-15.375 -5.75)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (16.375 5.75)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (16.375 -5.75)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (-16.375 5.75)
PASS: numbers.test: Number-theoretic division: truncate/: inexact: (-16.375 -5.75)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (-2/9 1/10)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (-2/9 -1/10)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (2/9 1/10)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (2/9 -1/10)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (-1/11 1/10)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (-1/11 -1/10)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (1/11 1/10)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (1/11 -1/10)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (0 1/10)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (0 -1/10)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (1/3 1/10)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (1/3 -1/10)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (-1/3 1/10)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (-1/3 -1/10)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (2/3 1/10)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (2/3 -1/10)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (-2/3 1/10)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (-2/3 -1/10)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (-11/90 1/10)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (-11/90 -1/10)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (11/90 1/10)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (11/90 -1/10)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (1/110 1/10)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (1/110 -1/10)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (-1/110 1/10)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (-1/110 -1/10)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (1/10 1/10)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (1/10 -1/10)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (-1/10 1/10)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (-1/10 -1/10)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (13/30 1/10)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (13/30 -1/10)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (-13/30 1/10)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (-13/30 -1/10)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (23/30 1/10)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (23/30 -1/10)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (-23/30 1/10)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (-23/30 -1/10)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (-1/45 1/10)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (-1/45 -1/10)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (1/45 1/10)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (1/45 -1/10)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (6/55 1/10)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (6/55 -1/10)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (-6/55 1/10)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (-6/55 -1/10)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (1/5 1/10)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (1/5 -1/10)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (-1/5 1/10)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (-1/5 -1/10)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (8/15 1/10)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (8/15 -1/10)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (-8/15 1/10)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (-8/15 -1/10)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (13/15 1/10)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (13/15 -1/10)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (-13/15 1/10)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (-13/15 -1/10)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (5/18 1/10)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (5/18 -1/10)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (-5/18 1/10)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (-5/18 -1/10)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (9/22 1/10)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (9/22 -1/10)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (-9/22 1/10)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (-9/22 -1/10)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (1/2 1/10)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (1/2 -1/10)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (-1/2 1/10)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (-1/2 -1/10)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (5/6 1/10)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (5/6 -1/10)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (-5/6 1/10)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (-5/6 -1/10)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (7/6 1/10)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (7/6 -1/10)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (-7/6 1/10)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (-7/6 -1/10)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (-31/180 1/10)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (-31/180 -1/10)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (31/180 1/10)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (31/180 -1/10)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (-9/220 1/10)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (-9/220 -1/10)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (9/220 1/10)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (9/220 -1/10)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (1/20 1/10)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (1/20 -1/10)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (-1/20 1/10)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (-1/20 -1/10)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (23/60 1/10)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (23/60 -1/10)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (-23/60 1/10)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (-23/60 -1/10)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (43/60 1/10)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (43/60 -1/10)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (-43/60 1/10)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (-43/60 -1/10)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (-13/180 1/10)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (-13/180 -1/10)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (13/180 1/10)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (13/180 -1/10)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (13/220 1/10)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (13/220 -1/10)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (-13/220 1/10)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (-13/220 -1/10)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (3/20 1/10)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (3/20 -1/10)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (-3/20 1/10)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (-3/20 -1/10)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (29/60 1/10)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (29/60 -1/10)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (-29/60 1/10)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (-29/60 -1/10)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (49/60 1/10)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (49/60 -1/10)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (-49/60 1/10)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (-49/60 -1/10)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (1/36 1/10)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (1/36 -1/10)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (-1/36 1/10)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (-1/36 -1/10)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (7/44 1/10)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (7/44 -1/10)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (-7/44 1/10)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (-7/44 -1/10)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (1/4 1/10)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (1/4 -1/10)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (-1/4 1/10)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (-1/4 -1/10)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (7/12 1/10)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (7/12 -1/10)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (-7/12 1/10)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (-7/12 -1/10)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (11/12 1/10)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (11/12 -1/10)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (-11/12 1/10)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (-11/12 -1/10)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (-2/9 16/3)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (-2/9 -16/3)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (2/9 16/3)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (2/9 -16/3)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (-1/11 16/3)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (-1/11 -16/3)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (1/11 16/3)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (1/11 -16/3)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (0 16/3)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (0 -16/3)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (1/3 16/3)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (1/3 -16/3)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (-1/3 16/3)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (-1/3 -16/3)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (2/3 16/3)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (2/3 -16/3)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (-2/3 16/3)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (-2/3 -16/3)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (46/9 16/3)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (46/9 -16/3)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (-46/9 16/3)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (-46/9 -16/3)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (173/33 16/3)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (173/33 -16/3)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (-173/33 16/3)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (-173/33 -16/3)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (16/3 16/3)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (16/3 -16/3)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (-16/3 16/3)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (-16/3 -16/3)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (17/3 16/3)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (17/3 -16/3)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (-17/3 16/3)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (-17/3 -16/3)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (6 16/3)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (6 -16/3)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (-6 16/3)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (-6 -16/3)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (94/9 16/3)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (94/9 -16/3)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (-94/9 16/3)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (-94/9 -16/3)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (349/33 16/3)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (349/33 -16/3)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (-349/33 16/3)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (-349/33 -16/3)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (32/3 16/3)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (32/3 -16/3)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (-32/3 16/3)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (-32/3 -16/3)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (11 16/3)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (11 -16/3)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (-11 16/3)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (-11 -16/3)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (34/3 16/3)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (34/3 -16/3)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (-34/3 16/3)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (-34/3 -16/3)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (238/9 16/3)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (238/9 -16/3)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (-238/9 16/3)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (-238/9 -16/3)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (877/33 16/3)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (877/33 -16/3)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (-877/33 16/3)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (-877/33 -16/3)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (80/3 16/3)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (80/3 -16/3)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (-80/3 16/3)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (-80/3 -16/3)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (27 16/3)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (27 -16/3)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (-27 16/3)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (-27 -16/3)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (82/3 16/3)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (82/3 -16/3)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (-82/3 16/3)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (-82/3 -16/3)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (22/9 16/3)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (22/9 -16/3)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (-22/9 16/3)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (-22/9 -16/3)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (85/33 16/3)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (85/33 -16/3)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (-85/33 16/3)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (-85/33 -16/3)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (8/3 16/3)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (8/3 -16/3)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (-8/3 16/3)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (-8/3 -16/3)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (3 16/3)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (3 -16/3)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (-3 16/3)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (-3 -16/3)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (10/3 16/3)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (10/3 -16/3)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (-10/3 16/3)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (-10/3 -16/3)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (70/9 16/3)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (70/9 -16/3)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (-70/9 16/3)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (-70/9 -16/3)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (87/11 16/3)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (87/11 -16/3)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (-87/11 16/3)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (-87/11 -16/3)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (8 16/3)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (8 -16/3)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (-8 16/3)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (-8 -16/3)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (25/3 16/3)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (25/3 -16/3)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (-25/3 16/3)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (-25/3 -16/3)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (26/3 16/3)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (26/3 -16/3)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (-26/3 16/3)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (-26/3 -16/3)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (118/9 16/3)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (118/9 -16/3)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (-118/9 16/3)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (-118/9 -16/3)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (437/33 16/3)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (437/33 -16/3)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (-437/33 16/3)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (-437/33 -16/3)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (40/3 16/3)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (40/3 -16/3)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (-40/3 16/3)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (-40/3 -16/3)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (41/3 16/3)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (41/3 -16/3)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (-41/3 16/3)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (-41/3 -16/3)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (14 16/3)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (14 -16/3)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (-14 16/3)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (-14 -16/3)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (-2/9 10/7)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (-2/9 -10/7)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (2/9 10/7)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (2/9 -10/7)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (-1/11 10/7)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (-1/11 -10/7)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (1/11 10/7)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (1/11 -10/7)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (0 10/7)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (0 -10/7)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (1/3 10/7)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (1/3 -10/7)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (-1/3 10/7)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (-1/3 -10/7)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (2/3 10/7)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (2/3 -10/7)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (-2/3 10/7)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (-2/3 -10/7)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (76/63 10/7)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (76/63 -10/7)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (-76/63 10/7)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (-76/63 -10/7)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (103/77 10/7)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (103/77 -10/7)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (-103/77 10/7)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (-103/77 -10/7)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (10/7 10/7)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (10/7 -10/7)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (-10/7 10/7)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (-10/7 -10/7)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (37/21 10/7)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (37/21 -10/7)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (-37/21 10/7)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (-37/21 -10/7)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (44/21 10/7)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (44/21 -10/7)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (-44/21 10/7)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (-44/21 -10/7)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (166/63 10/7)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (166/63 -10/7)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (-166/63 10/7)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (-166/63 -10/7)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (213/77 10/7)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (213/77 -10/7)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (-213/77 10/7)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (-213/77 -10/7)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (20/7 10/7)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (20/7 -10/7)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (-20/7 10/7)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (-20/7 -10/7)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (67/21 10/7)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (67/21 -10/7)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (-67/21 10/7)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (-67/21 -10/7)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (74/21 10/7)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (74/21 -10/7)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (-74/21 10/7)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (-74/21 -10/7)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (436/63 10/7)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (436/63 -10/7)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (-436/63 10/7)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (-436/63 -10/7)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (543/77 10/7)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (543/77 -10/7)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (-543/77 10/7)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (-543/77 -10/7)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (50/7 10/7)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (50/7 -10/7)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (-50/7 10/7)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (-50/7 -10/7)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (157/21 10/7)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (157/21 -10/7)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (-157/21 10/7)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (-157/21 -10/7)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (164/21 10/7)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (164/21 -10/7)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (-164/21 10/7)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (-164/21 -10/7)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (31/63 10/7)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (31/63 -10/7)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (-31/63 10/7)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (-31/63 -10/7)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (48/77 10/7)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (48/77 -10/7)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (-48/77 10/7)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (-48/77 -10/7)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (5/7 10/7)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (5/7 -10/7)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (-5/7 10/7)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (-5/7 -10/7)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (22/21 10/7)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (22/21 -10/7)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (-22/21 10/7)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (-22/21 -10/7)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (29/21 10/7)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (29/21 -10/7)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (-29/21 10/7)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (-29/21 -10/7)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (121/63 10/7)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (121/63 -10/7)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (-121/63 10/7)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (-121/63 -10/7)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (158/77 10/7)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (158/77 -10/7)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (-158/77 10/7)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (-158/77 -10/7)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (15/7 10/7)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (15/7 -10/7)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (-15/7 10/7)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (-15/7 -10/7)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (52/21 10/7)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (52/21 -10/7)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (-52/21 10/7)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (-52/21 -10/7)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (59/21 10/7)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (59/21 -10/7)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (-59/21 10/7)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (-59/21 -10/7)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (211/63 10/7)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (211/63 -10/7)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (-211/63 10/7)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (-211/63 -10/7)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (268/77 10/7)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (268/77 -10/7)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (-268/77 10/7)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (-268/77 -10/7)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (25/7 10/7)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (25/7 -10/7)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (-25/7 10/7)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (-25/7 -10/7)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (82/21 10/7)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (82/21 -10/7)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (-82/21 10/7)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (-82/21 -10/7)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (89/21 10/7)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (89/21 -10/7)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (-89/21 10/7)
PASS: numbers.test: Number-theoretic division: truncate/: fractions: (-89/21 -10/7)
PASS: numbers.test: Number-theoretic division: truncate/: mixed types: (25 10)
PASS: numbers.test: Number-theoretic division: truncate/: mixed types: (25 -10)
PASS: numbers.test: Number-theoretic division: truncate/: mixed types: (-25 10)
PASS: numbers.test: Number-theoretic division: truncate/: mixed types: (-25 -10)
PASS: numbers.test: Number-theoretic division: truncate/: mixed types: (15000000000 10)
PASS: numbers.test: Number-theoretic division: truncate/: mixed types: (15000000000 -10)
PASS: numbers.test: Number-theoretic division: truncate/: mixed types: (-15000000000 10)
PASS: numbers.test: Number-theoretic division: truncate/: mixed types: (-15000000000 -10)
PASS: numbers.test: Number-theoretic division: truncate/: mixed types: (130.0 10)
PASS: numbers.test: Number-theoretic division: truncate/: mixed types: (130.0 -10)
PASS: numbers.test: Number-theoretic division: truncate/: mixed types: (-130.0 10)
PASS: numbers.test: Number-theoretic division: truncate/: mixed types: (-130.0 -10)
PASS: numbers.test: Number-theoretic division: truncate/: mixed types: (15/7 10)
PASS: numbers.test: Number-theoretic division: truncate/: mixed types: (15/7 -10)
PASS: numbers.test: Number-theoretic division: truncate/: mixed types: (-15/7 10)
PASS: numbers.test: Number-theoretic division: truncate/: mixed types: (-15/7 -10)
PASS: numbers.test: Number-theoretic division: truncate/: mixed types: (0 10)
PASS: numbers.test: Number-theoretic division: truncate/: mixed types: (0 -10)
PASS: numbers.test: Number-theoretic division: truncate/: mixed types: (0.0 10)
PASS: numbers.test: Number-theoretic division: truncate/: mixed types: (0.0 -10)
PASS: numbers.test: Number-theoretic division: truncate/: mixed types: (-0.0 10)
PASS: numbers.test: Number-theoretic division: truncate/: mixed types: (-0.0 -10)
PASS: numbers.test: Number-theoretic division: truncate/: mixed types: (+inf.0 10)
PASS: numbers.test: Number-theoretic division: truncate/: mixed types: (+inf.0 -10)
PASS: numbers.test: Number-theoretic division: truncate/: mixed types: (-inf.0 10)
PASS: numbers.test: Number-theoretic division: truncate/: mixed types: (-inf.0 -10)
PASS: numbers.test: Number-theoretic division: truncate/: mixed types: (-inf.0 10)
PASS: numbers.test: Number-theoretic division: truncate/: mixed types: (-inf.0 -10)
PASS: numbers.test: Number-theoretic division: truncate/: mixed types: (+inf.0 10)
PASS: numbers.test: Number-theoretic division: truncate/: mixed types: (+inf.0 -10)
PASS: numbers.test: Number-theoretic division: truncate/: mixed types: (+nan.0 10)
PASS: numbers.test: Number-theoretic division: truncate/: mixed types: (+nan.0 -10)
PASS: numbers.test: Number-theoretic division: truncate/: mixed types: (+nan.0 10)
PASS: numbers.test: Number-theoretic division: truncate/: mixed types: (+nan.0 -10)
PASS: numbers.test: Number-theoretic division: truncate/: mixed types: (25 10000000000)
PASS: numbers.test: Number-theoretic division: truncate/: mixed types: (25 -10000000000)
PASS: numbers.test: Number-theoretic division: truncate/: mixed types: (-25 10000000000)
PASS: numbers.test: Number-theoretic division: truncate/: mixed types: (-25 -10000000000)
PASS: numbers.test: Number-theoretic division: truncate/: mixed types: (15000000000 10000000000)
PASS: numbers.test: Number-theoretic division: truncate/: mixed types: (15000000000 -10000000000)
PASS: numbers.test: Number-theoretic division: truncate/: mixed types: (-15000000000 10000000000)
PASS: numbers.test: Number-theoretic division: truncate/: mixed types: (-15000000000 -10000000000)
PASS: numbers.test: Number-theoretic division: truncate/: mixed types: (130.0 10000000000)
PASS: numbers.test: Number-theoretic division: truncate/: mixed types: (130.0 -10000000000)
PASS: numbers.test: Number-theoretic division: truncate/: mixed types: (-130.0 10000000000)
PASS: numbers.test: Number-theoretic division: truncate/: mixed types: (-130.0 -10000000000)
PASS: numbers.test: Number-theoretic division: truncate/: mixed types: (15/7 10000000000)
PASS: numbers.test: Number-theoretic division: truncate/: mixed types: (15/7 -10000000000)
PASS: numbers.test: Number-theoretic division: truncate/: mixed types: (-15/7 10000000000)
PASS: numbers.test: Number-theoretic division: truncate/: mixed types: (-15/7 -10000000000)
PASS: numbers.test: Number-theoretic division: truncate/: mixed types: (0 10000000000)
PASS: numbers.test: Number-theoretic division: truncate/: mixed types: (0 -10000000000)
PASS: numbers.test: Number-theoretic division: truncate/: mixed types: (0.0 10000000000)
PASS: numbers.test: Number-theoretic division: truncate/: mixed types: (0.0 -10000000000)
PASS: numbers.test: Number-theoretic division: truncate/: mixed types: (-0.0 10000000000)
PASS: numbers.test: Number-theoretic division: truncate/: mixed types: (-0.0 -10000000000)
PASS: numbers.test: Number-theoretic division: truncate/: mixed types: (+inf.0 10000000000)
PASS: numbers.test: Number-theoretic division: truncate/: mixed types: (+inf.0 -10000000000)
PASS: numbers.test: Number-theoretic division: truncate/: mixed types: (-inf.0 10000000000)
PASS: numbers.test: Number-theoretic division: truncate/: mixed types: (-inf.0 -10000000000)
PASS: numbers.test: Number-theoretic division: truncate/: mixed types: (-inf.0 10000000000)
PASS: numbers.test: Number-theoretic division: truncate/: mixed types: (-inf.0 -10000000000)
PASS: numbers.test: Number-theoretic division: truncate/: mixed types: (+inf.0 10000000000)
PASS: numbers.test: Number-theoretic division: truncate/: mixed types: (+inf.0 -10000000000)
PASS: numbers.test: Number-theoretic division: truncate/: mixed types: (+nan.0 10000000000)
PASS: numbers.test: Number-theoretic division: truncate/: mixed types: (+nan.0 -10000000000)
PASS: numbers.test: Number-theoretic division: truncate/: mixed types: (+nan.0 10000000000)
PASS: numbers.test: Number-theoretic division: truncate/: mixed types: (+nan.0 -10000000000)
PASS: numbers.test: Number-theoretic division: truncate/: mixed types: (25 12.0)
PASS: numbers.test: Number-theoretic division: truncate/: mixed types: (25 -12.0)
PASS: numbers.test: Number-theoretic division: truncate/: mixed types: (-25 12.0)
PASS: numbers.test: Number-theoretic division: truncate/: mixed types: (-25 -12.0)
PASS: numbers.test: Number-theoretic division: truncate/: mixed types: (15000000000 12.0)
PASS: numbers.test: Number-theoretic division: truncate/: mixed types: (15000000000 -12.0)
PASS: numbers.test: Number-theoretic division: truncate/: mixed types: (-15000000000 12.0)
PASS: numbers.test: Number-theoretic division: truncate/: mixed types: (-15000000000 -12.0)
PASS: numbers.test: Number-theoretic division: truncate/: mixed types: (130.0 12.0)
PASS: numbers.test: Number-theoretic division: truncate/: mixed types: (130.0 -12.0)
PASS: numbers.test: Number-theoretic division: truncate/: mixed types: (-130.0 12.0)
PASS: numbers.test: Number-theoretic division: truncate/: mixed types: (-130.0 -12.0)
PASS: numbers.test: Number-theoretic division: truncate/: mixed types: (15/7 12.0)
PASS: numbers.test: Number-theoretic division: truncate/: mixed types: (15/7 -12.0)
PASS: numbers.test: Number-theoretic division: truncate/: mixed types: (-15/7 12.0)
PASS: numbers.test: Number-theoretic division: truncate/: mixed types: (-15/7 -12.0)
PASS: numbers.test: Number-theoretic division: truncate/: mixed types: (0 12.0)
PASS: numbers.test: Number-theoretic division: truncate/: mixed types: (0 -12.0)
PASS: numbers.test: Number-theoretic division: truncate/: mixed types: (0.0 12.0)
PASS: numbers.test: Number-theoretic division: truncate/: mixed types: (0.0 -12.0)
PASS: numbers.test: Number-theoretic division: truncate/: mixed types: (-0.0 12.0)
PASS: numbers.test: Number-theoretic division: truncate/: mixed types: (-0.0 -12.0)
PASS: numbers.test: Number-theoretic division: truncate/: mixed types: (+inf.0 12.0)
PASS: numbers.test: Number-theoretic division: truncate/: mixed types: (+inf.0 -12.0)
PASS: numbers.test: Number-theoretic division: truncate/: mixed types: (-inf.0 12.0)
PASS: numbers.test: Number-theoretic division: truncate/: mixed types: (-inf.0 -12.0)
PASS: numbers.test: Number-theoretic division: truncate/: mixed types: (-inf.0 12.0)
PASS: numbers.test: Number-theoretic division: truncate/: mixed types: (-inf.0 -12.0)
PASS: numbers.test: Number-theoretic division: truncate/: mixed types: (+inf.0 12.0)
PASS: numbers.test: Number-theoretic division: truncate/: mixed types: (+inf.0 -12.0)
PASS: numbers.test: Number-theoretic division: truncate/: mixed types: (+nan.0 12.0)
PASS: numbers.test: Number-theoretic division: truncate/: mixed types: (+nan.0 -12.0)
PASS: numbers.test: Number-theoretic division: truncate/: mixed types: (+nan.0 12.0)
PASS: numbers.test: Number-theoretic division: truncate/: mixed types: (+nan.0 -12.0)
PASS: numbers.test: Number-theoretic division: truncate/: mixed types: (25 10/7)
PASS: numbers.test: Number-theoretic division: truncate/: mixed types: (25 -10/7)
PASS: numbers.test: Number-theoretic division: truncate/: mixed types: (-25 10/7)
PASS: numbers.test: Number-theoretic division: truncate/: mixed types: (-25 -10/7)
PASS: numbers.test: Number-theoretic division: truncate/: mixed types: (15000000000 10/7)
PASS: numbers.test: Number-theoretic division: truncate/: mixed types: (15000000000 -10/7)
PASS: numbers.test: Number-theoretic division: truncate/: mixed types: (-15000000000 10/7)
PASS: numbers.test: Number-theoretic division: truncate/: mixed types: (-15000000000 -10/7)
PASS: numbers.test: Number-theoretic division: truncate/: mixed types: (130.0 10/7)
PASS: numbers.test: Number-theoretic division: truncate/: mixed types: (130.0 -10/7)
PASS: numbers.test: Number-theoretic division: truncate/: mixed types: (-130.0 10/7)
PASS: numbers.test: Number-theoretic division: truncate/: mixed types: (-130.0 -10/7)
PASS: numbers.test: Number-theoretic division: truncate/: mixed types: (15/7 10/7)
PASS: numbers.test: Number-theoretic division: truncate/: mixed types: (15/7 -10/7)
PASS: numbers.test: Number-theoretic division: truncate/: mixed types: (-15/7 10/7)
PASS: numbers.test: Number-theoretic division: truncate/: mixed types: (-15/7 -10/7)
PASS: numbers.test: Number-theoretic division: truncate/: mixed types: (0 10/7)
PASS: numbers.test: Number-theoretic division: truncate/: mixed types: (0 -10/7)
PASS: numbers.test: Number-theoretic division: truncate/: mixed types: (0.0 10/7)
PASS: numbers.test: Number-theoretic division: truncate/: mixed types: (0.0 -10/7)
PASS: numbers.test: Number-theoretic division: truncate/: mixed types: (-0.0 10/7)
PASS: numbers.test: Number-theoretic division: truncate/: mixed types: (-0.0 -10/7)
PASS: numbers.test: Number-theoretic division: truncate/: mixed types: (+inf.0 10/7)
PASS: numbers.test: Number-theoretic division: truncate/: mixed types: (+inf.0 -10/7)
PASS: numbers.test: Number-theoretic division: truncate/: mixed types: (-inf.0 10/7)
PASS: numbers.test: Number-theoretic division: truncate/: mixed types: (-inf.0 -10/7)
PASS: numbers.test: Number-theoretic division: truncate/: mixed types: (-inf.0 10/7)
PASS: numbers.test: Number-theoretic division: truncate/: mixed types: (-inf.0 -10/7)
PASS: numbers.test: Number-theoretic division: truncate/: mixed types: (+inf.0 10/7)
PASS: numbers.test: Number-theoretic division: truncate/: mixed types: (+inf.0 -10/7)
PASS: numbers.test: Number-theoretic division: truncate/: mixed types: (+nan.0 10/7)
PASS: numbers.test: Number-theoretic division: truncate/: mixed types: (+nan.0 -10/7)
PASS: numbers.test: Number-theoretic division: truncate/: mixed types: (+nan.0 10/7)
PASS: numbers.test: Number-theoretic division: truncate/: mixed types: (+nan.0 -10/7)
PASS: numbers.test: Number-theoretic division: truncate/: mixed types: (25 +inf.0)
PASS: numbers.test: Number-theoretic division: truncate/: mixed types: (25 -inf.0)
PASS: numbers.test: Number-theoretic division: truncate/: mixed types: (-25 +inf.0)
PASS: numbers.test: Number-theoretic division: truncate/: mixed types: (-25 -inf.0)
PASS: numbers.test: Number-theoretic division: truncate/: mixed types: (15000000000 +inf.0)
PASS: numbers.test: Number-theoretic division: truncate/: mixed types: (15000000000 -inf.0)
PASS: numbers.test: Number-theoretic division: truncate/: mixed types: (-15000000000 +inf.0)
PASS: numbers.test: Number-theoretic division: truncate/: mixed types: (-15000000000 -inf.0)
PASS: numbers.test: Number-theoretic division: truncate/: mixed types: (130.0 +inf.0)
PASS: numbers.test: Number-theoretic division: truncate/: mixed types: (130.0 -inf.0)
PASS: numbers.test: Number-theoretic division: truncate/: mixed types: (-130.0 +inf.0)
PASS: numbers.test: Number-theoretic division: truncate/: mixed types: (-130.0 -inf.0)
PASS: numbers.test: Number-theoretic division: truncate/: mixed types: (15/7 +inf.0)
PASS: numbers.test: Number-theoretic division: truncate/: mixed types: (15/7 -inf.0)
PASS: numbers.test: Number-theoretic division: truncate/: mixed types: (-15/7 +inf.0)
PASS: numbers.test: Number-theoretic division: truncate/: mixed types: (-15/7 -inf.0)
PASS: numbers.test: Number-theoretic division: truncate/: mixed types: (0 +inf.0)
PASS: numbers.test: Number-theoretic division: truncate/: mixed types: (0 -inf.0)
PASS: numbers.test: Number-theoretic division: truncate/: mixed types: (0.0 +inf.0)
PASS: numbers.test: Number-theoretic division: truncate/: mixed types: (0.0 -inf.0)
PASS: numbers.test: Number-theoretic division: truncate/: mixed types: (-0.0 +inf.0)
PASS: numbers.test: Number-theoretic division: truncate/: mixed types: (-0.0 -inf.0)
PASS: numbers.test: Number-theoretic division: truncate/: mixed types: (+inf.0 +inf.0)
PASS: numbers.test: Number-theoretic division: truncate/: mixed types: (+inf.0 -inf.0)
PASS: numbers.test: Number-theoretic division: truncate/: mixed types: (-inf.0 +inf.0)
PASS: numbers.test: Number-theoretic division: truncate/: mixed types: (-inf.0 -inf.0)
PASS: numbers.test: Number-theoretic division: truncate/: mixed types: (-inf.0 +inf.0)
PASS: numbers.test: Number-theoretic division: truncate/: mixed types: (-inf.0 -inf.0)
PASS: numbers.test: Number-theoretic division: truncate/: mixed types: (+inf.0 +inf.0)
PASS: numbers.test: Number-theoretic division: truncate/: mixed types: (+inf.0 -inf.0)
PASS: numbers.test: Number-theoretic division: truncate/: mixed types: (+nan.0 +inf.0)
PASS: numbers.test: Number-theoretic division: truncate/: mixed types: (+nan.0 -inf.0)
PASS: numbers.test: Number-theoretic division: truncate/: mixed types: (+nan.0 +inf.0)
PASS: numbers.test: Number-theoretic division: truncate/: mixed types: (+nan.0 -inf.0)
PASS: numbers.test: Number-theoretic division: truncate/: mixed types: (25 -inf.0)
PASS: numbers.test: Number-theoretic division: truncate/: mixed types: (25 +inf.0)
PASS: numbers.test: Number-theoretic division: truncate/: mixed types: (-25 -inf.0)
PASS: numbers.test: Number-theoretic division: truncate/: mixed types: (-25 +inf.0)
PASS: numbers.test: Number-theoretic division: truncate/: mixed types: (15000000000 -inf.0)
PASS: numbers.test: Number-theoretic division: truncate/: mixed types: (15000000000 +inf.0)
PASS: numbers.test: Number-theoretic division: truncate/: mixed types: (-15000000000 -inf.0)
PASS: numbers.test: Number-theoretic division: truncate/: mixed types: (-15000000000 +inf.0)
PASS: numbers.test: Number-theoretic division: truncate/: mixed types: (130.0 -inf.0)
PASS: numbers.test: Number-theoretic division: truncate/: mixed types: (130.0 +inf.0)
PASS: numbers.test: Number-theoretic division: truncate/: mixed types: (-130.0 -inf.0)
PASS: numbers.test: Number-theoretic division: truncate/: mixed types: (-130.0 +inf.0)
PASS: numbers.test: Number-theoretic division: truncate/: mixed types: (15/7 -inf.0)
PASS: numbers.test: Number-theoretic division: truncate/: mixed types: (15/7 +inf.0)
PASS: numbers.test: Number-theoretic division: truncate/: mixed types: (-15/7 -inf.0)
PASS: numbers.test: Number-theoretic division: truncate/: mixed types: (-15/7 +inf.0)
PASS: numbers.test: Number-theoretic division: truncate/: mixed types: (0 -inf.0)
PASS: numbers.test: Number-theoretic division: truncate/: mixed types: (0 +inf.0)
PASS: numbers.test: Number-theoretic division: truncate/: mixed types: (0.0 -inf.0)
PASS: numbers.test: Number-theoretic division: truncate/: mixed types: (0.0 +inf.0)
PASS: numbers.test: Number-theoretic division: truncate/: mixed types: (-0.0 -inf.0)
PASS: numbers.test: Number-theoretic division: truncate/: mixed types: (-0.0 +inf.0)
PASS: numbers.test: Number-theoretic division: truncate/: mixed types: (+inf.0 -inf.0)
PASS: numbers.test: Number-theoretic division: truncate/: mixed types: (+inf.0 +inf.0)
PASS: numbers.test: Number-theoretic division: truncate/: mixed types: (-inf.0 -inf.0)
PASS: numbers.test: Number-theoretic division: truncate/: mixed types: (-inf.0 +inf.0)
PASS: numbers.test: Number-theoretic division: truncate/: mixed types: (-inf.0 -inf.0)
PASS: numbers.test: Number-theoretic division: truncate/: mixed types: (-inf.0 +inf.0)
PASS: numbers.test: Number-theoretic division: truncate/: mixed types: (+inf.0 -inf.0)
PASS: numbers.test: Number-theoretic division: truncate/: mixed types: (+inf.0 +inf.0)
PASS: numbers.test: Number-theoretic division: truncate/: mixed types: (+nan.0 -inf.0)
PASS: numbers.test: Number-theoretic division: truncate/: mixed types: (+nan.0 +inf.0)
PASS: numbers.test: Number-theoretic division: truncate/: mixed types: (+nan.0 -inf.0)
PASS: numbers.test: Number-theoretic division: truncate/: mixed types: (+nan.0 +inf.0)
PASS: numbers.test: Number-theoretic division: truncate/: mixed types: (25 +nan.0)
PASS: numbers.test: Number-theoretic division: truncate/: mixed types: (25 +nan.0)
PASS: numbers.test: Number-theoretic division: truncate/: mixed types: (-25 +nan.0)
PASS: numbers.test: Number-theoretic division: truncate/: mixed types: (-25 +nan.0)
PASS: numbers.test: Number-theoretic division: truncate/: mixed types: (15000000000 +nan.0)
PASS: numbers.test: Number-theoretic division: truncate/: mixed types: (15000000000 +nan.0)
PASS: numbers.test: Number-theoretic division: truncate/: mixed types: (-15000000000 +nan.0)
PASS: numbers.test: Number-theoretic division: truncate/: mixed types: (-15000000000 +nan.0)
PASS: numbers.test: Number-theoretic division: truncate/: mixed types: (130.0 +nan.0)
PASS: numbers.test: Number-theoretic division: truncate/: mixed types: (130.0 +nan.0)
PASS: numbers.test: Number-theoretic division: truncate/: mixed types: (-130.0 +nan.0)
PASS: numbers.test: Number-theoretic division: truncate/: mixed types: (-130.0 +nan.0)
PASS: numbers.test: Number-theoretic division: truncate/: mixed types: (15/7 +nan.0)
PASS: numbers.test: Number-theoretic division: truncate/: mixed types: (15/7 +nan.0)
PASS: numbers.test: Number-theoretic division: truncate/: mixed types: (-15/7 +nan.0)
PASS: numbers.test: Number-theoretic division: truncate/: mixed types: (-15/7 +nan.0)
PASS: numbers.test: Number-theoretic division: truncate/: mixed types: (0 +nan.0)
PASS: numbers.test: Number-theoretic division: truncate/: mixed types: (0 +nan.0)
PASS: numbers.test: Number-theoretic division: truncate/: mixed types: (0.0 +nan.0)
PASS: numbers.test: Number-theoretic division: truncate/: mixed types: (0.0 +nan.0)
PASS: numbers.test: Number-theoretic division: truncate/: mixed types: (-0.0 +nan.0)
PASS: numbers.test: Number-theoretic division: truncate/: mixed types: (-0.0 +nan.0)
PASS: numbers.test: Number-theoretic division: truncate/: mixed types: (+inf.0 +nan.0)
PASS: numbers.test: Number-theoretic division: truncate/: mixed types: (+inf.0 +nan.0)
PASS: numbers.test: Number-theoretic division: truncate/: mixed types: (-inf.0 +nan.0)
PASS: numbers.test: Number-theoretic division: truncate/: mixed types: (-inf.0 +nan.0)
PASS: numbers.test: Number-theoretic division: truncate/: mixed types: (-inf.0 +nan.0)
PASS: numbers.test: Number-theoretic division: truncate/: mixed types: (-inf.0 +nan.0)
PASS: numbers.test: Number-theoretic division: truncate/: mixed types: (+inf.0 +nan.0)
PASS: numbers.test: Number-theoretic division: truncate/: mixed types: (+inf.0 +nan.0)
PASS: numbers.test: Number-theoretic division: truncate/: mixed types: (+nan.0 +nan.0)
PASS: numbers.test: Number-theoretic division: truncate/: mixed types: (+nan.0 +nan.0)
PASS: numbers.test: Number-theoretic division: truncate/: mixed types: (+nan.0 +nan.0)
PASS: numbers.test: Number-theoretic division: truncate/: mixed types: (+nan.0 +nan.0)
PASS: numbers.test: Number-theoretic division: truncate/: divide by zero: (15 0)
PASS: numbers.test: Number-theoretic division: truncate/: divide by zero: (15 0)
PASS: numbers.test: Number-theoretic division: truncate/: divide by zero: (15 0)
PASS: numbers.test: Number-theoretic division: truncate/: divide by zero: (15000000000 0)
PASS: numbers.test: Number-theoretic division: truncate/: divide by zero: (15000000000 0)
PASS: numbers.test: Number-theoretic division: truncate/: divide by zero: (15000000000 0)
PASS: numbers.test: Number-theoretic division: truncate/: divide by zero: (18.0 0)
PASS: numbers.test: Number-theoretic division: truncate/: divide by zero: (18.0 0)
PASS: numbers.test: Number-theoretic division: truncate/: divide by zero: (18.0 0)
PASS: numbers.test: Number-theoretic division: truncate/: divide by zero: (33/7 0)
PASS: numbers.test: Number-theoretic division: truncate/: divide by zero: (33/7 0)
PASS: numbers.test: Number-theoretic division: truncate/: divide by zero: (33/7 0)
PASS: numbers.test: Number-theoretic division: truncate/: divide by zero: (0 0)
PASS: numbers.test: Number-theoretic division: truncate/: divide by zero: (0 0)
PASS: numbers.test: Number-theoretic division: truncate/: divide by zero: (0 0)
PASS: numbers.test: Number-theoretic division: truncate/: divide by zero: (0.0 0)
PASS: numbers.test: Number-theoretic division: truncate/: divide by zero: (0.0 0)
PASS: numbers.test: Number-theoretic division: truncate/: divide by zero: (0.0 0)
PASS: numbers.test: Number-theoretic division: truncate/: divide by zero: (-0.0 0)
PASS: numbers.test: Number-theoretic division: truncate/: divide by zero: (-0.0 0)
PASS: numbers.test: Number-theoretic division: truncate/: divide by zero: (-0.0 0)
PASS: numbers.test: Number-theoretic division: truncate/: divide by zero: (+inf.0 0)
PASS: numbers.test: Number-theoretic division: truncate/: divide by zero: (+inf.0 0)
PASS: numbers.test: Number-theoretic division: truncate/: divide by zero: (+inf.0 0)
PASS: numbers.test: Number-theoretic division: truncate/: divide by zero: (-inf.0 0)
PASS: numbers.test: Number-theoretic division: truncate/: divide by zero: (-inf.0 0)
PASS: numbers.test: Number-theoretic division: truncate/: divide by zero: (-inf.0 0)
PASS: numbers.test: Number-theoretic division: truncate/: divide by zero: (+nan.0 0)
PASS: numbers.test: Number-theoretic division: truncate/: divide by zero: (+nan.0 0)
PASS: numbers.test: Number-theoretic division: truncate/: divide by zero: (+nan.0 0)
PASS: numbers.test: Number-theoretic division: truncate/: divide by zero: (15 0.0)
PASS: numbers.test: Number-theoretic division: truncate/: divide by zero: (15 0.0)
PASS: numbers.test: Number-theoretic division: truncate/: divide by zero: (15 0.0)
PASS: numbers.test: Number-theoretic division: truncate/: divide by zero: (15000000000 0.0)
PASS: numbers.test: Number-theoretic division: truncate/: divide by zero: (15000000000 0.0)
PASS: numbers.test: Number-theoretic division: truncate/: divide by zero: (15000000000 0.0)
PASS: numbers.test: Number-theoretic division: truncate/: divide by zero: (18.0 0.0)
PASS: numbers.test: Number-theoretic division: truncate/: divide by zero: (18.0 0.0)
PASS: numbers.test: Number-theoretic division: truncate/: divide by zero: (18.0 0.0)
PASS: numbers.test: Number-theoretic division: truncate/: divide by zero: (33/7 0.0)
PASS: numbers.test: Number-theoretic division: truncate/: divide by zero: (33/7 0.0)
PASS: numbers.test: Number-theoretic division: truncate/: divide by zero: (33/7 0.0)
PASS: numbers.test: Number-theoretic division: truncate/: divide by zero: (0 0.0)
PASS: numbers.test: Number-theoretic division: truncate/: divide by zero: (0 0.0)
PASS: numbers.test: Number-theoretic division: truncate/: divide by zero: (0 0.0)
PASS: numbers.test: Number-theoretic division: truncate/: divide by zero: (0.0 0.0)
PASS: numbers.test: Number-theoretic division: truncate/: divide by zero: (0.0 0.0)
PASS: numbers.test: Number-theoretic division: truncate/: divide by zero: (0.0 0.0)
PASS: numbers.test: Number-theoretic division: truncate/: divide by zero: (-0.0 0.0)
PASS: numbers.test: Number-theoretic division: truncate/: divide by zero: (-0.0 0.0)
PASS: numbers.test: Number-theoretic division: truncate/: divide by zero: (-0.0 0.0)
PASS: numbers.test: Number-theoretic division: truncate/: divide by zero: (+inf.0 0.0)
PASS: numbers.test: Number-theoretic division: truncate/: divide by zero: (+inf.0 0.0)
PASS: numbers.test: Number-theoretic division: truncate/: divide by zero: (+inf.0 0.0)
PASS: numbers.test: Number-theoretic division: truncate/: divide by zero: (-inf.0 0.0)
PASS: numbers.test: Number-theoretic division: truncate/: divide by zero: (-inf.0 0.0)
PASS: numbers.test: Number-theoretic division: truncate/: divide by zero: (-inf.0 0.0)
PASS: numbers.test: Number-theoretic division: truncate/: divide by zero: (+nan.0 0.0)
PASS: numbers.test: Number-theoretic division: truncate/: divide by zero: (+nan.0 0.0)
PASS: numbers.test: Number-theoretic division: truncate/: divide by zero: (+nan.0 0.0)
PASS: numbers.test: Number-theoretic division: truncate/: divide by zero: (15 -0.0)
PASS: numbers.test: Number-theoretic division: truncate/: divide by zero: (15 -0.0)
PASS: numbers.test: Number-theoretic division: truncate/: divide by zero: (15 -0.0)
PASS: numbers.test: Number-theoretic division: truncate/: divide by zero: (15000000000 -0.0)
PASS: numbers.test: Number-theoretic division: truncate/: divide by zero: (15000000000 -0.0)
PASS: numbers.test: Number-theoretic division: truncate/: divide by zero: (15000000000 -0.0)
PASS: numbers.test: Number-theoretic division: truncate/: divide by zero: (18.0 -0.0)
PASS: numbers.test: Number-theoretic division: truncate/: divide by zero: (18.0 -0.0)
PASS: numbers.test: Number-theoretic division: truncate/: divide by zero: (18.0 -0.0)
PASS: numbers.test: Number-theoretic division: truncate/: divide by zero: (33/7 -0.0)
PASS: numbers.test: Number-theoretic division: truncate/: divide by zero: (33/7 -0.0)
PASS: numbers.test: Number-theoretic division: truncate/: divide by zero: (33/7 -0.0)
PASS: numbers.test: Number-theoretic division: truncate/: divide by zero: (0 -0.0)
PASS: numbers.test: Number-theoretic division: truncate/: divide by zero: (0 -0.0)
PASS: numbers.test: Number-theoretic division: truncate/: divide by zero: (0 -0.0)
PASS: numbers.test: Number-theoretic division: truncate/: divide by zero: (0.0 -0.0)
PASS: numbers.test: Number-theoretic division: truncate/: divide by zero: (0.0 -0.0)
PASS: numbers.test: Number-theoretic division: truncate/: divide by zero: (0.0 -0.0)
PASS: numbers.test: Number-theoretic division: truncate/: divide by zero: (-0.0 -0.0)
PASS: numbers.test: Number-theoretic division: truncate/: divide by zero: (-0.0 -0.0)
PASS: numbers.test: Number-theoretic division: truncate/: divide by zero: (-0.0 -0.0)
PASS: numbers.test: Number-theoretic division: truncate/: divide by zero: (+inf.0 -0.0)
PASS: numbers.test: Number-theoretic division: truncate/: divide by zero: (+inf.0 -0.0)
PASS: numbers.test: Number-theoretic division: truncate/: divide by zero: (+inf.0 -0.0)
PASS: numbers.test: Number-theoretic division: truncate/: divide by zero: (-inf.0 -0.0)
PASS: numbers.test: Number-theoretic division: truncate/: divide by zero: (-inf.0 -0.0)
PASS: numbers.test: Number-theoretic division: truncate/: divide by zero: (-inf.0 -0.0)
PASS: numbers.test: Number-theoretic division: truncate/: divide by zero: (+nan.0 -0.0)
PASS: numbers.test: Number-theoretic division: truncate/: divide by zero: (+nan.0 -0.0)
PASS: numbers.test: Number-theoretic division: truncate/: divide by zero: (+nan.0 -0.0)
PASS: numbers.test: Number-theoretic division: centered/: documented?
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: fixnum-min / -1: (-536870912 -1)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-2 1)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-2 -1)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (2 1)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (2 -1)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-1 1)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-1 -1)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (1 1)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (1 -1)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (0 1)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (0 -1)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (1 1)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (1 -1)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-1 1)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-1 -1)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (2 1)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (2 -1)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-2 1)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-2 -1)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (3 1)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (3 -1)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-3 1)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-3 -1)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (4 1)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (4 -1)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-4 1)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-4 -1)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (5 1)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (5 -1)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-5 1)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-5 -1)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (7 1)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (7 -1)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-7 1)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-7 -1)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (10 1)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (10 -1)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-10 1)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-10 -1)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (12 1)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (12 -1)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-12 1)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-12 -1)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (15 1)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (15 -1)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-15 1)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-15 -1)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (16 1)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (16 -1)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-16 1)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-16 -1)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (19 1)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (19 -1)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-19 1)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-19 -1)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (20 1)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (20 -1)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-20 1)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-20 -1)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-1 1)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-1 -1)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (1 1)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (1 -1)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (0 1)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (0 -1)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (1 1)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (1 -1)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-1 1)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-1 -1)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (2 1)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (2 -1)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-2 1)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-2 -1)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (3 1)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (3 -1)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-3 1)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-3 -1)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (4 1)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (4 -1)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-4 1)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-4 -1)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (5 1)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (5 -1)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-5 1)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-5 -1)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (6 1)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (6 -1)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-6 1)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-6 -1)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (8 1)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (8 -1)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-8 1)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-8 -1)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (11 1)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (11 -1)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-11 1)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-11 -1)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (13 1)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (13 -1)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-13 1)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-13 -1)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (16 1)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (16 -1)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-16 1)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-16 -1)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (17 1)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (17 -1)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-17 1)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-17 -1)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (20 1)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (20 -1)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-20 1)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-20 -1)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (21 1)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (21 -1)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-21 1)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-21 -1)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (0 1)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (0 -1)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (1 1)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (1 -1)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-1 1)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-1 -1)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (2 1)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (2 -1)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-2 1)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-2 -1)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (3 1)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (3 -1)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-3 1)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-3 -1)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (4 1)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (4 -1)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-4 1)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-4 -1)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (5 1)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (5 -1)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-5 1)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-5 -1)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (6 1)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (6 -1)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-6 1)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-6 -1)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (7 1)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (7 -1)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-7 1)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-7 -1)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (9 1)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (9 -1)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-9 1)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-9 -1)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (12 1)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (12 -1)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-12 1)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-12 -1)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (14 1)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (14 -1)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-14 1)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-14 -1)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (17 1)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (17 -1)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-17 1)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-17 -1)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (18 1)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (18 -1)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-18 1)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-18 -1)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (21 1)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (21 -1)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-21 1)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-21 -1)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (22 1)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (22 -1)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-22 1)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-22 -1)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (3 1)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (3 -1)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-3 1)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-3 -1)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (4 1)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (4 -1)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-4 1)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-4 -1)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (5 1)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (5 -1)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-5 1)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-5 -1)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (6 1)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (6 -1)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-6 1)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-6 -1)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (7 1)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (7 -1)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-7 1)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-7 -1)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (8 1)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (8 -1)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-8 1)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-8 -1)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (9 1)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (9 -1)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-9 1)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-9 -1)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (10 1)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (10 -1)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-10 1)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-10 -1)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (12 1)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (12 -1)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-12 1)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-12 -1)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (15 1)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (15 -1)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-15 1)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-15 -1)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (17 1)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (17 -1)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-17 1)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-17 -1)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (20 1)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (20 -1)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-20 1)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-20 -1)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (21 1)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (21 -1)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-21 1)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-21 -1)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (24 1)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (24 -1)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-24 1)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-24 -1)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (25 1)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (25 -1)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-25 1)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-25 -1)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (8 1)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (8 -1)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-8 1)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-8 -1)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (9 1)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (9 -1)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-9 1)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-9 -1)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (10 1)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (10 -1)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-10 1)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-10 -1)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (11 1)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (11 -1)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-11 1)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-11 -1)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (12 1)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (12 -1)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-12 1)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-12 -1)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (13 1)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (13 -1)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-13 1)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-13 -1)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (14 1)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (14 -1)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-14 1)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-14 -1)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (15 1)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (15 -1)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-15 1)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-15 -1)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (17 1)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (17 -1)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-17 1)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-17 -1)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (20 1)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (20 -1)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-20 1)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-20 -1)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (22 1)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (22 -1)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-22 1)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-22 -1)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (25 1)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (25 -1)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-25 1)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-25 -1)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (26 1)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (26 -1)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-26 1)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-26 -1)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (29 1)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (29 -1)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-29 1)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-29 -1)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (30 1)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (30 -1)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-30 1)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-30 -1)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-2 2)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-2 -2)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (2 2)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (2 -2)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-1 2)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-1 -2)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (1 2)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (1 -2)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (0 2)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (0 -2)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (1 2)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (1 -2)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-1 2)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-1 -2)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (2 2)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (2 -2)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-2 2)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-2 -2)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (3 2)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (3 -2)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-3 2)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-3 -2)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (4 2)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (4 -2)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-4 2)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-4 -2)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (5 2)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (5 -2)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-5 2)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-5 -2)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (7 2)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (7 -2)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-7 2)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-7 -2)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (10 2)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (10 -2)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-10 2)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-10 -2)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (12 2)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (12 -2)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-12 2)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-12 -2)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (15 2)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (15 -2)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-15 2)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-15 -2)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (16 2)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (16 -2)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-16 2)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-16 -2)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (19 2)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (19 -2)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-19 2)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-19 -2)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (20 2)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (20 -2)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-20 2)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-20 -2)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (0 2)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (0 -2)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (1 2)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (1 -2)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-1 2)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-1 -2)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (2 2)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (2 -2)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-2 2)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-2 -2)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (3 2)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (3 -2)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-3 2)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-3 -2)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (4 2)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (4 -2)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-4 2)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-4 -2)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (5 2)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (5 -2)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-5 2)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-5 -2)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (6 2)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (6 -2)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-6 2)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-6 -2)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (7 2)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (7 -2)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-7 2)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-7 -2)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (9 2)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (9 -2)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-9 2)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-9 -2)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (12 2)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (12 -2)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-12 2)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-12 -2)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (14 2)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (14 -2)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-14 2)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-14 -2)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (17 2)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (17 -2)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-17 2)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-17 -2)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (18 2)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (18 -2)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-18 2)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-18 -2)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (21 2)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (21 -2)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-21 2)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-21 -2)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (22 2)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (22 -2)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-22 2)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-22 -2)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (2 2)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (2 -2)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-2 2)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-2 -2)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (3 2)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (3 -2)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-3 2)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-3 -2)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (4 2)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (4 -2)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-4 2)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-4 -2)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (5 2)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (5 -2)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-5 2)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-5 -2)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (6 2)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (6 -2)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-6 2)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-6 -2)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (7 2)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (7 -2)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-7 2)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-7 -2)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (8 2)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (8 -2)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-8 2)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-8 -2)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (9 2)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (9 -2)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-9 2)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-9 -2)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (11 2)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (11 -2)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-11 2)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-11 -2)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (14 2)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (14 -2)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-14 2)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-14 -2)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (16 2)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (16 -2)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-16 2)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-16 -2)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (19 2)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (19 -2)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-19 2)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-19 -2)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (20 2)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (20 -2)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-20 2)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-20 -2)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (23 2)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (23 -2)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-23 2)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-23 -2)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (24 2)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (24 -2)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-24 2)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-24 -2)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (8 2)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (8 -2)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-8 2)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-8 -2)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (9 2)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (9 -2)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-9 2)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-9 -2)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (10 2)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (10 -2)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-10 2)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-10 -2)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (11 2)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (11 -2)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-11 2)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-11 -2)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (12 2)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (12 -2)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-12 2)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-12 -2)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (13 2)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (13 -2)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-13 2)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-13 -2)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (14 2)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (14 -2)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-14 2)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-14 -2)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (15 2)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (15 -2)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-15 2)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-15 -2)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (17 2)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (17 -2)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-17 2)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-17 -2)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (20 2)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (20 -2)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-20 2)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-20 -2)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (22 2)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (22 -2)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-22 2)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-22 -2)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (25 2)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (25 -2)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-25 2)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-25 -2)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (26 2)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (26 -2)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-26 2)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-26 -2)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (29 2)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (29 -2)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-29 2)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-29 -2)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (30 2)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (30 -2)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-30 2)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-30 -2)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (18 2)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (18 -2)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-18 2)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-18 -2)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (19 2)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (19 -2)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-19 2)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-19 -2)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (20 2)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (20 -2)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-20 2)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-20 -2)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (21 2)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (21 -2)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-21 2)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-21 -2)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (22 2)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (22 -2)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-22 2)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-22 -2)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (23 2)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (23 -2)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-23 2)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-23 -2)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (24 2)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (24 -2)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-24 2)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-24 -2)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (25 2)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (25 -2)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-25 2)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-25 -2)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (27 2)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (27 -2)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-27 2)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-27 -2)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (30 2)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (30 -2)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-30 2)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-30 -2)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (32 2)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (32 -2)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-32 2)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-32 -2)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (35 2)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (35 -2)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-35 2)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-35 -2)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (36 2)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (36 -2)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-36 2)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-36 -2)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (39 2)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (39 -2)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-39 2)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-39 -2)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (40 2)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (40 -2)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-40 2)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-40 -2)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-2 5)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-2 -5)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (2 5)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (2 -5)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-1 5)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-1 -5)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (1 5)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (1 -5)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (0 5)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (0 -5)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (1 5)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (1 -5)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-1 5)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-1 -5)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (2 5)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (2 -5)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-2 5)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-2 -5)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (3 5)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (3 -5)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-3 5)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-3 -5)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (4 5)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (4 -5)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-4 5)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-4 -5)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (5 5)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (5 -5)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-5 5)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-5 -5)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (7 5)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (7 -5)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-7 5)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-7 -5)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (10 5)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (10 -5)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-10 5)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-10 -5)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (12 5)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (12 -5)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-12 5)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-12 -5)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (15 5)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (15 -5)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-15 5)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-15 -5)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (16 5)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (16 -5)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-16 5)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-16 -5)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (19 5)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (19 -5)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-19 5)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-19 -5)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (20 5)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (20 -5)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-20 5)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-20 -5)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (3 5)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (3 -5)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-3 5)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-3 -5)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (4 5)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (4 -5)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-4 5)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-4 -5)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (5 5)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (5 -5)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-5 5)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-5 -5)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (6 5)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (6 -5)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-6 5)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-6 -5)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (7 5)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (7 -5)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-7 5)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-7 -5)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (8 5)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (8 -5)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-8 5)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-8 -5)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (9 5)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (9 -5)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-9 5)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-9 -5)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (10 5)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (10 -5)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-10 5)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-10 -5)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (12 5)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (12 -5)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-12 5)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-12 -5)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (15 5)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (15 -5)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-15 5)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-15 -5)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (17 5)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (17 -5)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-17 5)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-17 -5)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (20 5)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (20 -5)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-20 5)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-20 -5)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (21 5)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (21 -5)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-21 5)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-21 -5)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (24 5)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (24 -5)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-24 5)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-24 -5)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (25 5)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (25 -5)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-25 5)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-25 -5)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (8 5)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (8 -5)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-8 5)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-8 -5)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (9 5)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (9 -5)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-9 5)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-9 -5)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (10 5)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (10 -5)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-10 5)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-10 -5)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (11 5)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (11 -5)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-11 5)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-11 -5)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (12 5)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (12 -5)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-12 5)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-12 -5)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (13 5)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (13 -5)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-13 5)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-13 -5)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (14 5)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (14 -5)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-14 5)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-14 -5)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (15 5)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (15 -5)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-15 5)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-15 -5)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (17 5)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (17 -5)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-17 5)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-17 -5)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (20 5)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (20 -5)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-20 5)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-20 -5)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (22 5)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (22 -5)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-22 5)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-22 -5)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (25 5)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (25 -5)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-25 5)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-25 -5)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (26 5)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (26 -5)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-26 5)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-26 -5)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (29 5)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (29 -5)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-29 5)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-29 -5)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (30 5)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (30 -5)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-30 5)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-30 -5)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (23 5)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (23 -5)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-23 5)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-23 -5)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (24 5)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (24 -5)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-24 5)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-24 -5)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (25 5)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (25 -5)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-25 5)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-25 -5)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (26 5)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (26 -5)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-26 5)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-26 -5)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (27 5)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (27 -5)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-27 5)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-27 -5)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (28 5)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (28 -5)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-28 5)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-28 -5)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (29 5)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (29 -5)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-29 5)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-29 -5)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (30 5)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (30 -5)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-30 5)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-30 -5)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (32 5)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (32 -5)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-32 5)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-32 -5)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (35 5)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (35 -5)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-35 5)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-35 -5)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (37 5)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (37 -5)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-37 5)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-37 -5)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (40 5)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (40 -5)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-40 5)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-40 -5)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (41 5)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (41 -5)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-41 5)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-41 -5)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (44 5)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (44 -5)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-44 5)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-44 -5)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (45 5)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (45 -5)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-45 5)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-45 -5)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (48 5)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (48 -5)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-48 5)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-48 -5)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (49 5)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (49 -5)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-49 5)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-49 -5)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (50 5)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (50 -5)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-50 5)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-50 -5)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (51 5)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (51 -5)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-51 5)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-51 -5)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (52 5)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (52 -5)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-52 5)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-52 -5)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (53 5)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (53 -5)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-53 5)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-53 -5)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (54 5)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (54 -5)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-54 5)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-54 -5)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (55 5)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (55 -5)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-55 5)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-55 -5)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (57 5)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (57 -5)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-57 5)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-57 -5)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (60 5)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (60 -5)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-60 5)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-60 -5)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (62 5)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (62 -5)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-62 5)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-62 -5)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (65 5)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (65 -5)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-65 5)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-65 -5)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (66 5)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (66 -5)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-66 5)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-66 -5)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (69 5)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (69 -5)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-69 5)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-69 -5)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (70 5)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (70 -5)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-70 5)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-70 -5)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-2 10)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-2 -10)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (2 10)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (2 -10)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-1 10)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-1 -10)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (1 10)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (1 -10)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (0 10)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (0 -10)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (1 10)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (1 -10)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-1 10)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-1 -10)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (2 10)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (2 -10)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-2 10)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-2 -10)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (3 10)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (3 -10)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-3 10)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-3 -10)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (4 10)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (4 -10)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-4 10)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-4 -10)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (5 10)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (5 -10)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-5 10)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-5 -10)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (7 10)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (7 -10)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-7 10)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-7 -10)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (10 10)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (10 -10)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-10 10)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-10 -10)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (12 10)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (12 -10)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-12 10)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-12 -10)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (15 10)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (15 -10)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-15 10)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-15 -10)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (16 10)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (16 -10)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-16 10)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-16 -10)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (19 10)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (19 -10)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-19 10)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-19 -10)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (20 10)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (20 -10)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-20 10)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-20 -10)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (8 10)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (8 -10)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-8 10)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-8 -10)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (9 10)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (9 -10)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-9 10)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-9 -10)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (10 10)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (10 -10)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-10 10)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-10 -10)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (11 10)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (11 -10)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-11 10)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-11 -10)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (12 10)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (12 -10)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-12 10)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-12 -10)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (13 10)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (13 -10)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-13 10)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-13 -10)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (14 10)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (14 -10)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-14 10)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-14 -10)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (15 10)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (15 -10)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-15 10)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-15 -10)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (17 10)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (17 -10)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-17 10)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-17 -10)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (20 10)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (20 -10)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-20 10)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-20 -10)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (22 10)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (22 -10)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-22 10)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-22 -10)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (25 10)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (25 -10)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-25 10)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-25 -10)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (26 10)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (26 -10)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-26 10)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-26 -10)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (29 10)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (29 -10)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-29 10)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-29 -10)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (30 10)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (30 -10)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-30 10)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-30 -10)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (18 10)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (18 -10)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-18 10)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-18 -10)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (19 10)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (19 -10)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-19 10)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-19 -10)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (20 10)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (20 -10)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-20 10)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-20 -10)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (21 10)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (21 -10)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-21 10)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-21 -10)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (22 10)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (22 -10)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-22 10)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-22 -10)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (23 10)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (23 -10)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-23 10)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-23 -10)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (24 10)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (24 -10)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-24 10)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-24 -10)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (25 10)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (25 -10)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-25 10)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-25 -10)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (27 10)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (27 -10)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-27 10)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-27 -10)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (30 10)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (30 -10)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-30 10)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-30 -10)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (32 10)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (32 -10)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-32 10)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-32 -10)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (35 10)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (35 -10)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-35 10)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-35 -10)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (36 10)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (36 -10)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-36 10)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-36 -10)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (39 10)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (39 -10)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-39 10)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-39 -10)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (40 10)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (40 -10)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-40 10)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-40 -10)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (48 10)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (48 -10)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-48 10)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-48 -10)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (49 10)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (49 -10)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-49 10)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-49 -10)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (50 10)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (50 -10)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-50 10)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-50 -10)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (51 10)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (51 -10)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-51 10)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-51 -10)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (52 10)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (52 -10)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-52 10)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-52 -10)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (53 10)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (53 -10)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-53 10)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-53 -10)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (54 10)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (54 -10)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-54 10)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-54 -10)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (55 10)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (55 -10)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-55 10)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-55 -10)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (57 10)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (57 -10)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-57 10)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-57 -10)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (60 10)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (60 -10)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-60 10)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-60 -10)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (62 10)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (62 -10)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-62 10)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-62 -10)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (65 10)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (65 -10)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-65 10)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-65 -10)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (66 10)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (66 -10)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-66 10)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-66 -10)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (69 10)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (69 -10)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-69 10)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-69 -10)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (70 10)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (70 -10)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-70 10)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-70 -10)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (98 10)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (98 -10)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-98 10)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-98 -10)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (99 10)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (99 -10)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-99 10)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-99 -10)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (100 10)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (100 -10)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-100 10)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-100 -10)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (101 10)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (101 -10)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-101 10)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-101 -10)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (102 10)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (102 -10)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-102 10)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-102 -10)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (103 10)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (103 -10)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-103 10)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-103 -10)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (104 10)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (104 -10)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-104 10)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-104 -10)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (105 10)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (105 -10)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-105 10)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-105 -10)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (107 10)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (107 -10)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-107 10)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-107 -10)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (110 10)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (110 -10)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-110 10)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-110 -10)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (112 10)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (112 -10)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-112 10)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-112 -10)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (115 10)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (115 -10)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-115 10)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-115 -10)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (116 10)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (116 -10)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-116 10)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-116 -10)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (119 10)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (119 -10)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-119 10)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-119 -10)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (120 10)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (120 -10)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-120 10)
PASS: numbers.test: Number-theoretic division: centered/: inum / inum: (-120 -10)
PASS: numbers.test: Number-theoretic division: centered/: inum / big: fixnum-min / -fixnum-min: (-536870912 536870912)
PASS: numbers.test: Number-theoretic division: centered/: inum / big: fixnum-max / (2*fixnum-max): (536870911 1073741822)
PASS: numbers.test: Number-theoretic division: centered/: inum / big: fixnum-max / (2*fixnum-max): (536870911 -1073741822)
PASS: numbers.test: Number-theoretic division: centered/: inum / big: fixnum-max / (2*fixnum-max): (-536870911 1073741822)
PASS: numbers.test: Number-theoretic division: centered/: inum / big: fixnum-max / (2*fixnum-max): (-536870911 -1073741822)
PASS: numbers.test: Number-theoretic division: centered/: inum / big: (0 536870912)
PASS: numbers.test: Number-theoretic division: centered/: inum / big: (0 536870912)
PASS: numbers.test: Number-theoretic division: centered/: inum / big: (0 -536870913)
PASS: numbers.test: Number-theoretic division: centered/: inum / big: (0 -536870913)
PASS: numbers.test: Number-theoretic division: centered/: inum / big: (1 536870912)
PASS: numbers.test: Number-theoretic division: centered/: inum / big: (-1 536870912)
PASS: numbers.test: Number-theoretic division: centered/: inum / big: (1 -536870913)
PASS: numbers.test: Number-theoretic division: centered/: inum / big: (-1 -536870913)
PASS: numbers.test: Number-theoretic division: centered/: inum / big: (2 536870912)
PASS: numbers.test: Number-theoretic division: centered/: inum / big: (-2 536870912)
PASS: numbers.test: Number-theoretic division: centered/: inum / big: (2 -536870913)
PASS: numbers.test: Number-theoretic division: centered/: inum / big: (-2 -536870913)
PASS: numbers.test: Number-theoretic division: centered/: inum / big: (10 536870912)
PASS: numbers.test: Number-theoretic division: centered/: inum / big: (-10 536870912)
PASS: numbers.test: Number-theoretic division: centered/: inum / big: (10 -536870913)
PASS: numbers.test: Number-theoretic division: centered/: inum / big: (-10 -536870913)
PASS: numbers.test: Number-theoretic division: centered/: inum / big: (536870910 536870912)
PASS: numbers.test: Number-theoretic division: centered/: inum / big: (-536870910 536870912)
PASS: numbers.test: Number-theoretic division: centered/: inum / big: (536870910 -536870913)
PASS: numbers.test: Number-theoretic division: centered/: inum / big: (-536870910 -536870913)
PASS: numbers.test: Number-theoretic division: centered/: inum / big: (536870911 536870912)
PASS: numbers.test: Number-theoretic division: centered/: inum / big: (-536870911 536870912)
PASS: numbers.test: Number-theoretic division: centered/: inum / big: (536870911 -536870913)
PASS: numbers.test: Number-theoretic division: centered/: inum / big: (-536870911 -536870913)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: -fixnum-min / fixnum-min: (536870912 -536870912)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (9999999998 1)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (9999999998 -1)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (-9999999998 1)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (-9999999998 -1)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (9999999999 1)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (9999999999 -1)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (-9999999999 1)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (-9999999999 -1)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (10000000000 1)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (10000000000 -1)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (-10000000000 1)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (-10000000000 -1)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (10000000001 1)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (10000000001 -1)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (-10000000001 1)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (-10000000001 -1)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (10000000002 1)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (10000000002 -1)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (-10000000002 1)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (-10000000002 -1)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (19999999998 1)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (19999999998 -1)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (-19999999998 1)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (-19999999998 -1)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (19999999999 1)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (19999999999 -1)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (-19999999999 1)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (-19999999999 -1)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (20000000000 1)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (20000000000 -1)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (-20000000000 1)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (-20000000000 -1)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (20000000001 1)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (20000000001 -1)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (-20000000001 1)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (-20000000001 -1)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (20000000002 1)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (20000000002 -1)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (-20000000002 1)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (-20000000002 -1)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (49999999998 1)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (49999999998 -1)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (-49999999998 1)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (-49999999998 -1)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (49999999999 1)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (49999999999 -1)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (-49999999999 1)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (-49999999999 -1)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (50000000000 1)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (50000000000 -1)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (-50000000000 1)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (-50000000000 -1)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (50000000001 1)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (50000000001 -1)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (-50000000001 1)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (-50000000001 -1)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (50000000002 1)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (50000000002 -1)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (-50000000002 1)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (-50000000002 -1)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (39999999998 4)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (39999999998 -4)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (-39999999998 4)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (-39999999998 -4)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (39999999999 4)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (39999999999 -4)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (-39999999999 4)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (-39999999999 -4)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (40000000000 4)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (40000000000 -4)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (-40000000000 4)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (-40000000000 -4)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (40000000001 4)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (40000000001 -4)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (-40000000001 4)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (-40000000001 -4)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (40000000002 4)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (40000000002 -4)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (-40000000002 4)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (-40000000002 -4)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (79999999998 4)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (79999999998 -4)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (-79999999998 4)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (-79999999998 -4)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (79999999999 4)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (79999999999 -4)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (-79999999999 4)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (-79999999999 -4)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (80000000000 4)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (80000000000 -4)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (-80000000000 4)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (-80000000000 -4)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (80000000001 4)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (80000000001 -4)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (-80000000001 4)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (-80000000001 -4)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (80000000002 4)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (80000000002 -4)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (-80000000002 4)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (-80000000002 -4)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (199999999998 4)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (199999999998 -4)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (-199999999998 4)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (-199999999998 -4)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (199999999999 4)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (199999999999 -4)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (-199999999999 4)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (-199999999999 -4)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (200000000000 4)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (200000000000 -4)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (-200000000000 4)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (-200000000000 -4)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (200000000001 4)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (200000000001 -4)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (-200000000001 4)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (-200000000001 -4)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (200000000002 4)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (200000000002 -4)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (-200000000002 4)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (-200000000002 -4)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (19999999998 4)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (19999999998 -4)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (-19999999998 4)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (-19999999998 -4)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (19999999999 4)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (19999999999 -4)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (-19999999999 4)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (-19999999999 -4)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (20000000000 4)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (20000000000 -4)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (-20000000000 4)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (-20000000000 -4)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (20000000001 4)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (20000000001 -4)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (-20000000001 4)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (-20000000001 -4)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (20000000002 4)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (20000000002 -4)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (-20000000002 4)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (-20000000002 -4)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (59999999998 4)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (59999999998 -4)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (-59999999998 4)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (-59999999998 -4)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (59999999999 4)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (59999999999 -4)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (-59999999999 4)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (-59999999999 -4)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (60000000000 4)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (60000000000 -4)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (-60000000000 4)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (-60000000000 -4)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (60000000001 4)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (60000000001 -4)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (-60000000001 4)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (-60000000001 -4)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (60000000002 4)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (60000000002 -4)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (-60000000002 4)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (-60000000002 -4)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (99999999998 4)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (99999999998 -4)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (-99999999998 4)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (-99999999998 -4)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (99999999999 4)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (99999999999 -4)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (-99999999999 4)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (-99999999999 -4)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (100000000000 4)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (100000000000 -4)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (-100000000000 4)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (-100000000000 -4)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (100000000001 4)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (100000000001 -4)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (-100000000001 4)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (-100000000001 -4)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (100000000002 4)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (100000000002 -4)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (-100000000002 4)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (-100000000002 -4)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (49999999998 5)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (49999999998 -5)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (-49999999998 5)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (-49999999998 -5)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (49999999999 5)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (49999999999 -5)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (-49999999999 5)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (-49999999999 -5)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (50000000000 5)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (50000000000 -5)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (-50000000000 5)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (-50000000000 -5)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (50000000001 5)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (50000000001 -5)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (-50000000001 5)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (-50000000001 -5)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (50000000002 5)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (50000000002 -5)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (-50000000002 5)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (-50000000002 -5)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (99999999998 5)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (99999999998 -5)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (-99999999998 5)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (-99999999998 -5)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (99999999999 5)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (99999999999 -5)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (-99999999999 5)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (-99999999999 -5)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (100000000000 5)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (100000000000 -5)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (-100000000000 5)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (-100000000000 -5)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (100000000001 5)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (100000000001 -5)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (-100000000001 5)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (-100000000001 -5)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (100000000002 5)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (100000000002 -5)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (-100000000002 5)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (-100000000002 -5)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (249999999998 5)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (249999999998 -5)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (-249999999998 5)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (-249999999998 -5)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (249999999999 5)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (249999999999 -5)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (-249999999999 5)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (-249999999999 -5)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (250000000000 5)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (250000000000 -5)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (-250000000000 5)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (-250000000000 -5)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (250000000001 5)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (250000000001 -5)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (-250000000001 5)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (-250000000001 -5)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (250000000002 5)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (250000000002 -5)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (-250000000002 5)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (-250000000002 -5)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (99999999998 10)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (99999999998 -10)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (-99999999998 10)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (-99999999998 -10)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (99999999999 10)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (99999999999 -10)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (-99999999999 10)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (-99999999999 -10)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (100000000000 10)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (100000000000 -10)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (-100000000000 10)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (-100000000000 -10)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (100000000001 10)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (100000000001 -10)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (-100000000001 10)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (-100000000001 -10)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (100000000002 10)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (100000000002 -10)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (-100000000002 10)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (-100000000002 -10)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (199999999998 10)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (199999999998 -10)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (-199999999998 10)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (-199999999998 -10)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (199999999999 10)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (199999999999 -10)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (-199999999999 10)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (-199999999999 -10)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (200000000000 10)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (200000000000 -10)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (-200000000000 10)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (-200000000000 -10)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (200000000001 10)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (200000000001 -10)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (-200000000001 10)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (-200000000001 -10)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (200000000002 10)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (200000000002 -10)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (-200000000002 10)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (-200000000002 -10)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (499999999998 10)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (499999999998 -10)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (-499999999998 10)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (-499999999998 -10)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (499999999999 10)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (499999999999 -10)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (-499999999999 10)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (-499999999999 -10)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (500000000000 10)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (500000000000 -10)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (-500000000000 10)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (-500000000000 -10)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (500000000001 10)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (500000000001 -10)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (-500000000001 10)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (-500000000001 -10)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (500000000002 10)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (500000000002 -10)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (-500000000002 10)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (-500000000002 -10)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (49999999998 10)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (49999999998 -10)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (-49999999998 10)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (-49999999998 -10)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (49999999999 10)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (49999999999 -10)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (-49999999999 10)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (-49999999999 -10)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (50000000000 10)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (50000000000 -10)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (-50000000000 10)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (-50000000000 -10)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (50000000001 10)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (50000000001 -10)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (-50000000001 10)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (-50000000001 -10)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (50000000002 10)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (50000000002 -10)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (-50000000002 10)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (-50000000002 -10)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (149999999998 10)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (149999999998 -10)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (-149999999998 10)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (-149999999998 -10)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (149999999999 10)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (149999999999 -10)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (-149999999999 10)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (-149999999999 -10)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (150000000000 10)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (150000000000 -10)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (-150000000000 10)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (-150000000000 -10)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (150000000001 10)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (150000000001 -10)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (-150000000001 10)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (-150000000001 -10)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (150000000002 10)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (150000000002 -10)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (-150000000002 10)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (-150000000002 -10)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (249999999998 10)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (249999999998 -10)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (-249999999998 10)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (-249999999998 -10)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (249999999999 10)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (249999999999 -10)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (-249999999999 10)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (-249999999999 -10)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (250000000000 10)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (250000000000 -10)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (-250000000000 10)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (-250000000000 -10)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (250000000001 10)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (250000000001 -10)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (-250000000001 10)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (-250000000001 -10)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (250000000002 10)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (250000000002 -10)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (-250000000002 10)
PASS: numbers.test: Number-theoretic division: centered/: big / inum: (-250000000002 -10)
PASS: numbers.test: Number-theoretic division: centered/: big / big: (9999999998 10000000000)
PASS: numbers.test: Number-theoretic division: centered/: big / big: (9999999998 -10000000000)
PASS: numbers.test: Number-theoretic division: centered/: big / big: (-9999999998 10000000000)
PASS: numbers.test: Number-theoretic division: centered/: big / big: (-9999999998 -10000000000)
PASS: numbers.test: Number-theoretic division: centered/: big / big: (9999999999 10000000000)
PASS: numbers.test: Number-theoretic division: centered/: big / big: (9999999999 -10000000000)
PASS: numbers.test: Number-theoretic division: centered/: big / big: (-9999999999 10000000000)
PASS: numbers.test: Number-theoretic division: centered/: big / big: (-9999999999 -10000000000)
PASS: numbers.test: Number-theoretic division: centered/: big / big: (10000000000 10000000000)
PASS: numbers.test: Number-theoretic division: centered/: big / big: (10000000000 -10000000000)
PASS: numbers.test: Number-theoretic division: centered/: big / big: (-10000000000 10000000000)
PASS: numbers.test: Number-theoretic division: centered/: big / big: (-10000000000 -10000000000)
PASS: numbers.test: Number-theoretic division: centered/: big / big: (10000000001 10000000000)
PASS: numbers.test: Number-theoretic division: centered/: big / big: (10000000001 -10000000000)
PASS: numbers.test: Number-theoretic division: centered/: big / big: (-10000000001 10000000000)
PASS: numbers.test: Number-theoretic division: centered/: big / big: (-10000000001 -10000000000)
PASS: numbers.test: Number-theoretic division: centered/: big / big: (10000000002 10000000000)
PASS: numbers.test: Number-theoretic division: centered/: big / big: (10000000002 -10000000000)
PASS: numbers.test: Number-theoretic division: centered/: big / big: (-10000000002 10000000000)
PASS: numbers.test: Number-theoretic division: centered/: big / big: (-10000000002 -10000000000)
PASS: numbers.test: Number-theoretic division: centered/: big / big: (19999999998 10000000000)
PASS: numbers.test: Number-theoretic division: centered/: big / big: (19999999998 -10000000000)
PASS: numbers.test: Number-theoretic division: centered/: big / big: (-19999999998 10000000000)
PASS: numbers.test: Number-theoretic division: centered/: big / big: (-19999999998 -10000000000)
PASS: numbers.test: Number-theoretic division: centered/: big / big: (19999999999 10000000000)
PASS: numbers.test: Number-theoretic division: centered/: big / big: (19999999999 -10000000000)
PASS: numbers.test: Number-theoretic division: centered/: big / big: (-19999999999 10000000000)
PASS: numbers.test: Number-theoretic division: centered/: big / big: (-19999999999 -10000000000)
PASS: numbers.test: Number-theoretic division: centered/: big / big: (20000000000 10000000000)
PASS: numbers.test: Number-theoretic division: centered/: big / big: (20000000000 -10000000000)
PASS: numbers.test: Number-theoretic division: centered/: big / big: (-20000000000 10000000000)
PASS: numbers.test: Number-theoretic division: centered/: big / big: (-20000000000 -10000000000)
PASS: numbers.test: Number-theoretic division: centered/: big / big: (20000000001 10000000000)
PASS: numbers.test: Number-theoretic division: centered/: big / big: (20000000001 -10000000000)
PASS: numbers.test: Number-theoretic division: centered/: big / big: (-20000000001 10000000000)
PASS: numbers.test: Number-theoretic division: centered/: big / big: (-20000000001 -10000000000)
PASS: numbers.test: Number-theoretic division: centered/: big / big: (20000000002 10000000000)
PASS: numbers.test: Number-theoretic division: centered/: big / big: (20000000002 -10000000000)
PASS: numbers.test: Number-theoretic division: centered/: big / big: (-20000000002 10000000000)
PASS: numbers.test: Number-theoretic division: centered/: big / big: (-20000000002 -10000000000)
PASS: numbers.test: Number-theoretic division: centered/: big / big: (49999999998 10000000000)
PASS: numbers.test: Number-theoretic division: centered/: big / big: (49999999998 -10000000000)
PASS: numbers.test: Number-theoretic division: centered/: big / big: (-49999999998 10000000000)
PASS: numbers.test: Number-theoretic division: centered/: big / big: (-49999999998 -10000000000)
PASS: numbers.test: Number-theoretic division: centered/: big / big: (49999999999 10000000000)
PASS: numbers.test: Number-theoretic division: centered/: big / big: (49999999999 -10000000000)
PASS: numbers.test: Number-theoretic division: centered/: big / big: (-49999999999 10000000000)
PASS: numbers.test: Number-theoretic division: centered/: big / big: (-49999999999 -10000000000)
PASS: numbers.test: Number-theoretic division: centered/: big / big: (50000000000 10000000000)
PASS: numbers.test: Number-theoretic division: centered/: big / big: (50000000000 -10000000000)
PASS: numbers.test: Number-theoretic division: centered/: big / big: (-50000000000 10000000000)
PASS: numbers.test: Number-theoretic division: centered/: big / big: (-50000000000 -10000000000)
PASS: numbers.test: Number-theoretic division: centered/: big / big: (50000000001 10000000000)
PASS: numbers.test: Number-theoretic division: centered/: big / big: (50000000001 -10000000000)
PASS: numbers.test: Number-theoretic division: centered/: big / big: (-50000000001 10000000000)
PASS: numbers.test: Number-theoretic division: centered/: big / big: (-50000000001 -10000000000)
PASS: numbers.test: Number-theoretic division: centered/: big / big: (50000000002 10000000000)
PASS: numbers.test: Number-theoretic division: centered/: big / big: (50000000002 -10000000000)
PASS: numbers.test: Number-theoretic division: centered/: big / big: (-50000000002 10000000000)
PASS: numbers.test: Number-theoretic division: centered/: big / big: (-50000000002 -10000000000)
PASS: numbers.test: Number-theoretic division: centered/: big / big: (4999999998 10000000000)
PASS: numbers.test: Number-theoretic division: centered/: big / big: (4999999998 -10000000000)
PASS: numbers.test: Number-theoretic division: centered/: big / big: (-4999999998 10000000000)
PASS: numbers.test: Number-theoretic division: centered/: big / big: (-4999999998 -10000000000)
PASS: numbers.test: Number-theoretic division: centered/: big / big: (4999999999 10000000000)
PASS: numbers.test: Number-theoretic division: centered/: big / big: (4999999999 -10000000000)
PASS: numbers.test: Number-theoretic division: centered/: big / big: (-4999999999 10000000000)
PASS: numbers.test: Number-theoretic division: centered/: big / big: (-4999999999 -10000000000)
PASS: numbers.test: Number-theoretic division: centered/: big / big: (5000000000 10000000000)
PASS: numbers.test: Number-theoretic division: centered/: big / big: (5000000000 -10000000000)
PASS: numbers.test: Number-theoretic division: centered/: big / big: (-5000000000 10000000000)
PASS: numbers.test: Number-theoretic division: centered/: big / big: (-5000000000 -10000000000)
PASS: numbers.test: Number-theoretic division: centered/: big / big: (5000000001 10000000000)
PASS: numbers.test: Number-theoretic division: centered/: big / big: (5000000001 -10000000000)
PASS: numbers.test: Number-theoretic division: centered/: big / big: (-5000000001 10000000000)
PASS: numbers.test: Number-theoretic division: centered/: big / big: (-5000000001 -10000000000)
PASS: numbers.test: Number-theoretic division: centered/: big / big: (5000000002 10000000000)
PASS: numbers.test: Number-theoretic division: centered/: big / big: (5000000002 -10000000000)
PASS: numbers.test: Number-theoretic division: centered/: big / big: (-5000000002 10000000000)
PASS: numbers.test: Number-theoretic division: centered/: big / big: (-5000000002 -10000000000)
PASS: numbers.test: Number-theoretic division: centered/: big / big: (14999999998 10000000000)
PASS: numbers.test: Number-theoretic division: centered/: big / big: (14999999998 -10000000000)
PASS: numbers.test: Number-theoretic division: centered/: big / big: (-14999999998 10000000000)
PASS: numbers.test: Number-theoretic division: centered/: big / big: (-14999999998 -10000000000)
PASS: numbers.test: Number-theoretic division: centered/: big / big: (14999999999 10000000000)
PASS: numbers.test: Number-theoretic division: centered/: big / big: (14999999999 -10000000000)
PASS: numbers.test: Number-theoretic division: centered/: big / big: (-14999999999 10000000000)
PASS: numbers.test: Number-theoretic division: centered/: big / big: (-14999999999 -10000000000)
PASS: numbers.test: Number-theoretic division: centered/: big / big: (15000000000 10000000000)
PASS: numbers.test: Number-theoretic division: centered/: big / big: (15000000000 -10000000000)
PASS: numbers.test: Number-theoretic division: centered/: big / big: (-15000000000 10000000000)
PASS: numbers.test: Number-theoretic division: centered/: big / big: (-15000000000 -10000000000)
PASS: numbers.test: Number-theoretic division: centered/: big / big: (15000000001 10000000000)
PASS: numbers.test: Number-theoretic division: centered/: big / big: (15000000001 -10000000000)
PASS: numbers.test: Number-theoretic division: centered/: big / big: (-15000000001 10000000000)
PASS: numbers.test: Number-theoretic division: centered/: big / big: (-15000000001 -10000000000)
PASS: numbers.test: Number-theoretic division: centered/: big / big: (15000000002 10000000000)
PASS: numbers.test: Number-theoretic division: centered/: big / big: (15000000002 -10000000000)
PASS: numbers.test: Number-theoretic division: centered/: big / big: (-15000000002 10000000000)
PASS: numbers.test: Number-theoretic division: centered/: big / big: (-15000000002 -10000000000)
PASS: numbers.test: Number-theoretic division: centered/: big / big: (24999999998 10000000000)
PASS: numbers.test: Number-theoretic division: centered/: big / big: (24999999998 -10000000000)
PASS: numbers.test: Number-theoretic division: centered/: big / big: (-24999999998 10000000000)
PASS: numbers.test: Number-theoretic division: centered/: big / big: (-24999999998 -10000000000)
PASS: numbers.test: Number-theoretic division: centered/: big / big: (24999999999 10000000000)
PASS: numbers.test: Number-theoretic division: centered/: big / big: (24999999999 -10000000000)
PASS: numbers.test: Number-theoretic division: centered/: big / big: (-24999999999 10000000000)
PASS: numbers.test: Number-theoretic division: centered/: big / big: (-24999999999 -10000000000)
PASS: numbers.test: Number-theoretic division: centered/: big / big: (25000000000 10000000000)
PASS: numbers.test: Number-theoretic division: centered/: big / big: (25000000000 -10000000000)
PASS: numbers.test: Number-theoretic division: centered/: big / big: (-25000000000 10000000000)
PASS: numbers.test: Number-theoretic division: centered/: big / big: (-25000000000 -10000000000)
PASS: numbers.test: Number-theoretic division: centered/: big / big: (25000000001 10000000000)
PASS: numbers.test: Number-theoretic division: centered/: big / big: (25000000001 -10000000000)
PASS: numbers.test: Number-theoretic division: centered/: big / big: (-25000000001 10000000000)
PASS: numbers.test: Number-theoretic division: centered/: big / big: (-25000000001 -10000000000)
PASS: numbers.test: Number-theoretic division: centered/: big / big: (25000000002 10000000000)
PASS: numbers.test: Number-theoretic division: centered/: big / big: (25000000002 -10000000000)
PASS: numbers.test: Number-theoretic division: centered/: big / big: (-25000000002 10000000000)
PASS: numbers.test: Number-theoretic division: centered/: big / big: (-25000000002 -10000000000)
PASS: numbers.test: Number-theoretic division: centered/: big / big: (9999999999 10000000001)
PASS: numbers.test: Number-theoretic division: centered/: big / big: (9999999999 -10000000001)
PASS: numbers.test: Number-theoretic division: centered/: big / big: (-9999999999 10000000001)
PASS: numbers.test: Number-theoretic division: centered/: big / big: (-9999999999 -10000000001)
PASS: numbers.test: Number-theoretic division: centered/: big / big: (10000000000 10000000001)
PASS: numbers.test: Number-theoretic division: centered/: big / big: (10000000000 -10000000001)
PASS: numbers.test: Number-theoretic division: centered/: big / big: (-10000000000 10000000001)
PASS: numbers.test: Number-theoretic division: centered/: big / big: (-10000000000 -10000000001)
PASS: numbers.test: Number-theoretic division: centered/: big / big: (10000000001 10000000001)
PASS: numbers.test: Number-theoretic division: centered/: big / big: (10000000001 -10000000001)
PASS: numbers.test: Number-theoretic division: centered/: big / big: (-10000000001 10000000001)
PASS: numbers.test: Number-theoretic division: centered/: big / big: (-10000000001 -10000000001)
PASS: numbers.test: Number-theoretic division: centered/: big / big: (10000000002 10000000001)
PASS: numbers.test: Number-theoretic division: centered/: big / big: (10000000002 -10000000001)
PASS: numbers.test: Number-theoretic division: centered/: big / big: (-10000000002 10000000001)
PASS: numbers.test: Number-theoretic division: centered/: big / big: (-10000000002 -10000000001)
PASS: numbers.test: Number-theoretic division: centered/: big / big: (10000000003 10000000001)
PASS: numbers.test: Number-theoretic division: centered/: big / big: (10000000003 -10000000001)
PASS: numbers.test: Number-theoretic division: centered/: big / big: (-10000000003 10000000001)
PASS: numbers.test: Number-theoretic division: centered/: big / big: (-10000000003 -10000000001)
PASS: numbers.test: Number-theoretic division: centered/: big / big: (20000000000 10000000001)
PASS: numbers.test: Number-theoretic division: centered/: big / big: (20000000000 -10000000001)
PASS: numbers.test: Number-theoretic division: centered/: big / big: (-20000000000 10000000001)
PASS: numbers.test: Number-theoretic division: centered/: big / big: (-20000000000 -10000000001)
PASS: numbers.test: Number-theoretic division: centered/: big / big: (20000000001 10000000001)
PASS: numbers.test: Number-theoretic division: centered/: big / big: (20000000001 -10000000001)
PASS: numbers.test: Number-theoretic division: centered/: big / big: (-20000000001 10000000001)
PASS: numbers.test: Number-theoretic division: centered/: big / big: (-20000000001 -10000000001)
PASS: numbers.test: Number-theoretic division: centered/: big / big: (20000000002 10000000001)
PASS: numbers.test: Number-theoretic division: centered/: big / big: (20000000002 -10000000001)
PASS: numbers.test: Number-theoretic division: centered/: big / big: (-20000000002 10000000001)
PASS: numbers.test: Number-theoretic division: centered/: big / big: (-20000000002 -10000000001)
PASS: numbers.test: Number-theoretic division: centered/: big / big: (20000000003 10000000001)
PASS: numbers.test: Number-theoretic division: centered/: big / big: (20000000003 -10000000001)
PASS: numbers.test: Number-theoretic division: centered/: big / big: (-20000000003 10000000001)
PASS: numbers.test: Number-theoretic division: centered/: big / big: (-20000000003 -10000000001)
PASS: numbers.test: Number-theoretic division: centered/: big / big: (20000000004 10000000001)
PASS: numbers.test: Number-theoretic division: centered/: big / big: (20000000004 -10000000001)
PASS: numbers.test: Number-theoretic division: centered/: big / big: (-20000000004 10000000001)
PASS: numbers.test: Number-theoretic division: centered/: big / big: (-20000000004 -10000000001)
PASS: numbers.test: Number-theoretic division: centered/: big / big: (50000000003 10000000001)
PASS: numbers.test: Number-theoretic division: centered/: big / big: (50000000003 -10000000001)
PASS: numbers.test: Number-theoretic division: centered/: big / big: (-50000000003 10000000001)
PASS: numbers.test: Number-theoretic division: centered/: big / big: (-50000000003 -10000000001)
PASS: numbers.test: Number-theoretic division: centered/: big / big: (50000000004 10000000001)
PASS: numbers.test: Number-theoretic division: centered/: big / big: (50000000004 -10000000001)
PASS: numbers.test: Number-theoretic division: centered/: big / big: (-50000000004 10000000001)
PASS: numbers.test: Number-theoretic division: centered/: big / big: (-50000000004 -10000000001)
PASS: numbers.test: Number-theoretic division: centered/: big / big: (50000000005 10000000001)
PASS: numbers.test: Number-theoretic division: centered/: big / big: (50000000005 -10000000001)
PASS: numbers.test: Number-theoretic division: centered/: big / big: (-50000000005 10000000001)
PASS: numbers.test: Number-theoretic division: centered/: big / big: (-50000000005 -10000000001)
PASS: numbers.test: Number-theoretic division: centered/: big / big: (50000000006 10000000001)
PASS: numbers.test: Number-theoretic division: centered/: big / big: (50000000006 -10000000001)
PASS: numbers.test: Number-theoretic division: centered/: big / big: (-50000000006 10000000001)
PASS: numbers.test: Number-theoretic division: centered/: big / big: (-50000000006 -10000000001)
PASS: numbers.test: Number-theoretic division: centered/: big / big: (50000000007 10000000001)
PASS: numbers.test: Number-theoretic division: centered/: big / big: (50000000007 -10000000001)
PASS: numbers.test: Number-theoretic division: centered/: big / big: (-50000000007 10000000001)
PASS: numbers.test: Number-theoretic division: centered/: big / big: (-50000000007 -10000000001)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (-2.0 0.5)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (-2.0 -0.5)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (2.0 0.5)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (2.0 -0.5)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (-1.0 0.5)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (-1.0 -0.5)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (1.0 0.5)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (1.0 -0.5)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (0.0 0.5)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (0.0 -0.5)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (1.0 0.5)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (1.0 -0.5)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (-1.0 0.5)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (-1.0 -0.5)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (2.0 0.5)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (2.0 -0.5)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (-2.0 0.5)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (-2.0 -0.5)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (-1.5 0.5)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (-1.5 -0.5)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (1.5 0.5)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (1.5 -0.5)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (-0.5 0.5)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (-0.5 -0.5)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (0.5 0.5)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (0.5 -0.5)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (0.5 0.5)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (0.5 -0.5)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (-0.5 0.5)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (-0.5 -0.5)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (1.5 0.5)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (1.5 -0.5)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (-1.5 0.5)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (-1.5 -0.5)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (2.5 0.5)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (2.5 -0.5)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (-2.5 0.5)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (-2.5 -0.5)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (-1.0 0.5)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (-1.0 -0.5)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (1.0 0.5)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (1.0 -0.5)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (0.0 0.5)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (0.0 -0.5)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (1.0 0.5)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (1.0 -0.5)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (-1.0 0.5)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (-1.0 -0.5)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (2.0 0.5)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (2.0 -0.5)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (-2.0 0.5)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (-2.0 -0.5)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (3.0 0.5)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (3.0 -0.5)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (-3.0 0.5)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (-3.0 -0.5)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (0.5 0.5)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (0.5 -0.5)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (-0.5 0.5)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (-0.5 -0.5)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (1.5 0.5)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (1.5 -0.5)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (-1.5 0.5)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (-1.5 -0.5)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (2.5 0.5)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (2.5 -0.5)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (-2.5 0.5)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (-2.5 -0.5)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (3.5 0.5)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (3.5 -0.5)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (-3.5 0.5)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (-3.5 -0.5)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (4.5 0.5)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (4.5 -0.5)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (-4.5 0.5)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (-4.5 -0.5)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (-1.75 0.5)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (-1.75 -0.5)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (1.75 0.5)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (1.75 -0.5)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (-0.75 0.5)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (-0.75 -0.5)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (0.75 0.5)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (0.75 -0.5)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (0.25 0.5)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (0.25 -0.5)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (-0.25 0.5)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (-0.25 -0.5)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (1.25 0.5)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (1.25 -0.5)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (-1.25 0.5)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (-1.25 -0.5)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (2.25 0.5)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (2.25 -0.5)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (-2.25 0.5)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (-2.25 -0.5)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (-1.25 0.5)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (-1.25 -0.5)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (1.25 0.5)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (1.25 -0.5)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (-0.25 0.5)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (-0.25 -0.5)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (0.25 0.5)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (0.25 -0.5)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (0.75 0.5)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (0.75 -0.5)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (-0.75 0.5)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (-0.75 -0.5)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (1.75 0.5)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (1.75 -0.5)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (-1.75 0.5)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (-1.75 -0.5)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (2.75 0.5)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (2.75 -0.5)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (-2.75 0.5)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (-2.75 -0.5)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (-0.75 0.5)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (-0.75 -0.5)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (0.75 0.5)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (0.75 -0.5)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (0.25 0.5)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (0.25 -0.5)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (-0.25 0.5)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (-0.25 -0.5)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (1.25 0.5)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (1.25 -0.5)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (-1.25 0.5)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (-1.25 -0.5)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (2.25 0.5)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (2.25 -0.5)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (-2.25 0.5)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (-2.25 -0.5)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (3.25 0.5)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (3.25 -0.5)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (-3.25 0.5)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (-3.25 -0.5)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (-2.0 1.5)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (-2.0 -1.5)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (2.0 1.5)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (2.0 -1.5)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (-1.0 1.5)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (-1.0 -1.5)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (1.0 1.5)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (1.0 -1.5)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (0.0 1.5)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (0.0 -1.5)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (1.0 1.5)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (1.0 -1.5)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (-1.0 1.5)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (-1.0 -1.5)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (2.0 1.5)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (2.0 -1.5)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (-2.0 1.5)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (-2.0 -1.5)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (-0.5 1.5)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (-0.5 -1.5)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (0.5 1.5)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (0.5 -1.5)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (0.5 1.5)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (0.5 -1.5)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (-0.5 1.5)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (-0.5 -1.5)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (1.5 1.5)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (1.5 -1.5)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (-1.5 1.5)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (-1.5 -1.5)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (2.5 1.5)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (2.5 -1.5)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (-2.5 1.5)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (-2.5 -1.5)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (3.5 1.5)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (3.5 -1.5)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (-3.5 1.5)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (-3.5 -1.5)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (1.0 1.5)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (1.0 -1.5)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (-1.0 1.5)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (-1.0 -1.5)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (2.0 1.5)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (2.0 -1.5)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (-2.0 1.5)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (-2.0 -1.5)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (3.0 1.5)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (3.0 -1.5)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (-3.0 1.5)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (-3.0 -1.5)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (4.0 1.5)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (4.0 -1.5)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (-4.0 1.5)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (-4.0 -1.5)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (5.0 1.5)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (5.0 -1.5)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (-5.0 1.5)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (-5.0 -1.5)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (5.5 1.5)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (5.5 -1.5)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (-5.5 1.5)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (-5.5 -1.5)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (6.5 1.5)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (6.5 -1.5)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (-6.5 1.5)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (-6.5 -1.5)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (7.5 1.5)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (7.5 -1.5)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (-7.5 1.5)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (-7.5 -1.5)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (8.5 1.5)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (8.5 -1.5)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (-8.5 1.5)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (-8.5 -1.5)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (9.5 1.5)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (9.5 -1.5)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (-9.5 1.5)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (-9.5 -1.5)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (-1.25 1.5)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (-1.25 -1.5)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (1.25 1.5)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (1.25 -1.5)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (-0.25 1.5)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (-0.25 -1.5)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (0.25 1.5)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (0.25 -1.5)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (0.75 1.5)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (0.75 -1.5)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (-0.75 1.5)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (-0.75 -1.5)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (1.75 1.5)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (1.75 -1.5)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (-1.75 1.5)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (-1.75 -1.5)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (2.75 1.5)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (2.75 -1.5)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (-2.75 1.5)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (-2.75 -1.5)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (0.25 1.5)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (0.25 -1.5)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (-0.25 1.5)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (-0.25 -1.5)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (1.25 1.5)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (1.25 -1.5)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (-1.25 1.5)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (-1.25 -1.5)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (2.25 1.5)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (2.25 -1.5)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (-2.25 1.5)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (-2.25 -1.5)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (3.25 1.5)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (3.25 -1.5)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (-3.25 1.5)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (-3.25 -1.5)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (4.25 1.5)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (4.25 -1.5)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (-4.25 1.5)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (-4.25 -1.5)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (1.75 1.5)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (1.75 -1.5)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (-1.75 1.5)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (-1.75 -1.5)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (2.75 1.5)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (2.75 -1.5)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (-2.75 1.5)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (-2.75 -1.5)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (3.75 1.5)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (3.75 -1.5)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (-3.75 1.5)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (-3.75 -1.5)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (4.75 1.5)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (4.75 -1.5)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (-4.75 1.5)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (-4.75 -1.5)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (5.75 1.5)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (5.75 -1.5)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (-5.75 1.5)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (-5.75 -1.5)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (-2.0 2.25)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (-2.0 -2.25)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (2.0 2.25)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (2.0 -2.25)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (-1.0 2.25)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (-1.0 -2.25)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (1.0 2.25)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (1.0 -2.25)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (0.0 2.25)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (0.0 -2.25)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (1.0 2.25)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (1.0 -2.25)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (-1.0 2.25)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (-1.0 -2.25)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (2.0 2.25)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (2.0 -2.25)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (-2.0 2.25)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (-2.0 -2.25)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (0.25 2.25)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (0.25 -2.25)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (-0.25 2.25)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (-0.25 -2.25)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (1.25 2.25)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (1.25 -2.25)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (-1.25 2.25)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (-1.25 -2.25)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (2.25 2.25)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (2.25 -2.25)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (-2.25 2.25)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (-2.25 -2.25)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (3.25 2.25)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (3.25 -2.25)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (-3.25 2.25)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (-3.25 -2.25)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (4.25 2.25)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (4.25 -2.25)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (-4.25 2.25)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (-4.25 -2.25)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (2.5 2.25)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (2.5 -2.25)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (-2.5 2.25)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (-2.5 -2.25)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (3.5 2.25)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (3.5 -2.25)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (-3.5 2.25)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (-3.5 -2.25)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (4.5 2.25)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (4.5 -2.25)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (-4.5 2.25)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (-4.5 -2.25)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (5.5 2.25)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (5.5 -2.25)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (-5.5 2.25)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (-5.5 -2.25)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (6.5 2.25)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (6.5 -2.25)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (-6.5 2.25)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (-6.5 -2.25)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (9.25 2.25)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (9.25 -2.25)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (-9.25 2.25)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (-9.25 -2.25)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (10.25 2.25)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (10.25 -2.25)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (-10.25 2.25)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (-10.25 -2.25)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (11.25 2.25)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (11.25 -2.25)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (-11.25 2.25)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (-11.25 -2.25)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (12.25 2.25)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (12.25 -2.25)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (-12.25 2.25)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (-12.25 -2.25)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (13.25 2.25)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (13.25 -2.25)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (-13.25 2.25)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (-13.25 -2.25)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (-0.875 2.25)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (-0.875 -2.25)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (0.875 2.25)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (0.875 -2.25)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (0.125 2.25)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (0.125 -2.25)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (-0.125 2.25)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (-0.125 -2.25)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (1.125 2.25)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (1.125 -2.25)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (-1.125 2.25)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (-1.125 -2.25)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (2.125 2.25)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (2.125 -2.25)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (-2.125 2.25)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (-2.125 -2.25)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (3.125 2.25)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (3.125 -2.25)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (-3.125 2.25)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (-3.125 -2.25)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (1.375 2.25)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (1.375 -2.25)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (-1.375 2.25)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (-1.375 -2.25)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (2.375 2.25)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (2.375 -2.25)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (-2.375 2.25)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (-2.375 -2.25)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (3.375 2.25)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (3.375 -2.25)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (-3.375 2.25)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (-3.375 -2.25)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (4.375 2.25)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (4.375 -2.25)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (-4.375 2.25)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (-4.375 -2.25)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (5.375 2.25)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (5.375 -2.25)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (-5.375 2.25)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (-5.375 -2.25)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (3.625 2.25)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (3.625 -2.25)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (-3.625 2.25)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (-3.625 -2.25)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (4.625 2.25)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (4.625 -2.25)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (-4.625 2.25)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (-4.625 -2.25)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (5.625 2.25)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (5.625 -2.25)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (-5.625 2.25)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (-5.625 -2.25)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (6.625 2.25)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (6.625 -2.25)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (-6.625 2.25)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (-6.625 -2.25)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (7.625 2.25)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (7.625 -2.25)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (-7.625 2.25)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (-7.625 -2.25)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (-2.0 5.75)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (-2.0 -5.75)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (2.0 5.75)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (2.0 -5.75)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (-1.0 5.75)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (-1.0 -5.75)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (1.0 5.75)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (1.0 -5.75)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (0.0 5.75)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (0.0 -5.75)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (1.0 5.75)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (1.0 -5.75)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (-1.0 5.75)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (-1.0 -5.75)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (2.0 5.75)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (2.0 -5.75)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (-2.0 5.75)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (-2.0 -5.75)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (3.75 5.75)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (3.75 -5.75)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (-3.75 5.75)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (-3.75 -5.75)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (4.75 5.75)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (4.75 -5.75)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (-4.75 5.75)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (-4.75 -5.75)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (5.75 5.75)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (5.75 -5.75)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (-5.75 5.75)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (-5.75 -5.75)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (6.75 5.75)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (6.75 -5.75)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (-6.75 5.75)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (-6.75 -5.75)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (7.75 5.75)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (7.75 -5.75)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (-7.75 5.75)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (-7.75 -5.75)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (9.5 5.75)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (9.5 -5.75)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (-9.5 5.75)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (-9.5 -5.75)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (10.5 5.75)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (10.5 -5.75)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (-10.5 5.75)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (-10.5 -5.75)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (11.5 5.75)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (11.5 -5.75)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (-11.5 5.75)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (-11.5 -5.75)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (12.5 5.75)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (12.5 -5.75)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (-12.5 5.75)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (-12.5 -5.75)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (13.5 5.75)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (13.5 -5.75)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (-13.5 5.75)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (-13.5 -5.75)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (26.75 5.75)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (26.75 -5.75)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (-26.75 5.75)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (-26.75 -5.75)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (27.75 5.75)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (27.75 -5.75)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (-27.75 5.75)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (-27.75 -5.75)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (28.75 5.75)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (28.75 -5.75)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (-28.75 5.75)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (-28.75 -5.75)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (29.75 5.75)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (29.75 -5.75)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (-29.75 5.75)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (-29.75 -5.75)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (30.75 5.75)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (30.75 -5.75)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (-30.75 5.75)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (-30.75 -5.75)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (0.875 5.75)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (0.875 -5.75)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (-0.875 5.75)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (-0.875 -5.75)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (1.875 5.75)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (1.875 -5.75)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (-1.875 5.75)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (-1.875 -5.75)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (2.875 5.75)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (2.875 -5.75)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (-2.875 5.75)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (-2.875 -5.75)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (3.875 5.75)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (3.875 -5.75)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (-3.875 5.75)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (-3.875 -5.75)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (4.875 5.75)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (4.875 -5.75)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (-4.875 5.75)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (-4.875 -5.75)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (6.625 5.75)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (6.625 -5.75)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (-6.625 5.75)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (-6.625 -5.75)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (7.625 5.75)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (7.625 -5.75)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (-7.625 5.75)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (-7.625 -5.75)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (8.625 5.75)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (8.625 -5.75)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (-8.625 5.75)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (-8.625 -5.75)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (9.625 5.75)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (9.625 -5.75)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (-9.625 5.75)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (-9.625 -5.75)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (10.625 5.75)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (10.625 -5.75)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (-10.625 5.75)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (-10.625 -5.75)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (12.375 5.75)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (12.375 -5.75)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (-12.375 5.75)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (-12.375 -5.75)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (13.375 5.75)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (13.375 -5.75)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (-13.375 5.75)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (-13.375 -5.75)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (14.375 5.75)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (14.375 -5.75)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (-14.375 5.75)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (-14.375 -5.75)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (15.375 5.75)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (15.375 -5.75)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (-15.375 5.75)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (-15.375 -5.75)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (16.375 5.75)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (16.375 -5.75)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (-16.375 5.75)
PASS: numbers.test: Number-theoretic division: centered/: inexact: (-16.375 -5.75)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (-2/9 1/10)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (-2/9 -1/10)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (2/9 1/10)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (2/9 -1/10)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (-1/11 1/10)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (-1/11 -1/10)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (1/11 1/10)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (1/11 -1/10)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (0 1/10)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (0 -1/10)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (1/3 1/10)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (1/3 -1/10)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (-1/3 1/10)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (-1/3 -1/10)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (2/3 1/10)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (2/3 -1/10)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (-2/3 1/10)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (-2/3 -1/10)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (-11/90 1/10)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (-11/90 -1/10)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (11/90 1/10)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (11/90 -1/10)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (1/110 1/10)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (1/110 -1/10)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (-1/110 1/10)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (-1/110 -1/10)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (1/10 1/10)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (1/10 -1/10)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (-1/10 1/10)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (-1/10 -1/10)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (13/30 1/10)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (13/30 -1/10)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (-13/30 1/10)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (-13/30 -1/10)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (23/30 1/10)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (23/30 -1/10)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (-23/30 1/10)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (-23/30 -1/10)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (-1/45 1/10)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (-1/45 -1/10)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (1/45 1/10)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (1/45 -1/10)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (6/55 1/10)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (6/55 -1/10)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (-6/55 1/10)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (-6/55 -1/10)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (1/5 1/10)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (1/5 -1/10)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (-1/5 1/10)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (-1/5 -1/10)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (8/15 1/10)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (8/15 -1/10)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (-8/15 1/10)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (-8/15 -1/10)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (13/15 1/10)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (13/15 -1/10)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (-13/15 1/10)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (-13/15 -1/10)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (5/18 1/10)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (5/18 -1/10)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (-5/18 1/10)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (-5/18 -1/10)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (9/22 1/10)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (9/22 -1/10)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (-9/22 1/10)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (-9/22 -1/10)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (1/2 1/10)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (1/2 -1/10)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (-1/2 1/10)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (-1/2 -1/10)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (5/6 1/10)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (5/6 -1/10)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (-5/6 1/10)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (-5/6 -1/10)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (7/6 1/10)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (7/6 -1/10)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (-7/6 1/10)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (-7/6 -1/10)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (-31/180 1/10)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (-31/180 -1/10)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (31/180 1/10)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (31/180 -1/10)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (-9/220 1/10)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (-9/220 -1/10)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (9/220 1/10)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (9/220 -1/10)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (1/20 1/10)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (1/20 -1/10)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (-1/20 1/10)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (-1/20 -1/10)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (23/60 1/10)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (23/60 -1/10)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (-23/60 1/10)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (-23/60 -1/10)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (43/60 1/10)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (43/60 -1/10)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (-43/60 1/10)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (-43/60 -1/10)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (-13/180 1/10)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (-13/180 -1/10)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (13/180 1/10)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (13/180 -1/10)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (13/220 1/10)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (13/220 -1/10)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (-13/220 1/10)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (-13/220 -1/10)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (3/20 1/10)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (3/20 -1/10)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (-3/20 1/10)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (-3/20 -1/10)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (29/60 1/10)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (29/60 -1/10)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (-29/60 1/10)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (-29/60 -1/10)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (49/60 1/10)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (49/60 -1/10)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (-49/60 1/10)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (-49/60 -1/10)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (1/36 1/10)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (1/36 -1/10)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (-1/36 1/10)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (-1/36 -1/10)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (7/44 1/10)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (7/44 -1/10)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (-7/44 1/10)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (-7/44 -1/10)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (1/4 1/10)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (1/4 -1/10)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (-1/4 1/10)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (-1/4 -1/10)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (7/12 1/10)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (7/12 -1/10)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (-7/12 1/10)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (-7/12 -1/10)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (11/12 1/10)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (11/12 -1/10)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (-11/12 1/10)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (-11/12 -1/10)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (-2/9 16/3)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (-2/9 -16/3)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (2/9 16/3)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (2/9 -16/3)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (-1/11 16/3)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (-1/11 -16/3)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (1/11 16/3)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (1/11 -16/3)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (0 16/3)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (0 -16/3)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (1/3 16/3)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (1/3 -16/3)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (-1/3 16/3)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (-1/3 -16/3)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (2/3 16/3)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (2/3 -16/3)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (-2/3 16/3)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (-2/3 -16/3)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (46/9 16/3)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (46/9 -16/3)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (-46/9 16/3)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (-46/9 -16/3)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (173/33 16/3)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (173/33 -16/3)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (-173/33 16/3)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (-173/33 -16/3)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (16/3 16/3)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (16/3 -16/3)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (-16/3 16/3)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (-16/3 -16/3)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (17/3 16/3)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (17/3 -16/3)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (-17/3 16/3)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (-17/3 -16/3)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (6 16/3)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (6 -16/3)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (-6 16/3)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (-6 -16/3)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (94/9 16/3)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (94/9 -16/3)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (-94/9 16/3)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (-94/9 -16/3)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (349/33 16/3)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (349/33 -16/3)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (-349/33 16/3)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (-349/33 -16/3)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (32/3 16/3)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (32/3 -16/3)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (-32/3 16/3)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (-32/3 -16/3)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (11 16/3)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (11 -16/3)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (-11 16/3)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (-11 -16/3)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (34/3 16/3)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (34/3 -16/3)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (-34/3 16/3)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (-34/3 -16/3)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (238/9 16/3)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (238/9 -16/3)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (-238/9 16/3)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (-238/9 -16/3)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (877/33 16/3)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (877/33 -16/3)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (-877/33 16/3)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (-877/33 -16/3)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (80/3 16/3)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (80/3 -16/3)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (-80/3 16/3)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (-80/3 -16/3)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (27 16/3)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (27 -16/3)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (-27 16/3)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (-27 -16/3)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (82/3 16/3)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (82/3 -16/3)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (-82/3 16/3)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (-82/3 -16/3)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (22/9 16/3)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (22/9 -16/3)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (-22/9 16/3)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (-22/9 -16/3)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (85/33 16/3)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (85/33 -16/3)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (-85/33 16/3)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (-85/33 -16/3)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (8/3 16/3)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (8/3 -16/3)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (-8/3 16/3)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (-8/3 -16/3)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (3 16/3)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (3 -16/3)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (-3 16/3)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (-3 -16/3)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (10/3 16/3)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (10/3 -16/3)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (-10/3 16/3)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (-10/3 -16/3)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (70/9 16/3)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (70/9 -16/3)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (-70/9 16/3)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (-70/9 -16/3)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (87/11 16/3)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (87/11 -16/3)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (-87/11 16/3)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (-87/11 -16/3)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (8 16/3)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (8 -16/3)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (-8 16/3)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (-8 -16/3)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (25/3 16/3)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (25/3 -16/3)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (-25/3 16/3)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (-25/3 -16/3)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (26/3 16/3)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (26/3 -16/3)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (-26/3 16/3)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (-26/3 -16/3)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (118/9 16/3)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (118/9 -16/3)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (-118/9 16/3)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (-118/9 -16/3)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (437/33 16/3)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (437/33 -16/3)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (-437/33 16/3)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (-437/33 -16/3)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (40/3 16/3)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (40/3 -16/3)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (-40/3 16/3)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (-40/3 -16/3)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (41/3 16/3)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (41/3 -16/3)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (-41/3 16/3)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (-41/3 -16/3)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (14 16/3)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (14 -16/3)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (-14 16/3)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (-14 -16/3)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (-2/9 10/7)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (-2/9 -10/7)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (2/9 10/7)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (2/9 -10/7)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (-1/11 10/7)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (-1/11 -10/7)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (1/11 10/7)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (1/11 -10/7)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (0 10/7)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (0 -10/7)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (1/3 10/7)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (1/3 -10/7)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (-1/3 10/7)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (-1/3 -10/7)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (2/3 10/7)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (2/3 -10/7)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (-2/3 10/7)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (-2/3 -10/7)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (76/63 10/7)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (76/63 -10/7)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (-76/63 10/7)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (-76/63 -10/7)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (103/77 10/7)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (103/77 -10/7)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (-103/77 10/7)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (-103/77 -10/7)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (10/7 10/7)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (10/7 -10/7)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (-10/7 10/7)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (-10/7 -10/7)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (37/21 10/7)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (37/21 -10/7)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (-37/21 10/7)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (-37/21 -10/7)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (44/21 10/7)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (44/21 -10/7)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (-44/21 10/7)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (-44/21 -10/7)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (166/63 10/7)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (166/63 -10/7)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (-166/63 10/7)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (-166/63 -10/7)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (213/77 10/7)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (213/77 -10/7)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (-213/77 10/7)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (-213/77 -10/7)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (20/7 10/7)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (20/7 -10/7)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (-20/7 10/7)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (-20/7 -10/7)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (67/21 10/7)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (67/21 -10/7)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (-67/21 10/7)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (-67/21 -10/7)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (74/21 10/7)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (74/21 -10/7)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (-74/21 10/7)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (-74/21 -10/7)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (436/63 10/7)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (436/63 -10/7)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (-436/63 10/7)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (-436/63 -10/7)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (543/77 10/7)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (543/77 -10/7)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (-543/77 10/7)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (-543/77 -10/7)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (50/7 10/7)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (50/7 -10/7)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (-50/7 10/7)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (-50/7 -10/7)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (157/21 10/7)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (157/21 -10/7)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (-157/21 10/7)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (-157/21 -10/7)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (164/21 10/7)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (164/21 -10/7)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (-164/21 10/7)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (-164/21 -10/7)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (31/63 10/7)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (31/63 -10/7)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (-31/63 10/7)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (-31/63 -10/7)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (48/77 10/7)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (48/77 -10/7)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (-48/77 10/7)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (-48/77 -10/7)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (5/7 10/7)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (5/7 -10/7)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (-5/7 10/7)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (-5/7 -10/7)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (22/21 10/7)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (22/21 -10/7)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (-22/21 10/7)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (-22/21 -10/7)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (29/21 10/7)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (29/21 -10/7)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (-29/21 10/7)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (-29/21 -10/7)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (121/63 10/7)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (121/63 -10/7)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (-121/63 10/7)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (-121/63 -10/7)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (158/77 10/7)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (158/77 -10/7)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (-158/77 10/7)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (-158/77 -10/7)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (15/7 10/7)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (15/7 -10/7)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (-15/7 10/7)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (-15/7 -10/7)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (52/21 10/7)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (52/21 -10/7)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (-52/21 10/7)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (-52/21 -10/7)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (59/21 10/7)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (59/21 -10/7)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (-59/21 10/7)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (-59/21 -10/7)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (211/63 10/7)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (211/63 -10/7)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (-211/63 10/7)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (-211/63 -10/7)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (268/77 10/7)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (268/77 -10/7)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (-268/77 10/7)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (-268/77 -10/7)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (25/7 10/7)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (25/7 -10/7)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (-25/7 10/7)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (-25/7 -10/7)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (82/21 10/7)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (82/21 -10/7)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (-82/21 10/7)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (-82/21 -10/7)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (89/21 10/7)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (89/21 -10/7)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (-89/21 10/7)
PASS: numbers.test: Number-theoretic division: centered/: fractions: (-89/21 -10/7)
PASS: numbers.test: Number-theoretic division: centered/: mixed types: (25 10)
PASS: numbers.test: Number-theoretic division: centered/: mixed types: (25 -10)
PASS: numbers.test: Number-theoretic division: centered/: mixed types: (-25 10)
PASS: numbers.test: Number-theoretic division: centered/: mixed types: (-25 -10)
PASS: numbers.test: Number-theoretic division: centered/: mixed types: (15000000000 10)
PASS: numbers.test: Number-theoretic division: centered/: mixed types: (15000000000 -10)
PASS: numbers.test: Number-theoretic division: centered/: mixed types: (-15000000000 10)
PASS: numbers.test: Number-theoretic division: centered/: mixed types: (-15000000000 -10)
PASS: numbers.test: Number-theoretic division: centered/: mixed types: (130.0 10)
PASS: numbers.test: Number-theoretic division: centered/: mixed types: (130.0 -10)
PASS: numbers.test: Number-theoretic division: centered/: mixed types: (-130.0 10)
PASS: numbers.test: Number-theoretic division: centered/: mixed types: (-130.0 -10)
PASS: numbers.test: Number-theoretic division: centered/: mixed types: (15/7 10)
PASS: numbers.test: Number-theoretic division: centered/: mixed types: (15/7 -10)
PASS: numbers.test: Number-theoretic division: centered/: mixed types: (-15/7 10)
PASS: numbers.test: Number-theoretic division: centered/: mixed types: (-15/7 -10)
PASS: numbers.test: Number-theoretic division: centered/: mixed types: (0 10)
PASS: numbers.test: Number-theoretic division: centered/: mixed types: (0 -10)
PASS: numbers.test: Number-theoretic division: centered/: mixed types: (0.0 10)
PASS: numbers.test: Number-theoretic division: centered/: mixed types: (0.0 -10)
PASS: numbers.test: Number-theoretic division: centered/: mixed types: (-0.0 10)
PASS: numbers.test: Number-theoretic division: centered/: mixed types: (-0.0 -10)
PASS: numbers.test: Number-theoretic division: centered/: mixed types: (+inf.0 10)
PASS: numbers.test: Number-theoretic division: centered/: mixed types: (+inf.0 -10)
PASS: numbers.test: Number-theoretic division: centered/: mixed types: (-inf.0 10)
PASS: numbers.test: Number-theoretic division: centered/: mixed types: (-inf.0 -10)
PASS: numbers.test: Number-theoretic division: centered/: mixed types: (-inf.0 10)
PASS: numbers.test: Number-theoretic division: centered/: mixed types: (-inf.0 -10)
PASS: numbers.test: Number-theoretic division: centered/: mixed types: (+inf.0 10)
PASS: numbers.test: Number-theoretic division: centered/: mixed types: (+inf.0 -10)
PASS: numbers.test: Number-theoretic division: centered/: mixed types: (+nan.0 10)
PASS: numbers.test: Number-theoretic division: centered/: mixed types: (+nan.0 -10)
PASS: numbers.test: Number-theoretic division: centered/: mixed types: (+nan.0 10)
PASS: numbers.test: Number-theoretic division: centered/: mixed types: (+nan.0 -10)
PASS: numbers.test: Number-theoretic division: centered/: mixed types: (25 10000000000)
PASS: numbers.test: Number-theoretic division: centered/: mixed types: (25 -10000000000)
PASS: numbers.test: Number-theoretic division: centered/: mixed types: (-25 10000000000)
PASS: numbers.test: Number-theoretic division: centered/: mixed types: (-25 -10000000000)
PASS: numbers.test: Number-theoretic division: centered/: mixed types: (15000000000 10000000000)
PASS: numbers.test: Number-theoretic division: centered/: mixed types: (15000000000 -10000000000)
PASS: numbers.test: Number-theoretic division: centered/: mixed types: (-15000000000 10000000000)
PASS: numbers.test: Number-theoretic division: centered/: mixed types: (-15000000000 -10000000000)
PASS: numbers.test: Number-theoretic division: centered/: mixed types: (130.0 10000000000)
PASS: numbers.test: Number-theoretic division: centered/: mixed types: (130.0 -10000000000)
PASS: numbers.test: Number-theoretic division: centered/: mixed types: (-130.0 10000000000)
PASS: numbers.test: Number-theoretic division: centered/: mixed types: (-130.0 -10000000000)
PASS: numbers.test: Number-theoretic division: centered/: mixed types: (15/7 10000000000)
PASS: numbers.test: Number-theoretic division: centered/: mixed types: (15/7 -10000000000)
PASS: numbers.test: Number-theoretic division: centered/: mixed types: (-15/7 10000000000)
PASS: numbers.test: Number-theoretic division: centered/: mixed types: (-15/7 -10000000000)
PASS: numbers.test: Number-theoretic division: centered/: mixed types: (0 10000000000)
PASS: numbers.test: Number-theoretic division: centered/: mixed types: (0 -10000000000)
PASS: numbers.test: Number-theoretic division: centered/: mixed types: (0.0 10000000000)
PASS: numbers.test: Number-theoretic division: centered/: mixed types: (0.0 -10000000000)
PASS: numbers.test: Number-theoretic division: centered/: mixed types: (-0.0 10000000000)
PASS: numbers.test: Number-theoretic division: centered/: mixed types: (-0.0 -10000000000)
PASS: numbers.test: Number-theoretic division: centered/: mixed types: (+inf.0 10000000000)
PASS: numbers.test: Number-theoretic division: centered/: mixed types: (+inf.0 -10000000000)
PASS: numbers.test: Number-theoretic division: centered/: mixed types: (-inf.0 10000000000)
PASS: numbers.test: Number-theoretic division: centered/: mixed types: (-inf.0 -10000000000)
PASS: numbers.test: Number-theoretic division: centered/: mixed types: (-inf.0 10000000000)
PASS: numbers.test: Number-theoretic division: centered/: mixed types: (-inf.0 -10000000000)
PASS: numbers.test: Number-theoretic division: centered/: mixed types: (+inf.0 10000000000)
PASS: numbers.test: Number-theoretic division: centered/: mixed types: (+inf.0 -10000000000)
PASS: numbers.test: Number-theoretic division: centered/: mixed types: (+nan.0 10000000000)
PASS: numbers.test: Number-theoretic division: centered/: mixed types: (+nan.0 -10000000000)
PASS: numbers.test: Number-theoretic division: centered/: mixed types: (+nan.0 10000000000)
PASS: numbers.test: Number-theoretic division: centered/: mixed types: (+nan.0 -10000000000)
PASS: numbers.test: Number-theoretic division: centered/: mixed types: (25 12.0)
PASS: numbers.test: Number-theoretic division: centered/: mixed types: (25 -12.0)
PASS: numbers.test: Number-theoretic division: centered/: mixed types: (-25 12.0)
PASS: numbers.test: Number-theoretic division: centered/: mixed types: (-25 -12.0)
PASS: numbers.test: Number-theoretic division: centered/: mixed types: (15000000000 12.0)
PASS: numbers.test: Number-theoretic division: centered/: mixed types: (15000000000 -12.0)
PASS: numbers.test: Number-theoretic division: centered/: mixed types: (-15000000000 12.0)
PASS: numbers.test: Number-theoretic division: centered/: mixed types: (-15000000000 -12.0)
PASS: numbers.test: Number-theoretic division: centered/: mixed types: (130.0 12.0)
PASS: numbers.test: Number-theoretic division: centered/: mixed types: (130.0 -12.0)
PASS: numbers.test: Number-theoretic division: centered/: mixed types: (-130.0 12.0)
PASS: numbers.test: Number-theoretic division: centered/: mixed types: (-130.0 -12.0)
PASS: numbers.test: Number-theoretic division: centered/: mixed types: (15/7 12.0)
PASS: numbers.test: Number-theoretic division: centered/: mixed types: (15/7 -12.0)
PASS: numbers.test: Number-theoretic division: centered/: mixed types: (-15/7 12.0)
PASS: numbers.test: Number-theoretic division: centered/: mixed types: (-15/7 -12.0)
PASS: numbers.test: Number-theoretic division: centered/: mixed types: (0 12.0)
PASS: numbers.test: Number-theoretic division: centered/: mixed types: (0 -12.0)
PASS: numbers.test: Number-theoretic division: centered/: mixed types: (0.0 12.0)
PASS: numbers.test: Number-theoretic division: centered/: mixed types: (0.0 -12.0)
PASS: numbers.test: Number-theoretic division: centered/: mixed types: (-0.0 12.0)
PASS: numbers.test: Number-theoretic division: centered/: mixed types: (-0.0 -12.0)
PASS: numbers.test: Number-theoretic division: centered/: mixed types: (+inf.0 12.0)
PASS: numbers.test: Number-theoretic division: centered/: mixed types: (+inf.0 -12.0)
PASS: numbers.test: Number-theoretic division: centered/: mixed types: (-inf.0 12.0)
PASS: numbers.test: Number-theoretic division: centered/: mixed types: (-inf.0 -12.0)
PASS: numbers.test: Number-theoretic division: centered/: mixed types: (-inf.0 12.0)
PASS: numbers.test: Number-theoretic division: centered/: mixed types: (-inf.0 -12.0)
PASS: numbers.test: Number-theoretic division: centered/: mixed types: (+inf.0 12.0)
PASS: numbers.test: Number-theoretic division: centered/: mixed types: (+inf.0 -12.0)
PASS: numbers.test: Number-theoretic division: centered/: mixed types: (+nan.0 12.0)
PASS: numbers.test: Number-theoretic division: centered/: mixed types: (+nan.0 -12.0)
PASS: numbers.test: Number-theoretic division: centered/: mixed types: (+nan.0 12.0)
PASS: numbers.test: Number-theoretic division: centered/: mixed types: (+nan.0 -12.0)
PASS: numbers.test: Number-theoretic division: centered/: mixed types: (25 10/7)
PASS: numbers.test: Number-theoretic division: centered/: mixed types: (25 -10/7)
PASS: numbers.test: Number-theoretic division: centered/: mixed types: (-25 10/7)
PASS: numbers.test: Number-theoretic division: centered/: mixed types: (-25 -10/7)
PASS: numbers.test: Number-theoretic division: centered/: mixed types: (15000000000 10/7)
PASS: numbers.test: Number-theoretic division: centered/: mixed types: (15000000000 -10/7)
PASS: numbers.test: Number-theoretic division: centered/: mixed types: (-15000000000 10/7)
PASS: numbers.test: Number-theoretic division: centered/: mixed types: (-15000000000 -10/7)
PASS: numbers.test: Number-theoretic division: centered/: mixed types: (130.0 10/7)
PASS: numbers.test: Number-theoretic division: centered/: mixed types: (130.0 -10/7)
PASS: numbers.test: Number-theoretic division: centered/: mixed types: (-130.0 10/7)
PASS: numbers.test: Number-theoretic division: centered/: mixed types: (-130.0 -10/7)
PASS: numbers.test: Number-theoretic division: centered/: mixed types: (15/7 10/7)
PASS: numbers.test: Number-theoretic division: centered/: mixed types: (15/7 -10/7)
PASS: numbers.test: Number-theoretic division: centered/: mixed types: (-15/7 10/7)
PASS: numbers.test: Number-theoretic division: centered/: mixed types: (-15/7 -10/7)
PASS: numbers.test: Number-theoretic division: centered/: mixed types: (0 10/7)
PASS: numbers.test: Number-theoretic division: centered/: mixed types: (0 -10/7)
PASS: numbers.test: Number-theoretic division: centered/: mixed types: (0.0 10/7)
PASS: numbers.test: Number-theoretic division: centered/: mixed types: (0.0 -10/7)
PASS: numbers.test: Number-theoretic division: centered/: mixed types: (-0.0 10/7)
PASS: numbers.test: Number-theoretic division: centered/: mixed types: (-0.0 -10/7)
PASS: numbers.test: Number-theoretic division: centered/: mixed types: (+inf.0 10/7)
PASS: numbers.test: Number-theoretic division: centered/: mixed types: (+inf.0 -10/7)
PASS: numbers.test: Number-theoretic division: centered/: mixed types: (-inf.0 10/7)
PASS: numbers.test: Number-theoretic division: centered/: mixed types: (-inf.0 -10/7)
PASS: numbers.test: Number-theoretic division: centered/: mixed types: (-inf.0 10/7)
PASS: numbers.test: Number-theoretic division: centered/: mixed types: (-inf.0 -10/7)
PASS: numbers.test: Number-theoretic division: centered/: mixed types: (+inf.0 10/7)
PASS: numbers.test: Number-theoretic division: centered/: mixed types: (+inf.0 -10/7)
PASS: numbers.test: Number-theoretic division: centered/: mixed types: (+nan.0 10/7)
PASS: numbers.test: Number-theoretic division: centered/: mixed types: (+nan.0 -10/7)
PASS: numbers.test: Number-theoretic division: centered/: mixed types: (+nan.0 10/7)
PASS: numbers.test: Number-theoretic division: centered/: mixed types: (+nan.0 -10/7)
PASS: numbers.test: Number-theoretic division: centered/: mixed types: (25 +inf.0)
PASS: numbers.test: Number-theoretic division: centered/: mixed types: (25 -inf.0)
PASS: numbers.test: Number-theoretic division: centered/: mixed types: (-25 +inf.0)
PASS: numbers.test: Number-theoretic division: centered/: mixed types: (-25 -inf.0)
PASS: numbers.test: Number-theoretic division: centered/: mixed types: (15000000000 +inf.0)
PASS: numbers.test: Number-theoretic division: centered/: mixed types: (15000000000 -inf.0)
PASS: numbers.test: Number-theoretic division: centered/: mixed types: (-15000000000 +inf.0)
PASS: numbers.test: Number-theoretic division: centered/: mixed types: (-15000000000 -inf.0)
PASS: numbers.test: Number-theoretic division: centered/: mixed types: (130.0 +inf.0)
PASS: numbers.test: Number-theoretic division: centered/: mixed types: (130.0 -inf.0)
PASS: numbers.test: Number-theoretic division: centered/: mixed types: (-130.0 +inf.0)
PASS: numbers.test: Number-theoretic division: centered/: mixed types: (-130.0 -inf.0)
PASS: numbers.test: Number-theoretic division: centered/: mixed types: (15/7 +inf.0)
PASS: numbers.test: Number-theoretic division: centered/: mixed types: (15/7 -inf.0)
PASS: numbers.test: Number-theoretic division: centered/: mixed types: (-15/7 +inf.0)
PASS: numbers.test: Number-theoretic division: centered/: mixed types: (-15/7 -inf.0)
PASS: numbers.test: Number-theoretic division: centered/: mixed types: (0 +inf.0)
PASS: numbers.test: Number-theoretic division: centered/: mixed types: (0 -inf.0)
PASS: numbers.test: Number-theoretic division: centered/: mixed types: (0.0 +inf.0)
PASS: numbers.test: Number-theoretic division: centered/: mixed types: (0.0 -inf.0)
PASS: numbers.test: Number-theoretic division: centered/: mixed types: (-0.0 +inf.0)
PASS: numbers.test: Number-theoretic division: centered/: mixed types: (-0.0 -inf.0)
PASS: numbers.test: Number-theoretic division: centered/: mixed types: (+inf.0 +inf.0)
PASS: numbers.test: Number-theoretic division: centered/: mixed types: (+inf.0 -inf.0)
PASS: numbers.test: Number-theoretic division: centered/: mixed types: (-inf.0 +inf.0)
PASS: numbers.test: Number-theoretic division: centered/: mixed types: (-inf.0 -inf.0)
PASS: numbers.test: Number-theoretic division: centered/: mixed types: (-inf.0 +inf.0)
PASS: numbers.test: Number-theoretic division: centered/: mixed types: (-inf.0 -inf.0)
PASS: numbers.test: Number-theoretic division: centered/: mixed types: (+inf.0 +inf.0)
PASS: numbers.test: Number-theoretic division: centered/: mixed types: (+inf.0 -inf.0)
PASS: numbers.test: Number-theoretic division: centered/: mixed types: (+nan.0 +inf.0)
PASS: numbers.test: Number-theoretic division: centered/: mixed types: (+nan.0 -inf.0)
PASS: numbers.test: Number-theoretic division: centered/: mixed types: (+nan.0 +inf.0)
PASS: numbers.test: Number-theoretic division: centered/: mixed types: (+nan.0 -inf.0)
PASS: numbers.test: Number-theoretic division: centered/: mixed types: (25 -inf.0)
PASS: numbers.test: Number-theoretic division: centered/: mixed types: (25 +inf.0)
PASS: numbers.test: Number-theoretic division: centered/: mixed types: (-25 -inf.0)
PASS: numbers.test: Number-theoretic division: centered/: mixed types: (-25 +inf.0)
PASS: numbers.test: Number-theoretic division: centered/: mixed types: (15000000000 -inf.0)
PASS: numbers.test: Number-theoretic division: centered/: mixed types: (15000000000 +inf.0)
PASS: numbers.test: Number-theoretic division: centered/: mixed types: (-15000000000 -inf.0)
PASS: numbers.test: Number-theoretic division: centered/: mixed types: (-15000000000 +inf.0)
PASS: numbers.test: Number-theoretic division: centered/: mixed types: (130.0 -inf.0)
PASS: numbers.test: Number-theoretic division: centered/: mixed types: (130.0 +inf.0)
PASS: numbers.test: Number-theoretic division: centered/: mixed types: (-130.0 -inf.0)
PASS: numbers.test: Number-theoretic division: centered/: mixed types: (-130.0 +inf.0)
PASS: numbers.test: Number-theoretic division: centered/: mixed types: (15/7 -inf.0)
PASS: numbers.test: Number-theoretic division: centered/: mixed types: (15/7 +inf.0)
PASS: numbers.test: Number-theoretic division: centered/: mixed types: (-15/7 -inf.0)
PASS: numbers.test: Number-theoretic division: centered/: mixed types: (-15/7 +inf.0)
PASS: numbers.test: Number-theoretic division: centered/: mixed types: (0 -inf.0)
PASS: numbers.test: Number-theoretic division: centered/: mixed types: (0 +inf.0)
PASS: numbers.test: Number-theoretic division: centered/: mixed types: (0.0 -inf.0)
PASS: numbers.test: Number-theoretic division: centered/: mixed types: (0.0 +inf.0)
PASS: numbers.test: Number-theoretic division: centered/: mixed types: (-0.0 -inf.0)
PASS: numbers.test: Number-theoretic division: centered/: mixed types: (-0.0 +inf.0)
PASS: numbers.test: Number-theoretic division: centered/: mixed types: (+inf.0 -inf.0)
PASS: numbers.test: Number-theoretic division: centered/: mixed types: (+inf.0 +inf.0)
PASS: numbers.test: Number-theoretic division: centered/: mixed types: (-inf.0 -inf.0)
PASS: numbers.test: Number-theoretic division: centered/: mixed types: (-inf.0 +inf.0)
PASS: numbers.test: Number-theoretic division: centered/: mixed types: (-inf.0 -inf.0)
PASS: numbers.test: Number-theoretic division: centered/: mixed types: (-inf.0 +inf.0)
PASS: numbers.test: Number-theoretic division: centered/: mixed types: (+inf.0 -inf.0)
PASS: numbers.test: Number-theoretic division: centered/: mixed types: (+inf.0 +inf.0)
PASS: numbers.test: Number-theoretic division: centered/: mixed types: (+nan.0 -inf.0)
PASS: numbers.test: Number-theoretic division: centered/: mixed types: (+nan.0 +inf.0)
PASS: numbers.test: Number-theoretic division: centered/: mixed types: (+nan.0 -inf.0)
PASS: numbers.test: Number-theoretic division: centered/: mixed types: (+nan.0 +inf.0)
PASS: numbers.test: Number-theoretic division: centered/: mixed types: (25 +nan.0)
PASS: numbers.test: Number-theoretic division: centered/: mixed types: (25 +nan.0)
PASS: numbers.test: Number-theoretic division: centered/: mixed types: (-25 +nan.0)
PASS: numbers.test: Number-theoretic division: centered/: mixed types: (-25 +nan.0)
PASS: numbers.test: Number-theoretic division: centered/: mixed types: (15000000000 +nan.0)
PASS: numbers.test: Number-theoretic division: centered/: mixed types: (15000000000 +nan.0)
PASS: numbers.test: Number-theoretic division: centered/: mixed types: (-15000000000 +nan.0)
PASS: numbers.test: Number-theoretic division: centered/: mixed types: (-15000000000 +nan.0)
PASS: numbers.test: Number-theoretic division: centered/: mixed types: (130.0 +nan.0)
PASS: numbers.test: Number-theoretic division: centered/: mixed types: (130.0 +nan.0)
PASS: numbers.test: Number-theoretic division: centered/: mixed types: (-130.0 +nan.0)
PASS: numbers.test: Number-theoretic division: centered/: mixed types: (-130.0 +nan.0)
PASS: numbers.test: Number-theoretic division: centered/: mixed types: (15/7 +nan.0)
PASS: numbers.test: Number-theoretic division: centered/: mixed types: (15/7 +nan.0)
PASS: numbers.test: Number-theoretic division: centered/: mixed types: (-15/7 +nan.0)
PASS: numbers.test: Number-theoretic division: centered/: mixed types: (-15/7 +nan.0)
PASS: numbers.test: Number-theoretic division: centered/: mixed types: (0 +nan.0)
PASS: numbers.test: Number-theoretic division: centered/: mixed types: (0 +nan.0)
PASS: numbers.test: Number-theoretic division: centered/: mixed types: (0.0 +nan.0)
PASS: numbers.test: Number-theoretic division: centered/: mixed types: (0.0 +nan.0)
PASS: numbers.test: Number-theoretic division: centered/: mixed types: (-0.0 +nan.0)
PASS: numbers.test: Number-theoretic division: centered/: mixed types: (-0.0 +nan.0)
PASS: numbers.test: Number-theoretic division: centered/: mixed types: (+inf.0 +nan.0)
PASS: numbers.test: Number-theoretic division: centered/: mixed types: (+inf.0 +nan.0)
PASS: numbers.test: Number-theoretic division: centered/: mixed types: (-inf.0 +nan.0)
PASS: numbers.test: Number-theoretic division: centered/: mixed types: (-inf.0 +nan.0)
PASS: numbers.test: Number-theoretic division: centered/: mixed types: (-inf.0 +nan.0)
PASS: numbers.test: Number-theoretic division: centered/: mixed types: (-inf.0 +nan.0)
PASS: numbers.test: Number-theoretic division: centered/: mixed types: (+inf.0 +nan.0)
PASS: numbers.test: Number-theoretic division: centered/: mixed types: (+inf.0 +nan.0)
PASS: numbers.test: Number-theoretic division: centered/: mixed types: (+nan.0 +nan.0)
PASS: numbers.test: Number-theoretic division: centered/: mixed types: (+nan.0 +nan.0)
PASS: numbers.test: Number-theoretic division: centered/: mixed types: (+nan.0 +nan.0)
PASS: numbers.test: Number-theoretic division: centered/: mixed types: (+nan.0 +nan.0)
PASS: numbers.test: Number-theoretic division: centered/: divide by zero: (15 0)
PASS: numbers.test: Number-theoretic division: centered/: divide by zero: (15 0)
PASS: numbers.test: Number-theoretic division: centered/: divide by zero: (15 0)
PASS: numbers.test: Number-theoretic division: centered/: divide by zero: (15000000000 0)
PASS: numbers.test: Number-theoretic division: centered/: divide by zero: (15000000000 0)
PASS: numbers.test: Number-theoretic division: centered/: divide by zero: (15000000000 0)
PASS: numbers.test: Number-theoretic division: centered/: divide by zero: (18.0 0)
PASS: numbers.test: Number-theoretic division: centered/: divide by zero: (18.0 0)
PASS: numbers.test: Number-theoretic division: centered/: divide by zero: (18.0 0)
PASS: numbers.test: Number-theoretic division: centered/: divide by zero: (33/7 0)
PASS: numbers.test: Number-theoretic division: centered/: divide by zero: (33/7 0)
PASS: numbers.test: Number-theoretic division: centered/: divide by zero: (33/7 0)
PASS: numbers.test: Number-theoretic division: centered/: divide by zero: (0 0)
PASS: numbers.test: Number-theoretic division: centered/: divide by zero: (0 0)
PASS: numbers.test: Number-theoretic division: centered/: divide by zero: (0 0)
PASS: numbers.test: Number-theoretic division: centered/: divide by zero: (0.0 0)
PASS: numbers.test: Number-theoretic division: centered/: divide by zero: (0.0 0)
PASS: numbers.test: Number-theoretic division: centered/: divide by zero: (0.0 0)
PASS: numbers.test: Number-theoretic division: centered/: divide by zero: (-0.0 0)
PASS: numbers.test: Number-theoretic division: centered/: divide by zero: (-0.0 0)
PASS: numbers.test: Number-theoretic division: centered/: divide by zero: (-0.0 0)
PASS: numbers.test: Number-theoretic division: centered/: divide by zero: (+inf.0 0)
PASS: numbers.test: Number-theoretic division: centered/: divide by zero: (+inf.0 0)
PASS: numbers.test: Number-theoretic division: centered/: divide by zero: (+inf.0 0)
PASS: numbers.test: Number-theoretic division: centered/: divide by zero: (-inf.0 0)
PASS: numbers.test: Number-theoretic division: centered/: divide by zero: (-inf.0 0)
PASS: numbers.test: Number-theoretic division: centered/: divide by zero: (-inf.0 0)
PASS: numbers.test: Number-theoretic division: centered/: divide by zero: (+nan.0 0)
PASS: numbers.test: Number-theoretic division: centered/: divide by zero: (+nan.0 0)
PASS: numbers.test: Number-theoretic division: centered/: divide by zero: (+nan.0 0)
PASS: numbers.test: Number-theoretic division: centered/: divide by zero: (15 0.0)
PASS: numbers.test: Number-theoretic division: centered/: divide by zero: (15 0.0)
PASS: numbers.test: Number-theoretic division: centered/: divide by zero: (15 0.0)
PASS: numbers.test: Number-theoretic division: centered/: divide by zero: (15000000000 0.0)
PASS: numbers.test: Number-theoretic division: centered/: divide by zero: (15000000000 0.0)
PASS: numbers.test: Number-theoretic division: centered/: divide by zero: (15000000000 0.0)
PASS: numbers.test: Number-theoretic division: centered/: divide by zero: (18.0 0.0)
PASS: numbers.test: Number-theoretic division: centered/: divide by zero: (18.0 0.0)
PASS: numbers.test: Number-theoretic division: centered/: divide by zero: (18.0 0.0)
PASS: numbers.test: Number-theoretic division: centered/: divide by zero: (33/7 0.0)
PASS: numbers.test: Number-theoretic division: centered/: divide by zero: (33/7 0.0)
PASS: numbers.test: Number-theoretic division: centered/: divide by zero: (33/7 0.0)
PASS: numbers.test: Number-theoretic division: centered/: divide by zero: (0 0.0)
PASS: numbers.test: Number-theoretic division: centered/: divide by zero: (0 0.0)
PASS: numbers.test: Number-theoretic division: centered/: divide by zero: (0 0.0)
PASS: numbers.test: Number-theoretic division: centered/: divide by zero: (0.0 0.0)
PASS: numbers.test: Number-theoretic division: centered/: divide by zero: (0.0 0.0)
PASS: numbers.test: Number-theoretic division: centered/: divide by zero: (0.0 0.0)
PASS: numbers.test: Number-theoretic division: centered/: divide by zero: (-0.0 0.0)
PASS: numbers.test: Number-theoretic division: centered/: divide by zero: (-0.0 0.0)
PASS: numbers.test: Number-theoretic division: centered/: divide by zero: (-0.0 0.0)
PASS: numbers.test: Number-theoretic division: centered/: divide by zero: (+inf.0 0.0)
PASS: numbers.test: Number-theoretic division: centered/: divide by zero: (+inf.0 0.0)
PASS: numbers.test: Number-theoretic division: centered/: divide by zero: (+inf.0 0.0)
PASS: numbers.test: Number-theoretic division: centered/: divide by zero: (-inf.0 0.0)
PASS: numbers.test: Number-theoretic division: centered/: divide by zero: (-inf.0 0.0)
PASS: numbers.test: Number-theoretic division: centered/: divide by zero: (-inf.0 0.0)
PASS: numbers.test: Number-theoretic division: centered/: divide by zero: (+nan.0 0.0)
PASS: numbers.test: Number-theoretic division: centered/: divide by zero: (+nan.0 0.0)
PASS: numbers.test: Number-theoretic division: centered/: divide by zero: (+nan.0 0.0)
PASS: numbers.test: Number-theoretic division: centered/: divide by zero: (15 -0.0)
PASS: numbers.test: Number-theoretic division: centered/: divide by zero: (15 -0.0)
PASS: numbers.test: Number-theoretic division: centered/: divide by zero: (15 -0.0)
PASS: numbers.test: Number-theoretic division: centered/: divide by zero: (15000000000 -0.0)
PASS: numbers.test: Number-theoretic division: centered/: divide by zero: (15000000000 -0.0)
PASS: numbers.test: Number-theoretic division: centered/: divide by zero: (15000000000 -0.0)
PASS: numbers.test: Number-theoretic division: centered/: divide by zero: (18.0 -0.0)
PASS: numbers.test: Number-theoretic division: centered/: divide by zero: (18.0 -0.0)
PASS: numbers.test: Number-theoretic division: centered/: divide by zero: (18.0 -0.0)
PASS: numbers.test: Number-theoretic division: centered/: divide by zero: (33/7 -0.0)
PASS: numbers.test: Number-theoretic division: centered/: divide by zero: (33/7 -0.0)
PASS: numbers.test: Number-theoretic division: centered/: divide by zero: (33/7 -0.0)
PASS: numbers.test: Number-theoretic division: centered/: divide by zero: (0 -0.0)
PASS: numbers.test: Number-theoretic division: centered/: divide by zero: (0 -0.0)
PASS: numbers.test: Number-theoretic division: centered/: divide by zero: (0 -0.0)
PASS: numbers.test: Number-theoretic division: centered/: divide by zero: (0.0 -0.0)
PASS: numbers.test: Number-theoretic division: centered/: divide by zero: (0.0 -0.0)
PASS: numbers.test: Number-theoretic division: centered/: divide by zero: (0.0 -0.0)
PASS: numbers.test: Number-theoretic division: centered/: divide by zero: (-0.0 -0.0)
PASS: numbers.test: Number-theoretic division: centered/: divide by zero: (-0.0 -0.0)
PASS: numbers.test: Number-theoretic division: centered/: divide by zero: (-0.0 -0.0)
PASS: numbers.test: Number-theoretic division: centered/: divide by zero: (+inf.0 -0.0)
PASS: numbers.test: Number-theoretic division: centered/: divide by zero: (+inf.0 -0.0)
PASS: numbers.test: Number-theoretic division: centered/: divide by zero: (+inf.0 -0.0)
PASS: numbers.test: Number-theoretic division: centered/: divide by zero: (-inf.0 -0.0)
PASS: numbers.test: Number-theoretic division: centered/: divide by zero: (-inf.0 -0.0)
PASS: numbers.test: Number-theoretic division: centered/: divide by zero: (-inf.0 -0.0)
PASS: numbers.test: Number-theoretic division: centered/: divide by zero: (+nan.0 -0.0)
PASS: numbers.test: Number-theoretic division: centered/: divide by zero: (+nan.0 -0.0)
PASS: numbers.test: Number-theoretic division: centered/: divide by zero: (+nan.0 -0.0)
PASS: numbers.test: Number-theoretic division: round/: documented?
PASS: numbers.test: Number-theoretic division: round/: inum / inum: fixnum-min / -1: (-536870912 -1)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-2 1)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-2 -1)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (2 1)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (2 -1)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-1 1)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-1 -1)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (1 1)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (1 -1)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (0 1)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (0 -1)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (1 1)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (1 -1)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-1 1)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-1 -1)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (2 1)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (2 -1)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-2 1)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-2 -1)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (3 1)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (3 -1)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-3 1)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-3 -1)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (4 1)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (4 -1)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-4 1)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-4 -1)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (5 1)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (5 -1)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-5 1)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-5 -1)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (7 1)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (7 -1)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-7 1)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-7 -1)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (10 1)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (10 -1)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-10 1)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-10 -1)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (12 1)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (12 -1)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-12 1)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-12 -1)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (15 1)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (15 -1)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-15 1)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-15 -1)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (16 1)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (16 -1)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-16 1)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-16 -1)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (19 1)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (19 -1)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-19 1)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-19 -1)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (20 1)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (20 -1)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-20 1)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-20 -1)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-1 1)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-1 -1)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (1 1)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (1 -1)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (0 1)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (0 -1)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (1 1)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (1 -1)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-1 1)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-1 -1)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (2 1)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (2 -1)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-2 1)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-2 -1)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (3 1)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (3 -1)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-3 1)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-3 -1)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (4 1)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (4 -1)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-4 1)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-4 -1)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (5 1)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (5 -1)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-5 1)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-5 -1)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (6 1)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (6 -1)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-6 1)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-6 -1)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (8 1)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (8 -1)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-8 1)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-8 -1)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (11 1)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (11 -1)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-11 1)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-11 -1)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (13 1)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (13 -1)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-13 1)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-13 -1)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (16 1)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (16 -1)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-16 1)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-16 -1)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (17 1)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (17 -1)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-17 1)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-17 -1)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (20 1)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (20 -1)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-20 1)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-20 -1)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (21 1)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (21 -1)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-21 1)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-21 -1)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (0 1)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (0 -1)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (1 1)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (1 -1)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-1 1)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-1 -1)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (2 1)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (2 -1)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-2 1)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-2 -1)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (3 1)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (3 -1)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-3 1)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-3 -1)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (4 1)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (4 -1)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-4 1)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-4 -1)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (5 1)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (5 -1)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-5 1)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-5 -1)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (6 1)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (6 -1)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-6 1)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-6 -1)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (7 1)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (7 -1)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-7 1)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-7 -1)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (9 1)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (9 -1)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-9 1)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-9 -1)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (12 1)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (12 -1)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-12 1)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-12 -1)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (14 1)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (14 -1)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-14 1)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-14 -1)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (17 1)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (17 -1)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-17 1)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-17 -1)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (18 1)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (18 -1)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-18 1)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-18 -1)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (21 1)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (21 -1)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-21 1)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-21 -1)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (22 1)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (22 -1)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-22 1)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-22 -1)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (3 1)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (3 -1)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-3 1)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-3 -1)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (4 1)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (4 -1)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-4 1)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-4 -1)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (5 1)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (5 -1)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-5 1)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-5 -1)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (6 1)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (6 -1)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-6 1)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-6 -1)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (7 1)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (7 -1)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-7 1)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-7 -1)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (8 1)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (8 -1)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-8 1)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-8 -1)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (9 1)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (9 -1)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-9 1)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-9 -1)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (10 1)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (10 -1)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-10 1)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-10 -1)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (12 1)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (12 -1)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-12 1)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-12 -1)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (15 1)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (15 -1)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-15 1)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-15 -1)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (17 1)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (17 -1)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-17 1)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-17 -1)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (20 1)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (20 -1)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-20 1)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-20 -1)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (21 1)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (21 -1)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-21 1)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-21 -1)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (24 1)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (24 -1)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-24 1)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-24 -1)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (25 1)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (25 -1)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-25 1)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-25 -1)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (8 1)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (8 -1)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-8 1)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-8 -1)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (9 1)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (9 -1)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-9 1)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-9 -1)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (10 1)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (10 -1)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-10 1)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-10 -1)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (11 1)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (11 -1)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-11 1)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-11 -1)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (12 1)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (12 -1)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-12 1)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-12 -1)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (13 1)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (13 -1)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-13 1)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-13 -1)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (14 1)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (14 -1)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-14 1)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-14 -1)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (15 1)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (15 -1)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-15 1)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-15 -1)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (17 1)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (17 -1)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-17 1)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-17 -1)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (20 1)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (20 -1)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-20 1)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-20 -1)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (22 1)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (22 -1)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-22 1)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-22 -1)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (25 1)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (25 -1)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-25 1)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-25 -1)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (26 1)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (26 -1)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-26 1)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-26 -1)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (29 1)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (29 -1)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-29 1)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-29 -1)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (30 1)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (30 -1)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-30 1)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-30 -1)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-2 2)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-2 -2)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (2 2)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (2 -2)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-1 2)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-1 -2)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (1 2)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (1 -2)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (0 2)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (0 -2)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (1 2)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (1 -2)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-1 2)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-1 -2)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (2 2)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (2 -2)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-2 2)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-2 -2)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (3 2)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (3 -2)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-3 2)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-3 -2)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (4 2)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (4 -2)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-4 2)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-4 -2)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (5 2)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (5 -2)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-5 2)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-5 -2)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (7 2)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (7 -2)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-7 2)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-7 -2)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (10 2)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (10 -2)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-10 2)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-10 -2)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (12 2)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (12 -2)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-12 2)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-12 -2)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (15 2)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (15 -2)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-15 2)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-15 -2)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (16 2)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (16 -2)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-16 2)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-16 -2)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (19 2)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (19 -2)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-19 2)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-19 -2)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (20 2)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (20 -2)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-20 2)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-20 -2)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (0 2)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (0 -2)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (1 2)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (1 -2)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-1 2)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-1 -2)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (2 2)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (2 -2)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-2 2)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-2 -2)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (3 2)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (3 -2)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-3 2)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-3 -2)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (4 2)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (4 -2)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-4 2)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-4 -2)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (5 2)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (5 -2)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-5 2)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-5 -2)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (6 2)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (6 -2)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-6 2)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-6 -2)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (7 2)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (7 -2)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-7 2)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-7 -2)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (9 2)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (9 -2)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-9 2)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-9 -2)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (12 2)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (12 -2)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-12 2)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-12 -2)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (14 2)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (14 -2)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-14 2)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-14 -2)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (17 2)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (17 -2)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-17 2)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-17 -2)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (18 2)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (18 -2)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-18 2)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-18 -2)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (21 2)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (21 -2)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-21 2)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-21 -2)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (22 2)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (22 -2)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-22 2)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-22 -2)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (2 2)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (2 -2)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-2 2)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-2 -2)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (3 2)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (3 -2)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-3 2)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-3 -2)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (4 2)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (4 -2)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-4 2)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-4 -2)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (5 2)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (5 -2)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-5 2)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-5 -2)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (6 2)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (6 -2)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-6 2)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-6 -2)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (7 2)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (7 -2)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-7 2)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-7 -2)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (8 2)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (8 -2)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-8 2)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-8 -2)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (9 2)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (9 -2)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-9 2)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-9 -2)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (11 2)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (11 -2)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-11 2)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-11 -2)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (14 2)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (14 -2)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-14 2)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-14 -2)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (16 2)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (16 -2)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-16 2)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-16 -2)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (19 2)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (19 -2)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-19 2)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-19 -2)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (20 2)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (20 -2)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-20 2)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-20 -2)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (23 2)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (23 -2)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-23 2)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-23 -2)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (24 2)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (24 -2)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-24 2)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-24 -2)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (8 2)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (8 -2)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-8 2)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-8 -2)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (9 2)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (9 -2)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-9 2)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-9 -2)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (10 2)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (10 -2)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-10 2)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-10 -2)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (11 2)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (11 -2)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-11 2)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-11 -2)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (12 2)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (12 -2)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-12 2)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-12 -2)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (13 2)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (13 -2)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-13 2)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-13 -2)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (14 2)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (14 -2)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-14 2)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-14 -2)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (15 2)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (15 -2)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-15 2)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-15 -2)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (17 2)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (17 -2)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-17 2)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-17 -2)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (20 2)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (20 -2)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-20 2)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-20 -2)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (22 2)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (22 -2)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-22 2)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-22 -2)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (25 2)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (25 -2)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-25 2)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-25 -2)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (26 2)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (26 -2)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-26 2)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-26 -2)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (29 2)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (29 -2)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-29 2)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-29 -2)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (30 2)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (30 -2)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-30 2)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-30 -2)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (18 2)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (18 -2)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-18 2)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-18 -2)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (19 2)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (19 -2)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-19 2)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-19 -2)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (20 2)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (20 -2)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-20 2)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-20 -2)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (21 2)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (21 -2)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-21 2)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-21 -2)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (22 2)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (22 -2)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-22 2)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-22 -2)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (23 2)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (23 -2)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-23 2)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-23 -2)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (24 2)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (24 -2)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-24 2)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-24 -2)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (25 2)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (25 -2)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-25 2)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-25 -2)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (27 2)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (27 -2)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-27 2)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-27 -2)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (30 2)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (30 -2)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-30 2)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-30 -2)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (32 2)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (32 -2)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-32 2)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-32 -2)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (35 2)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (35 -2)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-35 2)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-35 -2)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (36 2)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (36 -2)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-36 2)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-36 -2)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (39 2)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (39 -2)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-39 2)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-39 -2)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (40 2)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (40 -2)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-40 2)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-40 -2)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-2 5)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-2 -5)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (2 5)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (2 -5)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-1 5)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-1 -5)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (1 5)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (1 -5)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (0 5)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (0 -5)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (1 5)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (1 -5)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-1 5)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-1 -5)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (2 5)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (2 -5)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-2 5)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-2 -5)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (3 5)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (3 -5)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-3 5)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-3 -5)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (4 5)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (4 -5)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-4 5)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-4 -5)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (5 5)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (5 -5)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-5 5)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-5 -5)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (7 5)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (7 -5)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-7 5)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-7 -5)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (10 5)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (10 -5)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-10 5)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-10 -5)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (12 5)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (12 -5)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-12 5)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-12 -5)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (15 5)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (15 -5)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-15 5)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-15 -5)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (16 5)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (16 -5)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-16 5)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-16 -5)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (19 5)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (19 -5)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-19 5)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-19 -5)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (20 5)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (20 -5)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-20 5)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-20 -5)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (3 5)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (3 -5)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-3 5)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-3 -5)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (4 5)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (4 -5)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-4 5)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-4 -5)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (5 5)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (5 -5)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-5 5)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-5 -5)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (6 5)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (6 -5)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-6 5)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-6 -5)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (7 5)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (7 -5)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-7 5)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-7 -5)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (8 5)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (8 -5)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-8 5)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-8 -5)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (9 5)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (9 -5)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-9 5)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-9 -5)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (10 5)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (10 -5)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-10 5)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-10 -5)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (12 5)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (12 -5)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-12 5)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-12 -5)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (15 5)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (15 -5)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-15 5)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-15 -5)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (17 5)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (17 -5)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-17 5)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-17 -5)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (20 5)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (20 -5)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-20 5)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-20 -5)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (21 5)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (21 -5)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-21 5)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-21 -5)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (24 5)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (24 -5)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-24 5)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-24 -5)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (25 5)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (25 -5)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-25 5)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-25 -5)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (8 5)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (8 -5)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-8 5)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-8 -5)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (9 5)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (9 -5)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-9 5)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-9 -5)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (10 5)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (10 -5)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-10 5)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-10 -5)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (11 5)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (11 -5)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-11 5)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-11 -5)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (12 5)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (12 -5)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-12 5)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-12 -5)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (13 5)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (13 -5)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-13 5)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-13 -5)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (14 5)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (14 -5)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-14 5)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-14 -5)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (15 5)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (15 -5)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-15 5)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-15 -5)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (17 5)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (17 -5)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-17 5)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-17 -5)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (20 5)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (20 -5)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-20 5)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-20 -5)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (22 5)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (22 -5)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-22 5)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-22 -5)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (25 5)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (25 -5)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-25 5)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-25 -5)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (26 5)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (26 -5)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-26 5)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-26 -5)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (29 5)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (29 -5)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-29 5)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-29 -5)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (30 5)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (30 -5)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-30 5)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-30 -5)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (23 5)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (23 -5)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-23 5)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-23 -5)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (24 5)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (24 -5)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-24 5)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-24 -5)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (25 5)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (25 -5)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-25 5)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-25 -5)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (26 5)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (26 -5)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-26 5)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-26 -5)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (27 5)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (27 -5)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-27 5)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-27 -5)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (28 5)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (28 -5)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-28 5)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-28 -5)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (29 5)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (29 -5)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-29 5)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-29 -5)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (30 5)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (30 -5)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-30 5)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-30 -5)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (32 5)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (32 -5)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-32 5)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-32 -5)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (35 5)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (35 -5)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-35 5)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-35 -5)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (37 5)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (37 -5)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-37 5)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-37 -5)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (40 5)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (40 -5)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-40 5)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-40 -5)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (41 5)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (41 -5)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-41 5)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-41 -5)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (44 5)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (44 -5)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-44 5)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-44 -5)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (45 5)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (45 -5)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-45 5)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-45 -5)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (48 5)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (48 -5)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-48 5)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-48 -5)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (49 5)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (49 -5)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-49 5)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-49 -5)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (50 5)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (50 -5)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-50 5)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-50 -5)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (51 5)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (51 -5)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-51 5)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-51 -5)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (52 5)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (52 -5)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-52 5)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-52 -5)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (53 5)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (53 -5)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-53 5)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-53 -5)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (54 5)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (54 -5)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-54 5)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-54 -5)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (55 5)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (55 -5)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-55 5)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-55 -5)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (57 5)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (57 -5)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-57 5)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-57 -5)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (60 5)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (60 -5)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-60 5)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-60 -5)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (62 5)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (62 -5)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-62 5)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-62 -5)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (65 5)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (65 -5)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-65 5)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-65 -5)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (66 5)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (66 -5)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-66 5)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-66 -5)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (69 5)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (69 -5)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-69 5)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-69 -5)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (70 5)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (70 -5)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-70 5)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-70 -5)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-2 10)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-2 -10)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (2 10)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (2 -10)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-1 10)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-1 -10)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (1 10)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (1 -10)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (0 10)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (0 -10)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (1 10)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (1 -10)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-1 10)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-1 -10)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (2 10)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (2 -10)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-2 10)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-2 -10)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (3 10)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (3 -10)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-3 10)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-3 -10)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (4 10)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (4 -10)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-4 10)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-4 -10)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (5 10)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (5 -10)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-5 10)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-5 -10)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (7 10)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (7 -10)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-7 10)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-7 -10)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (10 10)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (10 -10)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-10 10)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-10 -10)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (12 10)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (12 -10)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-12 10)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-12 -10)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (15 10)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (15 -10)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-15 10)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-15 -10)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (16 10)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (16 -10)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-16 10)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-16 -10)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (19 10)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (19 -10)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-19 10)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-19 -10)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (20 10)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (20 -10)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-20 10)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-20 -10)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (8 10)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (8 -10)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-8 10)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-8 -10)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (9 10)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (9 -10)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-9 10)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-9 -10)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (10 10)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (10 -10)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-10 10)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-10 -10)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (11 10)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (11 -10)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-11 10)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-11 -10)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (12 10)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (12 -10)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-12 10)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-12 -10)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (13 10)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (13 -10)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-13 10)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-13 -10)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (14 10)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (14 -10)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-14 10)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-14 -10)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (15 10)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (15 -10)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-15 10)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-15 -10)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (17 10)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (17 -10)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-17 10)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-17 -10)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (20 10)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (20 -10)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-20 10)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-20 -10)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (22 10)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (22 -10)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-22 10)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-22 -10)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (25 10)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (25 -10)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-25 10)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-25 -10)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (26 10)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (26 -10)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-26 10)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-26 -10)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (29 10)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (29 -10)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-29 10)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-29 -10)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (30 10)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (30 -10)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-30 10)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-30 -10)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (18 10)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (18 -10)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-18 10)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-18 -10)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (19 10)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (19 -10)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-19 10)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-19 -10)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (20 10)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (20 -10)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-20 10)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-20 -10)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (21 10)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (21 -10)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-21 10)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-21 -10)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (22 10)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (22 -10)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-22 10)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-22 -10)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (23 10)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (23 -10)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-23 10)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-23 -10)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (24 10)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (24 -10)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-24 10)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-24 -10)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (25 10)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (25 -10)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-25 10)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-25 -10)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (27 10)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (27 -10)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-27 10)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-27 -10)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (30 10)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (30 -10)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-30 10)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-30 -10)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (32 10)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (32 -10)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-32 10)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-32 -10)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (35 10)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (35 -10)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-35 10)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-35 -10)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (36 10)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (36 -10)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-36 10)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-36 -10)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (39 10)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (39 -10)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-39 10)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-39 -10)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (40 10)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (40 -10)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-40 10)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-40 -10)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (48 10)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (48 -10)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-48 10)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-48 -10)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (49 10)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (49 -10)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-49 10)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-49 -10)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (50 10)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (50 -10)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-50 10)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-50 -10)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (51 10)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (51 -10)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-51 10)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-51 -10)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (52 10)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (52 -10)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-52 10)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-52 -10)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (53 10)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (53 -10)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-53 10)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-53 -10)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (54 10)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (54 -10)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-54 10)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-54 -10)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (55 10)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (55 -10)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-55 10)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-55 -10)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (57 10)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (57 -10)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-57 10)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-57 -10)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (60 10)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (60 -10)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-60 10)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-60 -10)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (62 10)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (62 -10)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-62 10)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-62 -10)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (65 10)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (65 -10)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-65 10)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-65 -10)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (66 10)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (66 -10)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-66 10)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-66 -10)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (69 10)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (69 -10)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-69 10)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-69 -10)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (70 10)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (70 -10)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-70 10)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-70 -10)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (98 10)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (98 -10)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-98 10)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-98 -10)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (99 10)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (99 -10)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-99 10)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-99 -10)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (100 10)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (100 -10)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-100 10)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-100 -10)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (101 10)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (101 -10)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-101 10)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-101 -10)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (102 10)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (102 -10)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-102 10)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-102 -10)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (103 10)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (103 -10)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-103 10)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-103 -10)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (104 10)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (104 -10)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-104 10)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-104 -10)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (105 10)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (105 -10)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-105 10)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-105 -10)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (107 10)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (107 -10)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-107 10)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-107 -10)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (110 10)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (110 -10)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-110 10)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-110 -10)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (112 10)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (112 -10)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-112 10)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-112 -10)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (115 10)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (115 -10)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-115 10)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-115 -10)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (116 10)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (116 -10)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-116 10)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-116 -10)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (119 10)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (119 -10)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-119 10)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-119 -10)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (120 10)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (120 -10)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-120 10)
PASS: numbers.test: Number-theoretic division: round/: inum / inum: (-120 -10)
PASS: numbers.test: Number-theoretic division: round/: inum / big: fixnum-min / -fixnum-min: (-536870912 536870912)
PASS: numbers.test: Number-theoretic division: round/: inum / big: fixnum-max / (2*fixnum-max): (536870911 1073741822)
PASS: numbers.test: Number-theoretic division: round/: inum / big: fixnum-max / (2*fixnum-max): (536870911 -1073741822)
PASS: numbers.test: Number-theoretic division: round/: inum / big: fixnum-max / (2*fixnum-max): (-536870911 1073741822)
PASS: numbers.test: Number-theoretic division: round/: inum / big: fixnum-max / (2*fixnum-max): (-536870911 -1073741822)
PASS: numbers.test: Number-theoretic division: round/: inum / big: (0 536870912)
PASS: numbers.test: Number-theoretic division: round/: inum / big: (0 536870912)
PASS: numbers.test: Number-theoretic division: round/: inum / big: (0 -536870913)
PASS: numbers.test: Number-theoretic division: round/: inum / big: (0 -536870913)
PASS: numbers.test: Number-theoretic division: round/: inum / big: (1 536870912)
PASS: numbers.test: Number-theoretic division: round/: inum / big: (-1 536870912)
PASS: numbers.test: Number-theoretic division: round/: inum / big: (1 -536870913)
PASS: numbers.test: Number-theoretic division: round/: inum / big: (-1 -536870913)
PASS: numbers.test: Number-theoretic division: round/: inum / big: (2 536870912)
PASS: numbers.test: Number-theoretic division: round/: inum / big: (-2 536870912)
PASS: numbers.test: Number-theoretic division: round/: inum / big: (2 -536870913)
PASS: numbers.test: Number-theoretic division: round/: inum / big: (-2 -536870913)
PASS: numbers.test: Number-theoretic division: round/: inum / big: (10 536870912)
PASS: numbers.test: Number-theoretic division: round/: inum / big: (-10 536870912)
PASS: numbers.test: Number-theoretic division: round/: inum / big: (10 -536870913)
PASS: numbers.test: Number-theoretic division: round/: inum / big: (-10 -536870913)
PASS: numbers.test: Number-theoretic division: round/: inum / big: (536870910 536870912)
PASS: numbers.test: Number-theoretic division: round/: inum / big: (-536870910 536870912)
PASS: numbers.test: Number-theoretic division: round/: inum / big: (536870910 -536870913)
PASS: numbers.test: Number-theoretic division: round/: inum / big: (-536870910 -536870913)
PASS: numbers.test: Number-theoretic division: round/: inum / big: (536870911 536870912)
PASS: numbers.test: Number-theoretic division: round/: inum / big: (-536870911 536870912)
PASS: numbers.test: Number-theoretic division: round/: inum / big: (536870911 -536870913)
PASS: numbers.test: Number-theoretic division: round/: inum / big: (-536870911 -536870913)
PASS: numbers.test: Number-theoretic division: round/: big / inum: -fixnum-min / fixnum-min: (536870912 -536870912)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (9999999998 1)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (9999999998 -1)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (-9999999998 1)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (-9999999998 -1)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (9999999999 1)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (9999999999 -1)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (-9999999999 1)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (-9999999999 -1)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (10000000000 1)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (10000000000 -1)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (-10000000000 1)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (-10000000000 -1)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (10000000001 1)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (10000000001 -1)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (-10000000001 1)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (-10000000001 -1)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (10000000002 1)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (10000000002 -1)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (-10000000002 1)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (-10000000002 -1)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (19999999998 1)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (19999999998 -1)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (-19999999998 1)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (-19999999998 -1)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (19999999999 1)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (19999999999 -1)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (-19999999999 1)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (-19999999999 -1)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (20000000000 1)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (20000000000 -1)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (-20000000000 1)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (-20000000000 -1)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (20000000001 1)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (20000000001 -1)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (-20000000001 1)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (-20000000001 -1)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (20000000002 1)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (20000000002 -1)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (-20000000002 1)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (-20000000002 -1)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (49999999998 1)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (49999999998 -1)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (-49999999998 1)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (-49999999998 -1)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (49999999999 1)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (49999999999 -1)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (-49999999999 1)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (-49999999999 -1)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (50000000000 1)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (50000000000 -1)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (-50000000000 1)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (-50000000000 -1)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (50000000001 1)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (50000000001 -1)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (-50000000001 1)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (-50000000001 -1)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (50000000002 1)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (50000000002 -1)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (-50000000002 1)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (-50000000002 -1)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (39999999998 4)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (39999999998 -4)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (-39999999998 4)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (-39999999998 -4)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (39999999999 4)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (39999999999 -4)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (-39999999999 4)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (-39999999999 -4)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (40000000000 4)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (40000000000 -4)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (-40000000000 4)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (-40000000000 -4)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (40000000001 4)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (40000000001 -4)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (-40000000001 4)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (-40000000001 -4)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (40000000002 4)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (40000000002 -4)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (-40000000002 4)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (-40000000002 -4)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (79999999998 4)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (79999999998 -4)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (-79999999998 4)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (-79999999998 -4)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (79999999999 4)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (79999999999 -4)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (-79999999999 4)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (-79999999999 -4)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (80000000000 4)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (80000000000 -4)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (-80000000000 4)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (-80000000000 -4)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (80000000001 4)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (80000000001 -4)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (-80000000001 4)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (-80000000001 -4)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (80000000002 4)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (80000000002 -4)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (-80000000002 4)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (-80000000002 -4)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (199999999998 4)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (199999999998 -4)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (-199999999998 4)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (-199999999998 -4)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (199999999999 4)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (199999999999 -4)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (-199999999999 4)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (-199999999999 -4)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (200000000000 4)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (200000000000 -4)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (-200000000000 4)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (-200000000000 -4)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (200000000001 4)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (200000000001 -4)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (-200000000001 4)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (-200000000001 -4)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (200000000002 4)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (200000000002 -4)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (-200000000002 4)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (-200000000002 -4)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (19999999998 4)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (19999999998 -4)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (-19999999998 4)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (-19999999998 -4)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (19999999999 4)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (19999999999 -4)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (-19999999999 4)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (-19999999999 -4)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (20000000000 4)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (20000000000 -4)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (-20000000000 4)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (-20000000000 -4)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (20000000001 4)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (20000000001 -4)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (-20000000001 4)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (-20000000001 -4)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (20000000002 4)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (20000000002 -4)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (-20000000002 4)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (-20000000002 -4)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (59999999998 4)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (59999999998 -4)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (-59999999998 4)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (-59999999998 -4)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (59999999999 4)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (59999999999 -4)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (-59999999999 4)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (-59999999999 -4)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (60000000000 4)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (60000000000 -4)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (-60000000000 4)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (-60000000000 -4)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (60000000001 4)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (60000000001 -4)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (-60000000001 4)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (-60000000001 -4)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (60000000002 4)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (60000000002 -4)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (-60000000002 4)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (-60000000002 -4)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (99999999998 4)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (99999999998 -4)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (-99999999998 4)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (-99999999998 -4)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (99999999999 4)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (99999999999 -4)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (-99999999999 4)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (-99999999999 -4)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (100000000000 4)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (100000000000 -4)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (-100000000000 4)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (-100000000000 -4)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (100000000001 4)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (100000000001 -4)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (-100000000001 4)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (-100000000001 -4)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (100000000002 4)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (100000000002 -4)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (-100000000002 4)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (-100000000002 -4)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (49999999998 5)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (49999999998 -5)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (-49999999998 5)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (-49999999998 -5)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (49999999999 5)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (49999999999 -5)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (-49999999999 5)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (-49999999999 -5)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (50000000000 5)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (50000000000 -5)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (-50000000000 5)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (-50000000000 -5)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (50000000001 5)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (50000000001 -5)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (-50000000001 5)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (-50000000001 -5)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (50000000002 5)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (50000000002 -5)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (-50000000002 5)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (-50000000002 -5)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (99999999998 5)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (99999999998 -5)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (-99999999998 5)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (-99999999998 -5)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (99999999999 5)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (99999999999 -5)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (-99999999999 5)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (-99999999999 -5)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (100000000000 5)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (100000000000 -5)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (-100000000000 5)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (-100000000000 -5)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (100000000001 5)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (100000000001 -5)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (-100000000001 5)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (-100000000001 -5)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (100000000002 5)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (100000000002 -5)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (-100000000002 5)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (-100000000002 -5)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (249999999998 5)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (249999999998 -5)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (-249999999998 5)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (-249999999998 -5)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (249999999999 5)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (249999999999 -5)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (-249999999999 5)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (-249999999999 -5)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (250000000000 5)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (250000000000 -5)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (-250000000000 5)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (-250000000000 -5)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (250000000001 5)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (250000000001 -5)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (-250000000001 5)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (-250000000001 -5)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (250000000002 5)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (250000000002 -5)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (-250000000002 5)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (-250000000002 -5)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (99999999998 10)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (99999999998 -10)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (-99999999998 10)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (-99999999998 -10)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (99999999999 10)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (99999999999 -10)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (-99999999999 10)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (-99999999999 -10)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (100000000000 10)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (100000000000 -10)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (-100000000000 10)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (-100000000000 -10)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (100000000001 10)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (100000000001 -10)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (-100000000001 10)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (-100000000001 -10)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (100000000002 10)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (100000000002 -10)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (-100000000002 10)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (-100000000002 -10)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (199999999998 10)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (199999999998 -10)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (-199999999998 10)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (-199999999998 -10)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (199999999999 10)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (199999999999 -10)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (-199999999999 10)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (-199999999999 -10)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (200000000000 10)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (200000000000 -10)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (-200000000000 10)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (-200000000000 -10)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (200000000001 10)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (200000000001 -10)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (-200000000001 10)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (-200000000001 -10)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (200000000002 10)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (200000000002 -10)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (-200000000002 10)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (-200000000002 -10)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (499999999998 10)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (499999999998 -10)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (-499999999998 10)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (-499999999998 -10)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (499999999999 10)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (499999999999 -10)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (-499999999999 10)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (-499999999999 -10)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (500000000000 10)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (500000000000 -10)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (-500000000000 10)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (-500000000000 -10)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (500000000001 10)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (500000000001 -10)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (-500000000001 10)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (-500000000001 -10)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (500000000002 10)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (500000000002 -10)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (-500000000002 10)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (-500000000002 -10)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (49999999998 10)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (49999999998 -10)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (-49999999998 10)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (-49999999998 -10)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (49999999999 10)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (49999999999 -10)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (-49999999999 10)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (-49999999999 -10)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (50000000000 10)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (50000000000 -10)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (-50000000000 10)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (-50000000000 -10)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (50000000001 10)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (50000000001 -10)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (-50000000001 10)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (-50000000001 -10)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (50000000002 10)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (50000000002 -10)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (-50000000002 10)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (-50000000002 -10)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (149999999998 10)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (149999999998 -10)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (-149999999998 10)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (-149999999998 -10)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (149999999999 10)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (149999999999 -10)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (-149999999999 10)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (-149999999999 -10)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (150000000000 10)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (150000000000 -10)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (-150000000000 10)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (-150000000000 -10)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (150000000001 10)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (150000000001 -10)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (-150000000001 10)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (-150000000001 -10)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (150000000002 10)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (150000000002 -10)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (-150000000002 10)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (-150000000002 -10)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (249999999998 10)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (249999999998 -10)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (-249999999998 10)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (-249999999998 -10)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (249999999999 10)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (249999999999 -10)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (-249999999999 10)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (-249999999999 -10)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (250000000000 10)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (250000000000 -10)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (-250000000000 10)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (-250000000000 -10)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (250000000001 10)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (250000000001 -10)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (-250000000001 10)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (-250000000001 -10)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (250000000002 10)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (250000000002 -10)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (-250000000002 10)
PASS: numbers.test: Number-theoretic division: round/: big / inum: (-250000000002 -10)
PASS: numbers.test: Number-theoretic division: round/: big / big: (9999999998 10000000000)
PASS: numbers.test: Number-theoretic division: round/: big / big: (9999999998 -10000000000)
PASS: numbers.test: Number-theoretic division: round/: big / big: (-9999999998 10000000000)
PASS: numbers.test: Number-theoretic division: round/: big / big: (-9999999998 -10000000000)
PASS: numbers.test: Number-theoretic division: round/: big / big: (9999999999 10000000000)
PASS: numbers.test: Number-theoretic division: round/: big / big: (9999999999 -10000000000)
PASS: numbers.test: Number-theoretic division: round/: big / big: (-9999999999 10000000000)
PASS: numbers.test: Number-theoretic division: round/: big / big: (-9999999999 -10000000000)
PASS: numbers.test: Number-theoretic division: round/: big / big: (10000000000 10000000000)
PASS: numbers.test: Number-theoretic division: round/: big / big: (10000000000 -10000000000)
PASS: numbers.test: Number-theoretic division: round/: big / big: (-10000000000 10000000000)
PASS: numbers.test: Number-theoretic division: round/: big / big: (-10000000000 -10000000000)
PASS: numbers.test: Number-theoretic division: round/: big / big: (10000000001 10000000000)
PASS: numbers.test: Number-theoretic division: round/: big / big: (10000000001 -10000000000)
PASS: numbers.test: Number-theoretic division: round/: big / big: (-10000000001 10000000000)
PASS: numbers.test: Number-theoretic division: round/: big / big: (-10000000001 -10000000000)
PASS: numbers.test: Number-theoretic division: round/: big / big: (10000000002 10000000000)
PASS: numbers.test: Number-theoretic division: round/: big / big: (10000000002 -10000000000)
PASS: numbers.test: Number-theoretic division: round/: big / big: (-10000000002 10000000000)
PASS: numbers.test: Number-theoretic division: round/: big / big: (-10000000002 -10000000000)
PASS: numbers.test: Number-theoretic division: round/: big / big: (19999999998 10000000000)
PASS: numbers.test: Number-theoretic division: round/: big / big: (19999999998 -10000000000)
PASS: numbers.test: Number-theoretic division: round/: big / big: (-19999999998 10000000000)
PASS: numbers.test: Number-theoretic division: round/: big / big: (-19999999998 -10000000000)
PASS: numbers.test: Number-theoretic division: round/: big / big: (19999999999 10000000000)
PASS: numbers.test: Number-theoretic division: round/: big / big: (19999999999 -10000000000)
PASS: numbers.test: Number-theoretic division: round/: big / big: (-19999999999 10000000000)
PASS: numbers.test: Number-theoretic division: round/: big / big: (-19999999999 -10000000000)
PASS: numbers.test: Number-theoretic division: round/: big / big: (20000000000 10000000000)
PASS: numbers.test: Number-theoretic division: round/: big / big: (20000000000 -10000000000)
PASS: numbers.test: Number-theoretic division: round/: big / big: (-20000000000 10000000000)
PASS: numbers.test: Number-theoretic division: round/: big / big: (-20000000000 -10000000000)
PASS: numbers.test: Number-theoretic division: round/: big / big: (20000000001 10000000000)
PASS: numbers.test: Number-theoretic division: round/: big / big: (20000000001 -10000000000)
PASS: numbers.test: Number-theoretic division: round/: big / big: (-20000000001 10000000000)
PASS: numbers.test: Number-theoretic division: round/: big / big: (-20000000001 -10000000000)
PASS: numbers.test: Number-theoretic division: round/: big / big: (20000000002 10000000000)
PASS: numbers.test: Number-theoretic division: round/: big / big: (20000000002 -10000000000)
PASS: numbers.test: Number-theoretic division: round/: big / big: (-20000000002 10000000000)
PASS: numbers.test: Number-theoretic division: round/: big / big: (-20000000002 -10000000000)
PASS: numbers.test: Number-theoretic division: round/: big / big: (49999999998 10000000000)
PASS: numbers.test: Number-theoretic division: round/: big / big: (49999999998 -10000000000)
PASS: numbers.test: Number-theoretic division: round/: big / big: (-49999999998 10000000000)
PASS: numbers.test: Number-theoretic division: round/: big / big: (-49999999998 -10000000000)
PASS: numbers.test: Number-theoretic division: round/: big / big: (49999999999 10000000000)
PASS: numbers.test: Number-theoretic division: round/: big / big: (49999999999 -10000000000)
PASS: numbers.test: Number-theoretic division: round/: big / big: (-49999999999 10000000000)
PASS: numbers.test: Number-theoretic division: round/: big / big: (-49999999999 -10000000000)
PASS: numbers.test: Number-theoretic division: round/: big / big: (50000000000 10000000000)
PASS: numbers.test: Number-theoretic division: round/: big / big: (50000000000 -10000000000)
PASS: numbers.test: Number-theoretic division: round/: big / big: (-50000000000 10000000000)
PASS: numbers.test: Number-theoretic division: round/: big / big: (-50000000000 -10000000000)
PASS: numbers.test: Number-theoretic division: round/: big / big: (50000000001 10000000000)
PASS: numbers.test: Number-theoretic division: round/: big / big: (50000000001 -10000000000)
PASS: numbers.test: Number-theoretic division: round/: big / big: (-50000000001 10000000000)
PASS: numbers.test: Number-theoretic division: round/: big / big: (-50000000001 -10000000000)
PASS: numbers.test: Number-theoretic division: round/: big / big: (50000000002 10000000000)
PASS: numbers.test: Number-theoretic division: round/: big / big: (50000000002 -10000000000)
PASS: numbers.test: Number-theoretic division: round/: big / big: (-50000000002 10000000000)
PASS: numbers.test: Number-theoretic division: round/: big / big: (-50000000002 -10000000000)
PASS: numbers.test: Number-theoretic division: round/: big / big: (4999999998 10000000000)
PASS: numbers.test: Number-theoretic division: round/: big / big: (4999999998 -10000000000)
PASS: numbers.test: Number-theoretic division: round/: big / big: (-4999999998 10000000000)
PASS: numbers.test: Number-theoretic division: round/: big / big: (-4999999998 -10000000000)
PASS: numbers.test: Number-theoretic division: round/: big / big: (4999999999 10000000000)
PASS: numbers.test: Number-theoretic division: round/: big / big: (4999999999 -10000000000)
PASS: numbers.test: Number-theoretic division: round/: big / big: (-4999999999 10000000000)
PASS: numbers.test: Number-theoretic division: round/: big / big: (-4999999999 -10000000000)
PASS: numbers.test: Number-theoretic division: round/: big / big: (5000000000 10000000000)
PASS: numbers.test: Number-theoretic division: round/: big / big: (5000000000 -10000000000)
PASS: numbers.test: Number-theoretic division: round/: big / big: (-5000000000 10000000000)
PASS: numbers.test: Number-theoretic division: round/: big / big: (-5000000000 -10000000000)
PASS: numbers.test: Number-theoretic division: round/: big / big: (5000000001 10000000000)
PASS: numbers.test: Number-theoretic division: round/: big / big: (5000000001 -10000000000)
PASS: numbers.test: Number-theoretic division: round/: big / big: (-5000000001 10000000000)
PASS: numbers.test: Number-theoretic division: round/: big / big: (-5000000001 -10000000000)
PASS: numbers.test: Number-theoretic division: round/: big / big: (5000000002 10000000000)
PASS: numbers.test: Number-theoretic division: round/: big / big: (5000000002 -10000000000)
PASS: numbers.test: Number-theoretic division: round/: big / big: (-5000000002 10000000000)
PASS: numbers.test: Number-theoretic division: round/: big / big: (-5000000002 -10000000000)
PASS: numbers.test: Number-theoretic division: round/: big / big: (14999999998 10000000000)
PASS: numbers.test: Number-theoretic division: round/: big / big: (14999999998 -10000000000)
PASS: numbers.test: Number-theoretic division: round/: big / big: (-14999999998 10000000000)
PASS: numbers.test: Number-theoretic division: round/: big / big: (-14999999998 -10000000000)
PASS: numbers.test: Number-theoretic division: round/: big / big: (14999999999 10000000000)
PASS: numbers.test: Number-theoretic division: round/: big / big: (14999999999 -10000000000)
PASS: numbers.test: Number-theoretic division: round/: big / big: (-14999999999 10000000000)
PASS: numbers.test: Number-theoretic division: round/: big / big: (-14999999999 -10000000000)
PASS: numbers.test: Number-theoretic division: round/: big / big: (15000000000 10000000000)
PASS: numbers.test: Number-theoretic division: round/: big / big: (15000000000 -10000000000)
PASS: numbers.test: Number-theoretic division: round/: big / big: (-15000000000 10000000000)
PASS: numbers.test: Number-theoretic division: round/: big / big: (-15000000000 -10000000000)
PASS: numbers.test: Number-theoretic division: round/: big / big: (15000000001 10000000000)
PASS: numbers.test: Number-theoretic division: round/: big / big: (15000000001 -10000000000)
PASS: numbers.test: Number-theoretic division: round/: big / big: (-15000000001 10000000000)
PASS: numbers.test: Number-theoretic division: round/: big / big: (-15000000001 -10000000000)
PASS: numbers.test: Number-theoretic division: round/: big / big: (15000000002 10000000000)
PASS: numbers.test: Number-theoretic division: round/: big / big: (15000000002 -10000000000)
PASS: numbers.test: Number-theoretic division: round/: big / big: (-15000000002 10000000000)
PASS: numbers.test: Number-theoretic division: round/: big / big: (-15000000002 -10000000000)
PASS: numbers.test: Number-theoretic division: round/: big / big: (24999999998 10000000000)
PASS: numbers.test: Number-theoretic division: round/: big / big: (24999999998 -10000000000)
PASS: numbers.test: Number-theoretic division: round/: big / big: (-24999999998 10000000000)
PASS: numbers.test: Number-theoretic division: round/: big / big: (-24999999998 -10000000000)
PASS: numbers.test: Number-theoretic division: round/: big / big: (24999999999 10000000000)
PASS: numbers.test: Number-theoretic division: round/: big / big: (24999999999 -10000000000)
PASS: numbers.test: Number-theoretic division: round/: big / big: (-24999999999 10000000000)
PASS: numbers.test: Number-theoretic division: round/: big / big: (-24999999999 -10000000000)
PASS: numbers.test: Number-theoretic division: round/: big / big: (25000000000 10000000000)
PASS: numbers.test: Number-theoretic division: round/: big / big: (25000000000 -10000000000)
PASS: numbers.test: Number-theoretic division: round/: big / big: (-25000000000 10000000000)
PASS: numbers.test: Number-theoretic division: round/: big / big: (-25000000000 -10000000000)
PASS: numbers.test: Number-theoretic division: round/: big / big: (25000000001 10000000000)
PASS: numbers.test: Number-theoretic division: round/: big / big: (25000000001 -10000000000)
PASS: numbers.test: Number-theoretic division: round/: big / big: (-25000000001 10000000000)
PASS: numbers.test: Number-theoretic division: round/: big / big: (-25000000001 -10000000000)
PASS: numbers.test: Number-theoretic division: round/: big / big: (25000000002 10000000000)
PASS: numbers.test: Number-theoretic division: round/: big / big: (25000000002 -10000000000)
PASS: numbers.test: Number-theoretic division: round/: big / big: (-25000000002 10000000000)
PASS: numbers.test: Number-theoretic division: round/: big / big: (-25000000002 -10000000000)
PASS: numbers.test: Number-theoretic division: round/: big / big: (9999999999 10000000001)
PASS: numbers.test: Number-theoretic division: round/: big / big: (9999999999 -10000000001)
PASS: numbers.test: Number-theoretic division: round/: big / big: (-9999999999 10000000001)
PASS: numbers.test: Number-theoretic division: round/: big / big: (-9999999999 -10000000001)
PASS: numbers.test: Number-theoretic division: round/: big / big: (10000000000 10000000001)
PASS: numbers.test: Number-theoretic division: round/: big / big: (10000000000 -10000000001)
PASS: numbers.test: Number-theoretic division: round/: big / big: (-10000000000 10000000001)
PASS: numbers.test: Number-theoretic division: round/: big / big: (-10000000000 -10000000001)
PASS: numbers.test: Number-theoretic division: round/: big / big: (10000000001 10000000001)
PASS: numbers.test: Number-theoretic division: round/: big / big: (10000000001 -10000000001)
PASS: numbers.test: Number-theoretic division: round/: big / big: (-10000000001 10000000001)
PASS: numbers.test: Number-theoretic division: round/: big / big: (-10000000001 -10000000001)
PASS: numbers.test: Number-theoretic division: round/: big / big: (10000000002 10000000001)
PASS: numbers.test: Number-theoretic division: round/: big / big: (10000000002 -10000000001)
PASS: numbers.test: Number-theoretic division: round/: big / big: (-10000000002 10000000001)
PASS: numbers.test: Number-theoretic division: round/: big / big: (-10000000002 -10000000001)
PASS: numbers.test: Number-theoretic division: round/: big / big: (10000000003 10000000001)
PASS: numbers.test: Number-theoretic division: round/: big / big: (10000000003 -10000000001)
PASS: numbers.test: Number-theoretic division: round/: big / big: (-10000000003 10000000001)
PASS: numbers.test: Number-theoretic division: round/: big / big: (-10000000003 -10000000001)
PASS: numbers.test: Number-theoretic division: round/: big / big: (20000000000 10000000001)
PASS: numbers.test: Number-theoretic division: round/: big / big: (20000000000 -10000000001)
PASS: numbers.test: Number-theoretic division: round/: big / big: (-20000000000 10000000001)
PASS: numbers.test: Number-theoretic division: round/: big / big: (-20000000000 -10000000001)
PASS: numbers.test: Number-theoretic division: round/: big / big: (20000000001 10000000001)
PASS: numbers.test: Number-theoretic division: round/: big / big: (20000000001 -10000000001)
PASS: numbers.test: Number-theoretic division: round/: big / big: (-20000000001 10000000001)
PASS: numbers.test: Number-theoretic division: round/: big / big: (-20000000001 -10000000001)
PASS: numbers.test: Number-theoretic division: round/: big / big: (20000000002 10000000001)
PASS: numbers.test: Number-theoretic division: round/: big / big: (20000000002 -10000000001)
PASS: numbers.test: Number-theoretic division: round/: big / big: (-20000000002 10000000001)
PASS: numbers.test: Number-theoretic division: round/: big / big: (-20000000002 -10000000001)
PASS: numbers.test: Number-theoretic division: round/: big / big: (20000000003 10000000001)
PASS: numbers.test: Number-theoretic division: round/: big / big: (20000000003 -10000000001)
PASS: numbers.test: Number-theoretic division: round/: big / big: (-20000000003 10000000001)
PASS: numbers.test: Number-theoretic division: round/: big / big: (-20000000003 -10000000001)
PASS: numbers.test: Number-theoretic division: round/: big / big: (20000000004 10000000001)
PASS: numbers.test: Number-theoretic division: round/: big / big: (20000000004 -10000000001)
PASS: numbers.test: Number-theoretic division: round/: big / big: (-20000000004 10000000001)
PASS: numbers.test: Number-theoretic division: round/: big / big: (-20000000004 -10000000001)
PASS: numbers.test: Number-theoretic division: round/: big / big: (50000000003 10000000001)
PASS: numbers.test: Number-theoretic division: round/: big / big: (50000000003 -10000000001)
PASS: numbers.test: Number-theoretic division: round/: big / big: (-50000000003 10000000001)
PASS: numbers.test: Number-theoretic division: round/: big / big: (-50000000003 -10000000001)
PASS: numbers.test: Number-theoretic division: round/: big / big: (50000000004 10000000001)
PASS: numbers.test: Number-theoretic division: round/: big / big: (50000000004 -10000000001)
PASS: numbers.test: Number-theoretic division: round/: big / big: (-50000000004 10000000001)
PASS: numbers.test: Number-theoretic division: round/: big / big: (-50000000004 -10000000001)
PASS: numbers.test: Number-theoretic division: round/: big / big: (50000000005 10000000001)
PASS: numbers.test: Number-theoretic division: round/: big / big: (50000000005 -10000000001)
PASS: numbers.test: Number-theoretic division: round/: big / big: (-50000000005 10000000001)
PASS: numbers.test: Number-theoretic division: round/: big / big: (-50000000005 -10000000001)
PASS: numbers.test: Number-theoretic division: round/: big / big: (50000000006 10000000001)
PASS: numbers.test: Number-theoretic division: round/: big / big: (50000000006 -10000000001)
PASS: numbers.test: Number-theoretic division: round/: big / big: (-50000000006 10000000001)
PASS: numbers.test: Number-theoretic division: round/: big / big: (-50000000006 -10000000001)
PASS: numbers.test: Number-theoretic division: round/: big / big: (50000000007 10000000001)
PASS: numbers.test: Number-theoretic division: round/: big / big: (50000000007 -10000000001)
PASS: numbers.test: Number-theoretic division: round/: big / big: (-50000000007 10000000001)
PASS: numbers.test: Number-theoretic division: round/: big / big: (-50000000007 -10000000001)
PASS: numbers.test: Number-theoretic division: round/: inexact: (-2.0 0.5)
PASS: numbers.test: Number-theoretic division: round/: inexact: (-2.0 -0.5)
PASS: numbers.test: Number-theoretic division: round/: inexact: (2.0 0.5)
PASS: numbers.test: Number-theoretic division: round/: inexact: (2.0 -0.5)
PASS: numbers.test: Number-theoretic division: round/: inexact: (-1.0 0.5)
PASS: numbers.test: Number-theoretic division: round/: inexact: (-1.0 -0.5)
PASS: numbers.test: Number-theoretic division: round/: inexact: (1.0 0.5)
PASS: numbers.test: Number-theoretic division: round/: inexact: (1.0 -0.5)
PASS: numbers.test: Number-theoretic division: round/: inexact: (0.0 0.5)
PASS: numbers.test: Number-theoretic division: round/: inexact: (0.0 -0.5)
PASS: numbers.test: Number-theoretic division: round/: inexact: (1.0 0.5)
PASS: numbers.test: Number-theoretic division: round/: inexact: (1.0 -0.5)
PASS: numbers.test: Number-theoretic division: round/: inexact: (-1.0 0.5)
PASS: numbers.test: Number-theoretic division: round/: inexact: (-1.0 -0.5)
PASS: numbers.test: Number-theoretic division: round/: inexact: (2.0 0.5)
PASS: numbers.test: Number-theoretic division: round/: inexact: (2.0 -0.5)
PASS: numbers.test: Number-theoretic division: round/: inexact: (-2.0 0.5)
PASS: numbers.test: Number-theoretic division: round/: inexact: (-2.0 -0.5)
PASS: numbers.test: Number-theoretic division: round/: inexact: (-1.5 0.5)
PASS: numbers.test: Number-theoretic division: round/: inexact: (-1.5 -0.5)
PASS: numbers.test: Number-theoretic division: round/: inexact: (1.5 0.5)
PASS: numbers.test: Number-theoretic division: round/: inexact: (1.5 -0.5)
PASS: numbers.test: Number-theoretic division: round/: inexact: (-0.5 0.5)
PASS: numbers.test: Number-theoretic division: round/: inexact: (-0.5 -0.5)
PASS: numbers.test: Number-theoretic division: round/: inexact: (0.5 0.5)
PASS: numbers.test: Number-theoretic division: round/: inexact: (0.5 -0.5)
PASS: numbers.test: Number-theoretic division: round/: inexact: (0.5 0.5)
PASS: numbers.test: Number-theoretic division: round/: inexact: (0.5 -0.5)
PASS: numbers.test: Number-theoretic division: round/: inexact: (-0.5 0.5)
PASS: numbers.test: Number-theoretic division: round/: inexact: (-0.5 -0.5)
PASS: numbers.test: Number-theoretic division: round/: inexact: (1.5 0.5)
PASS: numbers.test: Number-theoretic division: round/: inexact: (1.5 -0.5)
PASS: numbers.test: Number-theoretic division: round/: inexact: (-1.5 0.5)
PASS: numbers.test: Number-theoretic division: round/: inexact: (-1.5 -0.5)
PASS: numbers.test: Number-theoretic division: round/: inexact: (2.5 0.5)
PASS: numbers.test: Number-theoretic division: round/: inexact: (2.5 -0.5)
PASS: numbers.test: Number-theoretic division: round/: inexact: (-2.5 0.5)
PASS: numbers.test: Number-theoretic division: round/: inexact: (-2.5 -0.5)
PASS: numbers.test: Number-theoretic division: round/: inexact: (-1.0 0.5)
PASS: numbers.test: Number-theoretic division: round/: inexact: (-1.0 -0.5)
PASS: numbers.test: Number-theoretic division: round/: inexact: (1.0 0.5)
PASS: numbers.test: Number-theoretic division: round/: inexact: (1.0 -0.5)
PASS: numbers.test: Number-theoretic division: round/: inexact: (0.0 0.5)
PASS: numbers.test: Number-theoretic division: round/: inexact: (0.0 -0.5)
PASS: numbers.test: Number-theoretic division: round/: inexact: (1.0 0.5)
PASS: numbers.test: Number-theoretic division: round/: inexact: (1.0 -0.5)
PASS: numbers.test: Number-theoretic division: round/: inexact: (-1.0 0.5)
PASS: numbers.test: Number-theoretic division: round/: inexact: (-1.0 -0.5)
PASS: numbers.test: Number-theoretic division: round/: inexact: (2.0 0.5)
PASS: numbers.test: Number-theoretic division: round/: inexact: (2.0 -0.5)
PASS: numbers.test: Number-theoretic division: round/: inexact: (-2.0 0.5)
PASS: numbers.test: Number-theoretic division: round/: inexact: (-2.0 -0.5)
PASS: numbers.test: Number-theoretic division: round/: inexact: (3.0 0.5)
PASS: numbers.test: Number-theoretic division: round/: inexact: (3.0 -0.5)
PASS: numbers.test: Number-theoretic division: round/: inexact: (-3.0 0.5)
PASS: numbers.test: Number-theoretic division: round/: inexact: (-3.0 -0.5)
PASS: numbers.test: Number-theoretic division: round/: inexact: (0.5 0.5)
PASS: numbers.test: Number-theoretic division: round/: inexact: (0.5 -0.5)
PASS: numbers.test: Number-theoretic division: round/: inexact: (-0.5 0.5)
PASS: numbers.test: Number-theoretic division: round/: inexact: (-0.5 -0.5)
PASS: numbers.test: Number-theoretic division: round/: inexact: (1.5 0.5)
PASS: numbers.test: Number-theoretic division: round/: inexact: (1.5 -0.5)
PASS: numbers.test: Number-theoretic division: round/: inexact: (-1.5 0.5)
PASS: numbers.test: Number-theoretic division: round/: inexact: (-1.5 -0.5)
PASS: numbers.test: Number-theoretic division: round/: inexact: (2.5 0.5)
PASS: numbers.test: Number-theoretic division: round/: inexact: (2.5 -0.5)
PASS: numbers.test: Number-theoretic division: round/: inexact: (-2.5 0.5)
PASS: numbers.test: Number-theoretic division: round/: inexact: (-2.5 -0.5)
PASS: numbers.test: Number-theoretic division: round/: inexact: (3.5 0.5)
PASS: numbers.test: Number-theoretic division: round/: inexact: (3.5 -0.5)
PASS: numbers.test: Number-theoretic division: round/: inexact: (-3.5 0.5)
PASS: numbers.test: Number-theoretic division: round/: inexact: (-3.5 -0.5)
PASS: numbers.test: Number-theoretic division: round/: inexact: (4.5 0.5)
PASS: numbers.test: Number-theoretic division: round/: inexact: (4.5 -0.5)
PASS: numbers.test: Number-theoretic division: round/: inexact: (-4.5 0.5)
PASS: numbers.test: Number-theoretic division: round/: inexact: (-4.5 -0.5)
PASS: numbers.test: Number-theoretic division: round/: inexact: (-1.75 0.5)
PASS: numbers.test: Number-theoretic division: round/: inexact: (-1.75 -0.5)
PASS: numbers.test: Number-theoretic division: round/: inexact: (1.75 0.5)
PASS: numbers.test: Number-theoretic division: round/: inexact: (1.75 -0.5)
PASS: numbers.test: Number-theoretic division: round/: inexact: (-0.75 0.5)
PASS: numbers.test: Number-theoretic division: round/: inexact: (-0.75 -0.5)
PASS: numbers.test: Number-theoretic division: round/: inexact: (0.75 0.5)
PASS: numbers.test: Number-theoretic division: round/: inexact: (0.75 -0.5)
PASS: numbers.test: Number-theoretic division: round/: inexact: (0.25 0.5)
PASS: numbers.test: Number-theoretic division: round/: inexact: (0.25 -0.5)
PASS: numbers.test: Number-theoretic division: round/: inexact: (-0.25 0.5)
PASS: numbers.test: Number-theoretic division: round/: inexact: (-0.25 -0.5)
PASS: numbers.test: Number-theoretic division: round/: inexact: (1.25 0.5)
PASS: numbers.test: Number-theoretic division: round/: inexact: (1.25 -0.5)
PASS: numbers.test: Number-theoretic division: round/: inexact: (-1.25 0.5)
PASS: numbers.test: Number-theoretic division: round/: inexact: (-1.25 -0.5)
PASS: numbers.test: Number-theoretic division: round/: inexact: (2.25 0.5)
PASS: numbers.test: Number-theoretic division: round/: inexact: (2.25 -0.5)
PASS: numbers.test: Number-theoretic division: round/: inexact: (-2.25 0.5)
PASS: numbers.test: Number-theoretic division: round/: inexact: (-2.25 -0.5)
PASS: numbers.test: Number-theoretic division: round/: inexact: (-1.25 0.5)
PASS: numbers.test: Number-theoretic division: round/: inexact: (-1.25 -0.5)
PASS: numbers.test: Number-theoretic division: round/: inexact: (1.25 0.5)
PASS: numbers.test: Number-theoretic division: round/: inexact: (1.25 -0.5)
PASS: numbers.test: Number-theoretic division: round/: inexact: (-0.25 0.5)
PASS: numbers.test: Number-theoretic division: round/: inexact: (-0.25 -0.5)
PASS: numbers.test: Number-theoretic division: round/: inexact: (0.25 0.5)
PASS: numbers.test: Number-theoretic division: round/: inexact: (0.25 -0.5)
PASS: numbers.test: Number-theoretic division: round/: inexact: (0.75 0.5)
PASS: numbers.test: Number-theoretic division: round/: inexact: (0.75 -0.5)
PASS: numbers.test: Number-theoretic division: round/: inexact: (-0.75 0.5)
PASS: numbers.test: Number-theoretic division: round/: inexact: (-0.75 -0.5)
PASS: numbers.test: Number-theoretic division: round/: inexact: (1.75 0.5)
PASS: numbers.test: Number-theoretic division: round/: inexact: (1.75 -0.5)
PASS: numbers.test: Number-theoretic division: round/: inexact: (-1.75 0.5)
PASS: numbers.test: Number-theoretic division: round/: inexact: (-1.75 -0.5)
PASS: numbers.test: Number-theoretic division: round/: inexact: (2.75 0.5)
PASS: numbers.test: Number-theoretic division: round/: inexact: (2.75 -0.5)
PASS: numbers.test: Number-theoretic division: round/: inexact: (-2.75 0.5)
PASS: numbers.test: Number-theoretic division: round/: inexact: (-2.75 -0.5)
PASS: numbers.test: Number-theoretic division: round/: inexact: (-0.75 0.5)
PASS: numbers.test: Number-theoretic division: round/: inexact: (-0.75 -0.5)
PASS: numbers.test: Number-theoretic division: round/: inexact: (0.75 0.5)
PASS: numbers.test: Number-theoretic division: round/: inexact: (0.75 -0.5)
PASS: numbers.test: Number-theoretic division: round/: inexact: (0.25 0.5)
PASS: numbers.test: Number-theoretic division: round/: inexact: (0.25 -0.5)
PASS: numbers.test: Number-theoretic division: round/: inexact: (-0.25 0.5)
PASS: numbers.test: Number-theoretic division: round/: inexact: (-0.25 -0.5)
PASS: numbers.test: Number-theoretic division: round/: inexact: (1.25 0.5)
PASS: numbers.test: Number-theoretic division: round/: inexact: (1.25 -0.5)
PASS: numbers.test: Number-theoretic division: round/: inexact: (-1.25 0.5)
PASS: numbers.test: Number-theoretic division: round/: inexact: (-1.25 -0.5)
PASS: numbers.test: Number-theoretic division: round/: inexact: (2.25 0.5)
PASS: numbers.test: Number-theoretic division: round/: inexact: (2.25 -0.5)
PASS: numbers.test: Number-theoretic division: round/: inexact: (-2.25 0.5)
PASS: numbers.test: Number-theoretic division: round/: inexact: (-2.25 -0.5)
PASS: numbers.test: Number-theoretic division: round/: inexact: (3.25 0.5)
PASS: numbers.test: Number-theoretic division: round/: inexact: (3.25 -0.5)
PASS: numbers.test: Number-theoretic division: round/: inexact: (-3.25 0.5)
PASS: numbers.test: Number-theoretic division: round/: inexact: (-3.25 -0.5)
PASS: numbers.test: Number-theoretic division: round/: inexact: (-2.0 1.5)
PASS: numbers.test: Number-theoretic division: round/: inexact: (-2.0 -1.5)
PASS: numbers.test: Number-theoretic division: round/: inexact: (2.0 1.5)
PASS: numbers.test: Number-theoretic division: round/: inexact: (2.0 -1.5)
PASS: numbers.test: Number-theoretic division: round/: inexact: (-1.0 1.5)
PASS: numbers.test: Number-theoretic division: round/: inexact: (-1.0 -1.5)
PASS: numbers.test: Number-theoretic division: round/: inexact: (1.0 1.5)
PASS: numbers.test: Number-theoretic division: round/: inexact: (1.0 -1.5)
PASS: numbers.test: Number-theoretic division: round/: inexact: (0.0 1.5)
PASS: numbers.test: Number-theoretic division: round/: inexact: (0.0 -1.5)
PASS: numbers.test: Number-theoretic division: round/: inexact: (1.0 1.5)
PASS: numbers.test: Number-theoretic division: round/: inexact: (1.0 -1.5)
PASS: numbers.test: Number-theoretic division: round/: inexact: (-1.0 1.5)
PASS: numbers.test: Number-theoretic division: round/: inexact: (-1.0 -1.5)
PASS: numbers.test: Number-theoretic division: round/: inexact: (2.0 1.5)
PASS: numbers.test: Number-theoretic division: round/: inexact: (2.0 -1.5)
PASS: numbers.test: Number-theoretic division: round/: inexact: (-2.0 1.5)
PASS: numbers.test: Number-theoretic division: round/: inexact: (-2.0 -1.5)
PASS: numbers.test: Number-theoretic division: round/: inexact: (-0.5 1.5)
PASS: numbers.test: Number-theoretic division: round/: inexact: (-0.5 -1.5)
PASS: numbers.test: Number-theoretic division: round/: inexact: (0.5 1.5)
PASS: numbers.test: Number-theoretic division: round/: inexact: (0.5 -1.5)
PASS: numbers.test: Number-theoretic division: round/: inexact: (0.5 1.5)
PASS: numbers.test: Number-theoretic division: round/: inexact: (0.5 -1.5)
PASS: numbers.test: Number-theoretic division: round/: inexact: (-0.5 1.5)
PASS: numbers.test: Number-theoretic division: round/: inexact: (-0.5 -1.5)
PASS: numbers.test: Number-theoretic division: round/: inexact: (1.5 1.5)
PASS: numbers.test: Number-theoretic division: round/: inexact: (1.5 -1.5)
PASS: numbers.test: Number-theoretic division: round/: inexact: (-1.5 1.5)
PASS: numbers.test: Number-theoretic division: round/: inexact: (-1.5 -1.5)
PASS: numbers.test: Number-theoretic division: round/: inexact: (2.5 1.5)
PASS: numbers.test: Number-theoretic division: round/: inexact: (2.5 -1.5)
PASS: numbers.test: Number-theoretic division: round/: inexact: (-2.5 1.5)
PASS: numbers.test: Number-theoretic division: round/: inexact: (-2.5 -1.5)
PASS: numbers.test: Number-theoretic division: round/: inexact: (3.5 1.5)
PASS: numbers.test: Number-theoretic division: round/: inexact: (3.5 -1.5)
PASS: numbers.test: Number-theoretic division: round/: inexact: (-3.5 1.5)
PASS: numbers.test: Number-theoretic division: round/: inexact: (-3.5 -1.5)
PASS: numbers.test: Number-theoretic division: round/: inexact: (1.0 1.5)
PASS: numbers.test: Number-theoretic division: round/: inexact: (1.0 -1.5)
PASS: numbers.test: Number-theoretic division: round/: inexact: (-1.0 1.5)
PASS: numbers.test: Number-theoretic division: round/: inexact: (-1.0 -1.5)
PASS: numbers.test: Number-theoretic division: round/: inexact: (2.0 1.5)
PASS: numbers.test: Number-theoretic division: round/: inexact: (2.0 -1.5)
PASS: numbers.test: Number-theoretic division: round/: inexact: (-2.0 1.5)
PASS: numbers.test: Number-theoretic division: round/: inexact: (-2.0 -1.5)
PASS: numbers.test: Number-theoretic division: round/: inexact: (3.0 1.5)
PASS: numbers.test: Number-theoretic division: round/: inexact: (3.0 -1.5)
PASS: numbers.test: Number-theoretic division: round/: inexact: (-3.0 1.5)
PASS: numbers.test: Number-theoretic division: round/: inexact: (-3.0 -1.5)
PASS: numbers.test: Number-theoretic division: round/: inexact: (4.0 1.5)
PASS: numbers.test: Number-theoretic division: round/: inexact: (4.0 -1.5)
PASS: numbers.test: Number-theoretic division: round/: inexact: (-4.0 1.5)
PASS: numbers.test: Number-theoretic division: round/: inexact: (-4.0 -1.5)
PASS: numbers.test: Number-theoretic division: round/: inexact: (5.0 1.5)
PASS: numbers.test: Number-theoretic division: round/: inexact: (5.0 -1.5)
PASS: numbers.test: Number-theoretic division: round/: inexact: (-5.0 1.5)
PASS: numbers.test: Number-theoretic division: round/: inexact: (-5.0 -1.5)
PASS: numbers.test: Number-theoretic division: round/: inexact: (5.5 1.5)
PASS: numbers.test: Number-theoretic division: round/: inexact: (5.5 -1.5)
PASS: numbers.test: Number-theoretic division: round/: inexact: (-5.5 1.5)
PASS: numbers.test: Number-theoretic division: round/: inexact: (-5.5 -1.5)
PASS: numbers.test: Number-theoretic division: round/: inexact: (6.5 1.5)
PASS: numbers.test: Number-theoretic division: round/: inexact: (6.5 -1.5)
PASS: numbers.test: Number-theoretic division: round/: inexact: (-6.5 1.5)
PASS: numbers.test: Number-theoretic division: round/: inexact: (-6.5 -1.5)
PASS: numbers.test: Number-theoretic division: round/: inexact: (7.5 1.5)
PASS: numbers.test: Number-theoretic division: round/: inexact: (7.5 -1.5)
PASS: numbers.test: Number-theoretic division: round/: inexact: (-7.5 1.5)
PASS: numbers.test: Number-theoretic division: round/: inexact: (-7.5 -1.5)
PASS: numbers.test: Number-theoretic division: round/: inexact: (8.5 1.5)
PASS: numbers.test: Number-theoretic division: round/: inexact: (8.5 -1.5)
PASS: numbers.test: Number-theoretic division: round/: inexact: (-8.5 1.5)
PASS: numbers.test: Number-theoretic division: round/: inexact: (-8.5 -1.5)
PASS: numbers.test: Number-theoretic division: round/: inexact: (9.5 1.5)
PASS: numbers.test: Number-theoretic division: round/: inexact: (9.5 -1.5)
PASS: numbers.test: Number-theoretic division: round/: inexact: (-9.5 1.5)
PASS: numbers.test: Number-theoretic division: round/: inexact: (-9.5 -1.5)
PASS: numbers.test: Number-theoretic division: round/: inexact: (-1.25 1.5)
PASS: numbers.test: Number-theoretic division: round/: inexact: (-1.25 -1.5)
PASS: numbers.test: Number-theoretic division: round/: inexact: (1.25 1.5)
PASS: numbers.test: Number-theoretic division: round/: inexact: (1.25 -1.5)
PASS: numbers.test: Number-theoretic division: round/: inexact: (-0.25 1.5)
PASS: numbers.test: Number-theoretic division: round/: inexact: (-0.25 -1.5)
PASS: numbers.test: Number-theoretic division: round/: inexact: (0.25 1.5)
PASS: numbers.test: Number-theoretic division: round/: inexact: (0.25 -1.5)
PASS: numbers.test: Number-theoretic division: round/: inexact: (0.75 1.5)
PASS: numbers.test: Number-theoretic division: round/: inexact: (0.75 -1.5)
PASS: numbers.test: Number-theoretic division: round/: inexact: (-0.75 1.5)
PASS: numbers.test: Number-theoretic division: round/: inexact: (-0.75 -1.5)
PASS: numbers.test: Number-theoretic division: round/: inexact: (1.75 1.5)
PASS: numbers.test: Number-theoretic division: round/: inexact: (1.75 -1.5)
PASS: numbers.test: Number-theoretic division: round/: inexact: (-1.75 1.5)
PASS: numbers.test: Number-theoretic division: round/: inexact: (-1.75 -1.5)
PASS: numbers.test: Number-theoretic division: round/: inexact: (2.75 1.5)
PASS: numbers.test: Number-theoretic division: round/: inexact: (2.75 -1.5)
PASS: numbers.test: Number-theoretic division: round/: inexact: (-2.75 1.5)
PASS: numbers.test: Number-theoretic division: round/: inexact: (-2.75 -1.5)
PASS: numbers.test: Number-theoretic division: round/: inexact: (0.25 1.5)
PASS: numbers.test: Number-theoretic division: round/: inexact: (0.25 -1.5)
PASS: numbers.test: Number-theoretic division: round/: inexact: (-0.25 1.5)
PASS: numbers.test: Number-theoretic division: round/: inexact: (-0.25 -1.5)
PASS: numbers.test: Number-theoretic division: round/: inexact: (1.25 1.5)
PASS: numbers.test: Number-theoretic division: round/: inexact: (1.25 -1.5)
PASS: numbers.test: Number-theoretic division: round/: inexact: (-1.25 1.5)
PASS: numbers.test: Number-theoretic division: round/: inexact: (-1.25 -1.5)
PASS: numbers.test: Number-theoretic division: round/: inexact: (2.25 1.5)
PASS: numbers.test: Number-theoretic division: round/: inexact: (2.25 -1.5)
PASS: numbers.test: Number-theoretic division: round/: inexact: (-2.25 1.5)
PASS: numbers.test: Number-theoretic division: round/: inexact: (-2.25 -1.5)
PASS: numbers.test: Number-theoretic division: round/: inexact: (3.25 1.5)
PASS: numbers.test: Number-theoretic division: round/: inexact: (3.25 -1.5)
PASS: numbers.test: Number-theoretic division: round/: inexact: (-3.25 1.5)
PASS: numbers.test: Number-theoretic division: round/: inexact: (-3.25 -1.5)
PASS: numbers.test: Number-theoretic division: round/: inexact: (4.25 1.5)
PASS: numbers.test: Number-theoretic division: round/: inexact: (4.25 -1.5)
PASS: numbers.test: Number-theoretic division: round/: inexact: (-4.25 1.5)
PASS: numbers.test: Number-theoretic division: round/: inexact: (-4.25 -1.5)
PASS: numbers.test: Number-theoretic division: round/: inexact: (1.75 1.5)
PASS: numbers.test: Number-theoretic division: round/: inexact: (1.75 -1.5)
PASS: numbers.test: Number-theoretic division: round/: inexact: (-1.75 1.5)
PASS: numbers.test: Number-theoretic division: round/: inexact: (-1.75 -1.5)
PASS: numbers.test: Number-theoretic division: round/: inexact: (2.75 1.5)
PASS: numbers.test: Number-theoretic division: round/: inexact: (2.75 -1.5)
PASS: numbers.test: Number-theoretic division: round/: inexact: (-2.75 1.5)
PASS: numbers.test: Number-theoretic division: round/: inexact: (-2.75 -1.5)
PASS: numbers.test: Number-theoretic division: round/: inexact: (3.75 1.5)
PASS: numbers.test: Number-theoretic division: round/: inexact: (3.75 -1.5)
PASS: numbers.test: Number-theoretic division: round/: inexact: (-3.75 1.5)
PASS: numbers.test: Number-theoretic division: round/: inexact: (-3.75 -1.5)
PASS: numbers.test: Number-theoretic division: round/: inexact: (4.75 1.5)
PASS: numbers.test: Number-theoretic division: round/: inexact: (4.75 -1.5)
PASS: numbers.test: Number-theoretic division: round/: inexact: (-4.75 1.5)
PASS: numbers.test: Number-theoretic division: round/: inexact: (-4.75 -1.5)
PASS: numbers.test: Number-theoretic division: round/: inexact: (5.75 1.5)
PASS: numbers.test: Number-theoretic division: round/: inexact: (5.75 -1.5)
PASS: numbers.test: Number-theoretic division: round/: inexact: (-5.75 1.5)
PASS: numbers.test: Number-theoretic division: round/: inexact: (-5.75 -1.5)
PASS: numbers.test: Number-theoretic division: round/: inexact: (-2.0 2.25)
PASS: numbers.test: Number-theoretic division: round/: inexact: (-2.0 -2.25)
PASS: numbers.test: Number-theoretic division: round/: inexact: (2.0 2.25)
PASS: numbers.test: Number-theoretic division: round/: inexact: (2.0 -2.25)
PASS: numbers.test: Number-theoretic division: round/: inexact: (-1.0 2.25)
PASS: numbers.test: Number-theoretic division: round/: inexact: (-1.0 -2.25)
PASS: numbers.test: Number-theoretic division: round/: inexact: (1.0 2.25)
PASS: numbers.test: Number-theoretic division: round/: inexact: (1.0 -2.25)
PASS: numbers.test: Number-theoretic division: round/: inexact: (0.0 2.25)
PASS: numbers.test: Number-theoretic division: round/: inexact: (0.0 -2.25)
PASS: numbers.test: Number-theoretic division: round/: inexact: (1.0 2.25)
PASS: numbers.test: Number-theoretic division: round/: inexact: (1.0 -2.25)
PASS: numbers.test: Number-theoretic division: round/: inexact: (-1.0 2.25)
PASS: numbers.test: Number-theoretic division: round/: inexact: (-1.0 -2.25)
PASS: numbers.test: Number-theoretic division: round/: inexact: (2.0 2.25)
PASS: numbers.test: Number-theoretic division: round/: inexact: (2.0 -2.25)
PASS: numbers.test: Number-theoretic division: round/: inexact: (-2.0 2.25)
PASS: numbers.test: Number-theoretic division: round/: inexact: (-2.0 -2.25)
PASS: numbers.test: Number-theoretic division: round/: inexact: (0.25 2.25)
PASS: numbers.test: Number-theoretic division: round/: inexact: (0.25 -2.25)
PASS: numbers.test: Number-theoretic division: round/: inexact: (-0.25 2.25)
PASS: numbers.test: Number-theoretic division: round/: inexact: (-0.25 -2.25)
PASS: numbers.test: Number-theoretic division: round/: inexact: (1.25 2.25)
PASS: numbers.test: Number-theoretic division: round/: inexact: (1.25 -2.25)
PASS: numbers.test: Number-theoretic division: round/: inexact: (-1.25 2.25)
PASS: numbers.test: Number-theoretic division: round/: inexact: (-1.25 -2.25)
PASS: numbers.test: Number-theoretic division: round/: inexact: (2.25 2.25)
PASS: numbers.test: Number-theoretic division: round/: inexact: (2.25 -2.25)
PASS: numbers.test: Number-theoretic division: round/: inexact: (-2.25 2.25)
PASS: numbers.test: Number-theoretic division: round/: inexact: (-2.25 -2.25)
PASS: numbers.test: Number-theoretic division: round/: inexact: (3.25 2.25)
PASS: numbers.test: Number-theoretic division: round/: inexact: (3.25 -2.25)
PASS: numbers.test: Number-theoretic division: round/: inexact: (-3.25 2.25)
PASS: numbers.test: Number-theoretic division: round/: inexact: (-3.25 -2.25)
PASS: numbers.test: Number-theoretic division: round/: inexact: (4.25 2.25)
PASS: numbers.test: Number-theoretic division: round/: inexact: (4.25 -2.25)
PASS: numbers.test: Number-theoretic division: round/: inexact: (-4.25 2.25)
PASS: numbers.test: Number-theoretic division: round/: inexact: (-4.25 -2.25)
PASS: numbers.test: Number-theoretic division: round/: inexact: (2.5 2.25)
PASS: numbers.test: Number-theoretic division: round/: inexact: (2.5 -2.25)
PASS: numbers.test: Number-theoretic division: round/: inexact: (-2.5 2.25)
PASS: numbers.test: Number-theoretic division: round/: inexact: (-2.5 -2.25)
PASS: numbers.test: Number-theoretic division: round/: inexact: (3.5 2.25)
PASS: numbers.test: Number-theoretic division: round/: inexact: (3.5 -2.25)
PASS: numbers.test: Number-theoretic division: round/: inexact: (-3.5 2.25)
PASS: numbers.test: Number-theoretic division: round/: inexact: (-3.5 -2.25)
PASS: numbers.test: Number-theoretic division: round/: inexact: (4.5 2.25)
PASS: numbers.test: Number-theoretic division: round/: inexact: (4.5 -2.25)
PASS: numbers.test: Number-theoretic division: round/: inexact: (-4.5 2.25)
PASS: numbers.test: Number-theoretic division: round/: inexact: (-4.5 -2.25)
PASS: numbers.test: Number-theoretic division: round/: inexact: (5.5 2.25)
PASS: numbers.test: Number-theoretic division: round/: inexact: (5.5 -2.25)
PASS: numbers.test: Number-theoretic division: round/: inexact: (-5.5 2.25)
PASS: numbers.test: Number-theoretic division: round/: inexact: (-5.5 -2.25)
PASS: numbers.test: Number-theoretic division: round/: inexact: (6.5 2.25)
PASS: numbers.test: Number-theoretic division: round/: inexact: (6.5 -2.25)
PASS: numbers.test: Number-theoretic division: round/: inexact: (-6.5 2.25)
PASS: numbers.test: Number-theoretic division: round/: inexact: (-6.5 -2.25)
PASS: numbers.test: Number-theoretic division: round/: inexact: (9.25 2.25)
PASS: numbers.test: Number-theoretic division: round/: inexact: (9.25 -2.25)
PASS: numbers.test: Number-theoretic division: round/: inexact: (-9.25 2.25)
PASS: numbers.test: Number-theoretic division: round/: inexact: (-9.25 -2.25)
PASS: numbers.test: Number-theoretic division: round/: inexact: (10.25 2.25)
PASS: numbers.test: Number-theoretic division: round/: inexact: (10.25 -2.25)
PASS: numbers.test: Number-theoretic division: round/: inexact: (-10.25 2.25)
PASS: numbers.test: Number-theoretic division: round/: inexact: (-10.25 -2.25)
PASS: numbers.test: Number-theoretic division: round/: inexact: (11.25 2.25)
PASS: numbers.test: Number-theoretic division: round/: inexact: (11.25 -2.25)
PASS: numbers.test: Number-theoretic division: round/: inexact: (-11.25 2.25)
PASS: numbers.test: Number-theoretic division: round/: inexact: (-11.25 -2.25)
PASS: numbers.test: Number-theoretic division: round/: inexact: (12.25 2.25)
PASS: numbers.test: Number-theoretic division: round/: inexact: (12.25 -2.25)
PASS: numbers.test: Number-theoretic division: round/: inexact: (-12.25 2.25)
PASS: numbers.test: Number-theoretic division: round/: inexact: (-12.25 -2.25)
PASS: numbers.test: Number-theoretic division: round/: inexact: (13.25 2.25)
PASS: numbers.test: Number-theoretic division: round/: inexact: (13.25 -2.25)
PASS: numbers.test: Number-theoretic division: round/: inexact: (-13.25 2.25)
PASS: numbers.test: Number-theoretic division: round/: inexact: (-13.25 -2.25)
PASS: numbers.test: Number-theoretic division: round/: inexact: (-0.875 2.25)
PASS: numbers.test: Number-theoretic division: round/: inexact: (-0.875 -2.25)
PASS: numbers.test: Number-theoretic division: round/: inexact: (0.875 2.25)
PASS: numbers.test: Number-theoretic division: round/: inexact: (0.875 -2.25)
PASS: numbers.test: Number-theoretic division: round/: inexact: (0.125 2.25)
PASS: numbers.test: Number-theoretic division: round/: inexact: (0.125 -2.25)
PASS: numbers.test: Number-theoretic division: round/: inexact: (-0.125 2.25)
PASS: numbers.test: Number-theoretic division: round/: inexact: (-0.125 -2.25)
PASS: numbers.test: Number-theoretic division: round/: inexact: (1.125 2.25)
PASS: numbers.test: Number-theoretic division: round/: inexact: (1.125 -2.25)
PASS: numbers.test: Number-theoretic division: round/: inexact: (-1.125 2.25)
PASS: numbers.test: Number-theoretic division: round/: inexact: (-1.125 -2.25)
PASS: numbers.test: Number-theoretic division: round/: inexact: (2.125 2.25)
PASS: numbers.test: Number-theoretic division: round/: inexact: (2.125 -2.25)
PASS: numbers.test: Number-theoretic division: round/: inexact: (-2.125 2.25)
PASS: numbers.test: Number-theoretic division: round/: inexact: (-2.125 -2.25)
PASS: numbers.test: Number-theoretic division: round/: inexact: (3.125 2.25)
PASS: numbers.test: Number-theoretic division: round/: inexact: (3.125 -2.25)
PASS: numbers.test: Number-theoretic division: round/: inexact: (-3.125 2.25)
PASS: numbers.test: Number-theoretic division: round/: inexact: (-3.125 -2.25)
PASS: numbers.test: Number-theoretic division: round/: inexact: (1.375 2.25)
PASS: numbers.test: Number-theoretic division: round/: inexact: (1.375 -2.25)
PASS: numbers.test: Number-theoretic division: round/: inexact: (-1.375 2.25)
PASS: numbers.test: Number-theoretic division: round/: inexact: (-1.375 -2.25)
PASS: numbers.test: Number-theoretic division: round/: inexact: (2.375 2.25)
PASS: numbers.test: Number-theoretic division: round/: inexact: (2.375 -2.25)
PASS: numbers.test: Number-theoretic division: round/: inexact: (-2.375 2.25)
PASS: numbers.test: Number-theoretic division: round/: inexact: (-2.375 -2.25)
PASS: numbers.test: Number-theoretic division: round/: inexact: (3.375 2.25)
PASS: numbers.test: Number-theoretic division: round/: inexact: (3.375 -2.25)
PASS: numbers.test: Number-theoretic division: round/: inexact: (-3.375 2.25)
PASS: numbers.test: Number-theoretic division: round/: inexact: (-3.375 -2.25)
PASS: numbers.test: Number-theoretic division: round/: inexact: (4.375 2.25)
PASS: numbers.test: Number-theoretic division: round/: inexact: (4.375 -2.25)
PASS: numbers.test: Number-theoretic division: round/: inexact: (-4.375 2.25)
PASS: numbers.test: Number-theoretic division: round/: inexact: (-4.375 -2.25)
PASS: numbers.test: Number-theoretic division: round/: inexact: (5.375 2.25)
PASS: numbers.test: Number-theoretic division: round/: inexact: (5.375 -2.25)
PASS: numbers.test: Number-theoretic division: round/: inexact: (-5.375 2.25)
PASS: numbers.test: Number-theoretic division: round/: inexact: (-5.375 -2.25)
PASS: numbers.test: Number-theoretic division: round/: inexact: (3.625 2.25)
PASS: numbers.test: Number-theoretic division: round/: inexact: (3.625 -2.25)
PASS: numbers.test: Number-theoretic division: round/: inexact: (-3.625 2.25)
PASS: numbers.test: Number-theoretic division: round/: inexact: (-3.625 -2.25)
PASS: numbers.test: Number-theoretic division: round/: inexact: (4.625 2.25)
PASS: numbers.test: Number-theoretic division: round/: inexact: (4.625 -2.25)
PASS: numbers.test: Number-theoretic division: round/: inexact: (-4.625 2.25)
PASS: numbers.test: Number-theoretic division: round/: inexact: (-4.625 -2.25)
PASS: numbers.test: Number-theoretic division: round/: inexact: (5.625 2.25)
PASS: numbers.test: Number-theoretic division: round/: inexact: (5.625 -2.25)
PASS: numbers.test: Number-theoretic division: round/: inexact: (-5.625 2.25)
PASS: numbers.test: Number-theoretic division: round/: inexact: (-5.625 -2.25)
PASS: numbers.test: Number-theoretic division: round/: inexact: (6.625 2.25)
PASS: numbers.test: Number-theoretic division: round/: inexact: (6.625 -2.25)
PASS: numbers.test: Number-theoretic division: round/: inexact: (-6.625 2.25)
PASS: numbers.test: Number-theoretic division: round/: inexact: (-6.625 -2.25)
PASS: numbers.test: Number-theoretic division: round/: inexact: (7.625 2.25)
PASS: numbers.test: Number-theoretic division: round/: inexact: (7.625 -2.25)
PASS: numbers.test: Number-theoretic division: round/: inexact: (-7.625 2.25)
PASS: numbers.test: Number-theoretic division: round/: inexact: (-7.625 -2.25)
PASS: numbers.test: Number-theoretic division: round/: inexact: (-2.0 5.75)
PASS: numbers.test: Number-theoretic division: round/: inexact: (-2.0 -5.75)
PASS: numbers.test: Number-theoretic division: round/: inexact: (2.0 5.75)
PASS: numbers.test: Number-theoretic division: round/: inexact: (2.0 -5.75)
PASS: numbers.test: Number-theoretic division: round/: inexact: (-1.0 5.75)
PASS: numbers.test: Number-theoretic division: round/: inexact: (-1.0 -5.75)
PASS: numbers.test: Number-theoretic division: round/: inexact: (1.0 5.75)
PASS: numbers.test: Number-theoretic division: round/: inexact: (1.0 -5.75)
PASS: numbers.test: Number-theoretic division: round/: inexact: (0.0 5.75)
PASS: numbers.test: Number-theoretic division: round/: inexact: (0.0 -5.75)
PASS: numbers.test: Number-theoretic division: round/: inexact: (1.0 5.75)
PASS: numbers.test: Number-theoretic division: round/: inexact: (1.0 -5.75)
PASS: numbers.test: Number-theoretic division: round/: inexact: (-1.0 5.75)
PASS: numbers.test: Number-theoretic division: round/: inexact: (-1.0 -5.75)
PASS: numbers.test: Number-theoretic division: round/: inexact: (2.0 5.75)
PASS: numbers.test: Number-theoretic division: round/: inexact: (2.0 -5.75)
PASS: numbers.test: Number-theoretic division: round/: inexact: (-2.0 5.75)
PASS: numbers.test: Number-theoretic division: round/: inexact: (-2.0 -5.75)
PASS: numbers.test: Number-theoretic division: round/: inexact: (3.75 5.75)
PASS: numbers.test: Number-theoretic division: round/: inexact: (3.75 -5.75)
PASS: numbers.test: Number-theoretic division: round/: inexact: (-3.75 5.75)
PASS: numbers.test: Number-theoretic division: round/: inexact: (-3.75 -5.75)
PASS: numbers.test: Number-theoretic division: round/: inexact: (4.75 5.75)
PASS: numbers.test: Number-theoretic division: round/: inexact: (4.75 -5.75)
PASS: numbers.test: Number-theoretic division: round/: inexact: (-4.75 5.75)
PASS: numbers.test: Number-theoretic division: round/: inexact: (-4.75 -5.75)
PASS: numbers.test: Number-theoretic division: round/: inexact: (5.75 5.75)
PASS: numbers.test: Number-theoretic division: round/: inexact: (5.75 -5.75)
PASS: numbers.test: Number-theoretic division: round/: inexact: (-5.75 5.75)
PASS: numbers.test: Number-theoretic division: round/: inexact: (-5.75 -5.75)
PASS: numbers.test: Number-theoretic division: round/: inexact: (6.75 5.75)
PASS: numbers.test: Number-theoretic division: round/: inexact: (6.75 -5.75)
PASS: numbers.test: Number-theoretic division: round/: inexact: (-6.75 5.75)
PASS: numbers.test: Number-theoretic division: round/: inexact: (-6.75 -5.75)
PASS: numbers.test: Number-theoretic division: round/: inexact: (7.75 5.75)
PASS: numbers.test: Number-theoretic division: round/: inexact: (7.75 -5.75)
PASS: numbers.test: Number-theoretic division: round/: inexact: (-7.75 5.75)
PASS: numbers.test: Number-theoretic division: round/: inexact: (-7.75 -5.75)
PASS: numbers.test: Number-theoretic division: round/: inexact: (9.5 5.75)
PASS: numbers.test: Number-theoretic division: round/: inexact: (9.5 -5.75)
PASS: numbers.test: Number-theoretic division: round/: inexact: (-9.5 5.75)
PASS: numbers.test: Number-theoretic division: round/: inexact: (-9.5 -5.75)
PASS: numbers.test: Number-theoretic division: round/: inexact: (10.5 5.75)
PASS: numbers.test: Number-theoretic division: round/: inexact: (10.5 -5.75)
PASS: numbers.test: Number-theoretic division: round/: inexact: (-10.5 5.75)
PASS: numbers.test: Number-theoretic division: round/: inexact: (-10.5 -5.75)
PASS: numbers.test: Number-theoretic division: round/: inexact: (11.5 5.75)
PASS: numbers.test: Number-theoretic division: round/: inexact: (11.5 -5.75)
PASS: numbers.test: Number-theoretic division: round/: inexact: (-11.5 5.75)
PASS: numbers.test: Number-theoretic division: round/: inexact: (-11.5 -5.75)
PASS: numbers.test: Number-theoretic division: round/: inexact: (12.5 5.75)
PASS: numbers.test: Number-theoretic division: round/: inexact: (12.5 -5.75)
PASS: numbers.test: Number-theoretic division: round/: inexact: (-12.5 5.75)
PASS: numbers.test: Number-theoretic division: round/: inexact: (-12.5 -5.75)
PASS: numbers.test: Number-theoretic division: round/: inexact: (13.5 5.75)
PASS: numbers.test: Number-theoretic division: round/: inexact: (13.5 -5.75)
PASS: numbers.test: Number-theoretic division: round/: inexact: (-13.5 5.75)
PASS: numbers.test: Number-theoretic division: round/: inexact: (-13.5 -5.75)
PASS: numbers.test: Number-theoretic division: round/: inexact: (26.75 5.75)
PASS: numbers.test: Number-theoretic division: round/: inexact: (26.75 -5.75)
PASS: numbers.test: Number-theoretic division: round/: inexact: (-26.75 5.75)
PASS: numbers.test: Number-theoretic division: round/: inexact: (-26.75 -5.75)
PASS: numbers.test: Number-theoretic division: round/: inexact: (27.75 5.75)
PASS: numbers.test: Number-theoretic division: round/: inexact: (27.75 -5.75)
PASS: numbers.test: Number-theoretic division: round/: inexact: (-27.75 5.75)
PASS: numbers.test: Number-theoretic division: round/: inexact: (-27.75 -5.75)
PASS: numbers.test: Number-theoretic division: round/: inexact: (28.75 5.75)
PASS: numbers.test: Number-theoretic division: round/: inexact: (28.75 -5.75)
PASS: numbers.test: Number-theoretic division: round/: inexact: (-28.75 5.75)
PASS: numbers.test: Number-theoretic division: round/: inexact: (-28.75 -5.75)
PASS: numbers.test: Number-theoretic division: round/: inexact: (29.75 5.75)
PASS: numbers.test: Number-theoretic division: round/: inexact: (29.75 -5.75)
PASS: numbers.test: Number-theoretic division: round/: inexact: (-29.75 5.75)
PASS: numbers.test: Number-theoretic division: round/: inexact: (-29.75 -5.75)
PASS: numbers.test: Number-theoretic division: round/: inexact: (30.75 5.75)
PASS: numbers.test: Number-theoretic division: round/: inexact: (30.75 -5.75)
PASS: numbers.test: Number-theoretic division: round/: inexact: (-30.75 5.75)
PASS: numbers.test: Number-theoretic division: round/: inexact: (-30.75 -5.75)
PASS: numbers.test: Number-theoretic division: round/: inexact: (0.875 5.75)
PASS: numbers.test: Number-theoretic division: round/: inexact: (0.875 -5.75)
PASS: numbers.test: Number-theoretic division: round/: inexact: (-0.875 5.75)
PASS: numbers.test: Number-theoretic division: round/: inexact: (-0.875 -5.75)
PASS: numbers.test: Number-theoretic division: round/: inexact: (1.875 5.75)
PASS: numbers.test: Number-theoretic division: round/: inexact: (1.875 -5.75)
PASS: numbers.test: Number-theoretic division: round/: inexact: (-1.875 5.75)
PASS: numbers.test: Number-theoretic division: round/: inexact: (-1.875 -5.75)
PASS: numbers.test: Number-theoretic division: round/: inexact: (2.875 5.75)
PASS: numbers.test: Number-theoretic division: round/: inexact: (2.875 -5.75)
PASS: numbers.test: Number-theoretic division: round/: inexact: (-2.875 5.75)
PASS: numbers.test: Number-theoretic division: round/: inexact: (-2.875 -5.75)
PASS: numbers.test: Number-theoretic division: round/: inexact: (3.875 5.75)
PASS: numbers.test: Number-theoretic division: round/: inexact: (3.875 -5.75)
PASS: numbers.test: Number-theoretic division: round/: inexact: (-3.875 5.75)
PASS: numbers.test: Number-theoretic division: round/: inexact: (-3.875 -5.75)
PASS: numbers.test: Number-theoretic division: round/: inexact: (4.875 5.75)
PASS: numbers.test: Number-theoretic division: round/: inexact: (4.875 -5.75)
PASS: numbers.test: Number-theoretic division: round/: inexact: (-4.875 5.75)
PASS: numbers.test: Number-theoretic division: round/: inexact: (-4.875 -5.75)
PASS: numbers.test: Number-theoretic division: round/: inexact: (6.625 5.75)
PASS: numbers.test: Number-theoretic division: round/: inexact: (6.625 -5.75)
PASS: numbers.test: Number-theoretic division: round/: inexact: (-6.625 5.75)
PASS: numbers.test: Number-theoretic division: round/: inexact: (-6.625 -5.75)
PASS: numbers.test: Number-theoretic division: round/: inexact: (7.625 5.75)
PASS: numbers.test: Number-theoretic division: round/: inexact: (7.625 -5.75)
PASS: numbers.test: Number-theoretic division: round/: inexact: (-7.625 5.75)
PASS: numbers.test: Number-theoretic division: round/: inexact: (-7.625 -5.75)
PASS: numbers.test: Number-theoretic division: round/: inexact: (8.625 5.75)
PASS: numbers.test: Number-theoretic division: round/: inexact: (8.625 -5.75)
PASS: numbers.test: Number-theoretic division: round/: inexact: (-8.625 5.75)
PASS: numbers.test: Number-theoretic division: round/: inexact: (-8.625 -5.75)
PASS: numbers.test: Number-theoretic division: round/: inexact: (9.625 5.75)
PASS: numbers.test: Number-theoretic division: round/: inexact: (9.625 -5.75)
PASS: numbers.test: Number-theoretic division: round/: inexact: (-9.625 5.75)
PASS: numbers.test: Number-theoretic division: round/: inexact: (-9.625 -5.75)
PASS: numbers.test: Number-theoretic division: round/: inexact: (10.625 5.75)
PASS: numbers.test: Number-theoretic division: round/: inexact: (10.625 -5.75)
PASS: numbers.test: Number-theoretic division: round/: inexact: (-10.625 5.75)
PASS: numbers.test: Number-theoretic division: round/: inexact: (-10.625 -5.75)
PASS: numbers.test: Number-theoretic division: round/: inexact: (12.375 5.75)
PASS: numbers.test: Number-theoretic division: round/: inexact: (12.375 -5.75)
PASS: numbers.test: Number-theoretic division: round/: inexact: (-12.375 5.75)
PASS: numbers.test: Number-theoretic division: round/: inexact: (-12.375 -5.75)
PASS: numbers.test: Number-theoretic division: round/: inexact: (13.375 5.75)
PASS: numbers.test: Number-theoretic division: round/: inexact: (13.375 -5.75)
PASS: numbers.test: Number-theoretic division: round/: inexact: (-13.375 5.75)
PASS: numbers.test: Number-theoretic division: round/: inexact: (-13.375 -5.75)
PASS: numbers.test: Number-theoretic division: round/: inexact: (14.375 5.75)
PASS: numbers.test: Number-theoretic division: round/: inexact: (14.375 -5.75)
PASS: numbers.test: Number-theoretic division: round/: inexact: (-14.375 5.75)
PASS: numbers.test: Number-theoretic division: round/: inexact: (-14.375 -5.75)
PASS: numbers.test: Number-theoretic division: round/: inexact: (15.375 5.75)
PASS: numbers.test: Number-theoretic division: round/: inexact: (15.375 -5.75)
PASS: numbers.test: Number-theoretic division: round/: inexact: (-15.375 5.75)
PASS: numbers.test: Number-theoretic division: round/: inexact: (-15.375 -5.75)
PASS: numbers.test: Number-theoretic division: round/: inexact: (16.375 5.75)
PASS: numbers.test: Number-theoretic division: round/: inexact: (16.375 -5.75)
PASS: numbers.test: Number-theoretic division: round/: inexact: (-16.375 5.75)
PASS: numbers.test: Number-theoretic division: round/: inexact: (-16.375 -5.75)
PASS: numbers.test: Number-theoretic division: round/: fractions: (-2/9 1/10)
PASS: numbers.test: Number-theoretic division: round/: fractions: (-2/9 -1/10)
PASS: numbers.test: Number-theoretic division: round/: fractions: (2/9 1/10)
PASS: numbers.test: Number-theoretic division: round/: fractions: (2/9 -1/10)
PASS: numbers.test: Number-theoretic division: round/: fractions: (-1/11 1/10)
PASS: numbers.test: Number-theoretic division: round/: fractions: (-1/11 -1/10)
PASS: numbers.test: Number-theoretic division: round/: fractions: (1/11 1/10)
PASS: numbers.test: Number-theoretic division: round/: fractions: (1/11 -1/10)
PASS: numbers.test: Number-theoretic division: round/: fractions: (0 1/10)
PASS: numbers.test: Number-theoretic division: round/: fractions: (0 -1/10)
PASS: numbers.test: Number-theoretic division: round/: fractions: (1/3 1/10)
PASS: numbers.test: Number-theoretic division: round/: fractions: (1/3 -1/10)
PASS: numbers.test: Number-theoretic division: round/: fractions: (-1/3 1/10)
PASS: numbers.test: Number-theoretic division: round/: fractions: (-1/3 -1/10)
PASS: numbers.test: Number-theoretic division: round/: fractions: (2/3 1/10)
PASS: numbers.test: Number-theoretic division: round/: fractions: (2/3 -1/10)
PASS: numbers.test: Number-theoretic division: round/: fractions: (-2/3 1/10)
PASS: numbers.test: Number-theoretic division: round/: fractions: (-2/3 -1/10)
PASS: numbers.test: Number-theoretic division: round/: fractions: (-11/90 1/10)
PASS: numbers.test: Number-theoretic division: round/: fractions: (-11/90 -1/10)
PASS: numbers.test: Number-theoretic division: round/: fractions: (11/90 1/10)
PASS: numbers.test: Number-theoretic division: round/: fractions: (11/90 -1/10)
PASS: numbers.test: Number-theoretic division: round/: fractions: (1/110 1/10)
PASS: numbers.test: Number-theoretic division: round/: fractions: (1/110 -1/10)
PASS: numbers.test: Number-theoretic division: round/: fractions: (-1/110 1/10)
PASS: numbers.test: Number-theoretic division: round/: fractions: (-1/110 -1/10)
PASS: numbers.test: Number-theoretic division: round/: fractions: (1/10 1/10)
PASS: numbers.test: Number-theoretic division: round/: fractions: (1/10 -1/10)
PASS: numbers.test: Number-theoretic division: round/: fractions: (-1/10 1/10)
PASS: numbers.test: Number-theoretic division: round/: fractions: (-1/10 -1/10)
PASS: numbers.test: Number-theoretic division: round/: fractions: (13/30 1/10)
PASS: numbers.test: Number-theoretic division: round/: fractions: (13/30 -1/10)
PASS: numbers.test: Number-theoretic division: round/: fractions: (-13/30 1/10)
PASS: numbers.test: Number-theoretic division: round/: fractions: (-13/30 -1/10)
PASS: numbers.test: Number-theoretic division: round/: fractions: (23/30 1/10)
PASS: numbers.test: Number-theoretic division: round/: fractions: (23/30 -1/10)
PASS: numbers.test: Number-theoretic division: round/: fractions: (-23/30 1/10)
PASS: numbers.test: Number-theoretic division: round/: fractions: (-23/30 -1/10)
PASS: numbers.test: Number-theoretic division: round/: fractions: (-1/45 1/10)
PASS: numbers.test: Number-theoretic division: round/: fractions: (-1/45 -1/10)
PASS: numbers.test: Number-theoretic division: round/: fractions: (1/45 1/10)
PASS: numbers.test: Number-theoretic division: round/: fractions: (1/45 -1/10)
PASS: numbers.test: Number-theoretic division: round/: fractions: (6/55 1/10)
PASS: numbers.test: Number-theoretic division: round/: fractions: (6/55 -1/10)
PASS: numbers.test: Number-theoretic division: round/: fractions: (-6/55 1/10)
PASS: numbers.test: Number-theoretic division: round/: fractions: (-6/55 -1/10)
PASS: numbers.test: Number-theoretic division: round/: fractions: (1/5 1/10)
PASS: numbers.test: Number-theoretic division: round/: fractions: (1/5 -1/10)
PASS: numbers.test: Number-theoretic division: round/: fractions: (-1/5 1/10)
PASS: numbers.test: Number-theoretic division: round/: fractions: (-1/5 -1/10)
PASS: numbers.test: Number-theoretic division: round/: fractions: (8/15 1/10)
PASS: numbers.test: Number-theoretic division: round/: fractions: (8/15 -1/10)
PASS: numbers.test: Number-theoretic division: round/: fractions: (-8/15 1/10)
PASS: numbers.test: Number-theoretic division: round/: fractions: (-8/15 -1/10)
PASS: numbers.test: Number-theoretic division: round/: fractions: (13/15 1/10)
PASS: numbers.test: Number-theoretic division: round/: fractions: (13/15 -1/10)
PASS: numbers.test: Number-theoretic division: round/: fractions: (-13/15 1/10)
PASS: numbers.test: Number-theoretic division: round/: fractions: (-13/15 -1/10)
PASS: numbers.test: Number-theoretic division: round/: fractions: (5/18 1/10)
PASS: numbers.test: Number-theoretic division: round/: fractions: (5/18 -1/10)
PASS: numbers.test: Number-theoretic division: round/: fractions: (-5/18 1/10)
PASS: numbers.test: Number-theoretic division: round/: fractions: (-5/18 -1/10)
PASS: numbers.test: Number-theoretic division: round/: fractions: (9/22 1/10)
PASS: numbers.test: Number-theoretic division: round/: fractions: (9/22 -1/10)
PASS: numbers.test: Number-theoretic division: round/: fractions: (-9/22 1/10)
PASS: numbers.test: Number-theoretic division: round/: fractions: (-9/22 -1/10)
PASS: numbers.test: Number-theoretic division: round/: fractions: (1/2 1/10)
PASS: numbers.test: Number-theoretic division: round/: fractions: (1/2 -1/10)
PASS: numbers.test: Number-theoretic division: round/: fractions: (-1/2 1/10)
PASS: numbers.test: Number-theoretic division: round/: fractions: (-1/2 -1/10)
PASS: numbers.test: Number-theoretic division: round/: fractions: (5/6 1/10)
PASS: numbers.test: Number-theoretic division: round/: fractions: (5/6 -1/10)
PASS: numbers.test: Number-theoretic division: round/: fractions: (-5/6 1/10)
PASS: numbers.test: Number-theoretic division: round/: fractions: (-5/6 -1/10)
PASS: numbers.test: Number-theoretic division: round/: fractions: (7/6 1/10)
PASS: numbers.test: Number-theoretic division: round/: fractions: (7/6 -1/10)
PASS: numbers.test: Number-theoretic division: round/: fractions: (-7/6 1/10)
PASS: numbers.test: Number-theoretic division: round/: fractions: (-7/6 -1/10)
PASS: numbers.test: Number-theoretic division: round/: fractions: (-31/180 1/10)
PASS: numbers.test: Number-theoretic division: round/: fractions: (-31/180 -1/10)
PASS: numbers.test: Number-theoretic division: round/: fractions: (31/180 1/10)
PASS: numbers.test: Number-theoretic division: round/: fractions: (31/180 -1/10)
PASS: numbers.test: Number-theoretic division: round/: fractions: (-9/220 1/10)
PASS: numbers.test: Number-theoretic division: round/: fractions: (-9/220 -1/10)
PASS: numbers.test: Number-theoretic division: round/: fractions: (9/220 1/10)
PASS: numbers.test: Number-theoretic division: round/: fractions: (9/220 -1/10)
PASS: numbers.test: Number-theoretic division: round/: fractions: (1/20 1/10)
PASS: numbers.test: Number-theoretic division: round/: fractions: (1/20 -1/10)
PASS: numbers.test: Number-theoretic division: round/: fractions: (-1/20 1/10)
PASS: numbers.test: Number-theoretic division: round/: fractions: (-1/20 -1/10)
PASS: numbers.test: Number-theoretic division: round/: fractions: (23/60 1/10)
PASS: numbers.test: Number-theoretic division: round/: fractions: (23/60 -1/10)
PASS: numbers.test: Number-theoretic division: round/: fractions: (-23/60 1/10)
PASS: numbers.test: Number-theoretic division: round/: fractions: (-23/60 -1/10)
PASS: numbers.test: Number-theoretic division: round/: fractions: (43/60 1/10)
PASS: numbers.test: Number-theoretic division: round/: fractions: (43/60 -1/10)
PASS: numbers.test: Number-theoretic division: round/: fractions: (-43/60 1/10)
PASS: numbers.test: Number-theoretic division: round/: fractions: (-43/60 -1/10)
PASS: numbers.test: Number-theoretic division: round/: fractions: (-13/180 1/10)
PASS: numbers.test: Number-theoretic division: round/: fractions: (-13/180 -1/10)
PASS: numbers.test: Number-theoretic division: round/: fractions: (13/180 1/10)
PASS: numbers.test: Number-theoretic division: round/: fractions: (13/180 -1/10)
PASS: numbers.test: Number-theoretic division: round/: fractions: (13/220 1/10)
PASS: numbers.test: Number-theoretic division: round/: fractions: (13/220 -1/10)
PASS: numbers.test: Number-theoretic division: round/: fractions: (-13/220 1/10)
PASS: numbers.test: Number-theoretic division: round/: fractions: (-13/220 -1/10)
PASS: numbers.test: Number-theoretic division: round/: fractions: (3/20 1/10)
PASS: numbers.test: Number-theoretic division: round/: fractions: (3/20 -1/10)
PASS: numbers.test: Number-theoretic division: round/: fractions: (-3/20 1/10)
PASS: numbers.test: Number-theoretic division: round/: fractions: (-3/20 -1/10)
PASS: numbers.test: Number-theoretic division: round/: fractions: (29/60 1/10)
PASS: numbers.test: Number-theoretic division: round/: fractions: (29/60 -1/10)
PASS: numbers.test: Number-theoretic division: round/: fractions: (-29/60 1/10)
PASS: numbers.test: Number-theoretic division: round/: fractions: (-29/60 -1/10)
PASS: numbers.test: Number-theoretic division: round/: fractions: (49/60 1/10)
PASS: numbers.test: Number-theoretic division: round/: fractions: (49/60 -1/10)
PASS: numbers.test: Number-theoretic division: round/: fractions: (-49/60 1/10)
PASS: numbers.test: Number-theoretic division: round/: fractions: (-49/60 -1/10)
PASS: numbers.test: Number-theoretic division: round/: fractions: (1/36 1/10)
PASS: numbers.test: Number-theoretic division: round/: fractions: (1/36 -1/10)
PASS: numbers.test: Number-theoretic division: round/: fractions: (-1/36 1/10)
PASS: numbers.test: Number-theoretic division: round/: fractions: (-1/36 -1/10)
PASS: numbers.test: Number-theoretic division: round/: fractions: (7/44 1/10)
PASS: numbers.test: Number-theoretic division: round/: fractions: (7/44 -1/10)
PASS: numbers.test: Number-theoretic division: round/: fractions: (-7/44 1/10)
PASS: numbers.test: Number-theoretic division: round/: fractions: (-7/44 -1/10)
PASS: numbers.test: Number-theoretic division: round/: fractions: (1/4 1/10)
PASS: numbers.test: Number-theoretic division: round/: fractions: (1/4 -1/10)
PASS: numbers.test: Number-theoretic division: round/: fractions: (-1/4 1/10)
PASS: numbers.test: Number-theoretic division: round/: fractions: (-1/4 -1/10)
PASS: numbers.test: Number-theoretic division: round/: fractions: (7/12 1/10)
PASS: numbers.test: Number-theoretic division: round/: fractions: (7/12 -1/10)
PASS: numbers.test: Number-theoretic division: round/: fractions: (-7/12 1/10)
PASS: numbers.test: Number-theoretic division: round/: fractions: (-7/12 -1/10)
PASS: numbers.test: Number-theoretic division: round/: fractions: (11/12 1/10)
PASS: numbers.test: Number-theoretic division: round/: fractions: (11/12 -1/10)
PASS: numbers.test: Number-theoretic division: round/: fractions: (-11/12 1/10)
PASS: numbers.test: Number-theoretic division: round/: fractions: (-11/12 -1/10)
PASS: numbers.test: Number-theoretic division: round/: fractions: (-2/9 16/3)
PASS: numbers.test: Number-theoretic division: round/: fractions: (-2/9 -16/3)
PASS: numbers.test: Number-theoretic division: round/: fractions: (2/9 16/3)
PASS: numbers.test: Number-theoretic division: round/: fractions: (2/9 -16/3)
PASS: numbers.test: Number-theoretic division: round/: fractions: (-1/11 16/3)
PASS: numbers.test: Number-theoretic division: round/: fractions: (-1/11 -16/3)
PASS: numbers.test: Number-theoretic division: round/: fractions: (1/11 16/3)
PASS: numbers.test: Number-theoretic division: round/: fractions: (1/11 -16/3)
PASS: numbers.test: Number-theoretic division: round/: fractions: (0 16/3)
PASS: numbers.test: Number-theoretic division: round/: fractions: (0 -16/3)
PASS: numbers.test: Number-theoretic division: round/: fractions: (1/3 16/3)
PASS: numbers.test: Number-theoretic division: round/: fractions: (1/3 -16/3)
PASS: numbers.test: Number-theoretic division: round/: fractions: (-1/3 16/3)
PASS: numbers.test: Number-theoretic division: round/: fractions: (-1/3 -16/3)
PASS: numbers.test: Number-theoretic division: round/: fractions: (2/3 16/3)
PASS: numbers.test: Number-theoretic division: round/: fractions: (2/3 -16/3)
PASS: numbers.test: Number-theoretic division: round/: fractions: (-2/3 16/3)
PASS: numbers.test: Number-theoretic division: round/: fractions: (-2/3 -16/3)
PASS: numbers.test: Number-theoretic division: round/: fractions: (46/9 16/3)
PASS: numbers.test: Number-theoretic division: round/: fractions: (46/9 -16/3)
PASS: numbers.test: Number-theoretic division: round/: fractions: (-46/9 16/3)
PASS: numbers.test: Number-theoretic division: round/: fractions: (-46/9 -16/3)
PASS: numbers.test: Number-theoretic division: round/: fractions: (173/33 16/3)
PASS: numbers.test: Number-theoretic division: round/: fractions: (173/33 -16/3)
PASS: numbers.test: Number-theoretic division: round/: fractions: (-173/33 16/3)
PASS: numbers.test: Number-theoretic division: round/: fractions: (-173/33 -16/3)
PASS: numbers.test: Number-theoretic division: round/: fractions: (16/3 16/3)
PASS: numbers.test: Number-theoretic division: round/: fractions: (16/3 -16/3)
PASS: numbers.test: Number-theoretic division: round/: fractions: (-16/3 16/3)
PASS: numbers.test: Number-theoretic division: round/: fractions: (-16/3 -16/3)
PASS: numbers.test: Number-theoretic division: round/: fractions: (17/3 16/3)
PASS: numbers.test: Number-theoretic division: round/: fractions: (17/3 -16/3)
PASS: numbers.test: Number-theoretic division: round/: fractions: (-17/3 16/3)
PASS: numbers.test: Number-theoretic division: round/: fractions: (-17/3 -16/3)
PASS: numbers.test: Number-theoretic division: round/: fractions: (6 16/3)
PASS: numbers.test: Number-theoretic division: round/: fractions: (6 -16/3)
PASS: numbers.test: Number-theoretic division: round/: fractions: (-6 16/3)
PASS: numbers.test: Number-theoretic division: round/: fractions: (-6 -16/3)
PASS: numbers.test: Number-theoretic division: round/: fractions: (94/9 16/3)
PASS: numbers.test: Number-theoretic division: round/: fractions: (94/9 -16/3)
PASS: numbers.test: Number-theoretic division: round/: fractions: (-94/9 16/3)
PASS: numbers.test: Number-theoretic division: round/: fractions: (-94/9 -16/3)
PASS: numbers.test: Number-theoretic division: round/: fractions: (349/33 16/3)
PASS: numbers.test: Number-theoretic division: round/: fractions: (349/33 -16/3)
PASS: numbers.test: Number-theoretic division: round/: fractions: (-349/33 16/3)
PASS: numbers.test: Number-theoretic division: round/: fractions: (-349/33 -16/3)
PASS: numbers.test: Number-theoretic division: round/: fractions: (32/3 16/3)
PASS: numbers.test: Number-theoretic division: round/: fractions: (32/3 -16/3)
PASS: numbers.test: Number-theoretic division: round/: fractions: (-32/3 16/3)
PASS: numbers.test: Number-theoretic division: round/: fractions: (-32/3 -16/3)
PASS: numbers.test: Number-theoretic division: round/: fractions: (11 16/3)
PASS: numbers.test: Number-theoretic division: round/: fractions: (11 -16/3)
PASS: numbers.test: Number-theoretic division: round/: fractions: (-11 16/3)
PASS: numbers.test: Number-theoretic division: round/: fractions: (-11 -16/3)
PASS: numbers.test: Number-theoretic division: round/: fractions: (34/3 16/3)
PASS: numbers.test: Number-theoretic division: round/: fractions: (34/3 -16/3)
PASS: numbers.test: Number-theoretic division: round/: fractions: (-34/3 16/3)
PASS: numbers.test: Number-theoretic division: round/: fractions: (-34/3 -16/3)
PASS: numbers.test: Number-theoretic division: round/: fractions: (238/9 16/3)
PASS: numbers.test: Number-theoretic division: round/: fractions: (238/9 -16/3)
PASS: numbers.test: Number-theoretic division: round/: fractions: (-238/9 16/3)
PASS: numbers.test: Number-theoretic division: round/: fractions: (-238/9 -16/3)
PASS: numbers.test: Number-theoretic division: round/: fractions: (877/33 16/3)
PASS: numbers.test: Number-theoretic division: round/: fractions: (877/33 -16/3)
PASS: numbers.test: Number-theoretic division: round/: fractions: (-877/33 16/3)
PASS: numbers.test: Number-theoretic division: round/: fractions: (-877/33 -16/3)
PASS: numbers.test: Number-theoretic division: round/: fractions: (80/3 16/3)
PASS: numbers.test: Number-theoretic division: round/: fractions: (80/3 -16/3)
PASS: numbers.test: Number-theoretic division: round/: fractions: (-80/3 16/3)
PASS: numbers.test: Number-theoretic division: round/: fractions: (-80/3 -16/3)
PASS: numbers.test: Number-theoretic division: round/: fractions: (27 16/3)
PASS: numbers.test: Number-theoretic division: round/: fractions: (27 -16/3)
PASS: numbers.test: Number-theoretic division: round/: fractions: (-27 16/3)
PASS: numbers.test: Number-theoretic division: round/: fractions: (-27 -16/3)
PASS: numbers.test: Number-theoretic division: round/: fractions: (82/3 16/3)
PASS: numbers.test: Number-theoretic division: round/: fractions: (82/3 -16/3)
PASS: numbers.test: Number-theoretic division: round/: fractions: (-82/3 16/3)
PASS: numbers.test: Number-theoretic division: round/: fractions: (-82/3 -16/3)
PASS: numbers.test: Number-theoretic division: round/: fractions: (22/9 16/3)
PASS: numbers.test: Number-theoretic division: round/: fractions: (22/9 -16/3)
PASS: numbers.test: Number-theoretic division: round/: fractions: (-22/9 16/3)
PASS: numbers.test: Number-theoretic division: round/: fractions: (-22/9 -16/3)
PASS: numbers.test: Number-theoretic division: round/: fractions: (85/33 16/3)
PASS: numbers.test: Number-theoretic division: round/: fractions: (85/33 -16/3)
PASS: numbers.test: Number-theoretic division: round/: fractions: (-85/33 16/3)
PASS: numbers.test: Number-theoretic division: round/: fractions: (-85/33 -16/3)
PASS: numbers.test: Number-theoretic division: round/: fractions: (8/3 16/3)
PASS: numbers.test: Number-theoretic division: round/: fractions: (8/3 -16/3)
PASS: numbers.test: Number-theoretic division: round/: fractions: (-8/3 16/3)
PASS: numbers.test: Number-theoretic division: round/: fractions: (-8/3 -16/3)
PASS: numbers.test: Number-theoretic division: round/: fractions: (3 16/3)
PASS: numbers.test: Number-theoretic division: round/: fractions: (3 -16/3)
PASS: numbers.test: Number-theoretic division: round/: fractions: (-3 16/3)
PASS: numbers.test: Number-theoretic division: round/: fractions: (-3 -16/3)
PASS: numbers.test: Number-theoretic division: round/: fractions: (10/3 16/3)
PASS: numbers.test: Number-theoretic division: round/: fractions: (10/3 -16/3)
PASS: numbers.test: Number-theoretic division: round/: fractions: (-10/3 16/3)
PASS: numbers.test: Number-theoretic division: round/: fractions: (-10/3 -16/3)
PASS: numbers.test: Number-theoretic division: round/: fractions: (70/9 16/3)
PASS: numbers.test: Number-theoretic division: round/: fractions: (70/9 -16/3)
PASS: numbers.test: Number-theoretic division: round/: fractions: (-70/9 16/3)
PASS: numbers.test: Number-theoretic division: round/: fractions: (-70/9 -16/3)
PASS: numbers.test: Number-theoretic division: round/: fractions: (87/11 16/3)
PASS: numbers.test: Number-theoretic division: round/: fractions: (87/11 -16/3)
PASS: numbers.test: Number-theoretic division: round/: fractions: (-87/11 16/3)
PASS: numbers.test: Number-theoretic division: round/: fractions: (-87/11 -16/3)
PASS: numbers.test: Number-theoretic division: round/: fractions: (8 16/3)
PASS: numbers.test: Number-theoretic division: round/: fractions: (8 -16/3)
PASS: numbers.test: Number-theoretic division: round/: fractions: (-8 16/3)
PASS: numbers.test: Number-theoretic division: round/: fractions: (-8 -16/3)
PASS: numbers.test: Number-theoretic division: round/: fractions: (25/3 16/3)
PASS: numbers.test: Number-theoretic division: round/: fractions: (25/3 -16/3)
PASS: numbers.test: Number-theoretic division: round/: fractions: (-25/3 16/3)
PASS: numbers.test: Number-theoretic division: round/: fractions: (-25/3 -16/3)
PASS: numbers.test: Number-theoretic division: round/: fractions: (26/3 16/3)
PASS: numbers.test: Number-theoretic division: round/: fractions: (26/3 -16/3)
PASS: numbers.test: Number-theoretic division: round/: fractions: (-26/3 16/3)
PASS: numbers.test: Number-theoretic division: round/: fractions: (-26/3 -16/3)
PASS: numbers.test: Number-theoretic division: round/: fractions: (118/9 16/3)
PASS: numbers.test: Number-theoretic division: round/: fractions: (118/9 -16/3)
PASS: numbers.test: Number-theoretic division: round/: fractions: (-118/9 16/3)
PASS: numbers.test: Number-theoretic division: round/: fractions: (-118/9 -16/3)
PASS: numbers.test: Number-theoretic division: round/: fractions: (437/33 16/3)
PASS: numbers.test: Number-theoretic division: round/: fractions: (437/33 -16/3)
PASS: numbers.test: Number-theoretic division: round/: fractions: (-437/33 16/3)
PASS: numbers.test: Number-theoretic division: round/: fractions: (-437/33 -16/3)
PASS: numbers.test: Number-theoretic division: round/: fractions: (40/3 16/3)
PASS: numbers.test: Number-theoretic division: round/: fractions: (40/3 -16/3)
PASS: numbers.test: Number-theoretic division: round/: fractions: (-40/3 16/3)
PASS: numbers.test: Number-theoretic division: round/: fractions: (-40/3 -16/3)
PASS: numbers.test: Number-theoretic division: round/: fractions: (41/3 16/3)
PASS: numbers.test: Number-theoretic division: round/: fractions: (41/3 -16/3)
PASS: numbers.test: Number-theoretic division: round/: fractions: (-41/3 16/3)
PASS: numbers.test: Number-theoretic division: round/: fractions: (-41/3 -16/3)
PASS: numbers.test: Number-theoretic division: round/: fractions: (14 16/3)
PASS: numbers.test: Number-theoretic division: round/: fractions: (14 -16/3)
PASS: numbers.test: Number-theoretic division: round/: fractions: (-14 16/3)
PASS: numbers.test: Number-theoretic division: round/: fractions: (-14 -16/3)
PASS: numbers.test: Number-theoretic division: round/: fractions: (-2/9 10/7)
PASS: numbers.test: Number-theoretic division: round/: fractions: (-2/9 -10/7)
PASS: numbers.test: Number-theoretic division: round/: fractions: (2/9 10/7)
PASS: numbers.test: Number-theoretic division: round/: fractions: (2/9 -10/7)
PASS: numbers.test: Number-theoretic division: round/: fractions: (-1/11 10/7)
PASS: numbers.test: Number-theoretic division: round/: fractions: (-1/11 -10/7)
PASS: numbers.test: Number-theoretic division: round/: fractions: (1/11 10/7)
PASS: numbers.test: Number-theoretic division: round/: fractions: (1/11 -10/7)
PASS: numbers.test: Number-theoretic division: round/: fractions: (0 10/7)
PASS: numbers.test: Number-theoretic division: round/: fractions: (0 -10/7)
PASS: numbers.test: Number-theoretic division: round/: fractions: (1/3 10/7)
PASS: numbers.test: Number-theoretic division: round/: fractions: (1/3 -10/7)
PASS: numbers.test: Number-theoretic division: round/: fractions: (-1/3 10/7)
PASS: numbers.test: Number-theoretic division: round/: fractions: (-1/3 -10/7)
PASS: numbers.test: Number-theoretic division: round/: fractions: (2/3 10/7)
PASS: numbers.test: Number-theoretic division: round/: fractions: (2/3 -10/7)
PASS: numbers.test: Number-theoretic division: round/: fractions: (-2/3 10/7)
PASS: numbers.test: Number-theoretic division: round/: fractions: (-2/3 -10/7)
PASS: numbers.test: Number-theoretic division: round/: fractions: (76/63 10/7)
PASS: numbers.test: Number-theoretic division: round/: fractions: (76/63 -10/7)
PASS: numbers.test: Number-theoretic division: round/: fractions: (-76/63 10/7)
PASS: numbers.test: Number-theoretic division: round/: fractions: (-76/63 -10/7)
PASS: numbers.test: Number-theoretic division: round/: fractions: (103/77 10/7)
PASS: numbers.test: Number-theoretic division: round/: fractions: (103/77 -10/7)
PASS: numbers.test: Number-theoretic division: round/: fractions: (-103/77 10/7)
PASS: numbers.test: Number-theoretic division: round/: fractions: (-103/77 -10/7)
PASS: numbers.test: Number-theoretic division: round/: fractions: (10/7 10/7)
PASS: numbers.test: Number-theoretic division: round/: fractions: (10/7 -10/7)
PASS: numbers.test: Number-theoretic division: round/: fractions: (-10/7 10/7)
PASS: numbers.test: Number-theoretic division: round/: fractions: (-10/7 -10/7)
PASS: numbers.test: Number-theoretic division: round/: fractions: (37/21 10/7)
PASS: numbers.test: Number-theoretic division: round/: fractions: (37/21 -10/7)
PASS: numbers.test: Number-theoretic division: round/: fractions: (-37/21 10/7)
PASS: numbers.test: Number-theoretic division: round/: fractions: (-37/21 -10/7)
PASS: numbers.test: Number-theoretic division: round/: fractions: (44/21 10/7)
PASS: numbers.test: Number-theoretic division: round/: fractions: (44/21 -10/7)
PASS: numbers.test: Number-theoretic division: round/: fractions: (-44/21 10/7)
PASS: numbers.test: Number-theoretic division: round/: fractions: (-44/21 -10/7)
PASS: numbers.test: Number-theoretic division: round/: fractions: (166/63 10/7)
PASS: numbers.test: Number-theoretic division: round/: fractions: (166/63 -10/7)
PASS: numbers.test: Number-theoretic division: round/: fractions: (-166/63 10/7)
PASS: numbers.test: Number-theoretic division: round/: fractions: (-166/63 -10/7)
PASS: numbers.test: Number-theoretic division: round/: fractions: (213/77 10/7)
PASS: numbers.test: Number-theoretic division: round/: fractions: (213/77 -10/7)
PASS: numbers.test: Number-theoretic division: round/: fractions: (-213/77 10/7)
PASS: numbers.test: Number-theoretic division: round/: fractions: (-213/77 -10/7)
PASS: numbers.test: Number-theoretic division: round/: fractions: (20/7 10/7)
PASS: numbers.test: Number-theoretic division: round/: fractions: (20/7 -10/7)
PASS: numbers.test: Number-theoretic division: round/: fractions: (-20/7 10/7)
PASS: numbers.test: Number-theoretic division: round/: fractions: (-20/7 -10/7)
PASS: numbers.test: Number-theoretic division: round/: fractions: (67/21 10/7)
PASS: numbers.test: Number-theoretic division: round/: fractions: (67/21 -10/7)
PASS: numbers.test: Number-theoretic division: round/: fractions: (-67/21 10/7)
PASS: numbers.test: Number-theoretic division: round/: fractions: (-67/21 -10/7)
PASS: numbers.test: Number-theoretic division: round/: fractions: (74/21 10/7)
PASS: numbers.test: Number-theoretic division: round/: fractions: (74/21 -10/7)
PASS: numbers.test: Number-theoretic division: round/: fractions: (-74/21 10/7)
PASS: numbers.test: Number-theoretic division: round/: fractions: (-74/21 -10/7)
PASS: numbers.test: Number-theoretic division: round/: fractions: (436/63 10/7)
PASS: numbers.test: Number-theoretic division: round/: fractions: (436/63 -10/7)
PASS: numbers.test: Number-theoretic division: round/: fractions: (-436/63 10/7)
PASS: numbers.test: Number-theoretic division: round/: fractions: (-436/63 -10/7)
PASS: numbers.test: Number-theoretic division: round/: fractions: (543/77 10/7)
PASS: numbers.test: Number-theoretic division: round/: fractions: (543/77 -10/7)
PASS: numbers.test: Number-theoretic division: round/: fractions: (-543/77 10/7)
PASS: numbers.test: Number-theoretic division: round/: fractions: (-543/77 -10/7)
PASS: numbers.test: Number-theoretic division: round/: fractions: (50/7 10/7)
PASS: numbers.test: Number-theoretic division: round/: fractions: (50/7 -10/7)
PASS: numbers.test: Number-theoretic division: round/: fractions: (-50/7 10/7)
PASS: numbers.test: Number-theoretic division: round/: fractions: (-50/7 -10/7)
PASS: numbers.test: Number-theoretic division: round/: fractions: (157/21 10/7)
PASS: numbers.test: Number-theoretic division: round/: fractions: (157/21 -10/7)
PASS: numbers.test: Number-theoretic division: round/: fractions: (-157/21 10/7)
PASS: numbers.test: Number-theoretic division: round/: fractions: (-157/21 -10/7)
PASS: numbers.test: Number-theoretic division: round/: fractions: (164/21 10/7)
PASS: numbers.test: Number-theoretic division: round/: fractions: (164/21 -10/7)
PASS: numbers.test: Number-theoretic division: round/: fractions: (-164/21 10/7)
PASS: numbers.test: Number-theoretic division: round/: fractions: (-164/21 -10/7)
PASS: numbers.test: Number-theoretic division: round/: fractions: (31/63 10/7)
PASS: numbers.test: Number-theoretic division: round/: fractions: (31/63 -10/7)
PASS: numbers.test: Number-theoretic division: round/: fractions: (-31/63 10/7)
PASS: numbers.test: Number-theoretic division: round/: fractions: (-31/63 -10/7)
PASS: numbers.test: Number-theoretic division: round/: fractions: (48/77 10/7)
PASS: numbers.test: Number-theoretic division: round/: fractions: (48/77 -10/7)
PASS: numbers.test: Number-theoretic division: round/: fractions: (-48/77 10/7)
PASS: numbers.test: Number-theoretic division: round/: fractions: (-48/77 -10/7)
PASS: numbers.test: Number-theoretic division: round/: fractions: (5/7 10/7)
PASS: numbers.test: Number-theoretic division: round/: fractions: (5/7 -10/7)
PASS: numbers.test: Number-theoretic division: round/: fractions: (-5/7 10/7)
PASS: numbers.test: Number-theoretic division: round/: fractions: (-5/7 -10/7)
PASS: numbers.test: Number-theoretic division: round/: fractions: (22/21 10/7)
PASS: numbers.test: Number-theoretic division: round/: fractions: (22/21 -10/7)
PASS: numbers.test: Number-theoretic division: round/: fractions: (-22/21 10/7)
PASS: numbers.test: Number-theoretic division: round/: fractions: (-22/21 -10/7)
PASS: numbers.test: Number-theoretic division: round/: fractions: (29/21 10/7)
PASS: numbers.test: Number-theoretic division: round/: fractions: (29/21 -10/7)
PASS: numbers.test: Number-theoretic division: round/: fractions: (-29/21 10/7)
PASS: numbers.test: Number-theoretic division: round/: fractions: (-29/21 -10/7)
PASS: numbers.test: Number-theoretic division: round/: fractions: (121/63 10/7)
PASS: numbers.test: Number-theoretic division: round/: fractions: (121/63 -10/7)
PASS: numbers.test: Number-theoretic division: round/: fractions: (-121/63 10/7)
PASS: numbers.test: Number-theoretic division: round/: fractions: (-121/63 -10/7)
PASS: numbers.test: Number-theoretic division: round/: fractions: (158/77 10/7)
PASS: numbers.test: Number-theoretic division: round/: fractions: (158/77 -10/7)
PASS: numbers.test: Number-theoretic division: round/: fractions: (-158/77 10/7)
PASS: numbers.test: Number-theoretic division: round/: fractions: (-158/77 -10/7)
PASS: numbers.test: Number-theoretic division: round/: fractions: (15/7 10/7)
PASS: numbers.test: Number-theoretic division: round/: fractions: (15/7 -10/7)
PASS: numbers.test: Number-theoretic division: round/: fractions: (-15/7 10/7)
PASS: numbers.test: Number-theoretic division: round/: fractions: (-15/7 -10/7)
PASS: numbers.test: Number-theoretic division: round/: fractions: (52/21 10/7)
PASS: numbers.test: Number-theoretic division: round/: fractions: (52/21 -10/7)
PASS: numbers.test: Number-theoretic division: round/: fractions: (-52/21 10/7)
PASS: numbers.test: Number-theoretic division: round/: fractions: (-52/21 -10/7)
PASS: numbers.test: Number-theoretic division: round/: fractions: (59/21 10/7)
PASS: numbers.test: Number-theoretic division: round/: fractions: (59/21 -10/7)
PASS: numbers.test: Number-theoretic division: round/: fractions: (-59/21 10/7)
PASS: numbers.test: Number-theoretic division: round/: fractions: (-59/21 -10/7)
PASS: numbers.test: Number-theoretic division: round/: fractions: (211/63 10/7)
PASS: numbers.test: Number-theoretic division: round/: fractions: (211/63 -10/7)
PASS: numbers.test: Number-theoretic division: round/: fractions: (-211/63 10/7)
PASS: numbers.test: Number-theoretic division: round/: fractions: (-211/63 -10/7)
PASS: numbers.test: Number-theoretic division: round/: fractions: (268/77 10/7)
PASS: numbers.test: Number-theoretic division: round/: fractions: (268/77 -10/7)
PASS: numbers.test: Number-theoretic division: round/: fractions: (-268/77 10/7)
PASS: numbers.test: Number-theoretic division: round/: fractions: (-268/77 -10/7)
PASS: numbers.test: Number-theoretic division: round/: fractions: (25/7 10/7)
PASS: numbers.test: Number-theoretic division: round/: fractions: (25/7 -10/7)
PASS: numbers.test: Number-theoretic division: round/: fractions: (-25/7 10/7)
PASS: numbers.test: Number-theoretic division: round/: fractions: (-25/7 -10/7)
PASS: numbers.test: Number-theoretic division: round/: fractions: (82/21 10/7)
PASS: numbers.test: Number-theoretic division: round/: fractions: (82/21 -10/7)
PASS: numbers.test: Number-theoretic division: round/: fractions: (-82/21 10/7)
PASS: numbers.test: Number-theoretic division: round/: fractions: (-82/21 -10/7)
PASS: numbers.test: Number-theoretic division: round/: fractions: (89/21 10/7)
PASS: numbers.test: Number-theoretic division: round/: fractions: (89/21 -10/7)
PASS: numbers.test: Number-theoretic division: round/: fractions: (-89/21 10/7)
PASS: numbers.test: Number-theoretic division: round/: fractions: (-89/21 -10/7)
PASS: numbers.test: Number-theoretic division: round/: mixed types: (25 10)
PASS: numbers.test: Number-theoretic division: round/: mixed types: (25 -10)
PASS: numbers.test: Number-theoretic division: round/: mixed types: (-25 10)
PASS: numbers.test: Number-theoretic division: round/: mixed types: (-25 -10)
PASS: numbers.test: Number-theoretic division: round/: mixed types: (15000000000 10)
PASS: numbers.test: Number-theoretic division: round/: mixed types: (15000000000 -10)
PASS: numbers.test: Number-theoretic division: round/: mixed types: (-15000000000 10)
PASS: numbers.test: Number-theoretic division: round/: mixed types: (-15000000000 -10)
PASS: numbers.test: Number-theoretic division: round/: mixed types: (130.0 10)
PASS: numbers.test: Number-theoretic division: round/: mixed types: (130.0 -10)
PASS: numbers.test: Number-theoretic division: round/: mixed types: (-130.0 10)
PASS: numbers.test: Number-theoretic division: round/: mixed types: (-130.0 -10)
PASS: numbers.test: Number-theoretic division: round/: mixed types: (15/7 10)
PASS: numbers.test: Number-theoretic division: round/: mixed types: (15/7 -10)
PASS: numbers.test: Number-theoretic division: round/: mixed types: (-15/7 10)
PASS: numbers.test: Number-theoretic division: round/: mixed types: (-15/7 -10)
PASS: numbers.test: Number-theoretic division: round/: mixed types: (0 10)
PASS: numbers.test: Number-theoretic division: round/: mixed types: (0 -10)
PASS: numbers.test: Number-theoretic division: round/: mixed types: (0.0 10)
PASS: numbers.test: Number-theoretic division: round/: mixed types: (0.0 -10)
PASS: numbers.test: Number-theoretic division: round/: mixed types: (-0.0 10)
PASS: numbers.test: Number-theoretic division: round/: mixed types: (-0.0 -10)
PASS: numbers.test: Number-theoretic division: round/: mixed types: (+inf.0 10)
PASS: numbers.test: Number-theoretic division: round/: mixed types: (+inf.0 -10)
PASS: numbers.test: Number-theoretic division: round/: mixed types: (-inf.0 10)
PASS: numbers.test: Number-theoretic division: round/: mixed types: (-inf.0 -10)
PASS: numbers.test: Number-theoretic division: round/: mixed types: (-inf.0 10)
PASS: numbers.test: Number-theoretic division: round/: mixed types: (-inf.0 -10)
PASS: numbers.test: Number-theoretic division: round/: mixed types: (+inf.0 10)
PASS: numbers.test: Number-theoretic division: round/: mixed types: (+inf.0 -10)
PASS: numbers.test: Number-theoretic division: round/: mixed types: (+nan.0 10)
PASS: numbers.test: Number-theoretic division: round/: mixed types: (+nan.0 -10)
PASS: numbers.test: Number-theoretic division: round/: mixed types: (+nan.0 10)
PASS: numbers.test: Number-theoretic division: round/: mixed types: (+nan.0 -10)
PASS: numbers.test: Number-theoretic division: round/: mixed types: (25 10000000000)
PASS: numbers.test: Number-theoretic division: round/: mixed types: (25 -10000000000)
PASS: numbers.test: Number-theoretic division: round/: mixed types: (-25 10000000000)
PASS: numbers.test: Number-theoretic division: round/: mixed types: (-25 -10000000000)
PASS: numbers.test: Number-theoretic division: round/: mixed types: (15000000000 10000000000)
PASS: numbers.test: Number-theoretic division: round/: mixed types: (15000000000 -10000000000)
PASS: numbers.test: Number-theoretic division: round/: mixed types: (-15000000000 10000000000)
PASS: numbers.test: Number-theoretic division: round/: mixed types: (-15000000000 -10000000000)
PASS: numbers.test: Number-theoretic division: round/: mixed types: (130.0 10000000000)
PASS: numbers.test: Number-theoretic division: round/: mixed types: (130.0 -10000000000)
PASS: numbers.test: Number-theoretic division: round/: mixed types: (-130.0 10000000000)
PASS: numbers.test: Number-theoretic division: round/: mixed types: (-130.0 -10000000000)
PASS: numbers.test: Number-theoretic division: round/: mixed types: (15/7 10000000000)
PASS: numbers.test: Number-theoretic division: round/: mixed types: (15/7 -10000000000)
PASS: numbers.test: Number-theoretic division: round/: mixed types: (-15/7 10000000000)
PASS: numbers.test: Number-theoretic division: round/: mixed types: (-15/7 -10000000000)
PASS: numbers.test: Number-theoretic division: round/: mixed types: (0 10000000000)
PASS: numbers.test: Number-theoretic division: round/: mixed types: (0 -10000000000)
PASS: numbers.test: Number-theoretic division: round/: mixed types: (0.0 10000000000)
PASS: numbers.test: Number-theoretic division: round/: mixed types: (0.0 -10000000000)
PASS: numbers.test: Number-theoretic division: round/: mixed types: (-0.0 10000000000)
PASS: numbers.test: Number-theoretic division: round/: mixed types: (-0.0 -10000000000)
PASS: numbers.test: Number-theoretic division: round/: mixed types: (+inf.0 10000000000)
PASS: numbers.test: Number-theoretic division: round/: mixed types: (+inf.0 -10000000000)
PASS: numbers.test: Number-theoretic division: round/: mixed types: (-inf.0 10000000000)
PASS: numbers.test: Number-theoretic division: round/: mixed types: (-inf.0 -10000000000)
PASS: numbers.test: Number-theoretic division: round/: mixed types: (-inf.0 10000000000)
PASS: numbers.test: Number-theoretic division: round/: mixed types: (-inf.0 -10000000000)
PASS: numbers.test: Number-theoretic division: round/: mixed types: (+inf.0 10000000000)
PASS: numbers.test: Number-theoretic division: round/: mixed types: (+inf.0 -10000000000)
PASS: numbers.test: Number-theoretic division: round/: mixed types: (+nan.0 10000000000)
PASS: numbers.test: Number-theoretic division: round/: mixed types: (+nan.0 -10000000000)
PASS: numbers.test: Number-theoretic division: round/: mixed types: (+nan.0 10000000000)
PASS: numbers.test: Number-theoretic division: round/: mixed types: (+nan.0 -10000000000)
PASS: numbers.test: Number-theoretic division: round/: mixed types: (25 12.0)
PASS: numbers.test: Number-theoretic division: round/: mixed types: (25 -12.0)
PASS: numbers.test: Number-theoretic division: round/: mixed types: (-25 12.0)
PASS: numbers.test: Number-theoretic division: round/: mixed types: (-25 -12.0)
PASS: numbers.test: Number-theoretic division: round/: mixed types: (15000000000 12.0)
PASS: numbers.test: Number-theoretic division: round/: mixed types: (15000000000 -12.0)
PASS: numbers.test: Number-theoretic division: round/: mixed types: (-15000000000 12.0)
PASS: numbers.test: Number-theoretic division: round/: mixed types: (-15000000000 -12.0)
PASS: numbers.test: Number-theoretic division: round/: mixed types: (130.0 12.0)
PASS: numbers.test: Number-theoretic division: round/: mixed types: (130.0 -12.0)
PASS: numbers.test: Number-theoretic division: round/: mixed types: (-130.0 12.0)
PASS: numbers.test: Number-theoretic division: round/: mixed types: (-130.0 -12.0)
PASS: numbers.test: Number-theoretic division: round/: mixed types: (15/7 12.0)
PASS: numbers.test: Number-theoretic division: round/: mixed types: (15/7 -12.0)
PASS: numbers.test: Number-theoretic division: round/: mixed types: (-15/7 12.0)
PASS: numbers.test: Number-theoretic division: round/: mixed types: (-15/7 -12.0)
PASS: numbers.test: Number-theoretic division: round/: mixed types: (0 12.0)
PASS: numbers.test: Number-theoretic division: round/: mixed types: (0 -12.0)
PASS: numbers.test: Number-theoretic division: round/: mixed types: (0.0 12.0)
PASS: numbers.test: Number-theoretic division: round/: mixed types: (0.0 -12.0)
PASS: numbers.test: Number-theoretic division: round/: mixed types: (-0.0 12.0)
PASS: numbers.test: Number-theoretic division: round/: mixed types: (-0.0 -12.0)
PASS: numbers.test: Number-theoretic division: round/: mixed types: (+inf.0 12.0)
PASS: numbers.test: Number-theoretic division: round/: mixed types: (+inf.0 -12.0)
PASS: numbers.test: Number-theoretic division: round/: mixed types: (-inf.0 12.0)
PASS: numbers.test: Number-theoretic division: round/: mixed types: (-inf.0 -12.0)
PASS: numbers.test: Number-theoretic division: round/: mixed types: (-inf.0 12.0)
PASS: numbers.test: Number-theoretic division: round/: mixed types: (-inf.0 -12.0)
PASS: numbers.test: Number-theoretic division: round/: mixed types: (+inf.0 12.0)
PASS: numbers.test: Number-theoretic division: round/: mixed types: (+inf.0 -12.0)
PASS: numbers.test: Number-theoretic division: round/: mixed types: (+nan.0 12.0)
PASS: numbers.test: Number-theoretic division: round/: mixed types: (+nan.0 -12.0)
PASS: numbers.test: Number-theoretic division: round/: mixed types: (+nan.0 12.0)
PASS: numbers.test: Number-theoretic division: round/: mixed types: (+nan.0 -12.0)
PASS: numbers.test: Number-theoretic division: round/: mixed types: (25 10/7)
PASS: numbers.test: Number-theoretic division: round/: mixed types: (25 -10/7)
PASS: numbers.test: Number-theoretic division: round/: mixed types: (-25 10/7)
PASS: numbers.test: Number-theoretic division: round/: mixed types: (-25 -10/7)
PASS: numbers.test: Number-theoretic division: round/: mixed types: (15000000000 10/7)
PASS: numbers.test: Number-theoretic division: round/: mixed types: (15000000000 -10/7)
PASS: numbers.test: Number-theoretic division: round/: mixed types: (-15000000000 10/7)
PASS: numbers.test: Number-theoretic division: round/: mixed types: (-15000000000 -10/7)
PASS: numbers.test: Number-theoretic division: round/: mixed types: (130.0 10/7)
PASS: numbers.test: Number-theoretic division: round/: mixed types: (130.0 -10/7)
PASS: numbers.test: Number-theoretic division: round/: mixed types: (-130.0 10/7)
PASS: numbers.test: Number-theoretic division: round/: mixed types: (-130.0 -10/7)
PASS: numbers.test: Number-theoretic division: round/: mixed types: (15/7 10/7)
PASS: numbers.test: Number-theoretic division: round/: mixed types: (15/7 -10/7)
PASS: numbers.test: Number-theoretic division: round/: mixed types: (-15/7 10/7)
PASS: numbers.test: Number-theoretic division: round/: mixed types: (-15/7 -10/7)
PASS: numbers.test: Number-theoretic division: round/: mixed types: (0 10/7)
PASS: numbers.test: Number-theoretic division: round/: mixed types: (0 -10/7)
PASS: numbers.test: Number-theoretic division: round/: mixed types: (0.0 10/7)
PASS: numbers.test: Number-theoretic division: round/: mixed types: (0.0 -10/7)
PASS: numbers.test: Number-theoretic division: round/: mixed types: (-0.0 10/7)
PASS: numbers.test: Number-theoretic division: round/: mixed types: (-0.0 -10/7)
PASS: numbers.test: Number-theoretic division: round/: mixed types: (+inf.0 10/7)
PASS: numbers.test: Number-theoretic division: round/: mixed types: (+inf.0 -10/7)
PASS: numbers.test: Number-theoretic division: round/: mixed types: (-inf.0 10/7)
PASS: numbers.test: Number-theoretic division: round/: mixed types: (-inf.0 -10/7)
PASS: numbers.test: Number-theoretic division: round/: mixed types: (-inf.0 10/7)
PASS: numbers.test: Number-theoretic division: round/: mixed types: (-inf.0 -10/7)
PASS: numbers.test: Number-theoretic division: round/: mixed types: (+inf.0 10/7)
PASS: numbers.test: Number-theoretic division: round/: mixed types: (+inf.0 -10/7)
PASS: numbers.test: Number-theoretic division: round/: mixed types: (+nan.0 10/7)
PASS: numbers.test: Number-theoretic division: round/: mixed types: (+nan.0 -10/7)
PASS: numbers.test: Number-theoretic division: round/: mixed types: (+nan.0 10/7)
PASS: numbers.test: Number-theoretic division: round/: mixed types: (+nan.0 -10/7)
PASS: numbers.test: Number-theoretic division: round/: mixed types: (25 +inf.0)
PASS: numbers.test: Number-theoretic division: round/: mixed types: (25 -inf.0)
PASS: numbers.test: Number-theoretic division: round/: mixed types: (-25 +inf.0)
PASS: numbers.test: Number-theoretic division: round/: mixed types: (-25 -inf.0)
PASS: numbers.test: Number-theoretic division: round/: mixed types: (15000000000 +inf.0)
PASS: numbers.test: Number-theoretic division: round/: mixed types: (15000000000 -inf.0)
PASS: numbers.test: Number-theoretic division: round/: mixed types: (-15000000000 +inf.0)
PASS: numbers.test: Number-theoretic division: round/: mixed types: (-15000000000 -inf.0)
PASS: numbers.test: Number-theoretic division: round/: mixed types: (130.0 +inf.0)
PASS: numbers.test: Number-theoretic division: round/: mixed types: (130.0 -inf.0)
PASS: numbers.test: Number-theoretic division: round/: mixed types: (-130.0 +inf.0)
PASS: numbers.test: Number-theoretic division: round/: mixed types: (-130.0 -inf.0)
PASS: numbers.test: Number-theoretic division: round/: mixed types: (15/7 +inf.0)
PASS: numbers.test: Number-theoretic division: round/: mixed types: (15/7 -inf.0)
PASS: numbers.test: Number-theoretic division: round/: mixed types: (-15/7 +inf.0)
PASS: numbers.test: Number-theoretic division: round/: mixed types: (-15/7 -inf.0)
PASS: numbers.test: Number-theoretic division: round/: mixed types: (0 +inf.0)
PASS: numbers.test: Number-theoretic division: round/: mixed types: (0 -inf.0)
PASS: numbers.test: Number-theoretic division: round/: mixed types: (0.0 +inf.0)
PASS: numbers.test: Number-theoretic division: round/: mixed types: (0.0 -inf.0)
PASS: numbers.test: Number-theoretic division: round/: mixed types: (-0.0 +inf.0)
PASS: numbers.test: Number-theoretic division: round/: mixed types: (-0.0 -inf.0)
PASS: numbers.test: Number-theoretic division: round/: mixed types: (+inf.0 +inf.0)
PASS: numbers.test: Number-theoretic division: round/: mixed types: (+inf.0 -inf.0)
PASS: numbers.test: Number-theoretic division: round/: mixed types: (-inf.0 +inf.0)
PASS: numbers.test: Number-theoretic division: round/: mixed types: (-inf.0 -inf.0)
PASS: numbers.test: Number-theoretic division: round/: mixed types: (-inf.0 +inf.0)
PASS: numbers.test: Number-theoretic division: round/: mixed types: (-inf.0 -inf.0)
PASS: numbers.test: Number-theoretic division: round/: mixed types: (+inf.0 +inf.0)
PASS: numbers.test: Number-theoretic division: round/: mixed types: (+inf.0 -inf.0)
PASS: numbers.test: Number-theoretic division: round/: mixed types: (+nan.0 +inf.0)
PASS: numbers.test: Number-theoretic division: round/: mixed types: (+nan.0 -inf.0)
PASS: numbers.test: Number-theoretic division: round/: mixed types: (+nan.0 +inf.0)
PASS: numbers.test: Number-theoretic division: round/: mixed types: (+nan.0 -inf.0)
PASS: numbers.test: Number-theoretic division: round/: mixed types: (25 -inf.0)
PASS: numbers.test: Number-theoretic division: round/: mixed types: (25 +inf.0)
PASS: numbers.test: Number-theoretic division: round/: mixed types: (-25 -inf.0)
PASS: numbers.test: Number-theoretic division: round/: mixed types: (-25 +inf.0)
PASS: numbers.test: Number-theoretic division: round/: mixed types: (15000000000 -inf.0)
PASS: numbers.test: Number-theoretic division: round/: mixed types: (15000000000 +inf.0)
PASS: numbers.test: Number-theoretic division: round/: mixed types: (-15000000000 -inf.0)
PASS: numbers.test: Number-theoretic division: round/: mixed types: (-15000000000 +inf.0)
PASS: numbers.test: Number-theoretic division: round/: mixed types: (130.0 -inf.0)
PASS: numbers.test: Number-theoretic division: round/: mixed types: (130.0 +inf.0)
PASS: numbers.test: Number-theoretic division: round/: mixed types: (-130.0 -inf.0)
PASS: numbers.test: Number-theoretic division: round/: mixed types: (-130.0 +inf.0)
PASS: numbers.test: Number-theoretic division: round/: mixed types: (15/7 -inf.0)
PASS: numbers.test: Number-theoretic division: round/: mixed types: (15/7 +inf.0)
PASS: numbers.test: Number-theoretic division: round/: mixed types: (-15/7 -inf.0)
PASS: numbers.test: Number-theoretic division: round/: mixed types: (-15/7 +inf.0)
PASS: numbers.test: Number-theoretic division: round/: mixed types: (0 -inf.0)
PASS: numbers.test: Number-theoretic division: round/: mixed types: (0 +inf.0)
PASS: numbers.test: Number-theoretic division: round/: mixed types: (0.0 -inf.0)
PASS: numbers.test: Number-theoretic division: round/: mixed types: (0.0 +inf.0)
PASS: numbers.test: Number-theoretic division: round/: mixed types: (-0.0 -inf.0)
PASS: numbers.test: Number-theoretic division: round/: mixed types: (-0.0 +inf.0)
PASS: numbers.test: Number-theoretic division: round/: mixed types: (+inf.0 -inf.0)
PASS: numbers.test: Number-theoretic division: round/: mixed types: (+inf.0 +inf.0)
PASS: numbers.test: Number-theoretic division: round/: mixed types: (-inf.0 -inf.0)
PASS: numbers.test: Number-theoretic division: round/: mixed types: (-inf.0 +inf.0)
PASS: numbers.test: Number-theoretic division: round/: mixed types: (-inf.0 -inf.0)
PASS: numbers.test: Number-theoretic division: round/: mixed types: (-inf.0 +inf.0)
PASS: numbers.test: Number-theoretic division: round/: mixed types: (+inf.0 -inf.0)
PASS: numbers.test: Number-theoretic division: round/: mixed types: (+inf.0 +inf.0)
PASS: numbers.test: Number-theoretic division: round/: mixed types: (+nan.0 -inf.0)
PASS: numbers.test: Number-theoretic division: round/: mixed types: (+nan.0 +inf.0)
PASS: numbers.test: Number-theoretic division: round/: mixed types: (+nan.0 -inf.0)
PASS: numbers.test: Number-theoretic division: round/: mixed types: (+nan.0 +inf.0)
PASS: numbers.test: Number-theoretic division: round/: mixed types: (25 +nan.0)
PASS: numbers.test: Number-theoretic division: round/: mixed types: (25 +nan.0)
PASS: numbers.test: Number-theoretic division: round/: mixed types: (-25 +nan.0)
PASS: numbers.test: Number-theoretic division: round/: mixed types: (-25 +nan.0)
PASS: numbers.test: Number-theoretic division: round/: mixed types: (15000000000 +nan.0)
PASS: numbers.test: Number-theoretic division: round/: mixed types: (15000000000 +nan.0)
PASS: numbers.test: Number-theoretic division: round/: mixed types: (-15000000000 +nan.0)
PASS: numbers.test: Number-theoretic division: round/: mixed types: (-15000000000 +nan.0)
PASS: numbers.test: Number-theoretic division: round/: mixed types: (130.0 +nan.0)
PASS: numbers.test: Number-theoretic division: round/: mixed types: (130.0 +nan.0)
PASS: numbers.test: Number-theoretic division: round/: mixed types: (-130.0 +nan.0)
PASS: numbers.test: Number-theoretic division: round/: mixed types: (-130.0 +nan.0)
PASS: numbers.test: Number-theoretic division: round/: mixed types: (15/7 +nan.0)
PASS: numbers.test: Number-theoretic division: round/: mixed types: (15/7 +nan.0)
PASS: numbers.test: Number-theoretic division: round/: mixed types: (-15/7 +nan.0)
PASS: numbers.test: Number-theoretic division: round/: mixed types: (-15/7 +nan.0)
PASS: numbers.test: Number-theoretic division: round/: mixed types: (0 +nan.0)
PASS: numbers.test: Number-theoretic division: round/: mixed types: (0 +nan.0)
PASS: numbers.test: Number-theoretic division: round/: mixed types: (0.0 +nan.0)
PASS: numbers.test: Number-theoretic division: round/: mixed types: (0.0 +nan.0)
PASS: numbers.test: Number-theoretic division: round/: mixed types: (-0.0 +nan.0)
PASS: numbers.test: Number-theoretic division: round/: mixed types: (-0.0 +nan.0)
PASS: numbers.test: Number-theoretic division: round/: mixed types: (+inf.0 +nan.0)
PASS: numbers.test: Number-theoretic division: round/: mixed types: (+inf.0 +nan.0)
PASS: numbers.test: Number-theoretic division: round/: mixed types: (-inf.0 +nan.0)
PASS: numbers.test: Number-theoretic division: round/: mixed types: (-inf.0 +nan.0)
PASS: numbers.test: Number-theoretic division: round/: mixed types: (-inf.0 +nan.0)
PASS: numbers.test: Number-theoretic division: round/: mixed types: (-inf.0 +nan.0)
PASS: numbers.test: Number-theoretic division: round/: mixed types: (+inf.0 +nan.0)
PASS: numbers.test: Number-theoretic division: round/: mixed types: (+inf.0 +nan.0)
PASS: numbers.test: Number-theoretic division: round/: mixed types: (+nan.0 +nan.0)
PASS: numbers.test: Number-theoretic division: round/: mixed types: (+nan.0 +nan.0)
PASS: numbers.test: Number-theoretic division: round/: mixed types: (+nan.0 +nan.0)
PASS: numbers.test: Number-theoretic division: round/: mixed types: (+nan.0 +nan.0)
PASS: numbers.test: Number-theoretic division: round/: divide by zero: (15 0)
PASS: numbers.test: Number-theoretic division: round/: divide by zero: (15 0)
PASS: numbers.test: Number-theoretic division: round/: divide by zero: (15 0)
PASS: numbers.test: Number-theoretic division: round/: divide by zero: (15000000000 0)
PASS: numbers.test: Number-theoretic division: round/: divide by zero: (15000000000 0)
PASS: numbers.test: Number-theoretic division: round/: divide by zero: (15000000000 0)
PASS: numbers.test: Number-theoretic division: round/: divide by zero: (18.0 0)
PASS: numbers.test: Number-theoretic division: round/: divide by zero: (18.0 0)
PASS: numbers.test: Number-theoretic division: round/: divide by zero: (18.0 0)
PASS: numbers.test: Number-theoretic division: round/: divide by zero: (33/7 0)
PASS: numbers.test: Number-theoretic division: round/: divide by zero: (33/7 0)
PASS: numbers.test: Number-theoretic division: round/: divide by zero: (33/7 0)
PASS: numbers.test: Number-theoretic division: round/: divide by zero: (0 0)
PASS: numbers.test: Number-theoretic division: round/: divide by zero: (0 0)
PASS: numbers.test: Number-theoretic division: round/: divide by zero: (0 0)
PASS: numbers.test: Number-theoretic division: round/: divide by zero: (0.0 0)
PASS: numbers.test: Number-theoretic division: round/: divide by zero: (0.0 0)
PASS: numbers.test: Number-theoretic division: round/: divide by zero: (0.0 0)
PASS: numbers.test: Number-theoretic division: round/: divide by zero: (-0.0 0)
PASS: numbers.test: Number-theoretic division: round/: divide by zero: (-0.0 0)
PASS: numbers.test: Number-theoretic division: round/: divide by zero: (-0.0 0)
PASS: numbers.test: Number-theoretic division: round/: divide by zero: (+inf.0 0)
PASS: numbers.test: Number-theoretic division: round/: divide by zero: (+inf.0 0)
PASS: numbers.test: Number-theoretic division: round/: divide by zero: (+inf.0 0)
PASS: numbers.test: Number-theoretic division: round/: divide by zero: (-inf.0 0)
PASS: numbers.test: Number-theoretic division: round/: divide by zero: (-inf.0 0)
PASS: numbers.test: Number-theoretic division: round/: divide by zero: (-inf.0 0)
PASS: numbers.test: Number-theoretic division: round/: divide by zero: (+nan.0 0)
PASS: numbers.test: Number-theoretic division: round/: divide by zero: (+nan.0 0)
PASS: numbers.test: Number-theoretic division: round/: divide by zero: (+nan.0 0)
PASS: numbers.test: Number-theoretic division: round/: divide by zero: (15 0.0)
PASS: numbers.test: Number-theoretic division: round/: divide by zero: (15 0.0)
PASS: numbers.test: Number-theoretic division: round/: divide by zero: (15 0.0)
PASS: numbers.test: Number-theoretic division: round/: divide by zero: (15000000000 0.0)
PASS: numbers.test: Number-theoretic division: round/: divide by zero: (15000000000 0.0)
PASS: numbers.test: Number-theoretic division: round/: divide by zero: (15000000000 0.0)
PASS: numbers.test: Number-theoretic division: round/: divide by zero: (18.0 0.0)
PASS: numbers.test: Number-theoretic division: round/: divide by zero: (18.0 0.0)
PASS: numbers.test: Number-theoretic division: round/: divide by zero: (18.0 0.0)
PASS: numbers.test: Number-theoretic division: round/: divide by zero: (33/7 0.0)
PASS: numbers.test: Number-theoretic division: round/: divide by zero: (33/7 0.0)
PASS: numbers.test: Number-theoretic division: round/: divide by zero: (33/7 0.0)
PASS: numbers.test: Number-theoretic division: round/: divide by zero: (0 0.0)
PASS: numbers.test: Number-theoretic division: round/: divide by zero: (0 0.0)
PASS: numbers.test: Number-theoretic division: round/: divide by zero: (0 0.0)
PASS: numbers.test: Number-theoretic division: round/: divide by zero: (0.0 0.0)
PASS: numbers.test: Number-theoretic division: round/: divide by zero: (0.0 0.0)
PASS: numbers.test: Number-theoretic division: round/: divide by zero: (0.0 0.0)
PASS: numbers.test: Number-theoretic division: round/: divide by zero: (-0.0 0.0)
PASS: numbers.test: Number-theoretic division: round/: divide by zero: (-0.0 0.0)
PASS: numbers.test: Number-theoretic division: round/: divide by zero: (-0.0 0.0)
PASS: numbers.test: Number-theoretic division: round/: divide by zero: (+inf.0 0.0)
PASS: numbers.test: Number-theoretic division: round/: divide by zero: (+inf.0 0.0)
PASS: numbers.test: Number-theoretic division: round/: divide by zero: (+inf.0 0.0)
PASS: numbers.test: Number-theoretic division: round/: divide by zero: (-inf.0 0.0)
PASS: numbers.test: Number-theoretic division: round/: divide by zero: (-inf.0 0.0)
PASS: numbers.test: Number-theoretic division: round/: divide by zero: (-inf.0 0.0)
PASS: numbers.test: Number-theoretic division: round/: divide by zero: (+nan.0 0.0)
PASS: numbers.test: Number-theoretic division: round/: divide by zero: (+nan.0 0.0)
PASS: numbers.test: Number-theoretic division: round/: divide by zero: (+nan.0 0.0)
PASS: numbers.test: Number-theoretic division: round/: divide by zero: (15 -0.0)
PASS: numbers.test: Number-theoretic division: round/: divide by zero: (15 -0.0)
PASS: numbers.test: Number-theoretic division: round/: divide by zero: (15 -0.0)
PASS: numbers.test: Number-theoretic division: round/: divide by zero: (15000000000 -0.0)
PASS: numbers.test: Number-theoretic division: round/: divide by zero: (15000000000 -0.0)
PASS: numbers.test: Number-theoretic division: round/: divide by zero: (15000000000 -0.0)
PASS: numbers.test: Number-theoretic division: round/: divide by zero: (18.0 -0.0)
PASS: numbers.test: Number-theoretic division: round/: divide by zero: (18.0 -0.0)
PASS: numbers.test: Number-theoretic division: round/: divide by zero: (18.0 -0.0)
PASS: numbers.test: Number-theoretic division: round/: divide by zero: (33/7 -0.0)
PASS: numbers.test: Number-theoretic division: round/: divide by zero: (33/7 -0.0)
PASS: numbers.test: Number-theoretic division: round/: divide by zero: (33/7 -0.0)
PASS: numbers.test: Number-theoretic division: round/: divide by zero: (0 -0.0)
PASS: numbers.test: Number-theoretic division: round/: divide by zero: (0 -0.0)
PASS: numbers.test: Number-theoretic division: round/: divide by zero: (0 -0.0)
PASS: numbers.test: Number-theoretic division: round/: divide by zero: (0.0 -0.0)
PASS: numbers.test: Number-theoretic division: round/: divide by zero: (0.0 -0.0)
PASS: numbers.test: Number-theoretic division: round/: divide by zero: (0.0 -0.0)
PASS: numbers.test: Number-theoretic division: round/: divide by zero: (-0.0 -0.0)
PASS: numbers.test: Number-theoretic division: round/: divide by zero: (-0.0 -0.0)
PASS: numbers.test: Number-theoretic division: round/: divide by zero: (-0.0 -0.0)
PASS: numbers.test: Number-theoretic division: round/: divide by zero: (+inf.0 -0.0)
PASS: numbers.test: Number-theoretic division: round/: divide by zero: (+inf.0 -0.0)
PASS: numbers.test: Number-theoretic division: round/: divide by zero: (+inf.0 -0.0)
PASS: numbers.test: Number-theoretic division: round/: divide by zero: (-inf.0 -0.0)
PASS: numbers.test: Number-theoretic division: round/: divide by zero: (-inf.0 -0.0)
PASS: numbers.test: Number-theoretic division: round/: divide by zero: (-inf.0 -0.0)
PASS: numbers.test: Number-theoretic division: round/: divide by zero: (+nan.0 -0.0)
PASS: numbers.test: Number-theoretic division: round/: divide by zero: (+nan.0 -0.0)
PASS: numbers.test: Number-theoretic division: round/: divide by zero: (+nan.0 -0.0)
PASS: numbers.test: ash: documented?
PASS: numbers.test: ash: (0 -1000)
PASS: numbers.test: ash: (0 -60)
PASS: numbers.test: ash: (0 -33)
PASS: numbers.test: ash: (0 -32)
PASS: numbers.test: ash: (0 -31)
PASS: numbers.test: ash: (0 -30)
PASS: numbers.test: ash: (0 -29)
PASS: numbers.test: ash: (0 -3)
PASS: numbers.test: ash: (0 -2)
PASS: numbers.test: ash: (0 -1)
PASS: numbers.test: ash: (0 0)
PASS: numbers.test: ash: (0 1)
PASS: numbers.test: ash: (0 2)
PASS: numbers.test: ash: (0 3)
PASS: numbers.test: ash: (0 29)
PASS: numbers.test: ash: (0 30)
PASS: numbers.test: ash: (0 31)
PASS: numbers.test: ash: (0 32)
PASS: numbers.test: ash: (0 33)
PASS: numbers.test: ash: (0 60)
PASS: numbers.test: ash: (0 1000)
PASS: numbers.test: ash: (1 -1000)
PASS: numbers.test: ash: (1 -60)
PASS: numbers.test: ash: (1 -33)
PASS: numbers.test: ash: (1 -32)
PASS: numbers.test: ash: (1 -31)
PASS: numbers.test: ash: (1 -30)
PASS: numbers.test: ash: (1 -29)
PASS: numbers.test: ash: (1 -3)
PASS: numbers.test: ash: (1 -2)
PASS: numbers.test: ash: (1 -1)
PASS: numbers.test: ash: (1 0)
PASS: numbers.test: ash: (1 1)
PASS: numbers.test: ash: (1 2)
PASS: numbers.test: ash: (1 3)
PASS: numbers.test: ash: (1 29)
PASS: numbers.test: ash: (1 30)
PASS: numbers.test: ash: (1 31)
PASS: numbers.test: ash: (1 32)
PASS: numbers.test: ash: (1 33)
PASS: numbers.test: ash: (1 60)
PASS: numbers.test: ash: (1 1000)
PASS: numbers.test: ash: (3 -1000)
PASS: numbers.test: ash: (3 -60)
PASS: numbers.test: ash: (3 -33)
PASS: numbers.test: ash: (3 -32)
PASS: numbers.test: ash: (3 -31)
PASS: numbers.test: ash: (3 -30)
PASS: numbers.test: ash: (3 -29)
PASS: numbers.test: ash: (3 -3)
PASS: numbers.test: ash: (3 -2)
PASS: numbers.test: ash: (3 -1)
PASS: numbers.test: ash: (3 0)
PASS: numbers.test: ash: (3 1)
PASS: numbers.test: ash: (3 2)
PASS: numbers.test: ash: (3 3)
PASS: numbers.test: ash: (3 29)
PASS: numbers.test: ash: (3 30)
PASS: numbers.test: ash: (3 31)
PASS: numbers.test: ash: (3 32)
PASS: numbers.test: ash: (3 33)
PASS: numbers.test: ash: (3 60)
PASS: numbers.test: ash: (3 1000)
PASS: numbers.test: ash: (23 -1000)
PASS: numbers.test: ash: (23 -60)
PASS: numbers.test: ash: (23 -33)
PASS: numbers.test: ash: (23 -32)
PASS: numbers.test: ash: (23 -31)
PASS: numbers.test: ash: (23 -30)
PASS: numbers.test: ash: (23 -29)
PASS: numbers.test: ash: (23 -3)
PASS: numbers.test: ash: (23 -2)
PASS: numbers.test: ash: (23 -1)
PASS: numbers.test: ash: (23 0)
PASS: numbers.test: ash: (23 1)
PASS: numbers.test: ash: (23 2)
PASS: numbers.test: ash: (23 3)
PASS: numbers.test: ash: (23 29)
PASS: numbers.test: ash: (23 30)
PASS: numbers.test: ash: (23 31)
PASS: numbers.test: ash: (23 32)
PASS: numbers.test: ash: (23 33)
PASS: numbers.test: ash: (23 60)
PASS: numbers.test: ash: (23 1000)
PASS: numbers.test: ash: (-1 -1000)
PASS: numbers.test: ash: (-1 -60)
PASS: numbers.test: ash: (-1 -33)
PASS: numbers.test: ash: (-1 -32)
PASS: numbers.test: ash: (-1 -31)
PASS: numbers.test: ash: (-1 -30)
PASS: numbers.test: ash: (-1 -29)
PASS: numbers.test: ash: (-1 -3)
PASS: numbers.test: ash: (-1 -2)
PASS: numbers.test: ash: (-1 -1)
PASS: numbers.test: ash: (-1 0)
PASS: numbers.test: ash: (-1 1)
PASS: numbers.test: ash: (-1 2)
PASS: numbers.test: ash: (-1 3)
PASS: numbers.test: ash: (-1 29)
PASS: numbers.test: ash: (-1 30)
PASS: numbers.test: ash: (-1 31)
PASS: numbers.test: ash: (-1 32)
PASS: numbers.test: ash: (-1 33)
PASS: numbers.test: ash: (-1 60)
PASS: numbers.test: ash: (-1 1000)
PASS: numbers.test: ash: (-3 -1000)
PASS: numbers.test: ash: (-3 -60)
PASS: numbers.test: ash: (-3 -33)
PASS: numbers.test: ash: (-3 -32)
PASS: numbers.test: ash: (-3 -31)
PASS: numbers.test: ash: (-3 -30)
PASS: numbers.test: ash: (-3 -29)
PASS: numbers.test: ash: (-3 -3)
PASS: numbers.test: ash: (-3 -2)
PASS: numbers.test: ash: (-3 -1)
PASS: numbers.test: ash: (-3 0)
PASS: numbers.test: ash: (-3 1)
PASS: numbers.test: ash: (-3 2)
PASS: numbers.test: ash: (-3 3)
PASS: numbers.test: ash: (-3 29)
PASS: numbers.test: ash: (-3 30)
PASS: numbers.test: ash: (-3 31)
PASS: numbers.test: ash: (-3 32)
PASS: numbers.test: ash: (-3 33)
PASS: numbers.test: ash: (-3 60)
PASS: numbers.test: ash: (-3 1000)
PASS: numbers.test: ash: (-23 -1000)
PASS: numbers.test: ash: (-23 -60)
PASS: numbers.test: ash: (-23 -33)
PASS: numbers.test: ash: (-23 -32)
PASS: numbers.test: ash: (-23 -31)
PASS: numbers.test: ash: (-23 -30)
PASS: numbers.test: ash: (-23 -29)
PASS: numbers.test: ash: (-23 -3)
PASS: numbers.test: ash: (-23 -2)
PASS: numbers.test: ash: (-23 -1)
PASS: numbers.test: ash: (-23 0)
PASS: numbers.test: ash: (-23 1)
PASS: numbers.test: ash: (-23 2)
PASS: numbers.test: ash: (-23 3)
PASS: numbers.test: ash: (-23 29)
PASS: numbers.test: ash: (-23 30)
PASS: numbers.test: ash: (-23 31)
PASS: numbers.test: ash: (-23 32)
PASS: numbers.test: ash: (-23 33)
PASS: numbers.test: ash: (-23 60)
PASS: numbers.test: ash: (-23 1000)
PASS: numbers.test: ash: (536870911 -1000)
PASS: numbers.test: ash: (536870911 -60)
PASS: numbers.test: ash: (536870911 -33)
PASS: numbers.test: ash: (536870911 -32)
PASS: numbers.test: ash: (536870911 -31)
PASS: numbers.test: ash: (536870911 -30)
PASS: numbers.test: ash: (536870911 -29)
PASS: numbers.test: ash: (536870911 -3)
PASS: numbers.test: ash: (536870911 -2)
PASS: numbers.test: ash: (536870911 -1)
PASS: numbers.test: ash: (536870911 0)
PASS: numbers.test: ash: (536870911 1)
PASS: numbers.test: ash: (536870911 2)
PASS: numbers.test: ash: (536870911 3)
PASS: numbers.test: ash: (536870911 29)
PASS: numbers.test: ash: (536870911 30)
PASS: numbers.test: ash: (536870911 31)
PASS: numbers.test: ash: (536870911 32)
PASS: numbers.test: ash: (536870911 33)
PASS: numbers.test: ash: (536870911 60)
PASS: numbers.test: ash: (536870911 1000)
PASS: numbers.test: ash: (536870912 -1000)
PASS: numbers.test: ash: (536870912 -60)
PASS: numbers.test: ash: (536870912 -33)
PASS: numbers.test: ash: (536870912 -32)
PASS: numbers.test: ash: (536870912 -31)
PASS: numbers.test: ash: (536870912 -30)
PASS: numbers.test: ash: (536870912 -29)
PASS: numbers.test: ash: (536870912 -3)
PASS: numbers.test: ash: (536870912 -2)
PASS: numbers.test: ash: (536870912 -1)
PASS: numbers.test: ash: (536870912 0)
PASS: numbers.test: ash: (536870912 1)
PASS: numbers.test: ash: (536870912 2)
PASS: numbers.test: ash: (536870912 3)
PASS: numbers.test: ash: (536870912 29)
PASS: numbers.test: ash: (536870912 30)
PASS: numbers.test: ash: (536870912 31)
PASS: numbers.test: ash: (536870912 32)
PASS: numbers.test: ash: (536870912 33)
PASS: numbers.test: ash: (536870912 60)
PASS: numbers.test: ash: (536870912 1000)
PASS: numbers.test: ash: (536870910 -1000)
PASS: numbers.test: ash: (536870910 -60)
PASS: numbers.test: ash: (536870910 -33)
PASS: numbers.test: ash: (536870910 -32)
PASS: numbers.test: ash: (536870910 -31)
PASS: numbers.test: ash: (536870910 -30)
PASS: numbers.test: ash: (536870910 -29)
PASS: numbers.test: ash: (536870910 -3)
PASS: numbers.test: ash: (536870910 -2)
PASS: numbers.test: ash: (536870910 -1)
PASS: numbers.test: ash: (536870910 0)
PASS: numbers.test: ash: (536870910 1)
PASS: numbers.test: ash: (536870910 2)
PASS: numbers.test: ash: (536870910 3)
PASS: numbers.test: ash: (536870910 29)
PASS: numbers.test: ash: (536870910 30)
PASS: numbers.test: ash: (536870910 31)
PASS: numbers.test: ash: (536870910 32)
PASS: numbers.test: ash: (536870910 33)
PASS: numbers.test: ash: (536870910 60)
PASS: numbers.test: ash: (536870910 1000)
PASS: numbers.test: ash: (2147483644 -1000)
PASS: numbers.test: ash: (2147483644 -60)
PASS: numbers.test: ash: (2147483644 -33)
PASS: numbers.test: ash: (2147483644 -32)
PASS: numbers.test: ash: (2147483644 -31)
PASS: numbers.test: ash: (2147483644 -30)
PASS: numbers.test: ash: (2147483644 -29)
PASS: numbers.test: ash: (2147483644 -3)
PASS: numbers.test: ash: (2147483644 -2)
PASS: numbers.test: ash: (2147483644 -1)
PASS: numbers.test: ash: (2147483644 0)
PASS: numbers.test: ash: (2147483644 1)
PASS: numbers.test: ash: (2147483644 2)
PASS: numbers.test: ash: (2147483644 3)
PASS: numbers.test: ash: (2147483644 29)
PASS: numbers.test: ash: (2147483644 30)
PASS: numbers.test: ash: (2147483644 31)
PASS: numbers.test: ash: (2147483644 32)
PASS: numbers.test: ash: (2147483644 33)
PASS: numbers.test: ash: (2147483644 60)
PASS: numbers.test: ash: (2147483644 1000)
PASS: numbers.test: ash: (134217727 -1000)
PASS: numbers.test: ash: (134217727 -60)
PASS: numbers.test: ash: (134217727 -33)
PASS: numbers.test: ash: (134217727 -32)
PASS: numbers.test: ash: (134217727 -31)
PASS: numbers.test: ash: (134217727 -30)
PASS: numbers.test: ash: (134217727 -29)
PASS: numbers.test: ash: (134217727 -3)
PASS: numbers.test: ash: (134217727 -2)
PASS: numbers.test: ash: (134217727 -1)
PASS: numbers.test: ash: (134217727 0)
PASS: numbers.test: ash: (134217727 1)
PASS: numbers.test: ash: (134217727 2)
PASS: numbers.test: ash: (134217727 3)
PASS: numbers.test: ash: (134217727 29)
PASS: numbers.test: ash: (134217727 30)
PASS: numbers.test: ash: (134217727 31)
PASS: numbers.test: ash: (134217727 32)
PASS: numbers.test: ash: (134217727 33)
PASS: numbers.test: ash: (134217727 60)
PASS: numbers.test: ash: (134217727 1000)
PASS: numbers.test: ash: (-536870912 -1000)
PASS: numbers.test: ash: (-536870912 -60)
PASS: numbers.test: ash: (-536870912 -33)
PASS: numbers.test: ash: (-536870912 -32)
PASS: numbers.test: ash: (-536870912 -31)
PASS: numbers.test: ash: (-536870912 -30)
PASS: numbers.test: ash: (-536870912 -29)
PASS: numbers.test: ash: (-536870912 -3)
PASS: numbers.test: ash: (-536870912 -2)
PASS: numbers.test: ash: (-536870912 -1)
PASS: numbers.test: ash: (-536870912 0)
PASS: numbers.test: ash: (-536870912 1)
PASS: numbers.test: ash: (-536870912 2)
PASS: numbers.test: ash: (-536870912 3)
PASS: numbers.test: ash: (-536870912 29)
PASS: numbers.test: ash: (-536870912 30)
PASS: numbers.test: ash: (-536870912 31)
PASS: numbers.test: ash: (-536870912 32)
PASS: numbers.test: ash: (-536870912 33)
PASS: numbers.test: ash: (-536870912 60)
PASS: numbers.test: ash: (-536870912 1000)
PASS: numbers.test: ash: (-536870911 -1000)
PASS: numbers.test: ash: (-536870911 -60)
PASS: numbers.test: ash: (-536870911 -33)
PASS: numbers.test: ash: (-536870911 -32)
PASS: numbers.test: ash: (-536870911 -31)
PASS: numbers.test: ash: (-536870911 -30)
PASS: numbers.test: ash: (-536870911 -29)
PASS: numbers.test: ash: (-536870911 -3)
PASS: numbers.test: ash: (-536870911 -2)
PASS: numbers.test: ash: (-536870911 -1)
PASS: numbers.test: ash: (-536870911 0)
PASS: numbers.test: ash: (-536870911 1)
PASS: numbers.test: ash: (-536870911 2)
PASS: numbers.test: ash: (-536870911 3)
PASS: numbers.test: ash: (-536870911 29)
PASS: numbers.test: ash: (-536870911 30)
PASS: numbers.test: ash: (-536870911 31)
PASS: numbers.test: ash: (-536870911 32)
PASS: numbers.test: ash: (-536870911 33)
PASS: numbers.test: ash: (-536870911 60)
PASS: numbers.test: ash: (-536870911 1000)
PASS: numbers.test: ash: (-536870913 -1000)
PASS: numbers.test: ash: (-536870913 -60)
PASS: numbers.test: ash: (-536870913 -33)
PASS: numbers.test: ash: (-536870913 -32)
PASS: numbers.test: ash: (-536870913 -31)
PASS: numbers.test: ash: (-536870913 -30)
PASS: numbers.test: ash: (-536870913 -29)
PASS: numbers.test: ash: (-536870913 -3)
PASS: numbers.test: ash: (-536870913 -2)
PASS: numbers.test: ash: (-536870913 -1)
PASS: numbers.test: ash: (-536870913 0)
PASS: numbers.test: ash: (-536870913 1)
PASS: numbers.test: ash: (-536870913 2)
PASS: numbers.test: ash: (-536870913 3)
PASS: numbers.test: ash: (-536870913 29)
PASS: numbers.test: ash: (-536870913 30)
PASS: numbers.test: ash: (-536870913 31)
PASS: numbers.test: ash: (-536870913 32)
PASS: numbers.test: ash: (-536870913 33)
PASS: numbers.test: ash: (-536870913 60)
PASS: numbers.test: ash: (-536870913 1000)
PASS: numbers.test: ash: (-2147483648 -1000)
PASS: numbers.test: ash: (-2147483648 -60)
PASS: numbers.test: ash: (-2147483648 -33)
PASS: numbers.test: ash: (-2147483648 -32)
PASS: numbers.test: ash: (-2147483648 -31)
PASS: numbers.test: ash: (-2147483648 -30)
PASS: numbers.test: ash: (-2147483648 -29)
PASS: numbers.test: ash: (-2147483648 -3)
PASS: numbers.test: ash: (-2147483648 -2)
PASS: numbers.test: ash: (-2147483648 -1)
PASS: numbers.test: ash: (-2147483648 0)
PASS: numbers.test: ash: (-2147483648 1)
PASS: numbers.test: ash: (-2147483648 2)
PASS: numbers.test: ash: (-2147483648 3)
PASS: numbers.test: ash: (-2147483648 29)
PASS: numbers.test: ash: (-2147483648 30)
PASS: numbers.test: ash: (-2147483648 31)
PASS: numbers.test: ash: (-2147483648 32)
PASS: numbers.test: ash: (-2147483648 33)
PASS: numbers.test: ash: (-2147483648 60)
PASS: numbers.test: ash: (-2147483648 1000)
PASS: numbers.test: ash: (-134217728 -1000)
PASS: numbers.test: ash: (-134217728 -60)
PASS: numbers.test: ash: (-134217728 -33)
PASS: numbers.test: ash: (-134217728 -32)
PASS: numbers.test: ash: (-134217728 -31)
PASS: numbers.test: ash: (-134217728 -30)
PASS: numbers.test: ash: (-134217728 -29)
PASS: numbers.test: ash: (-134217728 -3)
PASS: numbers.test: ash: (-134217728 -2)
PASS: numbers.test: ash: (-134217728 -1)
PASS: numbers.test: ash: (-134217728 0)
PASS: numbers.test: ash: (-134217728 1)
PASS: numbers.test: ash: (-134217728 2)
PASS: numbers.test: ash: (-134217728 3)
PASS: numbers.test: ash: (-134217728 29)
PASS: numbers.test: ash: (-134217728 30)
PASS: numbers.test: ash: (-134217728 31)
PASS: numbers.test: ash: (-134217728 32)
PASS: numbers.test: ash: (-134217728 33)
PASS: numbers.test: ash: (-134217728 60)
PASS: numbers.test: ash: (-134217728 1000)
PASS: numbers.test: ash: (1 -2)
PASS: numbers.test: ash: (-1 -2)
PASS: numbers.test: ash: (3 -2)
PASS: numbers.test: ash: (-3 -2)
PASS: numbers.test: ash: (5 -2)
PASS: numbers.test: ash: (-5 -2)
PASS: numbers.test: ash: (7 -2)
PASS: numbers.test: ash: (-7 -2)
PASS: numbers.test: ash: (9 -2)
PASS: numbers.test: ash: (-9 -2)
PASS: numbers.test: ash: (11 -2)
PASS: numbers.test: ash: (-11 -2)
PASS: numbers.test: ash: (2 -3)
PASS: numbers.test: ash: (-2 -3)
PASS: numbers.test: ash: (6 -3)
PASS: numbers.test: ash: (-6 -3)
PASS: numbers.test: ash: (10 -3)
PASS: numbers.test: ash: (-10 -3)
PASS: numbers.test: ash: (14 -3)
PASS: numbers.test: ash: (-14 -3)
PASS: numbers.test: ash: (18 -3)
PASS: numbers.test: ash: (-18 -3)
PASS: numbers.test: ash: (22 -3)
PASS: numbers.test: ash: (-22 -3)
PASS: numbers.test: ash: (4 -4)
PASS: numbers.test: ash: (-4 -4)
PASS: numbers.test: ash: (12 -4)
PASS: numbers.test: ash: (-12 -4)
PASS: numbers.test: ash: (20 -4)
PASS: numbers.test: ash: (-20 -4)
PASS: numbers.test: ash: (28 -4)
PASS: numbers.test: ash: (-28 -4)
PASS: numbers.test: ash: (36 -4)
PASS: numbers.test: ash: (-36 -4)
PASS: numbers.test: ash: (44 -4)
PASS: numbers.test: ash: (-44 -4)
PASS: numbers.test: ash: (8 -5)
PASS: numbers.test: ash: (-8 -5)
PASS: numbers.test: ash: (24 -5)
PASS: numbers.test: ash: (-24 -5)
PASS: numbers.test: ash: (40 -5)
PASS: numbers.test: ash: (-40 -5)
PASS: numbers.test: ash: (56 -5)
PASS: numbers.test: ash: (-56 -5)
PASS: numbers.test: ash: (72 -5)
PASS: numbers.test: ash: (-72 -5)
PASS: numbers.test: ash: (88 -5)
PASS: numbers.test: ash: (-88 -5)
PASS: numbers.test: ash: (16 -6)
PASS: numbers.test: ash: (-16 -6)
PASS: numbers.test: ash: (48 -6)
PASS: numbers.test: ash: (-48 -6)
PASS: numbers.test: ash: (80 -6)
PASS: numbers.test: ash: (-80 -6)
PASS: numbers.test: ash: (112 -6)
PASS: numbers.test: ash: (-112 -6)
PASS: numbers.test: ash: (144 -6)
PASS: numbers.test: ash: (-144 -6)
PASS: numbers.test: ash: (176 -6)
PASS: numbers.test: ash: (-176 -6)
PASS: numbers.test: ash: (32 -7)
PASS: numbers.test: ash: (-32 -7)
PASS: numbers.test: ash: (96 -7)
PASS: numbers.test: ash: (-96 -7)
PASS: numbers.test: ash: (160 -7)
PASS: numbers.test: ash: (-160 -7)
PASS: numbers.test: ash: (224 -7)
PASS: numbers.test: ash: (-224 -7)
PASS: numbers.test: ash: (288 -7)
PASS: numbers.test: ash: (-288 -7)
PASS: numbers.test: ash: (352 -7)
PASS: numbers.test: ash: (-352 -7)
PASS: numbers.test: ash: (64 -8)
PASS: numbers.test: ash: (-64 -8)
PASS: numbers.test: ash: (192 -8)
PASS: numbers.test: ash: (-192 -8)
PASS: numbers.test: ash: (320 -8)
PASS: numbers.test: ash: (-320 -8)
PASS: numbers.test: ash: (448 -8)
PASS: numbers.test: ash: (-448 -8)
PASS: numbers.test: ash: (576 -8)
PASS: numbers.test: ash: (-576 -8)
PASS: numbers.test: ash: (704 -8)
PASS: numbers.test: ash: (-704 -8)
PASS: numbers.test: ash: (128 -9)
PASS: numbers.test: ash: (-128 -9)
PASS: numbers.test: ash: (384 -9)
PASS: numbers.test: ash: (-384 -9)
PASS: numbers.test: ash: (640 -9)
PASS: numbers.test: ash: (-640 -9)
PASS: numbers.test: ash: (896 -9)
PASS: numbers.test: ash: (-896 -9)
PASS: numbers.test: ash: (1152 -9)
PASS: numbers.test: ash: (-1152 -9)
PASS: numbers.test: ash: (1408 -9)
PASS: numbers.test: ash: (-1408 -9)
PASS: numbers.test: ash: (256 -10)
PASS: numbers.test: ash: (-256 -10)
PASS: numbers.test: ash: (768 -10)
PASS: numbers.test: ash: (-768 -10)
PASS: numbers.test: ash: (1280 -10)
PASS: numbers.test: ash: (-1280 -10)
PASS: numbers.test: ash: (1792 -10)
PASS: numbers.test: ash: (-1792 -10)
PASS: numbers.test: ash: (2304 -10)
PASS: numbers.test: ash: (-2304 -10)
PASS: numbers.test: ash: (2816 -10)
PASS: numbers.test: ash: (-2816 -10)
PASS: numbers.test: ash: (512 -11)
PASS: numbers.test: ash: (-512 -11)
PASS: numbers.test: ash: (1536 -11)
PASS: numbers.test: ash: (-1536 -11)
PASS: numbers.test: ash: (2560 -11)
PASS: numbers.test: ash: (-2560 -11)
PASS: numbers.test: ash: (3584 -11)
PASS: numbers.test: ash: (-3584 -11)
PASS: numbers.test: ash: (4608 -11)
PASS: numbers.test: ash: (-4608 -11)
PASS: numbers.test: ash: (5632 -11)
PASS: numbers.test: ash: (-5632 -11)
PASS: numbers.test: ash: (1024 -12)
PASS: numbers.test: ash: (-1024 -12)
PASS: numbers.test: ash: (3072 -12)
PASS: numbers.test: ash: (-3072 -12)
PASS: numbers.test: ash: (5120 -12)
PASS: numbers.test: ash: (-5120 -12)
PASS: numbers.test: ash: (7168 -12)
PASS: numbers.test: ash: (-7168 -12)
PASS: numbers.test: ash: (9216 -12)
PASS: numbers.test: ash: (-9216 -12)
PASS: numbers.test: ash: (11264 -12)
PASS: numbers.test: ash: (-11264 -12)
PASS: numbers.test: ash: (2048 -13)
PASS: numbers.test: ash: (-2048 -13)
PASS: numbers.test: ash: (6144 -13)
PASS: numbers.test: ash: (-6144 -13)
PASS: numbers.test: ash: (10240 -13)
PASS: numbers.test: ash: (-10240 -13)
PASS: numbers.test: ash: (14336 -13)
PASS: numbers.test: ash: (-14336 -13)
PASS: numbers.test: ash: (18432 -13)
PASS: numbers.test: ash: (-18432 -13)
PASS: numbers.test: ash: (22528 -13)
PASS: numbers.test: ash: (-22528 -13)
PASS: numbers.test: ash: (4096 -14)
PASS: numbers.test: ash: (-4096 -14)
PASS: numbers.test: ash: (12288 -14)
PASS: numbers.test: ash: (-12288 -14)
PASS: numbers.test: ash: (20480 -14)
PASS: numbers.test: ash: (-20480 -14)
PASS: numbers.test: ash: (28672 -14)
PASS: numbers.test: ash: (-28672 -14)
PASS: numbers.test: ash: (36864 -14)
PASS: numbers.test: ash: (-36864 -14)
PASS: numbers.test: ash: (45056 -14)
PASS: numbers.test: ash: (-45056 -14)
PASS: numbers.test: ash: (8192 -15)
PASS: numbers.test: ash: (-8192 -15)
PASS: numbers.test: ash: (24576 -15)
PASS: numbers.test: ash: (-24576 -15)
PASS: numbers.test: ash: (40960 -15)
PASS: numbers.test: ash: (-40960 -15)
PASS: numbers.test: ash: (57344 -15)
PASS: numbers.test: ash: (-57344 -15)
PASS: numbers.test: ash: (73728 -15)
PASS: numbers.test: ash: (-73728 -15)
PASS: numbers.test: ash: (90112 -15)
PASS: numbers.test: ash: (-90112 -15)
PASS: numbers.test: ash: (16384 -16)
PASS: numbers.test: ash: (-16384 -16)
PASS: numbers.test: ash: (49152 -16)
PASS: numbers.test: ash: (-49152 -16)
PASS: numbers.test: ash: (81920 -16)
PASS: numbers.test: ash: (-81920 -16)
PASS: numbers.test: ash: (114688 -16)
PASS: numbers.test: ash: (-114688 -16)
PASS: numbers.test: ash: (147456 -16)
PASS: numbers.test: ash: (-147456 -16)
PASS: numbers.test: ash: (180224 -16)
PASS: numbers.test: ash: (-180224 -16)
PASS: numbers.test: ash: (32768 -17)
PASS: numbers.test: ash: (-32768 -17)
PASS: numbers.test: ash: (98304 -17)
PASS: numbers.test: ash: (-98304 -17)
PASS: numbers.test: ash: (163840 -17)
PASS: numbers.test: ash: (-163840 -17)
PASS: numbers.test: ash: (229376 -17)
PASS: numbers.test: ash: (-229376 -17)
PASS: numbers.test: ash: (294912 -17)
PASS: numbers.test: ash: (-294912 -17)
PASS: numbers.test: ash: (360448 -17)
PASS: numbers.test: ash: (-360448 -17)
PASS: numbers.test: ash: (65536 -18)
PASS: numbers.test: ash: (-65536 -18)
PASS: numbers.test: ash: (196608 -18)
PASS: numbers.test: ash: (-196608 -18)
PASS: numbers.test: ash: (327680 -18)
PASS: numbers.test: ash: (-327680 -18)
PASS: numbers.test: ash: (458752 -18)
PASS: numbers.test: ash: (-458752 -18)
PASS: numbers.test: ash: (589824 -18)
PASS: numbers.test: ash: (-589824 -18)
PASS: numbers.test: ash: (720896 -18)
PASS: numbers.test: ash: (-720896 -18)
PASS: numbers.test: ash: (131072 -19)
PASS: numbers.test: ash: (-131072 -19)
PASS: numbers.test: ash: (393216 -19)
PASS: numbers.test: ash: (-393216 -19)
PASS: numbers.test: ash: (655360 -19)
PASS: numbers.test: ash: (-655360 -19)
PASS: numbers.test: ash: (917504 -19)
PASS: numbers.test: ash: (-917504 -19)
PASS: numbers.test: ash: (1179648 -19)
PASS: numbers.test: ash: (-1179648 -19)
PASS: numbers.test: ash: (1441792 -19)
PASS: numbers.test: ash: (-1441792 -19)
PASS: numbers.test: ash: (262144 -20)
PASS: numbers.test: ash: (-262144 -20)
PASS: numbers.test: ash: (786432 -20)
PASS: numbers.test: ash: (-786432 -20)
PASS: numbers.test: ash: (1310720 -20)
PASS: numbers.test: ash: (-1310720 -20)
PASS: numbers.test: ash: (1835008 -20)
PASS: numbers.test: ash: (-1835008 -20)
PASS: numbers.test: ash: (2359296 -20)
PASS: numbers.test: ash: (-2359296 -20)
PASS: numbers.test: ash: (2883584 -20)
PASS: numbers.test: ash: (-2883584 -20)
PASS: numbers.test: ash: (524288 -21)
PASS: numbers.test: ash: (-524288 -21)
PASS: numbers.test: ash: (1572864 -21)
PASS: numbers.test: ash: (-1572864 -21)
PASS: numbers.test: ash: (2621440 -21)
PASS: numbers.test: ash: (-2621440 -21)
PASS: numbers.test: ash: (3670016 -21)
PASS: numbers.test: ash: (-3670016 -21)
PASS: numbers.test: ash: (4718592 -21)
PASS: numbers.test: ash: (-4718592 -21)
PASS: numbers.test: ash: (5767168 -21)
PASS: numbers.test: ash: (-5767168 -21)
PASS: numbers.test: ash: (1048576 -22)
PASS: numbers.test: ash: (-1048576 -22)
PASS: numbers.test: ash: (3145728 -22)
PASS: numbers.test: ash: (-3145728 -22)
PASS: numbers.test: ash: (5242880 -22)
PASS: numbers.test: ash: (-5242880 -22)
PASS: numbers.test: ash: (7340032 -22)
PASS: numbers.test: ash: (-7340032 -22)
PASS: numbers.test: ash: (9437184 -22)
PASS: numbers.test: ash: (-9437184 -22)
PASS: numbers.test: ash: (11534336 -22)
PASS: numbers.test: ash: (-11534336 -22)
PASS: numbers.test: ash: (2097152 -23)
PASS: numbers.test: ash: (-2097152 -23)
PASS: numbers.test: ash: (6291456 -23)
PASS: numbers.test: ash: (-6291456 -23)
PASS: numbers.test: ash: (10485760 -23)
PASS: numbers.test: ash: (-10485760 -23)
PASS: numbers.test: ash: (14680064 -23)
PASS: numbers.test: ash: (-14680064 -23)
PASS: numbers.test: ash: (18874368 -23)
PASS: numbers.test: ash: (-18874368 -23)
PASS: numbers.test: ash: (23068672 -23)
PASS: numbers.test: ash: (-23068672 -23)
PASS: numbers.test: ash: (4194304 -24)
PASS: numbers.test: ash: (-4194304 -24)
PASS: numbers.test: ash: (12582912 -24)
PASS: numbers.test: ash: (-12582912 -24)
PASS: numbers.test: ash: (20971520 -24)
PASS: numbers.test: ash: (-20971520 -24)
PASS: numbers.test: ash: (29360128 -24)
PASS: numbers.test: ash: (-29360128 -24)
PASS: numbers.test: ash: (37748736 -24)
PASS: numbers.test: ash: (-37748736 -24)
PASS: numbers.test: ash: (46137344 -24)
PASS: numbers.test: ash: (-46137344 -24)
PASS: numbers.test: ash: (8388608 -25)
PASS: numbers.test: ash: (-8388608 -25)
PASS: numbers.test: ash: (25165824 -25)
PASS: numbers.test: ash: (-25165824 -25)
PASS: numbers.test: ash: (41943040 -25)
PASS: numbers.test: ash: (-41943040 -25)
PASS: numbers.test: ash: (58720256 -25)
PASS: numbers.test: ash: (-58720256 -25)
PASS: numbers.test: ash: (75497472 -25)
PASS: numbers.test: ash: (-75497472 -25)
PASS: numbers.test: ash: (92274688 -25)
PASS: numbers.test: ash: (-92274688 -25)
PASS: numbers.test: ash: (16777216 -26)
PASS: numbers.test: ash: (-16777216 -26)
PASS: numbers.test: ash: (50331648 -26)
PASS: numbers.test: ash: (-50331648 -26)
PASS: numbers.test: ash: (83886080 -26)
PASS: numbers.test: ash: (-83886080 -26)
PASS: numbers.test: ash: (117440512 -26)
PASS: numbers.test: ash: (-117440512 -26)
PASS: numbers.test: ash: (150994944 -26)
PASS: numbers.test: ash: (-150994944 -26)
PASS: numbers.test: ash: (184549376 -26)
PASS: numbers.test: ash: (-184549376 -26)
PASS: numbers.test: ash: (33554432 -27)
PASS: numbers.test: ash: (-33554432 -27)
PASS: numbers.test: ash: (100663296 -27)
PASS: numbers.test: ash: (-100663296 -27)
PASS: numbers.test: ash: (167772160 -27)
PASS: numbers.test: ash: (-167772160 -27)
PASS: numbers.test: ash: (234881024 -27)
PASS: numbers.test: ash: (-234881024 -27)
PASS: numbers.test: ash: (301989888 -27)
PASS: numbers.test: ash: (-301989888 -27)
PASS: numbers.test: ash: (369098752 -27)
PASS: numbers.test: ash: (-369098752 -27)
PASS: numbers.test: ash: (67108864 -28)
PASS: numbers.test: ash: (-67108864 -28)
PASS: numbers.test: ash: (201326592 -28)
PASS: numbers.test: ash: (-201326592 -28)
PASS: numbers.test: ash: (335544320 -28)
PASS: numbers.test: ash: (-335544320 -28)
PASS: numbers.test: ash: (469762048 -28)
PASS: numbers.test: ash: (-469762048 -28)
PASS: numbers.test: ash: (603979776 -28)
PASS: numbers.test: ash: (-603979776 -28)
PASS: numbers.test: ash: (738197504 -28)
PASS: numbers.test: ash: (-738197504 -28)
PASS: numbers.test: ash: (134217728 -29)
PASS: numbers.test: ash: (-134217728 -29)
PASS: numbers.test: ash: (402653184 -29)
PASS: numbers.test: ash: (-402653184 -29)
PASS: numbers.test: ash: (671088640 -29)
PASS: numbers.test: ash: (-671088640 -29)
PASS: numbers.test: ash: (939524096 -29)
PASS: numbers.test: ash: (-939524096 -29)
PASS: numbers.test: ash: (1207959552 -29)
PASS: numbers.test: ash: (-1207959552 -29)
PASS: numbers.test: ash: (1476395008 -29)
PASS: numbers.test: ash: (-1476395008 -29)
PASS: numbers.test: ash: (268435456 -30)
PASS: numbers.test: ash: (-268435456 -30)
PASS: numbers.test: ash: (805306368 -30)
PASS: numbers.test: ash: (-805306368 -30)
PASS: numbers.test: ash: (1342177280 -30)
PASS: numbers.test: ash: (-1342177280 -30)
PASS: numbers.test: ash: (1879048192 -30)
PASS: numbers.test: ash: (-1879048192 -30)
PASS: numbers.test: ash: (2415919104 -30)
PASS: numbers.test: ash: (-2415919104 -30)
PASS: numbers.test: ash: (2952790016 -30)
PASS: numbers.test: ash: (-2952790016 -30)
PASS: numbers.test: ash: (536870912 -31)
PASS: numbers.test: ash: (-536870912 -31)
PASS: numbers.test: ash: (1610612736 -31)
PASS: numbers.test: ash: (-1610612736 -31)
PASS: numbers.test: ash: (2684354560 -31)
PASS: numbers.test: ash: (-2684354560 -31)
PASS: numbers.test: ash: (3758096384 -31)
PASS: numbers.test: ash: (-3758096384 -31)
PASS: numbers.test: ash: (4831838208 -31)
PASS: numbers.test: ash: (-4831838208 -31)
PASS: numbers.test: ash: (5905580032 -31)
PASS: numbers.test: ash: (-5905580032 -31)
PASS: numbers.test: ash: (25 -3)
PASS: numbers.test: ash: (28 -3)
PASS: numbers.test: ash: (29 -3)
PASS: numbers.test: ash: (17 -3)
PASS: numbers.test: ash: (20 -3)
PASS: numbers.test: ash: (21 -3)
PASS: numbers.test: ash: (89 -3)
PASS: numbers.test: ash: (92 -3)
PASS: numbers.test: ash: (93 -3)
PASS: numbers.test: ash: (81 -3)
PASS: numbers.test: ash: (84 -3)
PASS: numbers.test: ash: (85 -3)
PASS: numbers.test: ash: (-39 -3)
PASS: numbers.test: ash: (-36 -3)
PASS: numbers.test: ash: (-35 -3)
PASS: numbers.test: ash: (-47 -3)
PASS: numbers.test: ash: (-44 -3)
PASS: numbers.test: ash: (-43 -3)
PASS: numbers.test: ash: (34359738329 -3)
PASS: numbers.test: ash: (34359738332 -3)
PASS: numbers.test: ash: (34359738333 -3)
PASS: numbers.test: ash: (34359738321 -3)
PASS: numbers.test: ash: (34359738324 -3)
PASS: numbers.test: ash: (34359738325 -3)
PASS: numbers.test: ash: (-34359738343 -3)
PASS: numbers.test: ash: (-34359738340 -3)
PASS: numbers.test: ash: (-34359738339 -3)
PASS: numbers.test: ash: (-34359738351 -3)
PASS: numbers.test: ash: (-34359738348 -3)
PASS: numbers.test: ash: (-34359738347 -3)
PASS: numbers.test: ash: Right shift of positive integer by (ash -1 63) bits
PASS: numbers.test: ash: Right shift of negative integer by (ash -1 63) bits
PASS: numbers.test: ash: Right shift of positive integer by (ash -1 31) bits
PASS: numbers.test: ash: Right shift of negative integer by (ash -1 31) bits
PASS: numbers.test: ash: Huge left shift of 0
PASS: numbers.test: ash: Huge right shift of 0
PASS: numbers.test: ash: Huge right shift of positive integer
PASS: numbers.test: ash: Huge right shift of negative integer
PASS: numbers.test: ash: Huge right shift of -1
PASS: numbers.test: ash: Huge left shift of non-zero => numerical overflow
PASS: numbers.test: round-ash: documented?
PASS: numbers.test: round-ash: (0 -1000)
PASS: numbers.test: round-ash: (0 -60)
PASS: numbers.test: round-ash: (0 -33)
PASS: numbers.test: round-ash: (0 -32)
PASS: numbers.test: round-ash: (0 -31)
PASS: numbers.test: round-ash: (0 -30)
PASS: numbers.test: round-ash: (0 -29)
PASS: numbers.test: round-ash: (0 -3)
PASS: numbers.test: round-ash: (0 -2)
PASS: numbers.test: round-ash: (0 -1)
PASS: numbers.test: round-ash: (0 0)
PASS: numbers.test: round-ash: (0 1)
PASS: numbers.test: round-ash: (0 2)
PASS: numbers.test: round-ash: (0 3)
PASS: numbers.test: round-ash: (0 29)
PASS: numbers.test: round-ash: (0 30)
PASS: numbers.test: round-ash: (0 31)
PASS: numbers.test: round-ash: (0 32)
PASS: numbers.test: round-ash: (0 33)
PASS: numbers.test: round-ash: (0 60)
PASS: numbers.test: round-ash: (0 1000)
PASS: numbers.test: round-ash: (1 -1000)
PASS: numbers.test: round-ash: (1 -60)
PASS: numbers.test: round-ash: (1 -33)
PASS: numbers.test: round-ash: (1 -32)
PASS: numbers.test: round-ash: (1 -31)
PASS: numbers.test: round-ash: (1 -30)
PASS: numbers.test: round-ash: (1 -29)
PASS: numbers.test: round-ash: (1 -3)
PASS: numbers.test: round-ash: (1 -2)
PASS: numbers.test: round-ash: (1 -1)
PASS: numbers.test: round-ash: (1 0)
PASS: numbers.test: round-ash: (1 1)
PASS: numbers.test: round-ash: (1 2)
PASS: numbers.test: round-ash: (1 3)
PASS: numbers.test: round-ash: (1 29)
PASS: numbers.test: round-ash: (1 30)
PASS: numbers.test: round-ash: (1 31)
PASS: numbers.test: round-ash: (1 32)
PASS: numbers.test: round-ash: (1 33)
PASS: numbers.test: round-ash: (1 60)
PASS: numbers.test: round-ash: (1 1000)
PASS: numbers.test: round-ash: (3 -1000)
PASS: numbers.test: round-ash: (3 -60)
PASS: numbers.test: round-ash: (3 -33)
PASS: numbers.test: round-ash: (3 -32)
PASS: numbers.test: round-ash: (3 -31)
PASS: numbers.test: round-ash: (3 -30)
PASS: numbers.test: round-ash: (3 -29)
PASS: numbers.test: round-ash: (3 -3)
PASS: numbers.test: round-ash: (3 -2)
PASS: numbers.test: round-ash: (3 -1)
PASS: numbers.test: round-ash: (3 0)
PASS: numbers.test: round-ash: (3 1)
PASS: numbers.test: round-ash: (3 2)
PASS: numbers.test: round-ash: (3 3)
PASS: numbers.test: round-ash: (3 29)
PASS: numbers.test: round-ash: (3 30)
PASS: numbers.test: round-ash: (3 31)
PASS: numbers.test: round-ash: (3 32)
PASS: numbers.test: round-ash: (3 33)
PASS: numbers.test: round-ash: (3 60)
PASS: numbers.test: round-ash: (3 1000)
PASS: numbers.test: round-ash: (23 -1000)
PASS: numbers.test: round-ash: (23 -60)
PASS: numbers.test: round-ash: (23 -33)
PASS: numbers.test: round-ash: (23 -32)
PASS: numbers.test: round-ash: (23 -31)
PASS: numbers.test: round-ash: (23 -30)
PASS: numbers.test: round-ash: (23 -29)
PASS: numbers.test: round-ash: (23 -3)
PASS: numbers.test: round-ash: (23 -2)
PASS: numbers.test: round-ash: (23 -1)
PASS: numbers.test: round-ash: (23 0)
PASS: numbers.test: round-ash: (23 1)
PASS: numbers.test: round-ash: (23 2)
PASS: numbers.test: round-ash: (23 3)
PASS: numbers.test: round-ash: (23 29)
PASS: numbers.test: round-ash: (23 30)
PASS: numbers.test: round-ash: (23 31)
PASS: numbers.test: round-ash: (23 32)
PASS: numbers.test: round-ash: (23 33)
PASS: numbers.test: round-ash: (23 60)
PASS: numbers.test: round-ash: (23 1000)
PASS: numbers.test: round-ash: (-1 -1000)
PASS: numbers.test: round-ash: (-1 -60)
PASS: numbers.test: round-ash: (-1 -33)
PASS: numbers.test: round-ash: (-1 -32)
PASS: numbers.test: round-ash: (-1 -31)
PASS: numbers.test: round-ash: (-1 -30)
PASS: numbers.test: round-ash: (-1 -29)
PASS: numbers.test: round-ash: (-1 -3)
PASS: numbers.test: round-ash: (-1 -2)
PASS: numbers.test: round-ash: (-1 -1)
PASS: numbers.test: round-ash: (-1 0)
PASS: numbers.test: round-ash: (-1 1)
PASS: numbers.test: round-ash: (-1 2)
PASS: numbers.test: round-ash: (-1 3)
PASS: numbers.test: round-ash: (-1 29)
PASS: numbers.test: round-ash: (-1 30)
PASS: numbers.test: round-ash: (-1 31)
PASS: numbers.test: round-ash: (-1 32)
PASS: numbers.test: round-ash: (-1 33)
PASS: numbers.test: round-ash: (-1 60)
PASS: numbers.test: round-ash: (-1 1000)
PASS: numbers.test: round-ash: (-3 -1000)
PASS: numbers.test: round-ash: (-3 -60)
PASS: numbers.test: round-ash: (-3 -33)
PASS: numbers.test: round-ash: (-3 -32)
PASS: numbers.test: round-ash: (-3 -31)
PASS: numbers.test: round-ash: (-3 -30)
PASS: numbers.test: round-ash: (-3 -29)
PASS: numbers.test: round-ash: (-3 -3)
PASS: numbers.test: round-ash: (-3 -2)
PASS: numbers.test: round-ash: (-3 -1)
PASS: numbers.test: round-ash: (-3 0)
PASS: numbers.test: round-ash: (-3 1)
PASS: numbers.test: round-ash: (-3 2)
PASS: numbers.test: round-ash: (-3 3)
PASS: numbers.test: round-ash: (-3 29)
PASS: numbers.test: round-ash: (-3 30)
PASS: numbers.test: round-ash: (-3 31)
PASS: numbers.test: round-ash: (-3 32)
PASS: numbers.test: round-ash: (-3 33)
PASS: numbers.test: round-ash: (-3 60)
PASS: numbers.test: round-ash: (-3 1000)
PASS: numbers.test: round-ash: (-23 -1000)
PASS: numbers.test: round-ash: (-23 -60)
PASS: numbers.test: round-ash: (-23 -33)
PASS: numbers.test: round-ash: (-23 -32)
PASS: numbers.test: round-ash: (-23 -31)
PASS: numbers.test: round-ash: (-23 -30)
PASS: numbers.test: round-ash: (-23 -29)
PASS: numbers.test: round-ash: (-23 -3)
PASS: numbers.test: round-ash: (-23 -2)
PASS: numbers.test: round-ash: (-23 -1)
PASS: numbers.test: round-ash: (-23 0)
PASS: numbers.test: round-ash: (-23 1)
PASS: numbers.test: round-ash: (-23 2)
PASS: numbers.test: round-ash: (-23 3)
PASS: numbers.test: round-ash: (-23 29)
PASS: numbers.test: round-ash: (-23 30)
PASS: numbers.test: round-ash: (-23 31)
PASS: numbers.test: round-ash: (-23 32)
PASS: numbers.test: round-ash: (-23 33)
PASS: numbers.test: round-ash: (-23 60)
PASS: numbers.test: round-ash: (-23 1000)
PASS: numbers.test: round-ash: (536870911 -1000)
PASS: numbers.test: round-ash: (536870911 -60)
PASS: numbers.test: round-ash: (536870911 -33)
PASS: numbers.test: round-ash: (536870911 -32)
PASS: numbers.test: round-ash: (536870911 -31)
PASS: numbers.test: round-ash: (536870911 -30)
PASS: numbers.test: round-ash: (536870911 -29)
PASS: numbers.test: round-ash: (536870911 -3)
PASS: numbers.test: round-ash: (536870911 -2)
PASS: numbers.test: round-ash: (536870911 -1)
PASS: numbers.test: round-ash: (536870911 0)
PASS: numbers.test: round-ash: (536870911 1)
PASS: numbers.test: round-ash: (536870911 2)
PASS: numbers.test: round-ash: (536870911 3)
PASS: numbers.test: round-ash: (536870911 29)
PASS: numbers.test: round-ash: (536870911 30)
PASS: numbers.test: round-ash: (536870911 31)
PASS: numbers.test: round-ash: (536870911 32)
PASS: numbers.test: round-ash: (536870911 33)
PASS: numbers.test: round-ash: (536870911 60)
PASS: numbers.test: round-ash: (536870911 1000)
PASS: numbers.test: round-ash: (536870912 -1000)
PASS: numbers.test: round-ash: (536870912 -60)
PASS: numbers.test: round-ash: (536870912 -33)
PASS: numbers.test: round-ash: (536870912 -32)
PASS: numbers.test: round-ash: (536870912 -31)
PASS: numbers.test: round-ash: (536870912 -30)
PASS: numbers.test: round-ash: (536870912 -29)
PASS: numbers.test: round-ash: (536870912 -3)
PASS: numbers.test: round-ash: (536870912 -2)
PASS: numbers.test: round-ash: (536870912 -1)
PASS: numbers.test: round-ash: (536870912 0)
PASS: numbers.test: round-ash: (536870912 1)
PASS: numbers.test: round-ash: (536870912 2)
PASS: numbers.test: round-ash: (536870912 3)
PASS: numbers.test: round-ash: (536870912 29)
PASS: numbers.test: round-ash: (536870912 30)
PASS: numbers.test: round-ash: (536870912 31)
PASS: numbers.test: round-ash: (536870912 32)
PASS: numbers.test: round-ash: (536870912 33)
PASS: numbers.test: round-ash: (536870912 60)
PASS: numbers.test: round-ash: (536870912 1000)
PASS: numbers.test: round-ash: (536870910 -1000)
PASS: numbers.test: round-ash: (536870910 -60)
PASS: numbers.test: round-ash: (536870910 -33)
PASS: numbers.test: round-ash: (536870910 -32)
PASS: numbers.test: round-ash: (536870910 -31)
PASS: numbers.test: round-ash: (536870910 -30)
PASS: numbers.test: round-ash: (536870910 -29)
PASS: numbers.test: round-ash: (536870910 -3)
PASS: numbers.test: round-ash: (536870910 -2)
PASS: numbers.test: round-ash: (536870910 -1)
PASS: numbers.test: round-ash: (536870910 0)
PASS: numbers.test: round-ash: (536870910 1)
PASS: numbers.test: round-ash: (536870910 2)
PASS: numbers.test: round-ash: (536870910 3)
PASS: numbers.test: round-ash: (536870910 29)
PASS: numbers.test: round-ash: (536870910 30)
PASS: numbers.test: round-ash: (536870910 31)
PASS: numbers.test: round-ash: (536870910 32)
PASS: numbers.test: round-ash: (536870910 33)
PASS: numbers.test: round-ash: (536870910 60)
PASS: numbers.test: round-ash: (536870910 1000)
PASS: numbers.test: round-ash: (2147483644 -1000)
PASS: numbers.test: round-ash: (2147483644 -60)
PASS: numbers.test: round-ash: (2147483644 -33)
PASS: numbers.test: round-ash: (2147483644 -32)
PASS: numbers.test: round-ash: (2147483644 -31)
PASS: numbers.test: round-ash: (2147483644 -30)
PASS: numbers.test: round-ash: (2147483644 -29)
PASS: numbers.test: round-ash: (2147483644 -3)
PASS: numbers.test: round-ash: (2147483644 -2)
PASS: numbers.test: round-ash: (2147483644 -1)
PASS: numbers.test: round-ash: (2147483644 0)
PASS: numbers.test: round-ash: (2147483644 1)
PASS: numbers.test: round-ash: (2147483644 2)
PASS: numbers.test: round-ash: (2147483644 3)
PASS: numbers.test: round-ash: (2147483644 29)
PASS: numbers.test: round-ash: (2147483644 30)
PASS: numbers.test: round-ash: (2147483644 31)
PASS: numbers.test: round-ash: (2147483644 32)
PASS: numbers.test: round-ash: (2147483644 33)
PASS: numbers.test: round-ash: (2147483644 60)
PASS: numbers.test: round-ash: (2147483644 1000)
PASS: numbers.test: round-ash: (134217727 -1000)
PASS: numbers.test: round-ash: (134217727 -60)
PASS: numbers.test: round-ash: (134217727 -33)
PASS: numbers.test: round-ash: (134217727 -32)
PASS: numbers.test: round-ash: (134217727 -31)
PASS: numbers.test: round-ash: (134217727 -30)
PASS: numbers.test: round-ash: (134217727 -29)
PASS: numbers.test: round-ash: (134217727 -3)
PASS: numbers.test: round-ash: (134217727 -2)
PASS: numbers.test: round-ash: (134217727 -1)
PASS: numbers.test: round-ash: (134217727 0)
PASS: numbers.test: round-ash: (134217727 1)
PASS: numbers.test: round-ash: (134217727 2)
PASS: numbers.test: round-ash: (134217727 3)
PASS: numbers.test: round-ash: (134217727 29)
PASS: numbers.test: round-ash: (134217727 30)
PASS: numbers.test: round-ash: (134217727 31)
PASS: numbers.test: round-ash: (134217727 32)
PASS: numbers.test: round-ash: (134217727 33)
PASS: numbers.test: round-ash: (134217727 60)
PASS: numbers.test: round-ash: (134217727 1000)
PASS: numbers.test: round-ash: (-536870912 -1000)
PASS: numbers.test: round-ash: (-536870912 -60)
PASS: numbers.test: round-ash: (-536870912 -33)
PASS: numbers.test: round-ash: (-536870912 -32)
PASS: numbers.test: round-ash: (-536870912 -31)
PASS: numbers.test: round-ash: (-536870912 -30)
PASS: numbers.test: round-ash: (-536870912 -29)
PASS: numbers.test: round-ash: (-536870912 -3)
PASS: numbers.test: round-ash: (-536870912 -2)
PASS: numbers.test: round-ash: (-536870912 -1)
PASS: numbers.test: round-ash: (-536870912 0)
PASS: numbers.test: round-ash: (-536870912 1)
PASS: numbers.test: round-ash: (-536870912 2)
PASS: numbers.test: round-ash: (-536870912 3)
PASS: numbers.test: round-ash: (-536870912 29)
PASS: numbers.test: round-ash: (-536870912 30)
PASS: numbers.test: round-ash: (-536870912 31)
PASS: numbers.test: round-ash: (-536870912 32)
PASS: numbers.test: round-ash: (-536870912 33)
PASS: numbers.test: round-ash: (-536870912 60)
PASS: numbers.test: round-ash: (-536870912 1000)
PASS: numbers.test: round-ash: (-536870911 -1000)
PASS: numbers.test: round-ash: (-536870911 -60)
PASS: numbers.test: round-ash: (-536870911 -33)
PASS: numbers.test: round-ash: (-536870911 -32)
PASS: numbers.test: round-ash: (-536870911 -31)
PASS: numbers.test: round-ash: (-536870911 -30)
PASS: numbers.test: round-ash: (-536870911 -29)
PASS: numbers.test: round-ash: (-536870911 -3)
PASS: numbers.test: round-ash: (-536870911 -2)
PASS: numbers.test: round-ash: (-536870911 -1)
PASS: numbers.test: round-ash: (-536870911 0)
PASS: numbers.test: round-ash: (-536870911 1)
PASS: numbers.test: round-ash: (-536870911 2)
PASS: numbers.test: round-ash: (-536870911 3)
PASS: numbers.test: round-ash: (-536870911 29)
PASS: numbers.test: round-ash: (-536870911 30)
PASS: numbers.test: round-ash: (-536870911 31)
PASS: numbers.test: round-ash: (-536870911 32)
PASS: numbers.test: round-ash: (-536870911 33)
PASS: numbers.test: round-ash: (-536870911 60)
PASS: numbers.test: round-ash: (-536870911 1000)
PASS: numbers.test: round-ash: (-536870913 -1000)
PASS: numbers.test: round-ash: (-536870913 -60)
PASS: numbers.test: round-ash: (-536870913 -33)
PASS: numbers.test: round-ash: (-536870913 -32)
PASS: numbers.test: round-ash: (-536870913 -31)
PASS: numbers.test: round-ash: (-536870913 -30)
PASS: numbers.test: round-ash: (-536870913 -29)
PASS: numbers.test: round-ash: (-536870913 -3)
PASS: numbers.test: round-ash: (-536870913 -2)
PASS: numbers.test: round-ash: (-536870913 -1)
PASS: numbers.test: round-ash: (-536870913 0)
PASS: numbers.test: round-ash: (-536870913 1)
PASS: numbers.test: round-ash: (-536870913 2)
PASS: numbers.test: round-ash: (-536870913 3)
PASS: numbers.test: round-ash: (-536870913 29)
PASS: numbers.test: round-ash: (-536870913 30)
PASS: numbers.test: round-ash: (-536870913 31)
PASS: numbers.test: round-ash: (-536870913 32)
PASS: numbers.test: round-ash: (-536870913 33)
PASS: numbers.test: round-ash: (-536870913 60)
PASS: numbers.test: round-ash: (-536870913 1000)
PASS: numbers.test: round-ash: (-2147483648 -1000)
PASS: numbers.test: round-ash: (-2147483648 -60)
PASS: numbers.test: round-ash: (-2147483648 -33)
PASS: numbers.test: round-ash: (-2147483648 -32)
PASS: numbers.test: round-ash: (-2147483648 -31)
PASS: numbers.test: round-ash: (-2147483648 -30)
PASS: numbers.test: round-ash: (-2147483648 -29)
PASS: numbers.test: round-ash: (-2147483648 -3)
PASS: numbers.test: round-ash: (-2147483648 -2)
PASS: numbers.test: round-ash: (-2147483648 -1)
PASS: numbers.test: round-ash: (-2147483648 0)
PASS: numbers.test: round-ash: (-2147483648 1)
PASS: numbers.test: round-ash: (-2147483648 2)
PASS: numbers.test: round-ash: (-2147483648 3)
PASS: numbers.test: round-ash: (-2147483648 29)
PASS: numbers.test: round-ash: (-2147483648 30)
PASS: numbers.test: round-ash: (-2147483648 31)
PASS: numbers.test: round-ash: (-2147483648 32)
PASS: numbers.test: round-ash: (-2147483648 33)
PASS: numbers.test: round-ash: (-2147483648 60)
PASS: numbers.test: round-ash: (-2147483648 1000)
PASS: numbers.test: round-ash: (-134217728 -1000)
PASS: numbers.test: round-ash: (-134217728 -60)
PASS: numbers.test: round-ash: (-134217728 -33)
PASS: numbers.test: round-ash: (-134217728 -32)
PASS: numbers.test: round-ash: (-134217728 -31)
PASS: numbers.test: round-ash: (-134217728 -30)
PASS: numbers.test: round-ash: (-134217728 -29)
PASS: numbers.test: round-ash: (-134217728 -3)
PASS: numbers.test: round-ash: (-134217728 -2)
PASS: numbers.test: round-ash: (-134217728 -1)
PASS: numbers.test: round-ash: (-134217728 0)
PASS: numbers.test: round-ash: (-134217728 1)
PASS: numbers.test: round-ash: (-134217728 2)
PASS: numbers.test: round-ash: (-134217728 3)
PASS: numbers.test: round-ash: (-134217728 29)
PASS: numbers.test: round-ash: (-134217728 30)
PASS: numbers.test: round-ash: (-134217728 31)
PASS: numbers.test: round-ash: (-134217728 32)
PASS: numbers.test: round-ash: (-134217728 33)
PASS: numbers.test: round-ash: (-134217728 60)
PASS: numbers.test: round-ash: (-134217728 1000)
PASS: numbers.test: round-ash: (1 -2)
PASS: numbers.test: round-ash: (-1 -2)
PASS: numbers.test: round-ash: (3 -2)
PASS: numbers.test: round-ash: (-3 -2)
PASS: numbers.test: round-ash: (5 -2)
PASS: numbers.test: round-ash: (-5 -2)
PASS: numbers.test: round-ash: (7 -2)
PASS: numbers.test: round-ash: (-7 -2)
PASS: numbers.test: round-ash: (9 -2)
PASS: numbers.test: round-ash: (-9 -2)
PASS: numbers.test: round-ash: (11 -2)
PASS: numbers.test: round-ash: (-11 -2)
PASS: numbers.test: round-ash: (2 -3)
PASS: numbers.test: round-ash: (-2 -3)
PASS: numbers.test: round-ash: (6 -3)
PASS: numbers.test: round-ash: (-6 -3)
PASS: numbers.test: round-ash: (10 -3)
PASS: numbers.test: round-ash: (-10 -3)
PASS: numbers.test: round-ash: (14 -3)
PASS: numbers.test: round-ash: (-14 -3)
PASS: numbers.test: round-ash: (18 -3)
PASS: numbers.test: round-ash: (-18 -3)
PASS: numbers.test: round-ash: (22 -3)
PASS: numbers.test: round-ash: (-22 -3)
PASS: numbers.test: round-ash: (4 -4)
PASS: numbers.test: round-ash: (-4 -4)
PASS: numbers.test: round-ash: (12 -4)
PASS: numbers.test: round-ash: (-12 -4)
PASS: numbers.test: round-ash: (20 -4)
PASS: numbers.test: round-ash: (-20 -4)
PASS: numbers.test: round-ash: (28 -4)
PASS: numbers.test: round-ash: (-28 -4)
PASS: numbers.test: round-ash: (36 -4)
PASS: numbers.test: round-ash: (-36 -4)
PASS: numbers.test: round-ash: (44 -4)
PASS: numbers.test: round-ash: (-44 -4)
PASS: numbers.test: round-ash: (8 -5)
PASS: numbers.test: round-ash: (-8 -5)
PASS: numbers.test: round-ash: (24 -5)
PASS: numbers.test: round-ash: (-24 -5)
PASS: numbers.test: round-ash: (40 -5)
PASS: numbers.test: round-ash: (-40 -5)
PASS: numbers.test: round-ash: (56 -5)
PASS: numbers.test: round-ash: (-56 -5)
PASS: numbers.test: round-ash: (72 -5)
PASS: numbers.test: round-ash: (-72 -5)
PASS: numbers.test: round-ash: (88 -5)
PASS: numbers.test: round-ash: (-88 -5)
PASS: numbers.test: round-ash: (16 -6)
PASS: numbers.test: round-ash: (-16 -6)
PASS: numbers.test: round-ash: (48 -6)
PASS: numbers.test: round-ash: (-48 -6)
PASS: numbers.test: round-ash: (80 -6)
PASS: numbers.test: round-ash: (-80 -6)
PASS: numbers.test: round-ash: (112 -6)
PASS: numbers.test: round-ash: (-112 -6)
PASS: numbers.test: round-ash: (144 -6)
PASS: numbers.test: round-ash: (-144 -6)
PASS: numbers.test: round-ash: (176 -6)
PASS: numbers.test: round-ash: (-176 -6)
PASS: numbers.test: round-ash: (32 -7)
PASS: numbers.test: round-ash: (-32 -7)
PASS: numbers.test: round-ash: (96 -7)
PASS: numbers.test: round-ash: (-96 -7)
PASS: numbers.test: round-ash: (160 -7)
PASS: numbers.test: round-ash: (-160 -7)
PASS: numbers.test: round-ash: (224 -7)
PASS: numbers.test: round-ash: (-224 -7)
PASS: numbers.test: round-ash: (288 -7)
PASS: numbers.test: round-ash: (-288 -7)
PASS: numbers.test: round-ash: (352 -7)
PASS: numbers.test: round-ash: (-352 -7)
PASS: numbers.test: round-ash: (64 -8)
PASS: numbers.test: round-ash: (-64 -8)
PASS: numbers.test: round-ash: (192 -8)
PASS: numbers.test: round-ash: (-192 -8)
PASS: numbers.test: round-ash: (320 -8)
PASS: numbers.test: round-ash: (-320 -8)
PASS: numbers.test: round-ash: (448 -8)
PASS: numbers.test: round-ash: (-448 -8)
PASS: numbers.test: round-ash: (576 -8)
PASS: numbers.test: round-ash: (-576 -8)
PASS: numbers.test: round-ash: (704 -8)
PASS: numbers.test: round-ash: (-704 -8)
PASS: numbers.test: round-ash: (128 -9)
PASS: numbers.test: round-ash: (-128 -9)
PASS: numbers.test: round-ash: (384 -9)
PASS: numbers.test: round-ash: (-384 -9)
PASS: numbers.test: round-ash: (640 -9)
PASS: numbers.test: round-ash: (-640 -9)
PASS: numbers.test: round-ash: (896 -9)
PASS: numbers.test: round-ash: (-896 -9)
PASS: numbers.test: round-ash: (1152 -9)
PASS: numbers.test: round-ash: (-1152 -9)
PASS: numbers.test: round-ash: (1408 -9)
PASS: numbers.test: round-ash: (-1408 -9)
PASS: numbers.test: round-ash: (256 -10)
PASS: numbers.test: round-ash: (-256 -10)
PASS: numbers.test: round-ash: (768 -10)
PASS: numbers.test: round-ash: (-768 -10)
PASS: numbers.test: round-ash: (1280 -10)
PASS: numbers.test: round-ash: (-1280 -10)
PASS: numbers.test: round-ash: (1792 -10)
PASS: numbers.test: round-ash: (-1792 -10)
PASS: numbers.test: round-ash: (2304 -10)
PASS: numbers.test: round-ash: (-2304 -10)
PASS: numbers.test: round-ash: (2816 -10)
PASS: numbers.test: round-ash: (-2816 -10)
PASS: numbers.test: round-ash: (512 -11)
PASS: numbers.test: round-ash: (-512 -11)
PASS: numbers.test: round-ash: (1536 -11)
PASS: numbers.test: round-ash: (-1536 -11)
PASS: numbers.test: round-ash: (2560 -11)
PASS: numbers.test: round-ash: (-2560 -11)
PASS: numbers.test: round-ash: (3584 -11)
PASS: numbers.test: round-ash: (-3584 -11)
PASS: numbers.test: round-ash: (4608 -11)
PASS: numbers.test: round-ash: (-4608 -11)
PASS: numbers.test: round-ash: (5632 -11)
PASS: numbers.test: round-ash: (-5632 -11)
PASS: numbers.test: round-ash: (1024 -12)
PASS: numbers.test: round-ash: (-1024 -12)
PASS: numbers.test: round-ash: (3072 -12)
PASS: numbers.test: round-ash: (-3072 -12)
PASS: numbers.test: round-ash: (5120 -12)
PASS: numbers.test: round-ash: (-5120 -12)
PASS: numbers.test: round-ash: (7168 -12)
PASS: numbers.test: round-ash: (-7168 -12)
PASS: numbers.test: round-ash: (9216 -12)
PASS: numbers.test: round-ash: (-9216 -12)
PASS: numbers.test: round-ash: (11264 -12)
PASS: numbers.test: round-ash: (-11264 -12)
PASS: numbers.test: round-ash: (2048 -13)
PASS: numbers.test: round-ash: (-2048 -13)
PASS: numbers.test: round-ash: (6144 -13)
PASS: numbers.test: round-ash: (-6144 -13)
PASS: numbers.test: round-ash: (10240 -13)
PASS: numbers.test: round-ash: (-10240 -13)
PASS: numbers.test: round-ash: (14336 -13)
PASS: numbers.test: round-ash: (-14336 -13)
PASS: numbers.test: round-ash: (18432 -13)
PASS: numbers.test: round-ash: (-18432 -13)
PASS: numbers.test: round-ash: (22528 -13)
PASS: numbers.test: round-ash: (-22528 -13)
PASS: numbers.test: round-ash: (4096 -14)
PASS: numbers.test: round-ash: (-4096 -14)
PASS: numbers.test: round-ash: (12288 -14)
PASS: numbers.test: round-ash: (-12288 -14)
PASS: numbers.test: round-ash: (20480 -14)
PASS: numbers.test: round-ash: (-20480 -14)
PASS: numbers.test: round-ash: (28672 -14)
PASS: numbers.test: round-ash: (-28672 -14)
PASS: numbers.test: round-ash: (36864 -14)
PASS: numbers.test: round-ash: (-36864 -14)
PASS: numbers.test: round-ash: (45056 -14)
PASS: numbers.test: round-ash: (-45056 -14)
PASS: numbers.test: round-ash: (8192 -15)
PASS: numbers.test: round-ash: (-8192 -15)
PASS: numbers.test: round-ash: (24576 -15)
PASS: numbers.test: round-ash: (-24576 -15)
PASS: numbers.test: round-ash: (40960 -15)
PASS: numbers.test: round-ash: (-40960 -15)
PASS: numbers.test: round-ash: (57344 -15)
PASS: numbers.test: round-ash: (-57344 -15)
PASS: numbers.test: round-ash: (73728 -15)
PASS: numbers.test: round-ash: (-73728 -15)
PASS: numbers.test: round-ash: (90112 -15)
PASS: numbers.test: round-ash: (-90112 -15)
PASS: numbers.test: round-ash: (16384 -16)
PASS: numbers.test: round-ash: (-16384 -16)
PASS: numbers.test: round-ash: (49152 -16)
PASS: numbers.test: round-ash: (-49152 -16)
PASS: numbers.test: round-ash: (81920 -16)
PASS: numbers.test: round-ash: (-81920 -16)
PASS: numbers.test: round-ash: (114688 -16)
PASS: numbers.test: round-ash: (-114688 -16)
PASS: numbers.test: round-ash: (147456 -16)
PASS: numbers.test: round-ash: (-147456 -16)
PASS: numbers.test: round-ash: (180224 -16)
PASS: numbers.test: round-ash: (-180224 -16)
PASS: numbers.test: round-ash: (32768 -17)
PASS: numbers.test: round-ash: (-32768 -17)
PASS: numbers.test: round-ash: (98304 -17)
PASS: numbers.test: round-ash: (-98304 -17)
PASS: numbers.test: round-ash: (163840 -17)
PASS: numbers.test: round-ash: (-163840 -17)
PASS: numbers.test: round-ash: (229376 -17)
PASS: numbers.test: round-ash: (-229376 -17)
PASS: numbers.test: round-ash: (294912 -17)
PASS: numbers.test: round-ash: (-294912 -17)
PASS: numbers.test: round-ash: (360448 -17)
PASS: numbers.test: round-ash: (-360448 -17)
PASS: numbers.test: round-ash: (65536 -18)
PASS: numbers.test: round-ash: (-65536 -18)
PASS: numbers.test: round-ash: (196608 -18)
PASS: numbers.test: round-ash: (-196608 -18)
PASS: numbers.test: round-ash: (327680 -18)
PASS: numbers.test: round-ash: (-327680 -18)
PASS: numbers.test: round-ash: (458752 -18)
PASS: numbers.test: round-ash: (-458752 -18)
PASS: numbers.test: round-ash: (589824 -18)
PASS: numbers.test: round-ash: (-589824 -18)
PASS: numbers.test: round-ash: (720896 -18)
PASS: numbers.test: round-ash: (-720896 -18)
PASS: numbers.test: round-ash: (131072 -19)
PASS: numbers.test: round-ash: (-131072 -19)
PASS: numbers.test: round-ash: (393216 -19)
PASS: numbers.test: round-ash: (-393216 -19)
PASS: numbers.test: round-ash: (655360 -19)
PASS: numbers.test: round-ash: (-655360 -19)
PASS: numbers.test: round-ash: (917504 -19)
PASS: numbers.test: round-ash: (-917504 -19)
PASS: numbers.test: round-ash: (1179648 -19)
PASS: numbers.test: round-ash: (-1179648 -19)
PASS: numbers.test: round-ash: (1441792 -19)
PASS: numbers.test: round-ash: (-1441792 -19)
PASS: numbers.test: round-ash: (262144 -20)
PASS: numbers.test: round-ash: (-262144 -20)
PASS: numbers.test: round-ash: (786432 -20)
PASS: numbers.test: round-ash: (-786432 -20)
PASS: numbers.test: round-ash: (1310720 -20)
PASS: numbers.test: round-ash: (-1310720 -20)
PASS: numbers.test: round-ash: (1835008 -20)
PASS: numbers.test: round-ash: (-1835008 -20)
PASS: numbers.test: round-ash: (2359296 -20)
PASS: numbers.test: round-ash: (-2359296 -20)
PASS: numbers.test: round-ash: (2883584 -20)
PASS: numbers.test: round-ash: (-2883584 -20)
PASS: numbers.test: round-ash: (524288 -21)
PASS: numbers.test: round-ash: (-524288 -21)
PASS: numbers.test: round-ash: (1572864 -21)
PASS: numbers.test: round-ash: (-1572864 -21)
PASS: numbers.test: round-ash: (2621440 -21)
PASS: numbers.test: round-ash: (-2621440 -21)
PASS: numbers.test: round-ash: (3670016 -21)
PASS: numbers.test: round-ash: (-3670016 -21)
PASS: numbers.test: round-ash: (4718592 -21)
PASS: numbers.test: round-ash: (-4718592 -21)
PASS: numbers.test: round-ash: (5767168 -21)
PASS: numbers.test: round-ash: (-5767168 -21)
PASS: numbers.test: round-ash: (1048576 -22)
PASS: numbers.test: round-ash: (-1048576 -22)
PASS: numbers.test: round-ash: (3145728 -22)
PASS: numbers.test: round-ash: (-3145728 -22)
PASS: numbers.test: round-ash: (5242880 -22)
PASS: numbers.test: round-ash: (-5242880 -22)
PASS: numbers.test: round-ash: (7340032 -22)
PASS: numbers.test: round-ash: (-7340032 -22)
PASS: numbers.test: round-ash: (9437184 -22)
PASS: numbers.test: round-ash: (-9437184 -22)
PASS: numbers.test: round-ash: (11534336 -22)
PASS: numbers.test: round-ash: (-11534336 -22)
PASS: numbers.test: round-ash: (2097152 -23)
PASS: numbers.test: round-ash: (-2097152 -23)
PASS: numbers.test: round-ash: (6291456 -23)
PASS: numbers.test: round-ash: (-6291456 -23)
PASS: numbers.test: round-ash: (10485760 -23)
PASS: numbers.test: round-ash: (-10485760 -23)
PASS: numbers.test: round-ash: (14680064 -23)
PASS: numbers.test: round-ash: (-14680064 -23)
PASS: numbers.test: round-ash: (18874368 -23)
PASS: numbers.test: round-ash: (-18874368 -23)
PASS: numbers.test: round-ash: (23068672 -23)
PASS: numbers.test: round-ash: (-23068672 -23)
PASS: numbers.test: round-ash: (4194304 -24)
PASS: numbers.test: round-ash: (-4194304 -24)
PASS: numbers.test: round-ash: (12582912 -24)
PASS: numbers.test: round-ash: (-12582912 -24)
PASS: numbers.test: round-ash: (20971520 -24)
PASS: numbers.test: round-ash: (-20971520 -24)
PASS: numbers.test: round-ash: (29360128 -24)
PASS: numbers.test: round-ash: (-29360128 -24)
PASS: numbers.test: round-ash: (37748736 -24)
PASS: numbers.test: round-ash: (-37748736 -24)
PASS: numbers.test: round-ash: (46137344 -24)
PASS: numbers.test: round-ash: (-46137344 -24)
PASS: numbers.test: round-ash: (8388608 -25)
PASS: numbers.test: round-ash: (-8388608 -25)
PASS: numbers.test: round-ash: (25165824 -25)
PASS: numbers.test: round-ash: (-25165824 -25)
PASS: numbers.test: round-ash: (41943040 -25)
PASS: numbers.test: round-ash: (-41943040 -25)
PASS: numbers.test: round-ash: (58720256 -25)
PASS: numbers.test: round-ash: (-58720256 -25)
PASS: numbers.test: round-ash: (75497472 -25)
PASS: numbers.test: round-ash: (-75497472 -25)
PASS: numbers.test: round-ash: (92274688 -25)
PASS: numbers.test: round-ash: (-92274688 -25)
PASS: numbers.test: round-ash: (16777216 -26)
PASS: numbers.test: round-ash: (-16777216 -26)
PASS: numbers.test: round-ash: (50331648 -26)
PASS: numbers.test: round-ash: (-50331648 -26)
PASS: numbers.test: round-ash: (83886080 -26)
PASS: numbers.test: round-ash: (-83886080 -26)
PASS: numbers.test: round-ash: (117440512 -26)
PASS: numbers.test: round-ash: (-117440512 -26)
PASS: numbers.test: round-ash: (150994944 -26)
PASS: numbers.test: round-ash: (-150994944 -26)
PASS: numbers.test: round-ash: (184549376 -26)
PASS: numbers.test: round-ash: (-184549376 -26)
PASS: numbers.test: round-ash: (33554432 -27)
PASS: numbers.test: round-ash: (-33554432 -27)
PASS: numbers.test: round-ash: (100663296 -27)
PASS: numbers.test: round-ash: (-100663296 -27)
PASS: numbers.test: round-ash: (167772160 -27)
PASS: numbers.test: round-ash: (-167772160 -27)
PASS: numbers.test: round-ash: (234881024 -27)
PASS: numbers.test: round-ash: (-234881024 -27)
PASS: numbers.test: round-ash: (301989888 -27)
PASS: numbers.test: round-ash: (-301989888 -27)
PASS: numbers.test: round-ash: (369098752 -27)
PASS: numbers.test: round-ash: (-369098752 -27)
PASS: numbers.test: round-ash: (67108864 -28)
PASS: numbers.test: round-ash: (-67108864 -28)
PASS: numbers.test: round-ash: (201326592 -28)
PASS: numbers.test: round-ash: (-201326592 -28)
PASS: numbers.test: round-ash: (335544320 -28)
PASS: numbers.test: round-ash: (-335544320 -28)
PASS: numbers.test: round-ash: (469762048 -28)
PASS: numbers.test: round-ash: (-469762048 -28)
PASS: numbers.test: round-ash: (603979776 -28)
PASS: numbers.test: round-ash: (-603979776 -28)
PASS: numbers.test: round-ash: (738197504 -28)
PASS: numbers.test: round-ash: (-738197504 -28)
PASS: numbers.test: round-ash: (134217728 -29)
PASS: numbers.test: round-ash: (-134217728 -29)
PASS: numbers.test: round-ash: (402653184 -29)
PASS: numbers.test: round-ash: (-402653184 -29)
PASS: numbers.test: round-ash: (671088640 -29)
PASS: numbers.test: round-ash: (-671088640 -29)
PASS: numbers.test: round-ash: (939524096 -29)
PASS: numbers.test: round-ash: (-939524096 -29)
PASS: numbers.test: round-ash: (1207959552 -29)
PASS: numbers.test: round-ash: (-1207959552 -29)
PASS: numbers.test: round-ash: (1476395008 -29)
PASS: numbers.test: round-ash: (-1476395008 -29)
PASS: numbers.test: round-ash: (268435456 -30)
PASS: numbers.test: round-ash: (-268435456 -30)
PASS: numbers.test: round-ash: (805306368 -30)
PASS: numbers.test: round-ash: (-805306368 -30)
PASS: numbers.test: round-ash: (1342177280 -30)
PASS: numbers.test: round-ash: (-1342177280 -30)
PASS: numbers.test: round-ash: (1879048192 -30)
PASS: numbers.test: round-ash: (-1879048192 -30)
PASS: numbers.test: round-ash: (2415919104 -30)
PASS: numbers.test: round-ash: (-2415919104 -30)
PASS: numbers.test: round-ash: (2952790016 -30)
PASS: numbers.test: round-ash: (-2952790016 -30)
PASS: numbers.test: round-ash: (536870912 -31)
PASS: numbers.test: round-ash: (-536870912 -31)
PASS: numbers.test: round-ash: (1610612736 -31)
PASS: numbers.test: round-ash: (-1610612736 -31)
PASS: numbers.test: round-ash: (2684354560 -31)
PASS: numbers.test: round-ash: (-2684354560 -31)
PASS: numbers.test: round-ash: (3758096384 -31)
PASS: numbers.test: round-ash: (-3758096384 -31)
PASS: numbers.test: round-ash: (4831838208 -31)
PASS: numbers.test: round-ash: (-4831838208 -31)
PASS: numbers.test: round-ash: (5905580032 -31)
PASS: numbers.test: round-ash: (-5905580032 -31)
PASS: numbers.test: round-ash: (25 -3)
PASS: numbers.test: round-ash: (28 -3)
PASS: numbers.test: round-ash: (29 -3)
PASS: numbers.test: round-ash: (17 -3)
PASS: numbers.test: round-ash: (20 -3)
PASS: numbers.test: round-ash: (21 -3)
PASS: numbers.test: round-ash: (89 -3)
PASS: numbers.test: round-ash: (92 -3)
PASS: numbers.test: round-ash: (93 -3)
PASS: numbers.test: round-ash: (81 -3)
PASS: numbers.test: round-ash: (84 -3)
PASS: numbers.test: round-ash: (85 -3)
PASS: numbers.test: round-ash: (-39 -3)
PASS: numbers.test: round-ash: (-36 -3)
PASS: numbers.test: round-ash: (-35 -3)
PASS: numbers.test: round-ash: (-47 -3)
PASS: numbers.test: round-ash: (-44 -3)
PASS: numbers.test: round-ash: (-43 -3)
PASS: numbers.test: round-ash: (34359738329 -3)
PASS: numbers.test: round-ash: (34359738332 -3)
PASS: numbers.test: round-ash: (34359738333 -3)
PASS: numbers.test: round-ash: (34359738321 -3)
PASS: numbers.test: round-ash: (34359738324 -3)
PASS: numbers.test: round-ash: (34359738325 -3)
PASS: numbers.test: round-ash: (-34359738343 -3)
PASS: numbers.test: round-ash: (-34359738340 -3)
PASS: numbers.test: round-ash: (-34359738339 -3)
PASS: numbers.test: round-ash: (-34359738351 -3)
PASS: numbers.test: round-ash: (-34359738348 -3)
PASS: numbers.test: round-ash: (-34359738347 -3)
PASS: numbers.test: round-ash: Right shift of positive integer by (ash -1 63) bits
PASS: numbers.test: round-ash: Right shift of negative integer by (ash -1 63) bits
PASS: numbers.test: round-ash: Right shift of positive integer by (ash -1 31) bits
PASS: numbers.test: round-ash: Right shift of negative integer by (ash -1 31) bits
PASS: numbers.test: round-ash: Huge left shift of 0
PASS: numbers.test: round-ash: Huge right shift of 0
PASS: numbers.test: round-ash: Huge right shift of positive integer
PASS: numbers.test: round-ash: Huge right shift of negative integer
PASS: numbers.test: round-ash: Huge right shift of -1
PASS: numbers.test: round-ash: Huge left shift of non-zero => numerical overflow
PASS: numbers.test: bug in unboxing f64 in 2.1.6: = real and complex (eval)
PASS: numbers.test: bug in unboxing f64 in 2.1.6: = real and complex (compile -O0)
PASS: numbers.test: bug in unboxing f64 in 2.1.6: = real and complex (compile -O2)
PASS: optargs.test: optional argument processing: local defines work with optional arguments (eval)
PASS: optargs.test: optional argument processing: local defines work with optional arguments (compile -O0)
PASS: optargs.test: optional argument processing: local defines work with optional arguments (compile -O2)
PASS: optargs.test: let-keywords: empty bindings internal defines leaking out (eval)
PASS: optargs.test: let-keywords: empty bindings internal defines leaking out (compile -O0)
PASS: optargs.test: let-keywords: empty bindings internal defines leaking out (compile -O2)
PASS: optargs.test: let-keywords: one key (eval)
PASS: optargs.test: let-keywords: one key (compile -O0)
PASS: optargs.test: let-keywords: one key (compile -O2)
PASS: optargs.test: let-keywords*: empty bindings internal defines leaking out (eval)
PASS: optargs.test: let-keywords*: empty bindings internal defines leaking out (compile -O0)
PASS: optargs.test: let-keywords*: empty bindings internal defines leaking out (compile -O2)
PASS: optargs.test: let-keywords*: one key (eval)
PASS: optargs.test: let-keywords*: one key (compile -O0)
PASS: optargs.test: let-keywords*: one key (compile -O2)
PASS: optargs.test: let-optional: empty bindings internal defines leaking out (eval)
PASS: optargs.test: let-optional: empty bindings internal defines leaking out (compile -O0)
PASS: optargs.test: let-optional: empty bindings internal defines leaking out (compile -O2)
PASS: optargs.test: let-optional: one var (eval)
PASS: optargs.test: let-optional: one var (compile -O0)
PASS: optargs.test: let-optional: one var (compile -O2)
PASS: optargs.test: let-optional*: empty bindings internal defines leaking out (eval)
PASS: optargs.test: let-optional*: empty bindings internal defines leaking out (compile -O0)
PASS: optargs.test: let-optional*: empty bindings internal defines leaking out (compile -O2)
PASS: optargs.test: let-optional*: one var (eval)
PASS: optargs.test: let-optional*: one var (compile -O0)
PASS: optargs.test: let-optional*: one var (compile -O2)
PASS: optargs.test: define*: the whole enchilada (eval)
PASS: optargs.test: define*: the whole enchilada (compile -O0)
PASS: optargs.test: define*: the whole enchilada (compile -O2)
PASS: optargs.test: define*: extraneous arguments (eval)
PASS: optargs.test: define*: extraneous arguments (compile -O0)
PASS: optargs.test: define*: extraneous arguments (compile -O2)
PASS: optargs.test: define*: unrecognized keyword (eval)
PASS: optargs.test: define*: unrecognized keyword (compile -O0)
PASS: optargs.test: define*: unrecognized keyword (compile -O2)
PASS: optargs.test: define*: missing argument (eval)
PASS: optargs.test: define*: missing argument (compile -O0)
PASS: optargs.test: define*: missing argument (compile -O2)
PASS: optargs.test: define*: invalid keyword (eval)
PASS: optargs.test: define*: invalid keyword (compile -O0)
PASS: optargs.test: define*: invalid keyword (compile -O2)
PASS: optargs.test: define*: rest given before keywords (eval)
PASS: optargs.test: define*: rest given before keywords (compile -O0)
PASS: optargs.test: define*: rest given before keywords (compile -O2)
PASS: optargs.test: scm_c_bind_keyword_arguments: unrecognized keyword
PASS: optargs.test: scm_c_bind_keyword_arguments: missing argument
PASS: optargs.test: scm_c_bind_keyword_arguments: invalid keyword
PASS: optargs.test: lambda* inits: can bind lexicals within inits (eval)
PASS: optargs.test: lambda* inits: can bind lexicals within inits (compile -O0)
PASS: optargs.test: lambda* inits: can bind lexicals within inits (compile -O2)
PASS: optargs.test: lambda* inits: testing qux (eval)
PASS: optargs.test: lambda* inits: testing qux (compile -O0)
PASS: optargs.test: lambda* inits: testing qux (compile -O2)
PASS: optargs.test: lambda* inits: nested lambda* with optional (eval)
PASS: optargs.test: lambda* inits: nested lambda* with optional (compile -O0)
PASS: optargs.test: lambda* inits: nested lambda* with optional (compile -O2)
PASS: optargs.test: lambda* inits: nested lambda* with key (eval)
PASS: optargs.test: lambda* inits: nested lambda* with key (compile -O0)
PASS: optargs.test: lambda* inits: nested lambda* with key (compile -O2)
PASS: optargs.test: defmacro*: definition (eval)
PASS: optargs.test: defmacro*: definition (compile -O0)
PASS: optargs.test: defmacro*: definition (compile -O2)
PASS: optargs.test: defmacro*: explicit arg (eval)
PASS: optargs.test: defmacro*: explicit arg (compile -O0)
PASS: optargs.test: defmacro*: explicit arg (compile -O2)
PASS: optargs.test: defmacro*: default arg (eval)
PASS: optargs.test: defmacro*: default arg (compile -O0)
PASS: optargs.test: defmacro*: default arg (compile -O2)
PASS: optargs.test: case-lambda: no clauses, no args (eval)
PASS: optargs.test: case-lambda: no clauses, no args (compile -O0)
PASS: optargs.test: case-lambda: no clauses, no args (compile -O2)
PASS: optargs.test: case-lambda: no clauses, args (eval)
PASS: optargs.test: case-lambda: no clauses, args (compile -O0)
PASS: optargs.test: case-lambda: no clauses, args (compile -O2)
PASS: optargs.test: case-lambda: docstring (eval)
PASS: optargs.test: case-lambda: docstring (compile -O0)
PASS: optargs.test: case-lambda: docstring (compile -O2)
PASS: optargs.test: case-lambda*: no clauses, no args (eval)
PASS: optargs.test: case-lambda*: no clauses, no args (compile -O0)
PASS: optargs.test: case-lambda*: no clauses, no args (compile -O2)
PASS: optargs.test: case-lambda*: no clauses, args (eval)
PASS: optargs.test: case-lambda*: no clauses, args (compile -O0)
PASS: optargs.test: case-lambda*: no clauses, args (compile -O2)
PASS: optargs.test: case-lambda*: docstring (eval)
PASS: optargs.test: case-lambda*: docstring (compile -O0)
PASS: optargs.test: case-lambda*: docstring (compile -O2)
PASS: optargs.test: case-lambda*: unambiguous (eval)
PASS: optargs.test: case-lambda*: unambiguous (compile -O0)
PASS: optargs.test: case-lambda*: unambiguous (compile -O2)
PASS: optargs.test: case-lambda*: unambiguous (reversed) (eval)
PASS: optargs.test: case-lambda*: unambiguous (reversed) (compile -O0)
PASS: optargs.test: case-lambda*: unambiguous (reversed) (compile -O2)
PASS: optargs.test: case-lambda*: optionals (order disambiguates) (eval)
PASS: optargs.test: case-lambda*: optionals (order disambiguates) (compile -O0)
PASS: optargs.test: case-lambda*: optionals (order disambiguates) (compile -O2)
PASS: optargs.test: case-lambda*: optionals (order disambiguates (2)) (eval)
PASS: optargs.test: case-lambda*: optionals (order disambiguates (2)) (compile -O0)
PASS: optargs.test: case-lambda*: optionals (order disambiguates (2)) (compile -O2)
PASS: optargs.test: case-lambda*: optionals (one arg) (eval)
PASS: optargs.test: case-lambda*: optionals (one arg) (compile -O0)
PASS: optargs.test: case-lambda*: optionals (one arg) (compile -O2)
PASS: optargs.test: case-lambda*: optionals (one arg (2)) (eval)
PASS: optargs.test: case-lambda*: optionals (one arg (2)) (compile -O0)
PASS: optargs.test: case-lambda*: optionals (one arg (2)) (compile -O2)
PASS: optargs.test: case-lambda*: keywords without keyword (eval)
PASS: optargs.test: case-lambda*: keywords without keyword (compile -O0)
PASS: optargs.test: case-lambda*: keywords without keyword (compile -O2)
PASS: optargs.test: case-lambda*: keywords with keyword (eval)
PASS: optargs.test: case-lambda*: keywords with keyword (compile -O0)
PASS: optargs.test: case-lambda*: keywords with keyword (compile -O2)
PASS: optargs.test: case-lambda*: keywords (too many positionals) (eval)
PASS: optargs.test: case-lambda*: keywords (too many positionals) (compile -O0)
PASS: optargs.test: case-lambda*: keywords (too many positionals) (compile -O2)
PASS: optargs.test: case-lambda*: keywords (order disambiguates) (eval)
PASS: optargs.test: case-lambda*: keywords (order disambiguates) (compile -O0)
PASS: optargs.test: case-lambda*: keywords (order disambiguates) (compile -O2)
PASS: optargs.test: case-lambda*: keywords (order disambiguates (2)) (eval)
PASS: optargs.test: case-lambda*: keywords (order disambiguates (2)) (compile -O0)
PASS: optargs.test: case-lambda*: keywords (order disambiguates (2)) (compile -O2)
PASS: options.test: options: setting an option doesn't reset other options
PASS: pairs.test: cxr: car
PASS: pairs.test: cxr: cdr
PASS: pairs.test: cxxr: caar
PASS: pairs.test: cxxr: cadr
PASS: pairs.test: cxxr: cdar
PASS: pairs.test: cxxr: cddr
PASS: pairs.test: cxxxr: caaar
PASS: pairs.test: cxxxr: caadr
PASS: pairs.test: cxxxr: cadar
PASS: pairs.test: cxxxr: caddr
PASS: pairs.test: cxxxr: cdaar
PASS: pairs.test: cxxxr: cdadr
PASS: pairs.test: cxxxr: cddar
PASS: pairs.test: cxxxr: cdddr
PASS: pairs.test: cxxxxr: caaaar
PASS: pairs.test: cxxxxr: caaadr
PASS: pairs.test: cxxxxr: caadar
PASS: pairs.test: cxxxxr: caaddr
PASS: pairs.test: cxxxxr: cadaar
PASS: pairs.test: cxxxxr: cadadr
PASS: pairs.test: cxxxxr: caddar
PASS: pairs.test: cxxxxr: cadddr
PASS: pairs.test: cxxxxr: cdaaar
PASS: pairs.test: cxxxxr: cdaadr
PASS: pairs.test: cxxxxr: cdadar
PASS: pairs.test: cxxxxr: cdaddr
PASS: pairs.test: cxxxxr: cddaar
PASS: pairs.test: cxxxxr: cddadr
PASS: pairs.test: cxxxxr: cdddar
PASS: pairs.test: cxxxxr: cddddr
PASS: parameters.test: parameters: test 1
PASS: parameters.test: parameters: test 2
PASS: parameters.test: parameters: test 3
PASS: parameters.test: parameters: test 4
PASS: parameters.test: parameters: test 5
PASS: parameters.test: parameters: SRFI-34
PASS: parameters.test: current-input-port: new value
PASS: parameters.test: current-input-port: set value
PASS: parameters.test: current-input-port: old restored
PASS: parameters.test: current-input-port: throw exit
PASS: parameters.test: current-input-port: call/cc re-enter
PASS: parameters.test: current-input-port: original unchanged
PASS: parameters.test: current-output-port: new value
PASS: parameters.test: current-output-port: set value
PASS: parameters.test: current-output-port: old restored
PASS: parameters.test: current-output-port: throw exit
PASS: parameters.test: current-output-port: call/cc re-enter
PASS: parameters.test: current-output-port: original unchanged
PASS: parameters.test: current-error-port: new value
PASS: parameters.test: current-error-port: set value
PASS: parameters.test: current-error-port: old restored
PASS: parameters.test: current-error-port: throw exit
PASS: parameters.test: current-error-port: call/cc re-enter
PASS: parameters.test: current-error-port: original unchanged
PASS: peg.test: PEG Grammar: defining PEGs with PEG
PASS: peg.test: PEG Grammar: equivalence of definitions
PASS: peg.test: Parsing: simple comment
PASS: peg.test: Parsing: simple comment padded
PASS: peg.test: Parsing: nested comment
PASS: peg.test: Parsing: early termination
PASS: peg.test: Parsing: never starts
PASS: peg.test: Parsing: /etc/passwd
PASS: peg.test: PEG Match Records: basic parameter extraction
PASS: peg.test: Parsing right-associative equations: 1
PASS: peg.test: Parsing right-associative equations: 1+2
PASS: peg.test: Parsing right-associative equations: 1+2+3
PASS: peg.test: Parsing right-associative equations: 1+2*3+4
PASS: peg.test: Parsing right-associative equations: 1+2/3*(4+5)/6-7-8
PASS: peg.test: Parsing right-associative equations: 1+1/2*3+(1+1)/2
PASS: peg.test: Parsing left-associative equations: 1
PASS: peg.test: Parsing left-associative equations: 1+2
PASS: peg.test: Parsing left-associative equations: 1+2+3
PASS: peg.test: Parsing left-associative equations: 1+2*3+4
PASS: peg.test: Parsing left-associative equations: 1+2/3*(4+5)/6-7-8
PASS: peg.test: Parsing left-associative equations: 1+1/2*3+(1+1)/2
PASS: peval.test: partial evaluation: (let ((x 1) (y 2)) (+ x y))
PASS: peval.test: partial evaluation: (let ((x 1) (y 2)) (let ((f (lambda () (+ x y)))) (f)))
PASS: peval.test: partial evaluation: (let ((x 0)) (call-with-values (lambda () (if (zero? x) (values 1 2) (values 3 4))) (lambda (a b) (+ a b))))
PASS: peval.test: partial evaluation: (let ((x 1) (y 2)) (values x y))
PASS: peval.test: partial evaluation: (let ((x (values 1 (quote a))) (y 2)) (values x y))
PASS: peval.test: partial evaluation: (or (values 1 2) 3)
PASS: peval.test: partial evaluation: (cons 0 (cons 1 (cons 2 (list 3 4 5))))
PASS: peval.test: partial evaluation: (cons 0 (cons 1 (cons 2 (quote (3 4 5)))))
PASS: peval.test: partial evaluation: (let loop ((i 3) (r (quote ()))) (if (zero? i) r (loop (#{1-}# i) (cons (cons i i) r))))
PASS: peval.test: partial evaluation: (let loop ((i 4) (r (quote ()))) (if (<= i 0) (car r) (loop (#{1-}# i) (cons i r))))
PASS: peval.test: partial evaluation: (let loop ((l (quote (1 2 3 4))) (sum 0)) (if (null? l) sum (loop (cdr l) (+ sum (car l)))))
PASS: peval.test: partial evaluation: (let ((string->chars (lambda (s) (define (char-at n) (string-ref s n)) (define (len) (string-length s)) (let loop ((i 0)) (if (< i (len)) (cons (char-at i) (loop (#{1+}# i))) (quote ())))))) (string->chars yo))
PASS: peval.test: partial evaluation: (begin (use-modules (system base pmatch)) (pmatch (quote (a b c d)) ((a b . _) #t)))
PASS: peval.test: partial evaluation: ((lambda (x y z) (list x y z)) 1 2 3)
PASS: peval.test: partial evaluation: (let* ((x (list 1)) (y (car x))) (set-car! x 0) y)
PASS: peval.test: partial evaluation: (let ((y (car x))) (set-car! x 0) y)
PASS: peval.test: partial evaluation: ((lambda (x) (x x)) (lambda (x) (x x)))
PASS: peval.test: partial evaluation: (let* ((x *) (y (x 1 2))) y)
PASS: peval.test: partial evaluation: (begin (define (+ x y) (pk x y)) (+ 1 2))
PASS: peval.test: partial evaluation: (let ((x 2)) (do-something!) x)
PASS: peval.test: partial evaluation: (let ((x 2) (y 3)) (* (+ x y) z))
PASS: peval.test: partial evaluation: (define (foo x) (define (bar z) (* z z)) (+ x (bar 3)))
PASS: peval.test: partial evaluation: (let ((f (lambda (x y) (+ (* x top) y))) (x 2) (y 3)) (+ (* x (f x y)) (f something x)))
PASS: peval.test: partial evaluation: (let ((f (lambda (x y) (if (> x 0) y x)))) (+ (f -1 0) (f 1 0) (f -1 y) (f 2 y) (f z y)))
PASS: peval.test: partial evaluation: (let ((y 2)) (lambda (x) (if (> y 0) (display x) (quote never-reached))))
PASS: peval.test: partial evaluation: (letrec ((fibo (lambda (n) (if (<= n 1) n (+ (fibo (- n 1)) (fibo (- n 2))))))) (fibo 4))
PASS: peval.test: partial evaluation: (let ((x top)) (foo) x)
PASS: peval.test: partial evaluation: ((lambda (f x) (f (* (car x) (cadr x)))) (lambda (x) (+ x 1)) (quote (2 3)))
PASS: peval.test: partial evaluation: ((lambda* (f x #:optional (y 0)) (+ y (f (* (car x) (cadr x))))) (lambda (x) (+ x 1)) (quote (2 3)))
PASS: peval.test: partial evaluation: ((lambda* (f x #:optional (y (+ 3 (car x)))) (+ y (f (* (car x) (cadr x))))) (lambda (x) (+ x 1)) (quote (2 3)))
PASS: peval.test: partial evaluation: ((lambda* (f x #:optional (y (+ 3 (car x))) (z (+ (cadr x) y))) (+ y z (f (* (car x) (cadr x))))) (lambda (x) (+ x 1)) (quote (2 3)))
PASS: peval.test: partial evaluation: ((lambda* (f x #:optional (y (+ 3 (car x))) (z (+ (cadr x) y))) (+ y z (f (* (car x) (cadr x))))) (lambda (x) (+ x 1)) (quote (2 3)) -3)
PASS: peval.test: partial evaluation: ((lambda* (f x #:optional (y (+ 3 (car x))) (z (+ (cadr x) y))) (+ y z (f (* (car x) (cadr x))))) (lambda (x) (+ x 1)) (quote (2 3)) -3 17)
PASS: peval.test: partial evaluation: ((lambda* (f x #:optional (y (+ 3 (car x))) (z (+ (cadr x) y)) #:rest r) (list r (+ y z (f (* (car x) (cadr x)))))) (lambda (x) (+ x 1)) (quote (2 3)) -3)
PASS: peval.test: partial evaluation: ((lambda* (f x #:optional (y (+ 3 (car x))) (z (+ (cadr x) y)) #:rest r) (list r (+ y z (f (* (car x) (cadr x)))))) (lambda (x) (+ x 1)) (quote (2 3)) -3 17)
PASS: peval.test: partial evaluation: ((lambda* (f x #:optional (y (+ 3 (car x))) (z (+ (cadr x) y)) #:rest r) (list r (+ y z (f (* (car x) (cadr x)))))) (lambda (x) (+ x 1)) (quote (2 3)) -3 17 8 3)
PASS: peval.test: partial evaluation: ((lambda* (f x #:optional (y 0)) (+ y (f (* (car x) (cadr x))))) (lambda (x) (+ x 1)) (quote (2 3)) 35)
PASS: peval.test: partial evaluation: ((lambda* (f x #:optional (y (foo))) (+ y (f (* (car x) (cadr x))))) (lambda (x) (+ x 1)) (quote (2 3)))
PASS: peval.test: partial evaluation: ((lambda* (f x #:optional (y (foo))) (+ y (f (* (car x) (cadr x))))) (lambda (x) (+ x 1)) (quote (2 3)) 35)
PASS: peval.test: partial evaluation: ((lambda (f) (f x)) (lambda (x) x))
PASS: peval.test: partial evaluation: (let ((fold (lambda (f g) (f (g top))))) (fold #{1+}# (lambda (x) x)))
PASS: peval.test: partial evaluation: (letrec ((fold (lambda (f x3 b null? car cdr) (if (null? x3) b (f (car x3) (fold f (cdr x3) b null? car cdr)))))) (fold * x 1 zero? (lambda (x1) x1) (lambda (x2) (- x2 1))))
PASS: peval.test: partial evaluation: inlined lambdas are alpha-renamed
PASS: peval.test: partial evaluation: (letrec ((a (lambda () (b))) (b (lambda () (a))) (c (lambda (x) x))) (c 10))
PASS: peval.test: partial evaluation: (letrec ((a (foo!)) (b (lambda () (a))) (c (lambda (x) x))) (c 10))
PASS: peval.test: partial evaluation: (letrec ((even? (lambda (x) (or (= 0 x) (odd? (- x 1))))) (odd? (lambda (x) (not (even? x))))) (and (even? 4) (odd? 7)))
PASS: peval.test: partial evaluation: (memv 1 (quote (3 2 1)))
PASS: peval.test: partial evaluation: (memv 1 (list 3 2 1))
PASS: peval.test: partial evaluation: (case foo ((3 2 1) (quote a)) (else (quote b)))
PASS: peval.test: partial evaluation: (case foo (() (quote a)) (else (quote b)))
PASS: peval.test: partial evaluation: (let ((v (make-vector 6 #f))) (lambda (n) (vector-set! v n n)))
PASS: peval.test: partial evaluation: (let ((v (vector 1 2 3))) (lambda () v))
PASS: peval.test: partial evaluation: (let* ((x (if (> p q) (frob!) (display (quote chbouib)))) (y (* x 2))) (+ x x y))
PASS: peval.test: partial evaluation: ((lambda (x y z) (vector-set! x 0 0) (set-car! y 0) (set-cdr! z (quote ()))) (vector 1 2 3) (make-list 10) (list 1 2 3))
PASS: peval.test: partial evaluation: (let ((foo top-foo) (bar top-bar)) (let* ((g (lambda (x y) (+ x y))) (f (lambda (g x) (g x x)))) (+ (f g foo) (f g bar))))
PASS: peval.test: partial evaluation: (let* ((c (quote (2 3))) (x (cons 1 c)) (y (cons 0 x))) y)
PASS: peval.test: partial evaluation: (let ((x 2)) (set! x 3) x)
PASS: peval.test: partial evaluation: (letrec ((x 0) (f (lambda () (set! x (+ 1 x)) x))) (frob f) x)
PASS: peval.test: partial evaluation: (letrec ((f (lambda (x) (set! f (lambda (_) x)) x))) (f 2))
PASS: peval.test: partial evaluation: (let ((x (make-foo))) (frob! x) x)
PASS: peval.test: partial evaluation: (let loop ((x x)) (if (< x 0) x (loop (#{1-}# x))))
PASS: peval.test: partial evaluation: (let ((x (top))) (let loop ((x x) (y 10)) (if (> y 0) (loop x (#{1-}# y)) (foo x y))))
PASS: peval.test: partial evaluation: (let loop ((x x) (y 0)) (if (> y 0) (loop (#{1-}# x) (#{1-}# y)) (if (< x 0) x (loop (#{1+}# x) (#{1+}# y)))))
PASS: peval.test: partial evaluation: (letrec ((f (lambda (x) (g (#{1-}# x)))) (g (lambda (x) (h (#{1+}# x)))) (h (lambda (x) (f x)))) (f 0))
PASS: peval.test: partial evaluation: (let loop ((x 0)) (and (< x top) (loop (#{1+}# x))))
PASS: peval.test: partial evaluation: (let ((pos 0)) (let ((here (let ((start pos)) (lambda () start)))) (set! pos 1) (here)))
PASS: peval.test: partial evaluation: (letrec ((a a)) 1)
PASS: peval.test: partial evaluation: (letrec ((a a)) a)
PASS: peval.test: partial evaluation: (letrec ((a b) (b a)) a)
PASS: peval.test: partial evaluation: (letrec ((a (lambda () (a))) (b (lambda () (a))) (c (lambda (x) x))) (let ((d (foo b))) (c d)))
PASS: peval.test: partial evaluation: (letrec* ((a (lambda (x) (top x))) (b (lambda () a))) (foo (b) (b)))
PASS: peval.test: partial evaluation: ((let ((a 10)) (lambda (b) (* b 2))) 30)
PASS: peval.test: partial evaluation: ((lambda () (define (const x) (lambda (_) x)) (let ((v #f)) ((const #t) v))))
PASS: peval.test: partial evaluation: ((lambda (x y . z) (list x y z)) 1 2 3 4)
PASS: peval.test: partial evaluation: (let ((args (list 2 3))) (apply (lambda (x y z w) (list x y z w)) 0 1 args))
PASS: peval.test: partial evaluation: (let ((args (list 2 3))) (foo! args) (apply (lambda (x y z w) (list x y z w)) 0 1 args))
PASS: peval.test: partial evaluation: (lambda (bv offset n) (let ((x (bytevector-ieee-single-native-ref bv (+ offset 0))) (y (bytevector-ieee-single-native-ref bv (+ offset 4)))) (let ((args (list x y))) (apply (lambda (bv offset x y) (bytevector-ieee-single-native-set! bv (+ offset 0) x) (bytevector-ieee-single-native-set! bv (+ offset 4) y)) bv offset args))))
PASS: peval.test: partial evaluation: (lambda () (let ((args (list (foo!)))) (apply (lambda (z x) (list z x)) z args)))
PASS: peval.test: partial evaluation: (lambda () (let ((args (list (quote foo)))) (set-car! args (quote bar)) (apply (lambda (z x) (list z x)) z args)))
PASS: peval.test: partial evaluation: (call-with-values (lambda () (values 1 2)) (lambda args (apply list args)))
PASS: peval.test: partial evaluation: (call-with-values (lambda () (if foo 1 2)) (lambda args (apply values args)))
PASS: peval.test: partial evaluation: (cons 1 #nil)
PASS: peval.test: partial evaluation: (begin (cons 1 2) #f)
PASS: peval.test: partial evaluation: (begin (cons (foo) 2) #f)
PASS: peval.test: partial evaluation: (if (cons 0 0) 1 2)
PASS: peval.test: partial evaluation: (car (cons 1 0))
PASS: peval.test: partial evaluation: (cdr (cons 1 0))
PASS: peval.test: partial evaluation: (car (cons 1 (bar)))
PASS: peval.test: partial evaluation: (cdr (cons (bar) 0))
PASS: peval.test: partial evaluation: (car (list 1 0))
PASS: peval.test: partial evaluation: (cdr (list 1 0))
PASS: peval.test: partial evaluation: (car (list 1 (bar)))
PASS: peval.test: partial evaluation: (cdr (list (bar) 0))
PASS: peval.test: partial evaluation: (let ((x (random))) (eq? x x))
PASS: peval.test: partial evaluation: (let* ((x (random)) (y x)) (eq? x y))
PASS: peval.test: partial evaluation: (dynamic-wind foo (lambda () bar) baz)
PASS: peval.test: partial evaluation: (dynamic-wind (lambda () foo) (lambda () bar) (lambda () baz))
PASS: peval.test: partial evaluation: (dynamic-wind (lambda () foo) (lambda () (bar)) (lambda () baz))
PASS: peval.test: partial evaluation: (let ((tag (make-prompt-tag))) (call-with-prompt tag (lambda () 1) (lambda args args)))
PASS: peval.test: partial evaluation: (let ((tag (make-prompt-tag foo))) (call-with-prompt tag (lambda () 1) (lambda args args)))
PASS: peval.test: partial evaluation: (call-with-prompt tag (lambda () 1) (lambda (k x) x))
PASS: peval.test: partial evaluation: (call-with-prompt tag (lambda () 1) handler)
PASS: peval.test: partial evaluation: (while #t #t)
PASS: peval.test: partial evaluation: (lambda (a . rest) (apply (lambda (x y) (+ x y)) a rest))
PASS: peval.test: partial evaluation: (car (quote (1 2)))
PASS: peval.test: partial evaluation: (let ((x (let sum ((n 0) (out 0)) (if (< n 10000) (sum (#{1+}# n) (+ out n)) out)))) ((lambda (y) (list y)) x))
PASS: peval.test: partial evaluation: (if (and (struct? x) (eq? (struct-vtable x) A)) (foo x) (if (and (struct? x) (eq? (struct-vtable x) B)) (bar x) (if (and (struct? x) (eq? (struct-vtable x) C)) (baz x) (qux x))))
PASS: peval.test: partial evaluation: (if (and (struct? x) (eq? (struct-vtable x) A) B) (foo x) (if (and (struct? x) (eq? (struct-vtable x) A) C) (bar x) (if (and (struct? x) (eq? (struct-vtable x) A) D) (baz x) (qux x))))
PASS: peval.test: partial evaluation: (apply (lambda (x y) (cons x y)) (quote (1 2)))
PASS: peval.test: partial evaluation: (apply (lambda (x y) (cons x y)) (list 1 2))
PASS: peval.test: partial evaluation: (call-with-values foo (lambda (x) (bar x)))
PASS: peval.test: partial evaluation: (eq? (quote (a b)) (quote (a b)))
PASS: peval.test: partial evaluation: (eqv? (quote (a b)) (quote (a b)))
PASS: peval.test: partial evaluation: ((lambda (foo) (define* (bar a #:optional (b (#{1+}# a))) (list a b)) (bar 1)) 1)
PASS: peval.test: partial evaluation: (let ((l (quote ()))) (if (pair? arg) (set! l arg)) (apply f l))
PASS: peval.test: partial evaluation: (lambda (f x) (let lp ((x x)) (let ((x* (f x))) (if (eq? x x*) x* (lp x*)))))
PASS: peval.test: partial evaluation: (lambda () (define (add1 n) (+ 1 n)) (add1 1 2))
PASS: peval.test: eqv?: (eqv? x #f)
PASS: peval.test: eqv?: (eqv? x (quote ()))
PASS: peval.test: eqv?: (eqv? x #t)
PASS: peval.test: eqv?: (eqv? x (quote sym))
PASS: peval.test: eqv?: (eqv? x 42)
PASS: peval.test: eqv?: (eqv? x a)
PASS: peval.test: eqv?: (eqv? x 42.0)
PASS: peval.test: eqv?: (eqv? x #nil)
PASS: peval.test: eqv?: (eqv? x (quote (a . b)))
PASS: peval.test: equal?: (equal? x #f)
PASS: peval.test: equal?: (equal? x (quote ()))
PASS: peval.test: equal?: (equal? x #t)
PASS: peval.test: equal?: (equal? x (quote sym))
PASS: peval.test: equal?: (equal? x 42)
PASS: peval.test: equal?: (equal? x a)
PASS: peval.test: equal?: (equal? x 42.0)
PASS: peval.test: equal?: (equal? x #nil)
PASS: peval.test: equal?: (equal? x (quote (a . b)))
PASS: poe.test: pure-funcq: no args: called first
PASS: poe.test: pure-funcq: no args: not called second
PASS: poe.test: pure-funcq: 1 arg: called first x
PASS: poe.test: pure-funcq: 1 arg: not called second x
PASS: poe.test: pure-funcq: 1 arg: called first y
PASS: poe.test: pure-funcq: 1 arg: not called second y
PASS: poe.test: pure-funcq: 1 arg: not called third x
PASS: poe.test: perfect-funcq: no args: called first
PASS: poe.test: perfect-funcq: no args: not called second
PASS: poe.test: perfect-funcq: 1 arg: called first s1
PASS: poe.test: perfect-funcq: 1 arg: not called second s1
PASS: poe.test: perfect-funcq: 1 arg: called first s2
PASS: poe.test: perfect-funcq: 1 arg: not called second s2
PASS: popen.test: open-input-pipe: no args
PASS: popen.test: open-input-pipe: port?
PASS: popen.test: open-input-pipe: echo hello
PASS: popen.test: open-input-pipe: stdin==stderr
PASS: popen.test: open-input-pipe: stdout==stderr
PASS: popen.test: open-input-pipe: open-input-pipe process gets (current-input-port) as stdin
PASS: popen.test: open-input-pipe: no duplicate
PASS: popen.test: open-output-pipe: no args
PASS: popen.test: open-output-pipe: port?
PASS: popen.test: open-output-pipe: stdin==stderr
PASS: popen.test: open-output-pipe: stdout==stderr
PASS: popen.test: open-output-pipe: no duplicate
PASS: popen.test: open-pipe*: OPEN_BOTH
PASS: popen.test: close-pipe: no args
PASS: popen.test: close-pipe: exit 0
PASS: popen.test: close-pipe: exit 1
PASS: popen.test: open-process
PASS: popen.test: piped-process
PASS: popen.test: piped-process: with output
PASS: popen.test: pipeline
PASS: ports.test: %default-port-conversion-strategy: initial value
PASS: ports.test: %default-port-conversion-strategy: file port
PASS: ports.test: %default-port-conversion-strategy: (set-port-conversion-strategy! #f sym)
PASS: ports.test: file: write and read back list of strings
PASS: ports.test: file: write and read back characters
PASS: ports.test: file: r/w 1
PASS: ports.test: file: r/w 2
PASS: ports.test: file: r/w 3
PASS: ports.test: file: r/w 4
PASS: ports.test: file: ub r/w 1
PASS: ports.test: file: ub r/w 2
PASS: ports.test: file: ub r/w 3
PASS: ports.test: file: ub r/w 4
PASS: ports.test: file: out tell
PASS: ports.test: file: in tell 0
PASS: ports.test: file: in tell 1
PASS: ports.test: file: in tell 0 after unread
PASS: ports.test: file: unread char still there
PASS: ports.test: file: in last char
PASS: ports.test: file: read back NUL 1
PASS: ports.test: file: read back 255
PASS: ports.test: file: read back 128
PASS: ports.test: file: read back NUL 2
PASS: ports.test: file: EOF
PASS: ports.test: file: line buffering
PASS: ports.test: file: read-line honors port encoding
PASS: ports.test: file: binary mode ignores port encoding
PASS: ports.test: file: binary mode ignores file coding declaration
PASS: ports.test: file: open-file ignores coding declaration by default
PASS: ports.test: file: open-input-file with guess-encoding honors coding declaration
PASS: ports.test: invalid wide mode string
PASS: ports.test: valid wide mode string
PASS: ports.test: keyword arguments for file openers: write #:encoding: open-file
PASS: ports.test: keyword arguments for file openers: write #:encoding: open-output-file
PASS: ports.test: keyword arguments for file openers: write #:encoding: call-with-output-file
PASS: ports.test: keyword arguments for file openers: write #:encoding: with-output-to-file
PASS: ports.test: keyword arguments for file openers: write #:encoding: with-error-to-file
PASS: ports.test: keyword arguments for file openers: write #:binary: open-output-file
PASS: ports.test: keyword arguments for file openers: write #:binary: call-with-output-file
PASS: ports.test: keyword arguments for file openers: write #:binary: with-output-to-file
PASS: ports.test: keyword arguments for file openers: write #:binary: with-error-to-file
PASS: ports.test: keyword arguments for file openers: read #:encoding: open-file read #:encoding
PASS: ports.test: keyword arguments for file openers: read #:encoding: open-input-file #:encoding
PASS: ports.test: keyword arguments for file openers: read #:encoding: call-with-input-file #:encoding
PASS: ports.test: keyword arguments for file openers: read #:encoding: with-input-from-file #:encoding
PASS: ports.test: keyword arguments for file openers: read #:binary: open-input-file
PASS: ports.test: keyword arguments for file openers: read #:binary: call-with-input-file
PASS: ports.test: keyword arguments for file openers: read #:binary: with-input-from-file
PASS: ports.test: keyword arguments for file openers: #:guess-encoding with coding declaration: open-file
PASS: ports.test: keyword arguments for file openers: #:guess-encoding with coding declaration: open-input-file
PASS: ports.test: keyword arguments for file openers: #:guess-encoding with coding declaration: call-with-input-file
PASS: ports.test: keyword arguments for file openers: #:guess-encoding with coding declaration: with-input-from-file
PASS: ports.test: keyword arguments for file openers: #:guess-encoding without coding declaration: open-file
PASS: ports.test: keyword arguments for file openers: #:guess-encoding without coding declaration: open-input-file
PASS: ports.test: keyword arguments for file openers: #:guess-encoding without coding declaration: call-with-input-file
PASS: ports.test: keyword arguments for file openers: #:guess-encoding without coding declaration: with-input-from-file
PASS: ports.test: unread-char
PASS: ports.test: unread-string
PASS: ports.test: unread residue
PASS: ports.test: initial revealed count
PASS: ports.test: non-revealed port is closed
PASS: ports.test: close-port & revealed port
PASS: ports.test: revealed port fdes not closed
PASS: ports.test: pipe: read
PASS: ports.test: pipe: write
PASS: ports.test: pipe, fdopen, and line buffering
PASS: ports.test: string ports: display text
PASS: ports.test: string ports: write/read sexpr
PASS: ports.test: string ports: input tell 0
PASS: ports.test: string ports: input tell 1
PASS: ports.test: string ports: input tell back to 0
PASS: ports.test: string ports: input ungetted char
PASS: ports.test: string ports: input seek to end
PASS: ports.test: string ports: input seek to beginning
PASS: ports.test: string ports: input reread first char
PASS: ports.test: string ports: output tell 0
PASS: ports.test: string ports: output tell end
PASS: ports.test: string ports: output seek to beginning
PASS: ports.test: string ports: output seek to last char
PASS: ports.test: string ports: output check
PASS: ports.test: string ports: truncating input string fails
PASS: ports.test: string ports: truncating output string
PASS: ports.test: string ports: truncating output string before position
PASS: ports.test: string ports: truncating output string at position
PASS: ports.test: string ports: truncating output string after seek
PASS: ports.test: string ports: truncating output string after seek to end
PASS: ports.test: string ports: %default-port-encoding is ignored
PASS: ports.test: string ports: %default-port-conversion-strategy is honored
PASS: ports.test: string ports: suitable encoding [latin-1]
PASS: ports.test: string ports: suitable encoding [latin-3]
PASS: ports.test: string ports: wrong encoding, error
PASS: ports.test: string ports: wrong encoding, substitute
PASS: ports.test: string ports: wrong encoding, escape
PASS: ports.test: string ports: peek-char
PASS: ports.test: string ports: test-decoding-error: (255 65 66 67) "UTF-8" error
PASS: ports.test: string ports: test-decoding-error: (255 65 66 67) "UTF-8" error + peek-char
PASS: ports.test: string ports: test-decoding-error: (255 65 66 67) "UTF-8" escape
PASS: ports.test: string ports: test-decoding-error: (255 65 66 67) "UTF-8" escape + peek-char
PASS: ports.test: string ports: test-decoding-error: (255 65 66 67) "UTF-8" substitute
PASS: ports.test: string ports: test-decoding-error: (255 65 66 67) "UTF-8" substitute + peek-char
PASS: ports.test: string ports: test-decoding-error: (255 206 187 206 188) "UTF-8" error
PASS: ports.test: string ports: test-decoding-error: (255 206 187 206 188) "UTF-8" error + peek-char
PASS: ports.test: string ports: test-decoding-error: (255 206 187 206 188) "UTF-8" escape
PASS: ports.test: string ports: test-decoding-error: (255 206 187 206 188) "UTF-8" escape + peek-char
PASS: ports.test: string ports: test-decoding-error: (255 206 187 206 188) "UTF-8" substitute
PASS: ports.test: string ports: test-decoding-error: (255 206 187 206 188) "UTF-8" substitute + peek-char
PASS: ports.test: string ports: test-decoding-error: (206 187 206) "UTF-8" error
PASS: ports.test: string ports: test-decoding-error: (206 187 206) "UTF-8" error + peek-char
PASS: ports.test: string ports: test-decoding-error: (206 187 206) "UTF-8" escape
PASS: ports.test: string ports: test-decoding-error: (206 187 206) "UTF-8" escape + peek-char
PASS: ports.test: string ports: test-decoding-error: (206 187 206) "UTF-8" substitute
PASS: ports.test: string ports: test-decoding-error: (206 187 206) "UTF-8" substitute + peek-char
PASS: ports.test: string ports: test-decoding-error: (192 128 65) "UTF-8" error
PASS: ports.test: string ports: test-decoding-error: (192 128 65) "UTF-8" error + peek-char
PASS: ports.test: string ports: test-decoding-error: (192 128 65) "UTF-8" escape
PASS: ports.test: string ports: test-decoding-error: (192 128 65) "UTF-8" escape + peek-char
PASS: ports.test: string ports: test-decoding-error: (192 128 65) "UTF-8" substitute
PASS: ports.test: string ports: test-decoding-error: (192 128 65) "UTF-8" substitute + peek-char
PASS: ports.test: string ports: test-decoding-error: (194 65 66) "UTF-8" error
PASS: ports.test: string ports: test-decoding-error: (194 65 66) "UTF-8" error + peek-char
PASS: ports.test: string ports: test-decoding-error: (194 65 66) "UTF-8" escape
PASS: ports.test: string ports: test-decoding-error: (194 65 66) "UTF-8" escape + peek-char
PASS: ports.test: string ports: test-decoding-error: (194 65 66) "UTF-8" substitute
PASS: ports.test: string ports: test-decoding-error: (194 65 66) "UTF-8" substitute + peek-char
PASS: ports.test: string ports: test-decoding-error: (240 128 128 65) "UTF-8" error
PASS: ports.test: string ports: test-decoding-error: (240 128 128 65) "UTF-8" error + peek-char
PASS: ports.test: string ports: test-decoding-error: (240 128 128 65) "UTF-8" escape
PASS: ports.test: string ports: test-decoding-error: (240 128 128 65) "UTF-8" escape + peek-char
PASS: ports.test: string ports: test-decoding-error: (240 128 128 65) "UTF-8" substitute
PASS: ports.test: string ports: test-decoding-error: (240 128 128 65) "UTF-8" substitute + peek-char
PASS: ports.test: string ports: test-decoding-error: (224 160 65 66) "UTF-8" error
PASS: ports.test: string ports: test-decoding-error: (224 160 65 66) "UTF-8" error + peek-char
PASS: ports.test: string ports: test-decoding-error: (224 160 65 66) "UTF-8" escape
PASS: ports.test: string ports: test-decoding-error: (224 160 65 66) "UTF-8" escape + peek-char
PASS: ports.test: string ports: test-decoding-error: (224 160 65 66) "UTF-8" substitute
PASS: ports.test: string ports: test-decoding-error: (224 160 65 66) "UTF-8" substitute + peek-char
PASS: ports.test: string ports: test-decoding-error: (240 136 136 136) "UTF-8" error
PASS: ports.test: string ports: test-decoding-error: (240 136 136 136) "UTF-8" error + peek-char
PASS: ports.test: string ports: test-decoding-error: (240 136 136 136) "UTF-8" escape
PASS: ports.test: string ports: test-decoding-error: (240 136 136 136) "UTF-8" escape + peek-char
PASS: ports.test: string ports: test-decoding-error: (240 136 136 136) "UTF-8" substitute
PASS: ports.test: string ports: test-decoding-error: (240 136 136 136) "UTF-8" substitute + peek-char
PASS: ports.test: call-with-output-string: proc closes port
PASS: ports.test: newline: line counter: file: at beginning of input
PASS: ports.test: newline: line counter: file: read first character
PASS: ports.test: newline: line counter: file: after reading one character
PASS: ports.test: newline: line counter: file: read first newline
PASS: ports.test: newline: line counter: file: after reading first newline char
PASS: ports.test: newline: line counter: file: second line read correctly
PASS: ports.test: newline: line counter: file: read-line increments line number
PASS: ports.test: newline: line counter: file: read-line returns EOF
PASS: ports.test: newline: line counter: file: line count is 5 at EOF
PASS: ports.test: newline: line counter: file: column is correct at EOF
PASS: ports.test: newline: line counter: pipe: at beginning of input
PASS: ports.test: newline: line counter: pipe: read first character
PASS: ports.test: newline: line counter: pipe: after reading one character
PASS: ports.test: newline: line counter: pipe: read first newline
PASS: ports.test: newline: line counter: pipe: after reading first newline char
PASS: ports.test: newline: line counter: pipe: second line read correctly
PASS: ports.test: newline: line counter: pipe: read-line increments line number
PASS: ports.test: newline: line counter: pipe: read-line returns EOF
PASS: ports.test: newline: line counter: pipe: line count is 5 at EOF
PASS: ports.test: newline: line counter: pipe: column is correct at EOF
PASS: ports.test: newline: line counter: string: at beginning of input
PASS: ports.test: newline: line counter: string: read first character
PASS: ports.test: newline: line counter: string: after reading one character
PASS: ports.test: newline: line counter: string: read first newline
PASS: ports.test: newline: line counter: string: after reading first newline char
PASS: ports.test: newline: line counter: string: second line read correctly
PASS: ports.test: newline: line counter: string: read-line increments line number
PASS: ports.test: newline: line counter: string: read-line returns EOF
PASS: ports.test: newline: line counter: string: line count is 5 at EOF
PASS: ports.test: newline: line counter: string: column is correct at EOF
PASS: ports.test: no newline: line counter: file: at beginning of input
PASS: ports.test: no newline: line counter: file: read first character
PASS: ports.test: no newline: line counter: file: after reading one character
PASS: ports.test: no newline: line counter: file: read first newline
PASS: ports.test: no newline: line counter: file: after reading first newline char
PASS: ports.test: no newline: line counter: file: second line read correctly
PASS: ports.test: no newline: line counter: file: read-line increments line number
PASS: ports.test: no newline: line counter: file: read-line returns EOF
PASS: ports.test: no newline: line counter: file: line count is 5 at EOF
PASS: ports.test: no newline: line counter: file: column is correct at EOF
PASS: ports.test: no newline: line counter: pipe: at beginning of input
PASS: ports.test: no newline: line counter: pipe: read first character
PASS: ports.test: no newline: line counter: pipe: after reading one character
PASS: ports.test: no newline: line counter: pipe: read first newline
PASS: ports.test: no newline: line counter: pipe: after reading first newline char
PASS: ports.test: no newline: line counter: pipe: second line read correctly
PASS: ports.test: no newline: line counter: pipe: read-line increments line number
PASS: ports.test: no newline: line counter: pipe: read-line returns EOF
PASS: ports.test: no newline: line counter: pipe: line count is 5 at EOF
PASS: ports.test: no newline: line counter: pipe: column is correct at EOF
PASS: ports.test: no newline: line counter: string: at beginning of input
PASS: ports.test: no newline: line counter: string: read first character
PASS: ports.test: no newline: line counter: string: after reading one character
PASS: ports.test: no newline: line counter: string: read first newline
PASS: ports.test: no newline: line counter: string: after reading first newline char
PASS: ports.test: no newline: line counter: string: second line read correctly
PASS: ports.test: no newline: line counter: string: read-line increments line number
PASS: ports.test: no newline: line counter: string: read-line returns EOF
PASS: ports.test: no newline: line counter: string: line count is 5 at EOF
PASS: ports.test: no newline: line counter: string: column is correct at EOF
PASS: ports.test: port-line and port-column for output ports: at beginning of input
PASS: ports.test: port-line and port-column for output ports: after writing one character
PASS: ports.test: port-line and port-column for output ports: after writing first newline char
PASS: ports.test: port-line and port-column for output ports: line count is 5 at end
PASS: ports.test: port-line and port-column for output ports: column is correct at end
PASS: ports.test: port-column: output: x
PASS: ports.test: port-column: output: \a
PASS: ports.test: port-column: output: x\a
PASS: ports.test: port-column: output: \x08 backspace
PASS: ports.test: port-column: output: x\x08 backspace
PASS: ports.test: port-column: output: \n
PASS: ports.test: port-column: output: x\n
PASS: ports.test: port-column: output: \r
PASS: ports.test: port-column: output: x\r
PASS: ports.test: port-column: output: \t
PASS: ports.test: port-column: output: x\t
PASS: ports.test: port-column: input: x
PASS: ports.test: port-column: input: \a
PASS: ports.test: port-column: input: x\a
PASS: ports.test: port-column: input: \x08 backspace
PASS: ports.test: port-column: input: x\x08 backspace
PASS: ports.test: port-column: input: \n
PASS: ports.test: port-column: input: x\n
PASS: ports.test: port-column: input: \r
PASS: ports.test: port-column: input: x\r
PASS: ports.test: port-column: input: \t
PASS: ports.test: port-column: input: x\t
PASS: ports.test: port-line: set most-positive-fixnum/2
PASS: ports.test: port-encoding: set-port-encoding!, wrong encoding
PASS: ports.test: port-encoding: %default-port-encoding, wrong encoding
PASS: ports.test: port-for-each: passing freed cell
PASS: ports.test: fdes->port: fdes->ports finds port
PASS: ports.test: seek: file port: SEEK_CUR
PASS: ports.test: seek: file port: SEEK_SET
PASS: ports.test: seek: file port: SEEK_END
PASS: ports.test: truncate-file: flonum file
PASS: ports.test: truncate-file: frac file
PASS: ports.test: truncate-file: filename: flonum length
PASS: ports.test: truncate-file: filename: shorten
PASS: ports.test: truncate-file: filename: shorten to current pos
PASS: ports.test: truncate-file: file descriptor: shorten
PASS: ports.test: truncate-file: file descriptor: shorten to current pos
PASS: ports.test: truncate-file: file port: shorten
PASS: ports.test: truncate-file: file port: shorten to current pos
PASS: ports.test: read-delimited!: read-delimited! reads a first line
PASS: ports.test: read-delimited!: read-delimited! reads a first line
PASS: ports.test: char-ready? returns true on string port
PASS: ports.test: char-ready? returns true on string port as default port
PASS: ports.test: pending EOF behavior: peek-char does not swallow EOF (soft port)
PASS: ports.test: pending EOF behavior: unread clears pending EOF (soft port)
PASS: ports.test: pending EOF behavior: unread clears pending EOF (string port)
PASS: ports.test: pending EOF behavior: unread clears pending EOF (file port)
PASS: ports.test: pending EOF behavior: seek clears pending EOF (string port)
PASS: ports.test: pending EOF behavior: seek clears pending EOF (file port)
PASS: ports.test: closing current-input-port: read
PASS: ports.test: closing current-input-port: read-char
PASS: ports.test: closing current-input-port: read-line
PASS: ports.test: setvbuf: closed port
PASS: ports.test: setvbuf: string port
PASS: ports.test: setvbuf: line/column number preserved
PASS: ports.test: unget-bytevector
PASS: ports.test: unicode byte-order marks (BOMs): BOM not discarded from Latin-1 stream
PASS: ports.test: unicode byte-order marks (BOMs): BOM not discarded from Latin-2 stream
PASS: ports.test: unicode byte-order marks (BOMs): BOM not discarded from UTF-16BE stream
PASS: ports.test: unicode byte-order marks (BOMs): BOM not discarded from UTF-16LE stream
PASS: ports.test: unicode byte-order marks (BOMs): BOM not discarded from UTF-32BE stream
PASS: ports.test: unicode byte-order marks (BOMs): BOM not discarded from UTF-32LE stream
PASS: ports.test: unicode byte-order marks (BOMs): BOM not written to UTF-8 stream
PASS: ports.test: unicode byte-order marks (BOMs): BOM not written to UTF-16BE stream
PASS: ports.test: unicode byte-order marks (BOMs): BOM not written to UTF-16LE stream
PASS: ports.test: unicode byte-order marks (BOMs): BOM not written to UTF-32BE stream
PASS: ports.test: unicode byte-order marks (BOMs): BOM not written to UTF-32LE stream
PASS: ports.test: unicode byte-order marks (BOMs): Don't read from the port unless user asks to
PASS: ports.test: unicode byte-order marks (BOMs): BOM discarded from start of UTF-8 stream
PASS: ports.test: unicode byte-order marks (BOMs): BOM discarded from start of UTF-8 stream after seek to 0
PASS: ports.test: unicode byte-order marks (BOMs): Only one BOM discarded from start of UTF-8 stream
PASS: ports.test: unicode byte-order marks (BOMs): BOM not discarded from UTF-8 stream after seek to > 0
PASS: ports.test: unicode byte-order marks (BOMs): BOM not discarded unless at start of UTF-8 stream
PASS: ports.test: unicode byte-order marks (BOMs): BOM (BE) written to start of UTF-16 stream
PASS: ports.test: unicode byte-order marks (BOMs): BOM (BE) written to UTF-16 stream after set-port-encoding!
PASS: ports.test: unicode byte-order marks (BOMs): BOM discarded from start of UTF-16 stream (BE)
PASS: ports.test: unicode byte-order marks (BOMs): BOM discarded from start of UTF-16 stream (BE) after seek to 0
PASS: ports.test: unicode byte-order marks (BOMs): Only one BOM discarded from start of UTF-16 stream (BE)
PASS: ports.test: unicode byte-order marks (BOMs): BOM not discarded from UTF-16 stream (BE) after seek to > 0
PASS: ports.test: unicode byte-order marks (BOMs): BOM not discarded unless at start of UTF-16 stream
PASS: ports.test: unicode byte-order marks (BOMs): BOM discarded from start of UTF-16 stream (LE)
PASS: ports.test: unicode byte-order marks (BOMs): BOM discarded from start of UTF-16 stream (LE) after seek to 0
PASS: ports.test: unicode byte-order marks (BOMs): Only one BOM discarded from start of UTF-16 stream (LE)
PASS: ports.test: unicode byte-order marks (BOMs): BOM discarded from start of UTF-32 stream (BE)
PASS: ports.test: unicode byte-order marks (BOMs): BOM discarded from start of UTF-32 stream (BE) after seek to 0
PASS: ports.test: unicode byte-order marks (BOMs): Only one BOM discarded from start of UTF-32 stream (BE)
PASS: ports.test: unicode byte-order marks (BOMs): BOM not discarded from UTF-32 stream (BE) after seek to > 0
PASS: ports.test: unicode byte-order marks (BOMs): BOM discarded within UTF-16 stream (BE) after set-port-encoding!
PASS: ports.test: unicode byte-order marks (BOMs): BOM discarded within UTF-16 stream (LE,BE) after set-port-encoding!
PASS: ports.test: unicode byte-order marks (BOMs): BOM discarded within UTF-32 stream (BE) after set-port-encoding!
PASS: ports.test: unicode byte-order marks (BOMs): BOM discarded within UTF-32 stream (LE,BE) after set-port-encoding!
PASS: ports.test: unicode byte-order marks (BOMs): BOM not discarded unless at start of UTF-32 stream
PASS: ports.test: unicode byte-order marks (BOMs): BOM discarded from start of UTF-32 stream (LE)
PASS: ports.test: unicode byte-order marks (BOMs): BOM discarded from start of UTF-32 stream (LE) after seek to 0
PASS: ports.test: unicode byte-order marks (BOMs): Only one BOM discarded from start of UTF-32 stream (LE)
PASS: ports.test: %file-port-name-canonicalization: absolute file name & empty %load-path entry
PASS: ports.test: %file-port-name-canonicalization: relative canonicalization with /
PASS: ports.test: %file-port-name-canonicalization: relative canonicalization with /dev/..
PASS: ports.test: %file-port-name-canonicalization: relative canonicalization from ice-9
PASS: ports.test: %file-port-name-canonicalization: relative canonicalization with common prefixes
PASS: ports.test: %file-port-name-canonicalization: absolute canonicalization from ice-9
PASS: ports.test: file name separators: no backslash separators in Windows file names
PASS: posix.test: mkstemp: number arg
PASS: posix.test: mkstemp: binary mode honored
PASS: posix.test: putenv: something
PASS: posix.test: putenv: replacing
PASS: posix.test: putenv: empty
PASS: posix.test: putenv: removing
PASS: posix.test: putenv: modifying string doesn't change env
PASS: posix.test: setenv: something
PASS: posix.test: setenv: replacing
PASS: posix.test: setenv: empty
PASS: posix.test: setenv: removing
PASS: posix.test: unsetenv: something
PASS: posix.test: unsetenv: empty
PASS: posix.test: ttyname: non-tty argument
PASS: posix.test: utime: valid argument (second resolution)
PASS: posix.test: utime: AT_SYMLINK_NOFOLLOW
PASS: posix.test: affinity: getaffinity
PASS: posix.test: affinity: setaffinity
PASS: posix.test: system*: http://bugs.gnu.org/13166
PASS: posix.test: crypt: basic usage
PASS: posix.test: crypt: crypt invalid salt on glibc
PASS: print.test: write: r7rs-symbols: basic
PASS: print.test: write: r7rs-symbols: escapes
PASS: print.test: write: r7rs-symbols: brackets
PASS: print.test: write: r7rs-symbols: starts with bar
PASS: print.test: write: r7rs-symbols: ends with bar
PASS: print.test: write: r7rs-symbols: starts with backslash
PASS: print.test: write: r7rs-symbols: ends with backslash
PASS: print.test: pretty-print: pair
PASS: print.test: pretty-print: list
PASS: print.test: pretty-print: dotted list
PASS: print.test: pretty-print: quote
PASS: print.test: pretty-print: non-starting quote
PASS: print.test: pretty-print: nested quote
PASS: print.test: pretty-print: quasiquote & co.
PASS: print.test: truncated-print: (tprint exp 10 ISO-8859-1)
PASS: print.test: truncated-print: (tprint exp 15 ISO-8859-1)
PASS: print.test: truncated-print: (tprint exp 18 ISO-8859-1)
PASS: print.test: truncated-print: (tprint exp 20 ISO-8859-1)
PASS: print.test: truncated-print: (tprint The quick brown fox 20 ISO-8859-1)
PASS: print.test: truncated-print: (tprint The quick brown fox 20 UTF-8)
PASS: print.test: truncated-print: (tprint (current-module) 20 ISO-8859-1)
PASS: print.test: truncated-print: (tprint (current-module) 20 UTF-8)
PASS: print.test: truncated-print: (tprint testv 11 UTF-8)
PASS: print.test: truncated-print: (tprint testv 11 ISO-8859-1)
PASS: print.test: truncated-print: (tprint testv 8 UTF-8)
PASS: print.test: truncated-print: (tprint testv 8 ISO-8859-1)
PASS: print.test: truncated-print: (tprint testv 5 UTF-8)
PASS: print.test: truncated-print: (tprint testv 5 ISO-8859-1)
PASS: print.test: truncated-print: (tprint testv 4 UTF-8)
PASS: print.test: truncated-print: (tprint testv 4 ISO-8859-1)
PASS: print.test: truncated-print: (tprint (make-typed-array #t 9.0) 6 UTF-8)
PASS: print.test: truncated-print: (tprint (make-typed-array #t 9.0) 7 UTF-8)
PASS: print.test: truncated-print: (tprint (make-typed-array (quote f64) 9.0) 8 UTF-8)
PASS: print.test: truncated-print: (tprint (make-typed-array (quote f64) 9.0) 10 UTF-8)
PASS: print.test: truncated-print: (tprint (make-typed-array (quote s32) 0 20 20) 7 UTF-8)
PASS: print.test: truncated-print: (tprint testa 8 UTF-8)
PASS: print.test: truncated-print: (tprint testa 10 UTF-8)
PASS: print.test: truncated-print: (tprint testa 12 UTF-8)
PASS: print.test: truncated-print: (tprint testa 14 UTF-8)
PASS: print.test: truncated-print: (tprint (make-array (quote foo) (quote (-1 3)) 5) 30 UTF-8)
PASS: print.test: truncated-print: (tprint (make-array (quote foo) (quote (-1 3)) 0 5) 30 UTF-8)
PASS: print.test: truncated-print: (tprint (make-typed-array #t (make-typed-array #t 9 2) 2 2) 40 UTF-8)
PASS: print.test: truncated-print: (tprint (make-vector 2 (make-typed-array #t 9 2 2)) 40 UTF-8)
PASS: print.test: truncated-print: (tprint (make-list 2 (make-typed-array #t 9 2 2)) 40 UTF-8)
PASS: print.test: truncated-print: (tprint (make-list 2 (make-typed-array #t 9)) 20 UTF-8)
PASS: print.test: truncated-print: (tprint (make-list 2 (make-typed-array #t 9)) 10 UTF-8)
PASS: procprop.test: procedure-name: simple subr
PASS: procprop.test: procedure-name: gsubr
PASS: procprop.test: procedure-name: from eval
PASS: procprop.test: procedure-arity: simple subr
PASS: procprop.test: procedure-arity: gsubr
PASS: procprop.test: procedure-arity: port-closed?
PASS: procprop.test: procedure-arity: apply
PASS: procprop.test: procedure-arity: cons*
PASS: procprop.test: procedure-arity: list
PASS: procprop.test: procedure-arity: fixed, eval
PASS: procprop.test: procedure-arity: rest, eval
PASS: procprop.test: procedure-arity: opt, eval
PASS: procs.test: common procedures: identity
PASS: procs.test: common procedures: const
PASS: procs.test: common procedures: negate
PASS: procs.test: common procedures: compose: identity
PASS: procs.test: common procedures: compose: simple
PASS: procs.test: common procedures: compose: multiple values
PASS: q.test: q-pop!: no elems: empty
PASS: q.test: q-pop!: no elems: valid at end
PASS: q.test: q-pop!: one elem: x
PASS: q.test: q-pop!: one elem: valid after x
PASS: q.test: q-pop!: one elem: empty
PASS: q.test: q-pop!: one elem: valid at end
PASS: q.test: q-pop!: two elems: y
PASS: q.test: q-pop!: two elems: valid after y
PASS: q.test: q-pop!: two elems: x
PASS: q.test: q-pop!: two elems: valid after x
PASS: q.test: q-pop!: two elems: empty
PASS: q.test: q-pop!: two elems: valid at end
PASS: q.test: q-pop!: three elems: z
PASS: q.test: q-pop!: three elems: valid after z
PASS: q.test: q-pop!: three elems: y
PASS: q.test: q-pop!: three elems: valid after y
PASS: q.test: q-pop!: three elems: x
PASS: q.test: q-pop!: three elems: valid after x
PASS: q.test: q-pop!: three elems: empty
PASS: q.test: q-pop!: three elems: valid at end
PASS: r4rs.test: object recognized by only one predicate: #t
PASS: r4rs.test: object recognized by only one predicate: #f
PASS: r4rs.test: object recognized by only one predicate: a
PASS: r4rs.test: object recognized by only one predicate: ()
PASS: r4rs.test: object recognized by only one predicate: 9739
PASS: r4rs.test: object recognized by only one predicate: (test)
PASS: r4rs.test: object recognized by only one predicate: #<procedure 4c0f840 at ice-9/eval.scm:330:13 ()>
PASS: r4rs.test: object recognized by only one predicate: #<procedure car (_)>
PASS: r4rs.test: object recognized by only one predicate: test
PASS: r4rs.test: object recognized by only one predicate: 
PASS: r4rs.test: object recognized by only one predicate: test
PASS: r4rs.test: object recognized by only one predicate: #()
PASS: r4rs.test: object recognized by only one predicate: #(a b c)
PASS: r4rs.test: (4 1 2): (quote (quote a))
PASS: r4rs.test: (4 1 2): (quote (quote a))
PASS: r4rs.test: (4 1 3): (#<procedure * (#:optional _ _ . _)> 3 4)
PASS: r4rs.test: (4 1 4): (#<procedure 4cddd30 at ice-9/eval.scm:333:13 (a)> 4)
PASS: r4rs.test: (4 1 4): (#<procedure reverse-subtract (a b)> 7 10)
PASS: r4rs.test: (4 1 4): (#<procedure 4eedda0 at ice-9/eval.scm:333:13 (a)> 6)
PASS: r4rs.test: (4 1 4): (#<procedure 4eed500 at ice-9/eval.scm:383:13 rest> 3 4 5 6)
PASS: r4rs.test: (4 1 4): (#<procedure 4827df0 at ice-9/eval.scm:389:13 (a b . rest)> 3 4 5 6)
PASS: r4rs.test: (4 1 5): (if yes)
PASS: r4rs.test: (4 1 5): (if no)
PASS: r4rs.test: (4 1 5): (if 1)
PASS: r4rs.test: (4 1 6): (define 3)
PASS: r4rs.test: (4 1 6): (set! 5)
PASS: r4rs.test: (4 2 1): (cond greater)
PASS: r4rs.test: (4 2 1): (cond equal)
PASS: r4rs.test: (4 2 1): (cond 2)
PASS: r4rs.test: (4 2 1): (case composite)
PASS: r4rs.test: (4 2 1): (case consonant)
PASS: r4rs.test: (4 2 1): (and #t)
PASS: r4rs.test: (4 2 1): (and #f)
PASS: r4rs.test: (4 2 1): (and (f g))
PASS: r4rs.test: (4 2 1): (and #t)
PASS: r4rs.test: (4 2 1): (or #t)
PASS: r4rs.test: (4 2 1): (or #t)
PASS: r4rs.test: (4 2 1): (or #f)
PASS: r4rs.test: (4 2 1): (or #f)
PASS: r4rs.test: (4 2 1): (or (b c))
PASS: r4rs.test: (4 2 2): (let 6)
PASS: r4rs.test: (4 2 2): (let 35)
PASS: r4rs.test: (4 2 2): (let* 70)
PASS: r4rs.test: (4 2 2): (letrec #t)
PASS: r4rs.test: (4 2 2): (let 5)
PASS: r4rs.test: (4 2 2): (let 34)
PASS: r4rs.test: (4 2 2): (let 6)
PASS: r4rs.test: (4 2 2): (let 34)
PASS: r4rs.test: (4 2 2): (let* 7)
PASS: r4rs.test: (4 2 2): (let* 34)
PASS: r4rs.test: (4 2 2): (let* 8)
PASS: r4rs.test: (4 2 2): (let* 34)
PASS: r4rs.test: (4 2 2): (letrec 9)
PASS: r4rs.test: (4 2 2): (letrec 34)
PASS: r4rs.test: (4 2 2): (letrec 10)
PASS: r4rs.test: (4 2 2): (letrec 34)
PASS: r4rs.test: (4 2 3): (begin 6)
PASS: r4rs.test: (4 2 4): (do #(0 1 2 3 4))
PASS: r4rs.test: (4 2 4): (do 25)
PASS: r4rs.test: (4 2 4): (let 1)
PASS: r4rs.test: (4 2 4): (let ((6 1 3) (-5 -2)))
PASS: r4rs.test: (4 2 6): (quasiquote (list 3 4))
PASS: r4rs.test: (4 2 6): (quasiquote (list a (quote a)))
PASS: r4rs.test: (4 2 6): (quasiquote (a 3 4 5 6 b))
PASS: r4rs.test: (4 2 6): (quasiquote ((foo 7) . cons))
PASS: r4rs.test: (4 2 6): (quasiquote #(10 5 2 4 3 8))
PASS: r4rs.test: (4 2 6): (quasiquote 5)
PASS: r4rs.test: (4 2 6): (quasiquote (a (quasiquote (b (unquote (+ 1 2)) (unquote (foo 4 d)) e)) f))
PASS: r4rs.test: (4 2 6): (quasiquote (a (quasiquote (b (unquote x) (unquote (quote y)) d)) e))
PASS: r4rs.test: (4 2 6): (quasiquote (list 3 4))
PASS: r4rs.test: (4 2 6): (quasiquote (quasiquote (list (unquote (+ 1 2)) 4)))
PASS: r4rs.test: (5 2 1): (define 6)
PASS: r4rs.test: (5 2 1): (define 1)
PASS: r4rs.test: (5 2 2): (define 45)
PASS: r4rs.test: (5 2 2): (#<procedure foo ()>)
PASS: r4rs.test: (5 2 2): (define 34)
PASS: r4rs.test: (5 2 2): (#<procedure foo ()>)
PASS: r4rs.test: (5 2 2): (define 34)
PASS: r4rs.test: (5 2 2): (#<procedure foo (a)> 88)
PASS: r4rs.test: (5 2 2): (#<procedure foo (a)> 4)
PASS: r4rs.test: (5 2 2): (define 34)
PASS: r4rs.test: (6 1): (#<procedure not (_)> #t)
PASS: r4rs.test: (6 1): (#<procedure not (_)> 3)
PASS: r4rs.test: (6 1): (#<procedure not (_)> (3))
PASS: r4rs.test: (6 1): (#<procedure not (_)> #f)
PASS: r4rs.test: (6 1): (#<procedure not (_)> ())
PASS: r4rs.test: (6 1): (#<procedure not (_)> ())
PASS: r4rs.test: (6 1): (#<procedure not (_)> nil)
PASS: r4rs.test: (6 1): (#<procedure boolean? (_)> #f)
PASS: r4rs.test: (6 1): (#<procedure boolean? (_)> 0)
PASS: r4rs.test: (6 1): (#<procedure boolean? (_)> ())
PASS: r4rs.test: (6 2): (#<procedure eqv? (#:optional _ _ . _)> a a)
PASS: r4rs.test: (6 2): (#<procedure eqv? (#:optional _ _ . _)> a b)
PASS: r4rs.test: (6 2): (#<procedure eqv? (#:optional _ _ . _)> 2 2)
PASS: r4rs.test: (6 2): (#<procedure eqv? (#:optional _ _ . _)> () ())
PASS: r4rs.test: (6 2): (#<procedure eqv? (#:optional _ _ . _)> 10000 10000)
PASS: r4rs.test: (6 2): (#<procedure eqv? (#:optional _ _ . _)> (1 . 2) (1 . 2))
PASS: r4rs.test: (6 2): (#<procedure eqv? (#:optional _ _ . _)> #<procedure 42dc770 at ice-9/eval.scm:330:13 ()> #<procedure 42dc760 at ice-9/eval.scm:330:13 ()>)
PASS: r4rs.test: (6 2): (#<procedure eqv? (#:optional _ _ . _)> #f nil)
PASS: r4rs.test: (6 2): (#<procedure eqv? (#:optional _ _ . _)> #<procedure p (a)> #<procedure p (a)>)
PASS: r4rs.test: (6 2): (#<procedure eqv? (#:optional _ _ . _)> #<procedure 3e87e00 at ice-9/eval.scm:330:13 ()> #<procedure 3e87e00 at ice-9/eval.scm:330:13 ()>)
PASS: r4rs.test: (6 2): (#<procedure eqv? (#:optional _ _ . _)> #<procedure 3e87560 at ice-9/eval.scm:330:13 ()> #<procedure 3e87520 at ice-9/eval.scm:330:13 ()>)
PASS: r4rs.test: (6 2): (#<procedure eqv? (#:optional _ _ . _)> #<procedure f ()> #<procedure g ()>)
PASS: r4rs.test: (6 2): (#<procedure eq? (#:optional _ _ . _)> a a)
PASS: r4rs.test: (6 2): (#<procedure eq? (#:optional _ _ . _)> (a) (a))
PASS: r4rs.test: (6 2): (#<procedure eq? (#:optional _ _ . _)> () ())
PASS: r4rs.test: (6 2): (#<procedure eq? (#:optional _ _ . _)> #<procedure car (_)> #<procedure car (_)>)
PASS: r4rs.test: (6 2): (#<procedure eq? (#:optional _ _ . _)> (a) (a))
PASS: r4rs.test: (6 2): (#<procedure eq? (#:optional _ _ . _)> #() #())
PASS: r4rs.test: (6 2): (#<procedure eq? (#:optional _ _ . _)> #<procedure x (a)> #<procedure x (a)>)
PASS: r4rs.test: (6 2): (#<procedure equal? (#:optional _ _ . _)> a a)
PASS: r4rs.test: (6 2): (#<procedure equal? (#:optional _ _ . _)> (a) (a))
PASS: r4rs.test: (6 2): (#<procedure equal? (#:optional _ _ . _)> (a (b) c) (a (b) c))
PASS: r4rs.test: (6 2): (#<procedure equal? (#:optional _ _ . _)> "abc" "abc")
PASS: r4rs.test: (6 2): (#<procedure equal? (#:optional _ _ . _)> 2 2)
PASS: r4rs.test: (6 2): (#<procedure equal? (#:optional _ _ . _)> #(a a a a a) #(a a a a a))
PASS: r4rs.test: (6 3): (dot (a b c d e))
PASS: r4rs.test: (6 3): (#<procedure list? (_)> (a b c))
PASS: r4rs.test: (6 3): (set-cdr! (a . 4))
PASS: r4rs.test: (6 3): (#<procedure eqv? (#:optional _ _ . _)> (a . 4) (a . 4))
PASS: r4rs.test: (6 3): (dot (a b c . d))
PASS: r4rs.test: (6 3): (#<procedure list? (_)> (a . 4))
PASS: r4rs.test: (6 3): (list? #f)
PASS: r4rs.test: (6 3): (#<procedure pair? (_)> (a . b))
PASS: r4rs.test: (6 3): (#<procedure pair? (_)> (a . 1))
PASS: r4rs.test: (6 3): (#<procedure pair? (_)> (a b c))
PASS: r4rs.test: (6 3): (#<procedure pair? (_)> ())
PASS: r4rs.test: (6 3): (#<procedure pair? (_)> #(a b))
PASS: r4rs.test: (6 3): (#<procedure cons (_ _)> a ())
PASS: r4rs.test: (6 3): (#<procedure cons (_ _)> (a) (b c d))
PASS: r4rs.test: (6 3): (#<procedure cons (_ _)> "a" (b c))
PASS: r4rs.test: (6 3): (#<procedure cons (_ _)> a 3)
PASS: r4rs.test: (6 3): (#<procedure cons (_ _)> (a b) c)
PASS: r4rs.test: (6 3): (#<procedure car (_)> (a b c))
PASS: r4rs.test: (6 3): (#<procedure car (_)> ((a) b c d))
PASS: r4rs.test: (6 3): (#<procedure car (_)> (1 . 2))
PASS: r4rs.test: (6 3): (#<procedure cdr (_)> ((a) b c d))
PASS: r4rs.test: (6 3): (#<procedure cdr (_)> (1 . 2))
PASS: r4rs.test: (6 3): (#<procedure list _> a 7 c)
PASS: r4rs.test: (6 3): (#<procedure list _>)
PASS: r4rs.test: (6 3): (#<procedure length (_)> (a b c))
PASS: r4rs.test: (6 3): (#<procedure length (_)> (a (b) (c d e)))
PASS: r4rs.test: (6 3): (#<procedure length (_)> ())
PASS: r4rs.test: (6 3): (#<procedure append _> (x) (y))
PASS: r4rs.test: (6 3): (#<procedure append _> (a) (b c d))
PASS: r4rs.test: (6 3): (#<procedure append _> (a (b)) ((c)))
PASS: r4rs.test: (6 3): (#<procedure append _>)
PASS: r4rs.test: (6 3): (#<procedure append _> (a b) (c . d))
PASS: r4rs.test: (6 3): (#<procedure append _> () a)
PASS: r4rs.test: (6 3): (#<procedure reverse (_)> (a b c))
PASS: r4rs.test: (6 3): (#<procedure reverse (_)> (a (b c) d (e (f))))
PASS: r4rs.test: (6 3): (#<procedure list-ref (_ _)> (a b c d) 2)
PASS: r4rs.test: (6 3): (#<procedure memq (_ _)> a (a b c))
PASS: r4rs.test: (6 3): (#<procedure memq (_ _)> b (a b c))
PASS: r4rs.test: (6 3): (#<procedure memq (_ _)> a (b c d))
PASS: r4rs.test: (6 3): (#<procedure memq (_ _)> (a) (b (a) c))
PASS: r4rs.test: (6 3): (#<procedure member (_ _)> (a) (b (a) c))
PASS: r4rs.test: (6 3): (#<procedure memv (_ _)> 101 (100 101 102))
PASS: r4rs.test: (6 3): (#<procedure assq (_ _)> a ((a 1) (b 2) (c 3)))
PASS: r4rs.test: (6 3): (#<procedure assq (_ _)> b ((a 1) (b 2) (c 3)))
PASS: r4rs.test: (6 3): (#<procedure assq (_ _)> d ((a 1) (b 2) (c 3)))
PASS: r4rs.test: (6 3): (#<procedure assq (_ _)> (a) (((a)) ((b)) ((c))))
PASS: r4rs.test: (6 3): (#<procedure assoc (_ _)> (a) (((a)) ((b)) ((c))))
PASS: r4rs.test: (6 3): (#<procedure assv (_ _)> 5 ((2 3) (5 7) (11 13)))
PASS: r4rs.test: (6 4): (#<procedure symbol? (_)> foo)
PASS: r4rs.test: (6 4): (#<procedure symbol? (_)> a)
PASS: r4rs.test: (6 4): (#<procedure symbol? (_)> "bar")
PASS: r4rs.test: (6 4): (#<procedure symbol? (_)> nil)
PASS: r4rs.test: (6 4): (#<procedure symbol? (_)> ())
PASS: r4rs.test: (6 4): (#<procedure symbol? (_)> #f)
PASS: r4rs.test: (6 4): (#<procedure symbol->string (_)> Malvina)
PASS: r4rs.test: (6 4): (string-set! "cb")
PASS: r4rs.test: (6 4): (#<procedure symbol->string (_)> ab)
PASS: r4rs.test: (6 4): (#<procedure string->symbol (_)> "ab")
PASS: r4rs.test: (6 4): (#<procedure string->symbol (_)> "JollyWog")
PASS: r4rs.test: (6 5 5): (#<procedure number? (_)> 3)
PASS: r4rs.test: (6 5 5): (#<procedure complex? (_)> 3)
PASS: r4rs.test: (6 5 5): (#<procedure real? (_)> 3)
PASS: r4rs.test: (6 5 5): (#<procedure rational? (_)> 3)
PASS: r4rs.test: (6 5 5): (#<procedure integer? (_)> 3)
PASS: r4rs.test: (6 5 5): (#<procedure exact? (_)> 3)
PASS: r4rs.test: (6 5 5): (#<procedure inexact? (_)> 3)
PASS: r4rs.test: (6 5 5): (#<procedure = (#:optional _ _ . _)> 22 22 22)
PASS: r4rs.test: (6 5 5): (#<procedure = (#:optional _ _ . _)> 22 22)
PASS: r4rs.test: (6 5 5): (#<procedure = (#:optional _ _ . _)> 34 34 35)
PASS: r4rs.test: (6 5 5): (#<procedure = (#:optional _ _ . _)> 34 35)
PASS: r4rs.test: (6 5 5): (#<procedure > (#:optional _ _ . _)> 3 -6246)
PASS: r4rs.test: (6 5 5): (#<procedure > (#:optional _ _ . _)> 9 9 -2424)
PASS: r4rs.test: (6 5 5): (#<procedure >= (#:optional _ _ . _)> 3 -4 -6246)
PASS: r4rs.test: (6 5 5): (#<procedure >= (#:optional _ _ . _)> 9 9)
PASS: r4rs.test: (6 5 5): (#<procedure >= (#:optional _ _ . _)> 8 9)
PASS: r4rs.test: (6 5 5): (#<procedure < (#:optional _ _ . _)> -1 2 3 4 5 6 7 8)
PASS: r4rs.test: (6 5 5): (#<procedure < (#:optional _ _ . _)> -1 2 3 4 4 5 6 7)
PASS: r4rs.test: (6 5 5): (#<procedure <= (#:optional _ _ . _)> -1 2 3 4 5 6 7 8)
PASS: r4rs.test: (6 5 5): (#<procedure <= (#:optional _ _ . _)> -1 2 3 4 4 5 6 7)
PASS: r4rs.test: (6 5 5): (#<procedure < (#:optional _ _ . _)> 1 3 2)
PASS: r4rs.test: (6 5 5): (#<procedure >= (#:optional _ _ . _)> 1 3 2)
PASS: r4rs.test: (6 5 5): (#<procedure zero? (_)> 0)
PASS: r4rs.test: (6 5 5): (#<procedure zero? (_)> 1)
PASS: r4rs.test: (6 5 5): (#<procedure zero? (_)> -1)
PASS: r4rs.test: (6 5 5): (#<procedure zero? (_)> -100)
PASS: r4rs.test: (6 5 5): (#<procedure positive? (_)> 4)
PASS: r4rs.test: (6 5 5): (#<procedure positive? (_)> -4)
PASS: r4rs.test: (6 5 5): (#<procedure positive? (_)> 0)
PASS: r4rs.test: (6 5 5): (#<procedure negative? (_)> 4)
PASS: r4rs.test: (6 5 5): (#<procedure negative? (_)> -4)
PASS: r4rs.test: (6 5 5): (#<procedure negative? (_)> 0)
PASS: r4rs.test: (6 5 5): (#<procedure odd? (_)> 3)
PASS: r4rs.test: (6 5 5): (#<procedure odd? (_)> 2)
PASS: r4rs.test: (6 5 5): (#<procedure odd? (_)> -4)
PASS: r4rs.test: (6 5 5): (#<procedure odd? (_)> -1)
PASS: r4rs.test: (6 5 5): (#<procedure even? (_)> 3)
PASS: r4rs.test: (6 5 5): (#<procedure even? (_)> 2)
PASS: r4rs.test: (6 5 5): (#<procedure even? (_)> -4)
PASS: r4rs.test: (6 5 5): (#<procedure even? (_)> -1)
PASS: r4rs.test: (6 5 5): (#<procedure max (#:optional _ _ . _)> 34 5 7 38 6)
PASS: r4rs.test: (6 5 5): (#<procedure min (#:optional _ _ . _)> 3 5 5 330 4 -24)
PASS: r4rs.test: (6 5 5): (#<procedure + (#:optional _ _ . _)> 3 4)
PASS: r4rs.test: (6 5 5): (#<procedure + (#:optional _ _ . _)> 3)
PASS: r4rs.test: (6 5 5): (#<procedure + (#:optional _ _ . _)>)
PASS: r4rs.test: (6 5 5): (#<procedure * (#:optional _ _ . _)> 4)
PASS: r4rs.test: (6 5 5): (#<procedure * (#:optional _ _ . _)>)
PASS: r4rs.test: (6 5 5): (#<procedure - (#:optional _ _ . _)> 3 4)
PASS: r4rs.test: (6 5 5): (#<procedure - (#:optional _ _ . _)> 3)
PASS: r4rs.test: (6 5 5): (#<procedure abs (_)> -7)
PASS: r4rs.test: (6 5 5): (#<procedure abs (_)> 7)
PASS: r4rs.test: (6 5 5): (#<procedure abs (_)> 0)
PASS: r4rs.test: (6 5 5): (#<procedure quotient (_ _)> 35 7)
PASS: r4rs.test: (6 5 5): (#<procedure quotient (_ _)> -35 7)
PASS: r4rs.test: (6 5 5): (#<procedure quotient (_ _)> 35 -7)
PASS: r4rs.test: (6 5 5): (#<procedure quotient (_ _)> -35 -7)
PASS: r4rs.test: (6 5 5): (#<procedure modulo (_ _)> 13 4)
PASS: r4rs.test: (6 5 5): (#<procedure remainder (_ _)> 13 4)
PASS: r4rs.test: (6 5 5): (#<procedure modulo (_ _)> -13 4)
PASS: r4rs.test: (6 5 5): (#<procedure remainder (_ _)> -13 4)
PASS: r4rs.test: (6 5 5): (#<procedure modulo (_ _)> 13 -4)
PASS: r4rs.test: (6 5 5): (#<procedure remainder (_ _)> 13 -4)
PASS: r4rs.test: (6 5 5): (#<procedure modulo (_ _)> -13 -4)
PASS: r4rs.test: (6 5 5): (#<procedure remainder (_ _)> -13 -4)
PASS: r4rs.test: (6 5 5): (#<procedure divtest (a b)> 238 9)
PASS: r4rs.test: (6 5 5): (#<procedure divtest (a b)> -238 9)
PASS: r4rs.test: (6 5 5): (#<procedure divtest (a b)> 238 -9)
PASS: r4rs.test: (6 5 5): (#<procedure divtest (a b)> -238 -9)
PASS: r4rs.test: (6 5 5): (#<procedure gcd (#:optional _ _ . _)> 0 4)
PASS: r4rs.test: (6 5 5): (#<procedure gcd (#:optional _ _ . _)> -4 0)
PASS: r4rs.test: (6 5 5): (#<procedure gcd (#:optional _ _ . _)> 32 -36)
PASS: r4rs.test: (6 5 5): (#<procedure gcd (#:optional _ _ . _)>)
PASS: r4rs.test: (6 5 5): (#<procedure lcm (#:optional _ _ . _)> 32 -36)
PASS: r4rs.test: (6 5 5): (#<procedure lcm (#:optional _ _ . _)>)
PASS: r4rs.test: (6 5 6): (#<procedure number->string (_ #:optional _)> 0)
PASS: r4rs.test: (6 5 6): (#<procedure number->string (_ #:optional _)> 100)
PASS: r4rs.test: (6 5 6): (#<procedure number->string (_ #:optional _)> 256 16)
PASS: r4rs.test: (6 5 6): (#<procedure string->number (_ #:optional _)> "100")
PASS: r4rs.test: (6 5 6): (#<procedure string->number (_ #:optional _)> "100" 16)
PASS: r4rs.test: (6 5 6): (#<procedure string->number (_ #:optional _)> "")
PASS: r4rs.test: (6 5 6): (#<procedure string->number (_ #:optional _)> ".")
PASS: r4rs.test: (6 5 6): (#<procedure string->number (_ #:optional _)> "d")
PASS: r4rs.test: (6 5 6): (#<procedure string->number (_ #:optional _)> "D")
PASS: r4rs.test: (6 5 6): (#<procedure string->number (_ #:optional _)> "i")
PASS: r4rs.test: (6 5 6): (#<procedure string->number (_ #:optional _)> "I")
PASS: r4rs.test: (6 5 6): (#<procedure string->number (_ #:optional _)> "3i")
PASS: r4rs.test: (6 5 6): (#<procedure string->number (_ #:optional _)> "3I")
PASS: r4rs.test: (6 5 6): (#<procedure string->number (_ #:optional _)> "33i")
PASS: r4rs.test: (6 5 6): (#<procedure string->number (_ #:optional _)> "33I")
PASS: r4rs.test: (6 5 6): (#<procedure string->number (_ #:optional _)> "3.3i")
PASS: r4rs.test: (6 5 6): (#<procedure string->number (_ #:optional _)> "3.3I")
PASS: r4rs.test: (6 5 6): (#<procedure string->number (_ #:optional _)> "-")
PASS: r4rs.test: (6 5 6): (#<procedure string->number (_ #:optional _)> "+")
PASS: r4rs.test: (6 6): (#<procedure eqv? (#:optional _ _ . _)> #\space #\space)
PASS: r4rs.test: (6 6): (#<procedure eqv? (#:optional _ _ . _)> #\space #\space)
PASS: r4rs.test: (6 6): (#<procedure char? (_)> #\a)
PASS: r4rs.test: (6 6): (#<procedure char? (_)> #\()
PASS: r4rs.test: (6 6): (#<procedure char? (_)> #\space)
PASS: r4rs.test: (6 6): (#<procedure char? (_)> #\newline)
PASS: r4rs.test: (6 6): (#<procedure char=? (#:optional _ _ . _)> #\A #\B)
PASS: r4rs.test: (6 6): (#<procedure char=? (#:optional _ _ . _)> #\a #\b)
PASS: r4rs.test: (6 6): (#<procedure char=? (#:optional _ _ . _)> #\9 #\0)
PASS: r4rs.test: (6 6): (#<procedure char=? (#:optional _ _ . _)> #\A #\A)
PASS: r4rs.test: (6 6): (#<procedure char<? (#:optional _ _ . _)> #\A #\B)
PASS: r4rs.test: (6 6): (#<procedure char<? (#:optional _ _ . _)> #\a #\b)
PASS: r4rs.test: (6 6): (#<procedure char<? (#:optional _ _ . _)> #\9 #\0)
PASS: r4rs.test: (6 6): (#<procedure char<? (#:optional _ _ . _)> #\A #\A)
PASS: r4rs.test: (6 6): (#<procedure char>? (#:optional _ _ . _)> #\A #\B)
PASS: r4rs.test: (6 6): (#<procedure char>? (#:optional _ _ . _)> #\a #\b)
PASS: r4rs.test: (6 6): (#<procedure char>? (#:optional _ _ . _)> #\9 #\0)
PASS: r4rs.test: (6 6): (#<procedure char>? (#:optional _ _ . _)> #\A #\A)
PASS: r4rs.test: (6 6): (#<procedure char<=? (#:optional _ _ . _)> #\A #\B)
PASS: r4rs.test: (6 6): (#<procedure char<=? (#:optional _ _ . _)> #\a #\b)
PASS: r4rs.test: (6 6): (#<procedure char<=? (#:optional _ _ . _)> #\9 #\0)
PASS: r4rs.test: (6 6): (#<procedure char<=? (#:optional _ _ . _)> #\A #\A)
PASS: r4rs.test: (6 6): (#<procedure char>=? (#:optional _ _ . _)> #\A #\B)
PASS: r4rs.test: (6 6): (#<procedure char>=? (#:optional _ _ . _)> #\a #\b)
PASS: r4rs.test: (6 6): (#<procedure char>=? (#:optional _ _ . _)> #\9 #\0)
PASS: r4rs.test: (6 6): (#<procedure char>=? (#:optional _ _ . _)> #\A #\A)
PASS: r4rs.test: (6 6): (#<procedure char-ci=? (#:optional _ _ . _)> #\A #\B)
PASS: r4rs.test: (6 6): (#<procedure char-ci=? (#:optional _ _ . _)> #\a #\B)
PASS: r4rs.test: (6 6): (#<procedure char-ci=? (#:optional _ _ . _)> #\A #\b)
PASS: r4rs.test: (6 6): (#<procedure char-ci=? (#:optional _ _ . _)> #\a #\b)
PASS: r4rs.test: (6 6): (#<procedure char-ci=? (#:optional _ _ . _)> #\9 #\0)
PASS: r4rs.test: (6 6): (#<procedure char-ci=? (#:optional _ _ . _)> #\A #\A)
PASS: r4rs.test: (6 6): (#<procedure char-ci=? (#:optional _ _ . _)> #\A #\a)
PASS: r4rs.test: (6 6): (#<procedure char-ci<? (#:optional _ _ . _)> #\A #\B)
PASS: r4rs.test: (6 6): (#<procedure char-ci<? (#:optional _ _ . _)> #\a #\B)
PASS: r4rs.test: (6 6): (#<procedure char-ci<? (#:optional _ _ . _)> #\A #\b)
PASS: r4rs.test: (6 6): (#<procedure char-ci<? (#:optional _ _ . _)> #\a #\b)
PASS: r4rs.test: (6 6): (#<procedure char-ci<? (#:optional _ _ . _)> #\9 #\0)
PASS: r4rs.test: (6 6): (#<procedure char-ci<? (#:optional _ _ . _)> #\A #\A)
PASS: r4rs.test: (6 6): (#<procedure char-ci<? (#:optional _ _ . _)> #\A #\a)
PASS: r4rs.test: (6 6): (#<procedure char-ci>? (#:optional _ _ . _)> #\A #\B)
PASS: r4rs.test: (6 6): (#<procedure char-ci>? (#:optional _ _ . _)> #\a #\B)
PASS: r4rs.test: (6 6): (#<procedure char-ci>? (#:optional _ _ . _)> #\A #\b)
PASS: r4rs.test: (6 6): (#<procedure char-ci>? (#:optional _ _ . _)> #\a #\b)
PASS: r4rs.test: (6 6): (#<procedure char-ci>? (#:optional _ _ . _)> #\9 #\0)
PASS: r4rs.test: (6 6): (#<procedure char-ci>? (#:optional _ _ . _)> #\A #\A)
PASS: r4rs.test: (6 6): (#<procedure char-ci>? (#:optional _ _ . _)> #\A #\a)
PASS: r4rs.test: (6 6): (#<procedure char-ci<=? (#:optional _ _ . _)> #\A #\B)
PASS: r4rs.test: (6 6): (#<procedure char-ci<=? (#:optional _ _ . _)> #\a #\B)
PASS: r4rs.test: (6 6): (#<procedure char-ci<=? (#:optional _ _ . _)> #\A #\b)
PASS: r4rs.test: (6 6): (#<procedure char-ci<=? (#:optional _ _ . _)> #\a #\b)
PASS: r4rs.test: (6 6): (#<procedure char-ci<=? (#:optional _ _ . _)> #\9 #\0)
PASS: r4rs.test: (6 6): (#<procedure char-ci<=? (#:optional _ _ . _)> #\A #\A)
PASS: r4rs.test: (6 6): (#<procedure char-ci<=? (#:optional _ _ . _)> #\A #\a)
PASS: r4rs.test: (6 6): (#<procedure char-ci>=? (#:optional _ _ . _)> #\A #\B)
PASS: r4rs.test: (6 6): (#<procedure char-ci>=? (#:optional _ _ . _)> #\a #\B)
PASS: r4rs.test: (6 6): (#<procedure char-ci>=? (#:optional _ _ . _)> #\A #\b)
PASS: r4rs.test: (6 6): (#<procedure char-ci>=? (#:optional _ _ . _)> #\a #\b)
PASS: r4rs.test: (6 6): (#<procedure char-ci>=? (#:optional _ _ . _)> #\9 #\0)
PASS: r4rs.test: (6 6): (#<procedure char-ci>=? (#:optional _ _ . _)> #\A #\A)
PASS: r4rs.test: (6 6): (#<procedure char-ci>=? (#:optional _ _ . _)> #\A #\a)
PASS: r4rs.test: (6 6): (#<procedure char-alphabetic? (_)> #\a)
PASS: r4rs.test: (6 6): (#<procedure char-alphabetic? (_)> #\A)
PASS: r4rs.test: (6 6): (#<procedure char-alphabetic? (_)> #\z)
PASS: r4rs.test: (6 6): (#<procedure char-alphabetic? (_)> #\Z)
PASS: r4rs.test: (6 6): (#<procedure char-alphabetic? (_)> #\0)
PASS: r4rs.test: (6 6): (#<procedure char-alphabetic? (_)> #\9)
PASS: r4rs.test: (6 6): (#<procedure char-alphabetic? (_)> #\space)
PASS: r4rs.test: (6 6): (#<procedure char-alphabetic? (_)> #\;)
PASS: r4rs.test: (6 6): (#<procedure char-numeric? (_)> #\a)
PASS: r4rs.test: (6 6): (#<procedure char-numeric? (_)> #\A)
PASS: r4rs.test: (6 6): (#<procedure char-numeric? (_)> #\z)
PASS: r4rs.test: (6 6): (#<procedure char-numeric? (_)> #\Z)
PASS: r4rs.test: (6 6): (#<procedure char-numeric? (_)> #\0)
PASS: r4rs.test: (6 6): (#<procedure char-numeric? (_)> #\9)
PASS: r4rs.test: (6 6): (#<procedure char-numeric? (_)> #\space)
PASS: r4rs.test: (6 6): (#<procedure char-numeric? (_)> #\;)
PASS: r4rs.test: (6 6): (#<procedure char-whitespace? (_)> #\a)
PASS: r4rs.test: (6 6): (#<procedure char-whitespace? (_)> #\A)
PASS: r4rs.test: (6 6): (#<procedure char-whitespace? (_)> #\z)
PASS: r4rs.test: (6 6): (#<procedure char-whitespace? (_)> #\Z)
PASS: r4rs.test: (6 6): (#<procedure char-whitespace? (_)> #\0)
PASS: r4rs.test: (6 6): (#<procedure char-whitespace? (_)> #\9)
PASS: r4rs.test: (6 6): (#<procedure char-whitespace? (_)> #\space)
PASS: r4rs.test: (6 6): (#<procedure char-whitespace? (_)> #\;)
PASS: r4rs.test: (6 6): (#<procedure char-upper-case? (_)> #\0)
PASS: r4rs.test: (6 6): (#<procedure char-upper-case? (_)> #\9)
PASS: r4rs.test: (6 6): (#<procedure char-upper-case? (_)> #\space)
PASS: r4rs.test: (6 6): (#<procedure char-upper-case? (_)> #\;)
PASS: r4rs.test: (6 6): (#<procedure char-lower-case? (_)> #\0)
PASS: r4rs.test: (6 6): (#<procedure char-lower-case? (_)> #\9)
PASS: r4rs.test: (6 6): (#<procedure char-lower-case? (_)> #\space)
PASS: r4rs.test: (6 6): (#<procedure char-lower-case? (_)> #\;)
PASS: r4rs.test: (6 6): (#<procedure integer->char (_)> 46)
PASS: r4rs.test: (6 6): (#<procedure integer->char (_)> 65)
PASS: r4rs.test: (6 6): (#<procedure integer->char (_)> 97)
PASS: r4rs.test: (6 6): (#<procedure char-upcase (_)> #\A)
PASS: r4rs.test: (6 6): (#<procedure char-upcase (_)> #\a)
PASS: r4rs.test: (6 6): (#<procedure char-downcase (_)> #\A)
PASS: r4rs.test: (6 6): (#<procedure char-downcase (_)> #\a)
PASS: r4rs.test: (6 7): (#<procedure string? (_)> "The word \"recursion\\\" has many meanings.")
PASS: r4rs.test: (6 7): (#<procedure string? (_)> "")
PASS: r4rs.test: (6 7): (string-set! "?**")
PASS: r4rs.test: (6 7): (#<procedure string _> #\a #\b #\c)
PASS: r4rs.test: (6 7): (#<procedure string _>)
PASS: r4rs.test: (6 7): (#<procedure string-length (_)> "abc")
PASS: r4rs.test: (6 7): (#<procedure string-ref (_ _)> "abc" 0)
PASS: r4rs.test: (6 7): (#<procedure string-ref (_ _)> "abc" 2)
PASS: r4rs.test: (6 7): (#<procedure string-length (_)> "")
PASS: r4rs.test: (6 7): (#<procedure substring (_ _ #:optional _)> "ab" 0 0)
PASS: r4rs.test: (6 7): (#<procedure substring (_ _ #:optional _)> "ab" 1 1)
PASS: r4rs.test: (6 7): (#<procedure substring (_ _ #:optional _)> "ab" 2 2)
PASS: r4rs.test: (6 7): (#<procedure substring (_ _ #:optional _)> "ab" 0 1)
PASS: r4rs.test: (6 7): (#<procedure substring (_ _ #:optional _)> "ab" 1 2)
PASS: r4rs.test: (6 7): (#<procedure substring (_ _ #:optional _)> "ab" 0 2)
PASS: r4rs.test: (6 7): (#<procedure string-append _> "foo" "bar")
PASS: r4rs.test: (6 7): (#<procedure string-append _> "foo")
PASS: r4rs.test: (6 7): (#<procedure string-append _> "foo" "")
PASS: r4rs.test: (6 7): (#<procedure string-append _> "" "foo")
PASS: r4rs.test: (6 7): (#<procedure string-append _>)
PASS: r4rs.test: (6 7): (#<procedure make-string (_ #:optional _)> 0)
PASS: r4rs.test: (6 7): (#<procedure string=? (#:optional _ _ . _)> "" "")
PASS: r4rs.test: (6 7): (#<procedure string<? (#:optional _ _ . _)> "" "")
PASS: r4rs.test: (6 7): (#<procedure string>? (#:optional _ _ . _)> "" "")
PASS: r4rs.test: (6 7): (#<procedure string<=? (#:optional _ _ . _)> "" "")
PASS: r4rs.test: (6 7): (#<procedure string>=? (#:optional _ _ . _)> "" "")
PASS: r4rs.test: (6 7): (#<procedure string-ci=? (#:optional _ _ . _)> "" "")
PASS: r4rs.test: (6 7): (#<procedure string-ci<? (#:optional _ _ . _)> "" "")
PASS: r4rs.test: (6 7): (#<procedure string-ci>? (#:optional _ _ . _)> "" "")
PASS: r4rs.test: (6 7): (#<procedure string-ci<=? (#:optional _ _ . _)> "" "")
PASS: r4rs.test: (6 7): (#<procedure string-ci>=? (#:optional _ _ . _)> "" "")
PASS: r4rs.test: (6 7): (#<procedure string=? (#:optional _ _ . _)> "A" "B")
PASS: r4rs.test: (6 7): (#<procedure string=? (#:optional _ _ . _)> "a" "b")
PASS: r4rs.test: (6 7): (#<procedure string=? (#:optional _ _ . _)> "9" "0")
PASS: r4rs.test: (6 7): (#<procedure string=? (#:optional _ _ . _)> "A" "A")
PASS: r4rs.test: (6 7): (#<procedure string<? (#:optional _ _ . _)> "A" "B")
PASS: r4rs.test: (6 7): (#<procedure string<? (#:optional _ _ . _)> "a" "b")
PASS: r4rs.test: (6 7): (#<procedure string<? (#:optional _ _ . _)> "9" "0")
PASS: r4rs.test: (6 7): (#<procedure string<? (#:optional _ _ . _)> "A" "A")
PASS: r4rs.test: (6 7): (#<procedure string>? (#:optional _ _ . _)> "A" "B")
PASS: r4rs.test: (6 7): (#<procedure string>? (#:optional _ _ . _)> "a" "b")
PASS: r4rs.test: (6 7): (#<procedure string>? (#:optional _ _ . _)> "9" "0")
PASS: r4rs.test: (6 7): (#<procedure string>? (#:optional _ _ . _)> "A" "A")
PASS: r4rs.test: (6 7): (#<procedure string<=? (#:optional _ _ . _)> "A" "B")
PASS: r4rs.test: (6 7): (#<procedure string<=? (#:optional _ _ . _)> "a" "b")
PASS: r4rs.test: (6 7): (#<procedure string<=? (#:optional _ _ . _)> "9" "0")
PASS: r4rs.test: (6 7): (#<procedure string<=? (#:optional _ _ . _)> "A" "A")
PASS: r4rs.test: (6 7): (#<procedure string>=? (#:optional _ _ . _)> "A" "B")
PASS: r4rs.test: (6 7): (#<procedure string>=? (#:optional _ _ . _)> "a" "b")
PASS: r4rs.test: (6 7): (#<procedure string>=? (#:optional _ _ . _)> "9" "0")
PASS: r4rs.test: (6 7): (#<procedure string>=? (#:optional _ _ . _)> "A" "A")
PASS: r4rs.test: (6 7): (#<procedure string-ci=? (#:optional _ _ . _)> "A" "B")
PASS: r4rs.test: (6 7): (#<procedure string-ci=? (#:optional _ _ . _)> "a" "B")
PASS: r4rs.test: (6 7): (#<procedure string-ci=? (#:optional _ _ . _)> "A" "b")
PASS: r4rs.test: (6 7): (#<procedure string-ci=? (#:optional _ _ . _)> "a" "b")
PASS: r4rs.test: (6 7): (#<procedure string-ci=? (#:optional _ _ . _)> "9" "0")
PASS: r4rs.test: (6 7): (#<procedure string-ci=? (#:optional _ _ . _)> "A" "A")
PASS: r4rs.test: (6 7): (#<procedure string-ci=? (#:optional _ _ . _)> "A" "a")
PASS: r4rs.test: (6 7): (#<procedure string-ci<? (#:optional _ _ . _)> "A" "B")
PASS: r4rs.test: (6 7): (#<procedure string-ci<? (#:optional _ _ . _)> "a" "B")
PASS: r4rs.test: (6 7): (#<procedure string-ci<? (#:optional _ _ . _)> "A" "b")
PASS: r4rs.test: (6 7): (#<procedure string-ci<? (#:optional _ _ . _)> "a" "b")
PASS: r4rs.test: (6 7): (#<procedure string-ci<? (#:optional _ _ . _)> "9" "0")
PASS: r4rs.test: (6 7): (#<procedure string-ci<? (#:optional _ _ . _)> "A" "A")
PASS: r4rs.test: (6 7): (#<procedure string-ci<? (#:optional _ _ . _)> "A" "a")
PASS: r4rs.test: (6 7): (#<procedure string-ci>? (#:optional _ _ . _)> "A" "B")
PASS: r4rs.test: (6 7): (#<procedure string-ci>? (#:optional _ _ . _)> "a" "B")
PASS: r4rs.test: (6 7): (#<procedure string-ci>? (#:optional _ _ . _)> "A" "b")
PASS: r4rs.test: (6 7): (#<procedure string-ci>? (#:optional _ _ . _)> "a" "b")
PASS: r4rs.test: (6 7): (#<procedure string-ci>? (#:optional _ _ . _)> "9" "0")
PASS: r4rs.test: (6 7): (#<procedure string-ci>? (#:optional _ _ . _)> "A" "A")
PASS: r4rs.test: (6 7): (#<procedure string-ci>? (#:optional _ _ . _)> "A" "a")
PASS: r4rs.test: (6 7): (#<procedure string-ci<=? (#:optional _ _ . _)> "A" "B")
PASS: r4rs.test: (6 7): (#<procedure string-ci<=? (#:optional _ _ . _)> "a" "B")
PASS: r4rs.test: (6 7): (#<procedure string-ci<=? (#:optional _ _ . _)> "A" "b")
PASS: r4rs.test: (6 7): (#<procedure string-ci<=? (#:optional _ _ . _)> "a" "b")
PASS: r4rs.test: (6 7): (#<procedure string-ci<=? (#:optional _ _ . _)> "9" "0")
PASS: r4rs.test: (6 7): (#<procedure string-ci<=? (#:optional _ _ . _)> "A" "A")
PASS: r4rs.test: (6 7): (#<procedure string-ci<=? (#:optional _ _ . _)> "A" "a")
PASS: r4rs.test: (6 7): (#<procedure string-ci>=? (#:optional _ _ . _)> "A" "B")
PASS: r4rs.test: (6 7): (#<procedure string-ci>=? (#:optional _ _ . _)> "a" "B")
PASS: r4rs.test: (6 7): (#<procedure string-ci>=? (#:optional _ _ . _)> "A" "b")
PASS: r4rs.test: (6 7): (#<procedure string-ci>=? (#:optional _ _ . _)> "a" "b")
PASS: r4rs.test: (6 7): (#<procedure string-ci>=? (#:optional _ _ . _)> "9" "0")
PASS: r4rs.test: (6 7): (#<procedure string-ci>=? (#:optional _ _ . _)> "A" "A")
PASS: r4rs.test: (6 7): (#<procedure string-ci>=? (#:optional _ _ . _)> "A" "a")
PASS: r4rs.test: (6 8): (#<procedure vector? (_)> #(0 (2 2 2 2) "Anna"))
PASS: r4rs.test: (6 8): (#<procedure vector? (_)> #())
PASS: r4rs.test: (6 8): (#<procedure vector _> a b c)
PASS: r4rs.test: (6 8): (#<procedure vector _>)
PASS: r4rs.test: (6 8): (#<procedure vector-length (_)> #(0 (2 2 2 2) "Anna"))
PASS: r4rs.test: (6 8): (#<procedure vector-length (_)> #())
PASS: r4rs.test: (6 8): (#<procedure vector-ref (_ _)> #(1 1 2 3 5 8 13 21) 5)
PASS: r4rs.test: (6 8): (vector-set #(0 ("Sue" "Sue") "Anna"))
PASS: r4rs.test: (6 8): (#<procedure make-vector (_ #:optional _)> 2 hi)
PASS: r4rs.test: (6 8): (#<procedure make-vector (_ #:optional _)> 0)
PASS: r4rs.test: (6 8): (#<procedure make-vector (_ #:optional _)> 0 a)
PASS: r4rs.test: (6 9): (#<procedure procedure? (_)> #<procedure car (_)>)
PASS: r4rs.test: (6 9): (#<procedure procedure? (_)> car)
PASS: r4rs.test: (6 9): (#<procedure procedure? (_)> #<procedure 185ab30 at ice-9/eval.scm:333:13 (a)>)
PASS: r4rs.test: (6 9): (#<procedure procedure? (_)> (lambda (x) (* x x)))
PASS: r4rs.test: (6 9): (#<procedure call-with-current-continuation (proc)> #<procedure procedure? (_)>)
PASS: r4rs.test: (6 9): (#<procedure apply (fun args) | (fun arg1 . args)> #<procedure + (#:optional _ _ . _)> (3 4))
PASS: r4rs.test: (6 9): (#<procedure apply (fun args) | (fun arg1 . args)> #<procedure 191faf0 at ice-9/eval.scm:336:13 (a b)> (3 4))
PASS: r4rs.test: (6 9): (#<procedure apply (fun args) | (fun arg1 . args)> #<procedure + (#:optional _ _ . _)> 10 (3 4))
PASS: r4rs.test: (6 9): (#<procedure apply (fun args) | (fun arg1 . args)> #<procedure list _> ())
PASS: r4rs.test: (6 9): (#<procedure 19c8fd0 at ice-9/eval.scm:383:13 rest> 12 75)
PASS: r4rs.test: (6 9): (#<procedure map (f l) | (f l1 l2) | (f l1 . rest)> #<procedure cadr (_)> ((a b) (d e) (g h)))
PASS: r4rs.test: (6 9): (#<procedure map (f l) | (f l1 l2) | (f l1 . rest)> #<procedure + (#:optional _ _ . _)> (1 2 3) (4 5 6))
PASS: r4rs.test: (6 9): (for-each #(0 1 4 9 16))
PASS: r4rs.test: (6 9): (#<procedure call-with-current-continuation (proc)> #<procedure 1583930 at ice-9/eval.scm:333:13 (a)>)
PASS: r4rs.test: (6 9): (#<procedure list-length (a)> (1 2 3 4))
PASS: r4rs.test: (6 9): (#<procedure list-length (a)> (a b . c))
PASS: r4rs.test: (6 9): (#<procedure map (f l) | (f l1 l2) | (f l1 . rest)> #<procedure cadr (_)> ())
PASS: r4rs.test: (6 10 1): (#<procedure input-port? (_)> #<input: file /dev/pts/0>)
PASS: r4rs.test: (6 10 1): (#<procedure output-port? (_)> #<output: file 1>)
PASS: r4rs.test: (6 10 1): (#<procedure call-with-input-file (file proc #:key binary encoding guess-encoding)> "/home/gunter/Data/pi02/GNU/guile/test-suite/tests/r4rs.test" #<procedure input-port? (_)>)
PASS: r4rs.test: (6 10 1): (#<procedure input-port? (_)> #<input: tests/r4rs.test 29>)
PASS: r4rs.test: (6 10 2): (#<procedure peek-char (#:optional _)> #<input: tests/r4rs.test 29>)
PASS: r4rs.test: (6 10 2): (#<procedure read-char (#:optional _)> #<input: tests/r4rs.test 29>)
PASS: r4rs.test: (6 10 2): (#<procedure read (#:optional port)> #<input: tests/r4rs.test 29>)
PASS: r4rs.test: (6 10 2): (#<procedure peek-char (#:optional _)> #<input: tests/r4rs.test 29>)
PASS: r4rs.test: (6 10 2): (#<procedure read (#:optional port)> #<input: tests/r4rs.test 29>)
PASS: r4rs.test: (6 10 3): (#<procedure call-with-output-file (file proc #:key binary encoding)> "/home/gunter/Data/pi02/GNU/guile/tmp1" #<procedure 10ac2d0 at ice-9/eval.scm:333:13 (a)>)
PASS: r4rs.test: (6 10 3): (#<procedure read (#:optional port)> #<input: /home/gunter/Data/pi02/GNU/guile/tmp1 32>)
PASS: r4rs.test: (6 10 3): (#<procedure eof-object? (_)> #<eof>)
PASS: r4rs.test: (6 10 3): (#<procedure eof-object? (_)> #<eof>)
PASS: r4rs.test: (6 10 3): (input-port? #t)
PASS: r4rs.test: (6 10 3): (#<procedure read-char (#:optional _)> #<input: /home/gunter/Data/pi02/GNU/guile/tmp1 29>)
PASS: r4rs.test: (6 10 3): (#<procedure read (#:optional port)> #<input: /home/gunter/Data/pi02/GNU/guile/tmp1 29>)
PASS: r4rs.test: (6 10 3): (#<procedure read (#:optional port)> #<input: /home/gunter/Data/pi02/GNU/guile/tmp1 29>)
PASS: r4rs.test: (6 10 3): (#<procedure output-port? (_)> #<output: /home/gunter/Data/pi02/GNU/guile/tmp2 29>)
PASS: r4rs.test: (6 10 3): (#<procedure read (#:optional port)> #<input: /home/gunter/Data/pi02/GNU/guile/tmp2 32>)
PASS: r4rs.test: (6 10 3): (#<procedure eof-object? (_)> #<eof>)
PASS: r4rs.test: (6 10 3): (#<procedure eof-object? (_)> #<eof>)
PASS: r4rs.test: (6 10 3): (input-port? #t)
PASS: r4rs.test: (6 10 3): (#<procedure read-char (#:optional _)> #<input: /home/gunter/Data/pi02/GNU/guile/tmp2 29>)
PASS: r4rs.test: (6 10 3): (#<procedure read (#:optional port)> #<input: /home/gunter/Data/pi02/GNU/guile/tmp2 29>)
PASS: r4rs.test: (6 10 3): (#<procedure read (#:optional port)> #<input: /home/gunter/Data/pi02/GNU/guile/tmp2 29>)
PASS: r4rs.test: (6 5 5): (#<procedure inexact? (_)> 3.9)
PASS: r4rs.test: (6 5 5): (inexact? #t)
PASS: r4rs.test: (6 5 5): (max 4.0)
PASS: r4rs.test: (6 5 5): (exact->inexact 4.0)
PASS: r4rs.test: (6 5 5): (#<procedure round (_)> -4.5)
PASS: r4rs.test: (6 5 5): (#<procedure round (_)> -3.5)
PASS: r4rs.test: (6 5 5): (#<procedure round (_)> -3.9)
PASS: r4rs.test: (6 5 5): (#<procedure round (_)> 0.0)
PASS: r4rs.test: (6 5 5): (#<procedure round (_)> 0.25)
PASS: r4rs.test: (6 5 5): (#<procedure round (_)> 0.8)
PASS: r4rs.test: (6 5 5): (#<procedure round (_)> 3.5)
PASS: r4rs.test: (6 5 5): (#<procedure round (_)> 4.5)
PASS: r4rs.test: (6 5 5): (#<procedure call-with-output-file (file proc #:key binary encoding)> "/home/gunter/Data/pi02/GNU/guile/tmp3" #<procedure f91d00 at ice-9/eval.scm:333:13 (a)>)
PASS: r4rs.test: (6 5 5): (#<procedure read (#:optional port)> #<input: /home/gunter/Data/pi02/GNU/guile/tmp3 32>)
PASS: r4rs.test: (6 5 5): (#<procedure eof-object? (_)> #<eof>)
PASS: r4rs.test: (6 5 5): (#<procedure eof-object? (_)> #<eof>)
PASS: r4rs.test: (6 5 5): (input-port? #t)
PASS: r4rs.test: (6 5 5): (#<procedure read-char (#:optional _)> #<input: /home/gunter/Data/pi02/GNU/guile/tmp3 29>)
PASS: r4rs.test: (6 5 5): (#<procedure read (#:optional port)> #<input: /home/gunter/Data/pi02/GNU/guile/tmp3 29>)
PASS: r4rs.test: (6 5 5): (#<procedure read (#:optional port)> #<input: /home/gunter/Data/pi02/GNU/guile/tmp3 29>)
PASS: r4rs.test: (6 5 5): (pentium-fdiv-bug #t)
PASS: r4rs.test: (6 5 5): (#<procedure modulo (_ _)> -2177452800 86400)
PASS: r4rs.test: (6 5 5): (#<procedure modulo (_ _)> 2177452800 -86400)
PASS: r4rs.test: (6 5 5): (#<procedure modulo (_ _)> 2177452800 86400)
PASS: r4rs.test: (6 5 5): (#<procedure modulo (_ _)> -2177452800 -86400)
PASS: r4rs.test: (6 5 5): (remainder #t)
PASS: r4rs.test: (6 5 5): (remainder #t)
PASS: r4rs.test: (6 5 6): (#<procedure string->number (_ #:optional _)> "281474976710655")
PASS: r4rs.test: (6 5 6): (#<procedure number->string (_ #:optional _)> 281474976710655)
PASS: r4rs.test: (6 9): (#<procedure leaf-eq? (a b)> (a (b (c))) ((a) b c))
PASS: r4rs.test: (6 9): (#<procedure leaf-eq? (a b)> (a (b (c))) ((a) b c d))
PASS: r4rs.test: (6 7): (#<procedure string->list (_ #:optional _ _)> "P l")
PASS: r4rs.test: (6 7): (#<procedure string->list (_ #:optional _ _)> "")
PASS: r4rs.test: (6 7): (#<procedure list->string (_)> (#\1 #\\ #\"))
PASS: r4rs.test: (6 7): (#<procedure list->string (_)> ())
PASS: r4rs.test: (6 8): (#<procedure vector->list (_)> #(dah dah didah))
PASS: r4rs.test: (6 8): (#<procedure vector->list (_)> #())
PASS: r4rs.test: (6 8): (#<procedure list->vector (_)> (dididit dah))
PASS: r4rs.test: (6 8): (#<procedure list->vector (_)> ())
PASS: r4rs.test: (6 10 4): (load (#t #f #\a () 9739 -3 . #((test) "te \" \" st" "" test #() b c)))
PASS: r4rs.test: (6 9): (delay 3)
PASS: r4rs.test: (6 9): (delay (3 3))
PASS: r4rs.test: (6 9): (delay 2)
PASS: r4rs.test: (6 9): (#<procedure force (_)> #<promise 6>)
PASS: r4rs.test: (6 9): (#<procedure force (_)> #<promise 6>)
PASS: r4rs.test: (6 9): (force 3)
PASS: r5rs_pitfall.test: 1.1
PASS: r5rs_pitfall.test: 1.2
PASS: r5rs_pitfall.test: 1.3
PASS: r5rs_pitfall.test: 2.1
PASS: r5rs_pitfall.test: 3.1
PASS: r5rs_pitfall.test: 3.2
PASS: r5rs_pitfall.test: 3.3
PASS: r5rs_pitfall.test: 3.4
PASS: r5rs_pitfall.test: 4.1
PASS: r5rs_pitfall.test: 4.2
PASS: r5rs_pitfall.test: 4.3
PASS: r5rs_pitfall.test: 5.1
PASS: r5rs_pitfall.test: 5.2
PASS: r5rs_pitfall.test: 5.3
PASS: r5rs_pitfall.test: 6.1
PASS: r5rs_pitfall.test: 7.1
PASS: r5rs_pitfall.test: 7.2
PASS: r5rs_pitfall.test: 7.3
PASS: r5rs_pitfall.test: 7.4
PASS: r5rs_pitfall.test: 8.1
PASS: r5rs_pitfall.test: 8.2
PASS: r5rs_pitfall.test: 8.3
PASS: r6rs-arithmetic-bitwise.test: bitwise-not: bitwise-not simple
PASS: r6rs-arithmetic-bitwise.test: bitwise-and: bitwise-and simple
PASS: r6rs-arithmetic-bitwise.test: bitwise-ior: bitwise-ior simple
PASS: r6rs-arithmetic-bitwise.test: bitwise-xor: bitwise-xor simple
PASS: r6rs-arithmetic-bitwise.test: bitwise-if: bitwise-if simple
PASS: r6rs-arithmetic-bitwise.test: bitwise-bit-count: bitwise-bit-count simple
PASS: r6rs-arithmetic-bitwise.test: bitwise-bit-count: bitwise-bit-count negative
PASS: r6rs-arithmetic-bitwise.test: bitwise-length: bitwise-length simple
PASS: r6rs-arithmetic-bitwise.test: bitwise-length: bitwise-length leading zeros
PASS: r6rs-arithmetic-bitwise.test: bitwise-first-bit-set: bitwise-first-bit-set simple
PASS: r6rs-arithmetic-bitwise.test: bitwise-first-bit-set: bitwise-first-bit-set zero
PASS: r6rs-arithmetic-bitwise.test: bitwise-copy-bit: bitwise-copy-bit simple
PASS: r6rs-arithmetic-bitwise.test: bitwise-bit-field: bitwise-bit-field simple
PASS: r6rs-arithmetic-bitwise.test: bitwise-copy-bit-field: bitwise-copy-bit-field simple
PASS: r6rs-arithmetic-bitwise.test: bitwise-arithmetic-shift: bitwise-arithmetic-shift simple
PASS: r6rs-arithmetic-bitwise.test: bitwise-arithmetic-shift-left: bitwise-arithmetic-shift-left simple
PASS: r6rs-arithmetic-bitwise.test: bitwise-arithmetic-shift-right: bitwise-arithmetic-shift-right simple
PASS: r6rs-arithmetic-bitwise.test: bitwise-rotate-bit-field: bitwise-rotate-bit-field simple
PASS: r6rs-arithmetic-bitwise.test: bitwise-reverse-bit-field: bitwise-reverse-bit-field simple
PASS: r6rs-arithmetic-fixnums.test: fixnum-width: consistent with least-fixnum
PASS: r6rs-arithmetic-fixnums.test: fixnum-width: consistent with greatest-fixnum
PASS: r6rs-arithmetic-fixnums.test: fixnum?: fixnum? is #t for fixnums
PASS: r6rs-arithmetic-fixnums.test: fixnum?: fixnum? is #f for non-fixnums
PASS: r6rs-arithmetic-fixnums.test: fixnum?: fixnum? is #f for non-fixnum numbers
PASS: r6rs-arithmetic-fixnums.test: fx=?: fx=? is #t for eqv inputs
PASS: r6rs-arithmetic-fixnums.test: fx=?: fx=? is #f for non-eqv inputs
PASS: r6rs-arithmetic-fixnums.test: fx>?: fx>? is #t for monotonically > inputs
PASS: r6rs-arithmetic-fixnums.test: fx>?: fx>? is #f for non-monotonically > inputs
PASS: r6rs-arithmetic-fixnums.test: fx<?: fx<? is #t for monotonically < inputs
PASS: r6rs-arithmetic-fixnums.test: fx<?: fx<? is #t for non-monotonically < inputs
PASS: r6rs-arithmetic-fixnums.test: fx>=?: fx>=? is #t for monotonically > or = inputs
PASS: r6rs-arithmetic-fixnums.test: fx>=?: fx>=? is #f for non-monotonically > or = inputs
PASS: r6rs-arithmetic-fixnums.test: fx<=?: fx<=? is #t for monotonically < or = inputs
PASS: r6rs-arithmetic-fixnums.test: fx<=?: fx<=? is #f for non-monotonically < or = inputs
PASS: r6rs-arithmetic-fixnums.test: fxzero?: fxzero? is #t for zero
PASS: r6rs-arithmetic-fixnums.test: fxzero?: fxzero? is #f for non-zero fixnums
PASS: r6rs-arithmetic-fixnums.test: fxpositive?: fxpositive? is #t for positive fixnums
PASS: r6rs-arithmetic-fixnums.test: fxpositive?: fxpositive? is #f for non-positive fixnums
PASS: r6rs-arithmetic-fixnums.test: fxnegative?: fxnegative? is #t for negative fixnums
PASS: r6rs-arithmetic-fixnums.test: fxnegative?: fxnegative? is #f for non-negative fixnums
PASS: r6rs-arithmetic-fixnums.test: fxodd?: fxodd? is #t for odd fixnums
PASS: r6rs-arithmetic-fixnums.test: fxodd?: fxodd? is #f for even fixnums
PASS: r6rs-arithmetic-fixnums.test: fxeven?: fxeven? is #t for even fixnums
PASS: r6rs-arithmetic-fixnums.test: fxeven?: fxeven? is #f for odd fixnums
PASS: r6rs-arithmetic-fixnums.test: fxmax: simple
PASS: r6rs-arithmetic-fixnums.test: fxmin: simple
PASS: r6rs-arithmetic-fixnums.test: fx+: simple
PASS: r6rs-arithmetic-fixnums.test: fx+: &implementation-restriction on non-fixnum result
PASS: r6rs-arithmetic-fixnums.test: fx*: simple
PASS: r6rs-arithmetic-fixnums.test: fx*: &implementation-restriction on non-fixnum result
PASS: r6rs-arithmetic-fixnums.test: fx-: unary fx- negates argument
PASS: r6rs-arithmetic-fixnums.test: fx-: simple
PASS: r6rs-arithmetic-fixnums.test: fx-: &assertion on non-fixnum result
PASS: r6rs-arithmetic-fixnums.test: fxdiv-and-mod: simple
PASS: r6rs-arithmetic-fixnums.test: fxdiv: simple
PASS: r6rs-arithmetic-fixnums.test: fxmod: simple
PASS: r6rs-arithmetic-fixnums.test: fxdiv0-and-mod0: simple
PASS: r6rs-arithmetic-fixnums.test: fxdiv0: simple
PASS: r6rs-arithmetic-fixnums.test: fxmod0: simple
UNRESOLVED: r6rs-arithmetic-fixnums.test: fx+/carry: simple
UNRESOLVED: r6rs-arithmetic-fixnums.test: fx-/carry: simple
UNRESOLVED: r6rs-arithmetic-fixnums.test: fx*/carry: simple
PASS: r6rs-arithmetic-fixnums.test: fxnot: simple
PASS: r6rs-arithmetic-fixnums.test: fxand: simple
PASS: r6rs-arithmetic-fixnums.test: fxior: simple
PASS: r6rs-arithmetic-fixnums.test: fxxor: simple
PASS: r6rs-arithmetic-fixnums.test: fxif: simple
PASS: r6rs-arithmetic-fixnums.test: fxbit-count: simple
PASS: r6rs-arithmetic-fixnums.test: fxbit-count: negative
PASS: r6rs-arithmetic-fixnums.test: fxlength: simple
PASS: r6rs-arithmetic-fixnums.test: fxfirst-bit-set: simple
PASS: r6rs-arithmetic-fixnums.test: fxfirst-bit-set: fxfirst-bit-set is -1 on zero
PASS: r6rs-arithmetic-fixnums.test: fxbit-set?: fxbit-set? is #t on index of set bit
PASS: r6rs-arithmetic-fixnums.test: fxbit-set?: fxbit-set? is #f on index of unset bit
PASS: r6rs-arithmetic-fixnums.test: fxcopy-bit: simple
PASS: r6rs-arithmetic-fixnums.test: fxbit-field: simple
PASS: r6rs-arithmetic-fixnums.test: fxcopy-bit-field: simple
PASS: r6rs-arithmetic-fixnums.test: fxarithmetic-shift: simple
PASS: r6rs-arithmetic-fixnums.test: fxarithmetic-shift-left: simple
PASS: r6rs-arithmetic-fixnums.test: fxarithmetic-shift-right: simple
PASS: r6rs-arithmetic-fixnums.test: fxrotate-bit-field: simple
PASS: r6rs-arithmetic-fixnums.test: fxreverse-bit-field: simple
PASS: r6rs-arithmetic-flonums.test: flonum?: flonum? is #t on flonum
PASS: r6rs-arithmetic-flonums.test: flonum?: flonum? is #f on complex
PASS: r6rs-arithmetic-flonums.test: flonum?: flonum? is #f on exact integer
PASS: r6rs-arithmetic-flonums.test: real->flonum: simple
PASS: r6rs-arithmetic-flonums.test: fl=?: fl=? is #t for eqv inputs
PASS: r6rs-arithmetic-flonums.test: fl=?: fl=? is #f for non-eqv inputs
PASS: r6rs-arithmetic-flonums.test: fl=?: +inf.0 is fl= to itself
PASS: r6rs-arithmetic-flonums.test: fl=?: 0.0 and -0.0 are fl=
PASS: r6rs-arithmetic-flonums.test: fl<?: fl<? is #t for monotonically < inputs
PASS: r6rs-arithmetic-flonums.test: fl<?: fl<? is #f for non-monotonically < inputs
PASS: r6rs-arithmetic-flonums.test: fl<=?: fl<=? is #t for monotonically < or = inputs
PASS: r6rs-arithmetic-flonums.test: fl<=?: fl<=? is #f non-monotonically < or = inputs
PASS: r6rs-arithmetic-flonums.test: fl>?: fl>? is #t for monotonically > inputs
PASS: r6rs-arithmetic-flonums.test: fl>?: fl>? is #f for non-monotonically > inputs
PASS: r6rs-arithmetic-flonums.test: fl>=?: fl>=? is #t for monotonically > or = inputs
PASS: r6rs-arithmetic-flonums.test: fl>=?: fl>=? is #f for non-monotonically > or = inputs
PASS: r6rs-arithmetic-flonums.test: flinteger?: flinteger? is #t on integer flomnums
PASS: r6rs-arithmetic-flonums.test: flinteger?: flinteger? is #f on non-integer flonums
PASS: r6rs-arithmetic-flonums.test: flzero?: flzero? is #t for 0.0 and -0.0
PASS: r6rs-arithmetic-flonums.test: flzero?: flzero? is #f for non-zero flonums
PASS: r6rs-arithmetic-flonums.test: flpositive?: flpositive? is #t on positive flonum
PASS: r6rs-arithmetic-flonums.test: flpositive?: flpositive? is #f on negative flonum
PASS: r6rs-arithmetic-flonums.test: flpositive?: 0.0 and -0.0 are not flpositive
PASS: r6rs-arithmetic-flonums.test: flnegative?: flnegative? is #t on negative flonum
PASS: r6rs-arithmetic-flonums.test: flnegative?: flnegative? is #f on positive flonum
PASS: r6rs-arithmetic-flonums.test: flnegative?: 0.0 and -0.0 are not flnegative
PASS: r6rs-arithmetic-flonums.test: flodd?: &assertion raised on non-integer flonum
PASS: r6rs-arithmetic-flonums.test: flodd?: flodd? is #t on odd flonums
PASS: r6rs-arithmetic-flonums.test: flodd?: flodd? is #f on even flonums
PASS: r6rs-arithmetic-flonums.test: fleven?: &assertion raised on non-integer flonum
PASS: r6rs-arithmetic-flonums.test: fleven?: fleven? is #t on even flonums
PASS: r6rs-arithmetic-flonums.test: fleven?: fleven? is #f on odd flonums
PASS: r6rs-arithmetic-flonums.test: flfinite?: flfinite? is #t on non-infinite flonums
PASS: r6rs-arithmetic-flonums.test: flfinite?: flfinite? is #f on infinities
PASS: r6rs-arithmetic-flonums.test: flfinite?: flfinite? is #f on NaNs
PASS: r6rs-arithmetic-flonums.test: flinfinite?: flinfinite? is #t on infinities
PASS: r6rs-arithmetic-flonums.test: flinfinite?: flinfinite? is #f on non-infinite flonums
PASS: r6rs-arithmetic-flonums.test: flnan?: flnan? is #t on NaN and -NaN
PASS: r6rs-arithmetic-flonums.test: flnan?: flnan? is #f on non-NaN values
PASS: r6rs-arithmetic-flonums.test: flmax: simple
PASS: r6rs-arithmetic-flonums.test: flmin: simple
PASS: r6rs-arithmetic-flonums.test: fl+: simple
PASS: r6rs-arithmetic-flonums.test: fl+: zero args
PASS: r6rs-arithmetic-flonums.test: fl*: simple
PASS: r6rs-arithmetic-flonums.test: fl*: zero args
PASS: r6rs-arithmetic-flonums.test: fl-: unary fl- negates argument
PASS: r6rs-arithmetic-flonums.test: fl-: simple
PASS: r6rs-arithmetic-flonums.test: fl/: unary fl/ returns multiplicative inverse
PASS: r6rs-arithmetic-flonums.test: fl/: simple
PASS: r6rs-arithmetic-flonums.test: flabs: simple
PASS: r6rs-arithmetic-flonums.test: fldiv-and-mod: simple
PASS: r6rs-arithmetic-flonums.test: fldiv: simple
PASS: r6rs-arithmetic-flonums.test: flmod: simple
PASS: r6rs-arithmetic-flonums.test: fldiv0-and-mod0: simple
PASS: r6rs-arithmetic-flonums.test: fldiv0: simple
PASS: r6rs-arithmetic-flonums.test: flmod0: simple
PASS: r6rs-arithmetic-flonums.test: flnumerator: simple
PASS: r6rs-arithmetic-flonums.test: flnumerator: infinities
PASS: r6rs-arithmetic-flonums.test: flnumerator: negative zero
PASS: r6rs-arithmetic-flonums.test: fldenominator: simple
PASS: r6rs-arithmetic-flonums.test: fldenominator: infinities
PASS: r6rs-arithmetic-flonums.test: fldenominator: zero
PASS: r6rs-arithmetic-flonums.test: flfloor: simple
PASS: r6rs-arithmetic-flonums.test: flceiling: simple
PASS: r6rs-arithmetic-flonums.test: fltruncate: simple
PASS: r6rs-arithmetic-flonums.test: flround: simple
PASS: r6rs-arithmetic-flonums.test: flexp: infinities
PASS: r6rs-arithmetic-flonums.test: fllog: unary fllog returns natural log
PASS: r6rs-arithmetic-flonums.test: fllog: infinities
PASS: r6rs-arithmetic-flonums.test: fllog: negative argument
PASS: r6rs-arithmetic-flonums.test: fllog: zero
PASS: r6rs-arithmetic-flonums.test: fllog: negative zero
PASS: r6rs-arithmetic-flonums.test: fllog: negative zero with base
PASS: r6rs-arithmetic-flonums.test: fllog: binary fllog returns log in specified base
PASS: r6rs-arithmetic-flonums.test: flsin: simple
PASS: r6rs-arithmetic-flonums.test: flcos: simple
PASS: r6rs-arithmetic-flonums.test: fltan: simple
PASS: r6rs-arithmetic-flonums.test: flasin: simple
PASS: r6rs-arithmetic-flonums.test: flasin: out of range
PASS: r6rs-arithmetic-flonums.test: flacos: simple
PASS: r6rs-arithmetic-flonums.test: flacos: out of range
PASS: r6rs-arithmetic-flonums.test: flatan: unary flatan
PASS: r6rs-arithmetic-flonums.test: flatan: infinities
PASS: r6rs-arithmetic-flonums.test: flatan: binary flatan
PASS: r6rs-arithmetic-flonums.test: flsqrt: simple
PASS: r6rs-arithmetic-flonums.test: flsqrt: negative
PASS: r6rs-arithmetic-flonums.test: flsqrt: infinity
PASS: r6rs-arithmetic-flonums.test: flsqrt: negative zero
PASS: r6rs-arithmetic-flonums.test: flexpt: simple
PASS: r6rs-arithmetic-flonums.test: flexpt: negative squared
PASS: r6rs-arithmetic-flonums.test: flexpt: negative cubed
PASS: r6rs-arithmetic-flonums.test: flexpt: negative to non-integer power
PASS: r6rs-arithmetic-flonums.test: fixnum->flonum: simple
PASS: r6rs-base.test: log (2nd arg): log positive-base
PASS: r6rs-base.test: log (2nd arg): log negative-base
PASS: r6rs-base.test: log (2nd arg): log base-one
PASS: r6rs-base.test: log (2nd arg): log base-zero
PASS: r6rs-base.test: boolean=?: boolean=? null
PASS: r6rs-base.test: boolean=?: boolean=? unary
PASS: r6rs-base.test: boolean=?: boolean=? many
PASS: r6rs-base.test: boolean=?: boolean=? mixed type
PASS: r6rs-base.test: symbol=?: symbol=? null
PASS: r6rs-base.test: symbol=?: symbol=? unary
PASS: r6rs-base.test: symbol=?: symbol=? many
PASS: r6rs-base.test: symbol=?: symbol=? mixed type
PASS: r6rs-base.test: infinite?: infinite? true on infinities
PASS: r6rs-base.test: infinite?: infinite? false on non-infities
PASS: r6rs-base.test: finite?: finite? false on infinities
PASS: r6rs-base.test: finite?: finite? true on non-infinities
PASS: r6rs-base.test: exact-integer-sqrt: exact-integer-sqrt simple
PASS: r6rs-base.test: integer-valued?: true on integers
PASS: r6rs-base.test: integer-valued?: false on rationals
PASS: r6rs-base.test: integer-valued?: false on reals
PASS: r6rs-base.test: rational-valued?: true on integers
PASS: r6rs-base.test: rational-valued?: true on rationals
PASS: r6rs-base.test: rational-valued?: false on reals
PASS: r6rs-base.test: real-valued?: true on integers
PASS: r6rs-base.test: real-valued?: true on rationals
PASS: r6rs-base.test: real-valued?: true on reals
PASS: r6rs-base.test: vector-for-each: vector-for-each simple
PASS: r6rs-base.test: vector-map: vector-map simple
PASS: r6rs-base.test: real-valued?: (real-valued? +nan.0)
PASS: r6rs-base.test: real-valued?: (real-valued? +nan.0)
PASS: r6rs-base.test: real-valued?: (real-valued? +nan.0+0.0i)
PASS: r6rs-base.test: real-valued?: (real-valued? +inf.0)
PASS: r6rs-base.test: real-valued?: (real-valued? -inf.0)
PASS: r6rs-base.test: real-valued?: (real-valued? +inf.0+0.0i)
PASS: r6rs-base.test: real-valued?: (real-valued? -inf.0-0.0i)
PASS: r6rs-base.test: real-valued?: (real-valued? 3)
PASS: r6rs-base.test: real-valued?: (real-valued? -2.5)
PASS: r6rs-base.test: real-valued?: (real-valued? -2.5)
PASS: r6rs-base.test: real-valued?: (real-valued? -2.5+0.0i)
PASS: r6rs-base.test: real-valued?: (real-valued? -2.5)
PASS: r6rs-base.test: real-valued?: (real-valued? 10000000000)
PASS: r6rs-base.test: real-valued?: (real-valued? 1.0e200)
PASS: r6rs-base.test: real-valued?: (real-valued? 1.0e200+0.0i)
PASS: r6rs-base.test: real-valued?: (real-valued? 3/5)
PASS: r6rs-base.test: real-valued?: (real-valued? 0.6+0.0i)
PASS: r6rs-base.test: real-valued?: (real-valued? 3/5)
PASS: r6rs-base.test: real-valued?: (real-valued? 2)
PASS: r6rs-base.test: real-valued?: (not (real-valued? 3.0+1.0i))
PASS: r6rs-base.test: real-valued?: (not (real-valued? -2.5+0.01i))
PASS: r6rs-base.test: real-valued?: (not (real-valued? +nan.0+0.01i))
PASS: r6rs-base.test: real-valued?: (not (real-valued? +nan.0+nan.0i))
PASS: r6rs-base.test: real-valued?: (not (real-valued? +inf.0-0.01i))
PASS: r6rs-base.test: real-valued?: (not (real-valued? 0.0+0.01i))
PASS: r6rs-base.test: real-valued?: (not (real-valued? 0.0-inf.0i))
PASS: r6rs-base.test: rational-valued?: (not (rational-valued? +nan.0))
PASS: r6rs-base.test: rational-valued?: (not (rational-valued? +nan.0))
PASS: r6rs-base.test: rational-valued?: (not (rational-valued? +nan.0+0.0i))
PASS: r6rs-base.test: rational-valued?: (not (rational-valued? +inf.0))
PASS: r6rs-base.test: rational-valued?: (not (rational-valued? -inf.0))
PASS: r6rs-base.test: rational-valued?: (not (rational-valued? +inf.0+0.0i))
PASS: r6rs-base.test: rational-valued?: (not (rational-valued? -inf.0-0.0i))
PASS: r6rs-base.test: rational-valued?: (rational-valued? 3)
PASS: r6rs-base.test: rational-valued?: (rational-valued? -2.5)
PASS: r6rs-base.test: rational-valued?: (rational-valued? -2.5)
PASS: r6rs-base.test: rational-valued?: (rational-valued? -2.5+0.0i)
PASS: r6rs-base.test: rational-valued?: (rational-valued? -2.5)
PASS: r6rs-base.test: rational-valued?: (rational-valued? 10000000000)
PASS: r6rs-base.test: rational-valued?: (rational-valued? 1.0e200)
PASS: r6rs-base.test: rational-valued?: (rational-valued? 1.0e200+0.0i)
PASS: r6rs-base.test: rational-valued?: (rational-valued? 3/5)
PASS: r6rs-base.test: rational-valued?: (rational-valued? 0.6+0.0i)
PASS: r6rs-base.test: rational-valued?: (rational-valued? 3/5)
PASS: r6rs-base.test: rational-valued?: (rational-valued? 2)
PASS: r6rs-base.test: rational-valued?: (not (rational-valued? 3.0+1.0i))
PASS: r6rs-base.test: rational-valued?: (not (rational-valued? -2.5+0.01i))
PASS: r6rs-base.test: rational-valued?: (not (rational-valued? +nan.0+0.01i))
PASS: r6rs-base.test: rational-valued?: (not (rational-valued? +nan.0+nan.0i))
PASS: r6rs-base.test: rational-valued?: (not (rational-valued? +inf.0-0.01i))
PASS: r6rs-base.test: rational-valued?: (not (rational-valued? 0.0+0.01i))
PASS: r6rs-base.test: rational-valued?: (not (rational-valued? 0.0-inf.0i))
PASS: r6rs-base.test: integer-valued?: (not (integer-valued? +nan.0))
PASS: r6rs-base.test: integer-valued?: (not (integer-valued? +nan.0))
PASS: r6rs-base.test: integer-valued?: (not (integer-valued? +nan.0+0.0i))
PASS: r6rs-base.test: integer-valued?: (not (integer-valued? +inf.0))
PASS: r6rs-base.test: integer-valued?: (not (integer-valued? -inf.0))
PASS: r6rs-base.test: integer-valued?: (not (integer-valued? +inf.0+0.0i))
PASS: r6rs-base.test: integer-valued?: (not (integer-valued? -inf.0-0.0i))
PASS: r6rs-base.test: integer-valued?: (integer-valued? 3)
PASS: r6rs-base.test: integer-valued?: (integer-valued? 3.0)
PASS: r6rs-base.test: integer-valued?: (integer-valued? 3)
PASS: r6rs-base.test: integer-valued?: (integer-valued? 3.0+0.0i)
PASS: r6rs-base.test: integer-valued?: (integer-valued? 2)
PASS: r6rs-base.test: integer-valued?: (integer-valued? 10000000000)
PASS: r6rs-base.test: integer-valued?: (integer-valued? 1.0e200)
PASS: r6rs-base.test: integer-valued?: (integer-valued? 1.0e200+0.0i)
PASS: r6rs-base.test: integer-valued?: (not (integer-valued? -2.5))
PASS: r6rs-base.test: integer-valued?: (not (integer-valued? -2.5))
PASS: r6rs-base.test: integer-valued?: (not (integer-valued? -2.5+0.0i))
PASS: r6rs-base.test: integer-valued?: (not (integer-valued? -2.5))
PASS: r6rs-base.test: integer-valued?: (not (integer-valued? 3/5))
PASS: r6rs-base.test: integer-valued?: (not (integer-valued? 0.6+0.0i))
PASS: r6rs-base.test: integer-valued?: (not (integer-valued? 3/5))
PASS: r6rs-base.test: integer-valued?: (not (integer-valued? 3.0+1.0i))
PASS: r6rs-base.test: integer-valued?: (not (integer-valued? -2.5+0.01i))
PASS: r6rs-base.test: integer-valued?: (not (integer-valued? +nan.0+0.01i))
PASS: r6rs-base.test: integer-valued?: (not (integer-valued? +nan.0+nan.0i))
PASS: r6rs-base.test: integer-valued?: (not (integer-valued? +inf.0-0.01i))
PASS: r6rs-base.test: integer-valued?: (not (integer-valued? 0.0+0.01i))
PASS: r6rs-base.test: integer-valued?: (not (integer-valued? 0.0-inf.0i))
PASS: r6rs-base.test: assert: assert returns value
PASS: r6rs-base.test: assert: assertion-violation
PASS: r6rs-base.test: string-for-each: reverse string
PASS: r6rs-base.test: string-for-each: two strings good
PASS: r6rs-base.test: string-for-each: two strings bad
PASS: r6rs-base.test: string-for-each: many strings good
PASS: r6rs-base.test: string-for-each: many strings bad
PASS: r6rs-conditions.test: condition?: condition? is #t for simple conditions
PASS: r6rs-conditions.test: condition?: condition? is #t for compound conditions
PASS: r6rs-conditions.test: condition?: condition? is #f for non-conditions
PASS: r6rs-conditions.test: simple-conditions: simple-conditions returns condition components
PASS: r6rs-conditions.test: simple-conditions: simple-conditions flattens compound conditions
PASS: r6rs-conditions.test: condition-predicate: returned procedure identifies matching simple conditions
PASS: r6rs-conditions.test: condition-predicate: returned procedure identifies matching compound conditions
PASS: r6rs-conditions.test: condition-predicate: returned procedure is #f for non-matching simple
PASS: r6rs-conditions.test: condition-predicate: returned procedure is #f for compound without match
PASS: r6rs-conditions.test: condition-accessor: accessor applies proc to field from simple condition
PASS: r6rs-conditions.test: condition-accessor: accessor applies proc to field from compound condition
PASS: r6rs-conditions.test: define-condition-type: define-condition-type produces proper accessors
PASS: r6rs-conditions.test: define-condition-type: define-condition-type works for multiple fields
PASS: r6rs-control.test: when: when true
PASS: r6rs-control.test: when: when false
PASS: r6rs-control.test: unless: unless true
PASS: r6rs-control.test: unless: unless false
PASS: r6rs-enums.test: enum-set-universe: universe of an enumeration is itself
PASS: r6rs-enums.test: enum-set-universe: enum-set-universe returns universe
PASS: r6rs-enums.test: enum-set-indexer: indexer returns index of symbol in universe
PASS: r6rs-enums.test: enum-set-indexer: indexer returns index of symbol in universe but not set
PASS: r6rs-enums.test: enum-set-indexer: indexer returns #f for symbol not in universe
PASS: r6rs-enums.test: enum-set->list: enum-set->list returns members in universe order
PASS: r6rs-enums.test: enum-set-member?: enum-set-member? is #t for set members
PASS: r6rs-enums.test: enum-set-member?: enum-set-member? is #f for set non-members
PASS: r6rs-enums.test: enum-set-member?: enum-set-member? is #f for universe but not set members
PASS: r6rs-enums.test: enum-set-subset?: enum-set-subset? is #t when set1 subset of set2
PASS: r6rs-enums.test: enum-set-subset?: enum-set-subset? is #t when universe and set are subsets
PASS: r6rs-enums.test: enum-set-subset?: enum-set-subset? is #f when set not subset
PASS: r6rs-enums.test: enum-set-subset?: enum-set-subset? is #f when universe not subset
PASS: r6rs-enums.test: enum-set=?: enum-set=? is #t when sets are equal
PASS: r6rs-enums.test: enum-set=?: enum-set=? is #f when sets are not equal
PASS: r6rs-enums.test: enum-set=?: enum-set=? is #f when universes are not equal
PASS: r6rs-enums.test: enum-set-union: &assertion raised on different universes
PASS: r6rs-enums.test: enum-set-union: enum-set-union creates union on overlapping sets
PASS: r6rs-enums.test: enum-set-union: enum-set-union creates union on disjoint sets
PASS: r6rs-enums.test: enum-set-union: enum-set-union operates on syntactically-generated sets
PASS: r6rs-enums.test: enum-set-intersection: &assertion raised on different universes
PASS: r6rs-enums.test: enum-set-intersection: enum-set-intersection on overlapping sets
PASS: r6rs-enums.test: enum-set-intersection: enum-set-intersection on disjoint sets
PASS: r6rs-enums.test: enum-set-intersection: enum-set-intersection on syntactically-generated sets
PASS: r6rs-enums.test: enum-set-difference: &assertion raised on different universes
PASS: r6rs-enums.test: enum-set-difference: enum-set-difference with subset
PASS: r6rs-enums.test: enum-set-difference: enum-set-difference with superset is empty
PASS: r6rs-enums.test: enum-set-difference: enum-set-difference on syntactically-generated sets
PASS: r6rs-enums.test: enum-set-complement: complement of empty set is universe
PASS: r6rs-enums.test: enum-set-complement: simple complement
PASS: r6rs-enums.test: enum-set-projection: projection onto subset universe
PASS: r6rs-enums.test: enum-set-projection: projection onto superset universe
PASS: r6rs-enums.test: enum-set-projection: projection onto disjoint universe
PASS: r6rs-enums.test: define-enumeration: define-enumeration creates bindings
PASS: r6rs-enums.test: define-enumeration: type-name syntax raises &syntax on non-member
PASS: r6rs-enums.test: define-enumeration: type-name evaluates to quote on member
PASS: r6rs-enums.test: define-enumeration: constructor-syntax raises &syntax on non-members
PASS: r6rs-enums.test: define-enumeration: constructor-syntax evaluates to new set
PASS: r6rs-eval.test: environment: simple
PASS: r6rs-exceptions.test: with-exception-handler: handler invoked on raise
PASS: r6rs-exceptions.test: with-exception-handler: handler not invoked unless raise
PASS: r6rs-exceptions.test: raise: raise causes &non-continuable after handler
PASS: r6rs-exceptions.test: raise-continuable: raise-continuable invokes continuation after handler
PASS: r6rs-exceptions.test: guard: guard with matching cond without else
PASS: r6rs-exceptions.test: guard: guard without matching cond without else
PASS: r6rs-exceptions.test: guard: guard with else and without matching cond
PASS: r6rs-exceptions.test: guard: guard with cond => syntax
PASS: r6rs-exceptions.test: guile condition conversions: rethrown native guile exceptions
PASS: r6rs-exceptions.test: guile condition conversions: syntax-error
PASS: r6rs-exceptions.test: guile condition conversions: unbound-variable
PASS: r6rs-exceptions.test: guile condition conversions: out-of-range
PASS: r6rs-exceptions.test: guile condition conversions: wrong-number-of-args
PASS: r6rs-exceptions.test: guile condition conversions: wrong-type-arg
PASS: r6rs-exceptions.test: guile condition conversions: keyword-argument-error
PASS: r6rs-exceptions.test: guile condition conversions: regular-expression-syntax
PASS: r6rs-exceptions.test: guile condition conversions: null-pointer-error
PASS: r6rs-exceptions.test: guile condition conversions: read-error
PASS: r6rs-files.test: delete-file: delete-file deletes file
PASS: r6rs-files.test: delete-file: delete-file raises &i/o-filename on error
PASS: r6rs-hashtables.test: make-eq-hashtable: eq hashtable compares keys with eq?
PASS: r6rs-hashtables.test: make-eqv-hashtable: eqv hashtable compares keys with eqv?
PASS: r6rs-hashtables.test: make-hashtable: hashtable compares keys with custom equality function
PASS: r6rs-hashtables.test: make-hashtable: hash function value used modulo capacity
PASS: r6rs-hashtables.test: hashtable?: hashtable? is #t on hashtables
PASS: r6rs-hashtables.test: hashtable?: hashtable? is #f on non-hashtables
PASS: r6rs-hashtables.test: hashtable-size: hashtable-size returns current size
PASS: r6rs-hashtables.test: hashtable-ref: hashtable-ref returns value for bound key
PASS: r6rs-hashtables.test: hashtable-ref: hashtable-ref returns default for unbound key
PASS: r6rs-hashtables.test: hashtable-set!: hashtable-set! returns unspecified
PASS: r6rs-hashtables.test: hashtable-set!: hashtable-set! allows storing #f
PASS: r6rs-hashtables.test: hashtable-delete!: hashtable-delete! removes association
PASS: r6rs-hashtables.test: hashtable-contains?: hashtable-contains? returns #t when association present
PASS: r6rs-hashtables.test: hashtable-contains?: hashtable-contains? returns #f when association not present
PASS: r6rs-hashtables.test: hashtable-update!: hashtable-update! adds return value of proc on bound key
PASS: r6rs-hashtables.test: hashtable-update!: hashtable-update! adds default value on unbound key
PASS: r6rs-hashtables.test: hashtable-copy: hashtable-copy produces copy of hashtable
PASS: r6rs-hashtables.test: hashtable-copy: hashtable-copy with mutability #f produces immutable copy
PASS: r6rs-hashtables.test: hashtable-clear!: hashtable-clear! removes all values from hashtable
PASS: r6rs-hashtables.test: hashtable-keys: hashtable-keys returns all keys
PASS: r6rs-hashtables.test: hashtable-entries: hashtable-entries returns all entries
PASS: r6rs-hashtables.test: hashtable-equivalence-function: hashtable-equivalence-function returns eqv function
PASS: r6rs-hashtables.test: hashtable-hash-function: hashtable-hash-function returns hash function
PASS: r6rs-hashtables.test: hashtable-hash-function: hashtable-hash-function returns #f on eq table
PASS: r6rs-hashtables.test: hashtable-hash-function: hashtable-hash-function returns #f on eqv table
PASS: r6rs-hashtables.test: hashtable-mutable?: hashtable-mutable? is #t on mutable hashtables
PASS: r6rs-hashtables.test: hashtable-mutable?: hashtable-mutable? is #f on immutable hashtables
PASS: r6rs-lists.test: memp: memp simple
PASS: r6rs-lists.test: assp: assp simple
PASS: r6rs-lists.test: fold-left: fold-left sum
PASS: r6rs-lists.test: fold-left: fold-left reverse
PASS: r6rs-lists.test: fold-left: fold-left max-length
PASS: r6rs-lists.test: fold-left: fold-left with-cons
PASS: r6rs-lists.test: fold-left: fold-left sum-multiple
PASS: r6rs-lists.test: fold-left: fold-left pairlis
PASS: r6rs-ports.test: 8.2.5 End-of-File Object: eof-object
PASS: r6rs-ports.test: 8.2.5 End-of-File Object: port-eof?
PASS: r6rs-ports.test: 8.2.8 Binary Input: get-u8
PASS: r6rs-ports.test: 8.2.8 Binary Input: lookahead-u8
PASS: r6rs-ports.test: 8.2.8 Binary Input: lookahead-u8 non-ASCII
PASS: r6rs-ports.test: 8.2.8 Binary Input: lookahead-u8: result is unsigned
PASS: r6rs-ports.test: 8.2.8 Binary Input: get-bytevector-n [short]
PASS: r6rs-ports.test: 8.2.8 Binary Input: get-bytevector-n [long]
PASS: r6rs-ports.test: 8.2.8 Binary Input: get-bytevector-n with closed port
PASS: r6rs-ports.test: 8.2.8 Binary Input: http://bugs.gnu.org/17466
PASS: r6rs-ports.test: 8.2.8 Binary Input: get-bytevector-n! [short]
PASS: r6rs-ports.test: 8.2.8 Binary Input: get-bytevector-n! [long]
PASS: r6rs-ports.test: 8.2.8 Binary Input: get-bytevector-some [simple]
PASS: r6rs-ports.test: 8.2.8 Binary Input: get-bytevector-some! [short]
PASS: r6rs-ports.test: 8.2.8 Binary Input: get-bytevector-some! [long]
PASS: r6rs-ports.test: 8.2.8 Binary Input: get-bytevector-all
PASS: r6rs-ports.test: 8.2.11 Binary Output: put-u8
PASS: r6rs-ports.test: 8.2.11 Binary Output: put-bytevector [2 args]
PASS: r6rs-ports.test: 8.2.11 Binary Output: put-bytevector [3 args]
PASS: r6rs-ports.test: 8.2.11 Binary Output: put-bytevector [4 args]
PASS: r6rs-ports.test: 8.2.11 Binary Output: put-bytevector with closed port
PASS: r6rs-ports.test: 8.2.11 Binary Output: put-bytevector with UTF-16 string port
PASS: r6rs-ports.test: 8.2.11 Binary Output: put-bytevector with wrong-encoding string port
PASS: r6rs-ports.test: 8.2.7 Input Ports: open-file-input-port: opens binary input port with correct contents
PASS: r6rs-ports.test: 8.2.7 Input Ports: open-bytevector-input-port [1 arg]
PASS: r6rs-ports.test: 8.2.7 Input Ports: bytevector-input-port is binary
PASS: r6rs-ports.test: 8.2.7 Input Ports: bytevector-input-port uses ISO-8859-1 (Guile extension)
PASS: r6rs-ports.test: 8.2.7 Input Ports: bytevector-input-port is read-only
PASS: r6rs-ports.test: 8.2.7 Input Ports: bytevector input port supports seeking
PASS: r6rs-ports.test: 8.2.7 Input Ports: bytevector input port can seek to very end
PASS: r6rs-ports.test: 8.2.7 Input Ports: make-custom-binary-input-port [wrong-num-args]
PASS: r6rs-ports.test: 8.2.7 Input Ports: make-custom-binary-input-port
PASS: r6rs-ports.test: 8.2.7 Input Ports: make-custom-binary-input-port uses ISO-8859-1 (Guile extension)
PASS: r6rs-ports.test: 8.2.7 Input Ports: custom binary input port does not support `port-position'
PASS: r6rs-ports.test: 8.2.7 Input Ports: custom binary input port 'read!' returns too much
PASS: r6rs-ports.test: 8.2.7 Input Ports: custom binary input port supports `port-position', not `set-port-position!'
PASS: r6rs-ports.test: 8.2.7 Input Ports: custom binary input port supports `port-position'
PASS: r6rs-ports.test: 8.2.7 Input Ports: custom binary input port position, long offset
PASS: r6rs-ports.test: 8.2.7 Input Ports: custom binary input port buffered partial reads
PASS: r6rs-ports.test: 8.2.7 Input Ports: custom binary input port unbuffered & 'port-position'
PASS: r6rs-ports.test: 8.2.7 Input Ports: custom binary input port unbuffered & 'read!' calls
PASS: r6rs-ports.test: 8.2.7 Input Ports: custom binary input port unbuffered & 'get-string-all'
PASS: r6rs-ports.test: 8.2.7 Input Ports: custom binary input port unbuffered UTF-8 & 'get-string-all'
PASS: r6rs-ports.test: 8.2.7 Input Ports: custom binary input port, unbuffered then buffered
PASS: r6rs-ports.test: 8.2.7 Input Ports: custom binary input port, buffered then unbuffered
PASS: r6rs-ports.test: 8.2.7 Input Ports: custom binary input port `close-proc' is called
PASS: r6rs-ports.test: 8.2.7 Input Ports: standard-input-port is binary
PASS: r6rs-ports.test: 8.2.10 Output ports: open-file-output-port: opens binary output port
PASS: r6rs-ports.test: 8.2.10 Output ports: open-file-output-port: exception: already-exists
PASS: r6rs-ports.test: 8.2.10 Output ports: open-file-output-port: no-fail no-truncate
PASS: r6rs-ports.test: 8.2.10 Output ports: open-file-output-port: no-fail
PASS: r6rs-ports.test: 8.2.10 Output ports: open-file-output-port: buffer-mode none
PASS: r6rs-ports.test: 8.2.10 Output ports: open-file-output-port: buffer-mode line
PASS: r6rs-ports.test: 8.2.10 Output ports: open-file-output-port: buffer-mode block
PASS: r6rs-ports.test: 8.2.10 Output ports: open-file-output-port: exception: does-not-exist
PASS: r6rs-ports.test: 8.2.10 Output ports: open-string-output-port
PASS: r6rs-ports.test: 8.2.10 Output ports: calling string output port truncates port
PASS: r6rs-ports.test: 8.2.10 Output ports: open-bytevector-output-port
PASS: r6rs-ports.test: 8.2.10 Output ports: bytevector-output-port is binary
PASS: r6rs-ports.test: 8.2.10 Output ports: bytevector-output-port uses ISO-8859-1 (Guile extension)
PASS: r6rs-ports.test: 8.2.10 Output ports: open-bytevector-output-port [extract after close]
PASS: r6rs-ports.test: 8.2.10 Output ports: open-bytevector-output-port [put-u8]
PASS: r6rs-ports.test: 8.2.10 Output ports: open-bytevector-output-port [display]
PASS: r6rs-ports.test: 8.2.10 Output ports: bytevector output port supports `port-position'
PASS: r6rs-ports.test: 8.2.10 Output ports: make-custom-binary-output-port
PASS: r6rs-ports.test: 8.2.10 Output ports: make-custom-binary-output-port [partial writes]
PASS: r6rs-ports.test: 8.2.10 Output ports: make-custom-binary-output-port [full writes]
PASS: r6rs-ports.test: 8.2.10 Output ports: custom-binary-output-port uses ISO-8859-1 (Guile extension)
PASS: r6rs-ports.test: 8.2.10 Output ports: standard-output-port is binary
PASS: r6rs-ports.test: 8.2.10 Output ports: standard-error-port is binary
PASS: r6rs-ports.test: 8.2.6  Input and output ports: transcoded-port preserves input mode
PASS: r6rs-ports.test: 8.2.6  Input and output ports: transcoded-port preserves output mode
PASS: r6rs-ports.test: 8.2.6  Input and output ports: transcoded-port preserves input/output mode
PASS: r6rs-ports.test: 8.2.6  Input and output ports: transcoded-port [output]
PASS: r6rs-ports.test: 8.2.6  Input and output ports: transcoded-port [input]
PASS: r6rs-ports.test: 8.2.6  Input and output ports: transcoded-port [input line]
PASS: r6rs-ports.test: 8.2.6  Input and output ports: transcoded-port [error handling mode = raise]
PASS: r6rs-ports.test: 8.2.6  Input and output ports: transcoded-port [error handling mode = replace]
PASS: r6rs-ports.test: 8.2.6  Input and output ports: transcoded-port, output [error handling mode = raise]
PASS: r6rs-ports.test: 8.2.6  Input and output ports: port-transcoder [transcoded port]
PASS: r6rs-ports.test: 8.2.9  Textual input: get-string-n [short]
PASS: r6rs-ports.test: 8.2.9  Textual input: get-string-n [long]
PASS: r6rs-ports.test: 8.2.9  Textual input: get-string-n [eof]
PASS: r6rs-ports.test: 8.2.9  Textual input: get-string-n! [short]
PASS: r6rs-ports.test: 8.2.9  Textual input: read error: get-char
PASS: r6rs-ports.test: 8.2.9  Textual input: read error: lookahead-char
PASS: r6rs-ports.test: 8.2.9  Textual input: read error: get-string-all
PASS: r6rs-ports.test: 8.2.9  Textual input: read error: get-line
PASS: r6rs-ports.test: 8.2.9  Textual input: read error: get-datum
PASS: r6rs-ports.test: 8.2.12 Textual Output: write error: put-char
PASS: r6rs-ports.test: 8.2.12 Textual Output: write error: put-string
PASS: r6rs-ports.test: 8.2.12 Textual Output: write error: put-datum
PASS: r6rs-ports.test: 8.2.12 Textual Output: encoding error: put-char
PASS: r6rs-ports.test: 8.2.12 Textual Output: encoding error: put-string
PASS: r6rs-ports.test: 8.3 Simple I/O: read error: read-char
PASS: r6rs-ports.test: 8.3 Simple I/O: read error: peek-char
PASS: r6rs-ports.test: 8.3 Simple I/O: read error: read
PASS: r6rs-ports.test: 8.3 Simple I/O: write error: display
PASS: r6rs-ports.test: 8.3 Simple I/O: write error: write
PASS: r6rs-ports.test: 8.3 Simple I/O: write error: write-char
PASS: r6rs-ports.test: 8.3 Simple I/O: write error: newline
PASS: r6rs-ports.test: 8.3 Simple I/O: call-with-input-file [port is textual]
PASS: r6rs-ports.test: 8.3 Simple I/O: call-with-input-file [exception: not-found]
PASS: r6rs-ports.test: 8.3 Simple I/O: call-with-output-file [exception: already-exists]
PASS: r6rs-ports.test: 8.2.13 Input/output ports: open-file-input/output-port [output]: opens binary output port
PASS: r6rs-ports.test: 8.2.13 Input/output ports: open-file-input/output-port [output]: exception: already-exists
PASS: r6rs-ports.test: 8.2.13 Input/output ports: open-file-input/output-port [output]: no-fail no-truncate
PASS: r6rs-ports.test: 8.2.13 Input/output ports: open-file-input/output-port [output]: no-fail
PASS: r6rs-ports.test: 8.2.13 Input/output ports: open-file-input/output-port [output]: buffer-mode none
PASS: r6rs-ports.test: 8.2.13 Input/output ports: open-file-input/output-port [output]: buffer-mode line
PASS: r6rs-ports.test: 8.2.13 Input/output ports: open-file-input/output-port [output]: buffer-mode block
PASS: r6rs-ports.test: 8.2.13 Input/output ports: open-file-input/output-port [output]: exception: does-not-exist
PASS: r6rs-ports.test: 8.2.13 Input/output ports: open-file-input/output-port [input]: opens binary input port with correct contents
PASS: r6rs-ports.test: 8.2.13 Input/output ports: make-custom-binary-input/output-port
PASS: r6rs-ports.test: 8.2.13 Input/output ports: make-custom-binary-input/output-port uses ISO-8859-1 (Guile extension) [input]
PASS: r6rs-ports.test: 8.2.13 Input/output ports: custom binary input/output port does not support `port-position'
PASS: r6rs-ports.test: 8.2.13 Input/output ports: custom binary input/output port 'read!' returns too much
PASS: r6rs-ports.test: 8.2.13 Input/output ports: custom binary input/output port supports `port-position', not `set-port-position!'
PASS: r6rs-ports.test: 8.2.13 Input/output ports: custom binary input/output port supports `port-position'
PASS: r6rs-ports.test: 8.2.13 Input/output ports: custom binary input/output port buffered partial reads
PASS: r6rs-ports.test: 8.2.13 Input/output ports: custom binary input/output port unbuffered & 'port-position'
PASS: r6rs-ports.test: 8.2.13 Input/output ports: custom binary input/output port unbuffered & 'read!' calls
PASS: r6rs-ports.test: 8.2.13 Input/output ports: custom binary input/output port unbuffered & 'get-string-all'
PASS: r6rs-ports.test: 8.2.13 Input/output ports: custom binary input/output port unbuffered UTF-8 & 'get-string-all'
PASS: r6rs-ports.test: 8.2.13 Input/output ports: custom binary input/output port, unbuffered then buffered
PASS: r6rs-ports.test: 8.2.13 Input/output ports: custom binary input/output port, buffered then unbuffered
PASS: r6rs-ports.test: 8.2.13 Input/output ports: custom binary input/output port `close-proc' is called
PASS: r6rs-ports.test: 8.2.13 Input/output ports: make-custom-binary-input/output-port [partial writes]
PASS: r6rs-ports.test: 8.2.13 Input/output ports: make-custom-binary-input/output-port [full writes]
PASS: r6rs-ports.test: 8.2.13 Input/output ports: custom-binary-output-port uses ISO-8859-1 (Guile extension) [output]
PASS: r6rs-ports.test: ascii string: to ascii bytevector
PASS: r6rs-ports.test: ascii string: to ascii bytevector (length check)
PASS: r6rs-ports.test: ascii string: from ascii bytevector
PASS: r6rs-ports.test: ascii string: to utf-8 bytevector
PASS: r6rs-ports.test: ascii string: to UTF-8 bytevector (testing encoding case sensitivity)
PASS: r6rs-ports.test: ascii string: from utf-8 bytevector
PASS: r6rs-ports.test: ascii string: to latin1 bytevector
PASS: r6rs-ports.test: ascii string: from latin1 bytevector
PASS: r6rs-ports.test: narrow non-ascii string: to latin1 bytevector
PASS: r6rs-ports.test: narrow non-ascii string: to latin1 bytevector (length check)
PASS: r6rs-ports.test: narrow non-ascii string: from latin1 bytevector
PASS: r6rs-ports.test: narrow non-ascii string: to utf-8 bytevector
PASS: r6rs-ports.test: narrow non-ascii string: from utf-8 bytevector
PASS: r6rs-ports.test: narrow non-ascii string: encode latin1 as ascii
PASS: r6rs-ports.test: narrow non-ascii string: misparse latin1 as utf8
PASS: r6rs-ports.test: narrow non-ascii string: misparse latin1 as utf8 with substitutions
PASS: r6rs-ports.test: narrow non-ascii string: misparse latin1 as ascii
PASS: r6rs-ports.test: wide non-ascii string: to utf-8 bytevector
PASS: r6rs-ports.test: wide non-ascii string: from utf-8 bytevector
PASS: r6rs-ports.test: wide non-ascii string: encode as ascii
PASS: r6rs-ports.test: wide non-ascii string: encode as latin1
PASS: r6rs-ports.test: wide non-ascii string: encode as ascii with substitutions
PASS: r6rs-records-inspection.test: record?: record? recognizes non-opaque records
PASS: r6rs-records-inspection.test: record?: record? doesn't recognize opaque records
PASS: r6rs-records-inspection.test: record?: record? doesn't recognize non-records
PASS: r6rs-records-inspection.test: record-rtd: simple
PASS: r6rs-records-inspection.test: record-rtd: &assertion on opaque record
PASS: r6rs-records-inspection.test: record-type-name: simple
PASS: r6rs-records-inspection.test: record-type-parent: eq? to parent
PASS: r6rs-records-inspection.test: record-type-parent: #f when parent not present
PASS: r6rs-records-inspection.test: record-type-uid: eq? to uid
PASS: r6rs-records-inspection.test: record-type-uid: #f when uid not present
PASS: r6rs-records-inspection.test: record-type-generative?: #f when uid is not #f
PASS: r6rs-records-inspection.test: record-type-generative?: #t when uid is #f
PASS: r6rs-records-inspection.test: record-type-sealed?: #t when sealed? is #t
PASS: r6rs-records-inspection.test: record-type-sealed?: #f when sealed? is #f
PASS: r6rs-records-inspection.test: record-type-opaque?: #t when opaque? is #t
PASS: r6rs-records-inspection.test: record-type-opaque?: #f when opaque? is #f
PASS: r6rs-records-inspection.test: record-type-opaque?: #t when parent is opaque
PASS: r6rs-records-inspection.test: record-type-field-names: simple
PASS: r6rs-records-inspection.test: record-type-field-names: parent fields not included
PASS: r6rs-records-inspection.test: record-type-field-names: subtype fields not included
PASS: r6rs-records-inspection.test: record-field-mutable?: simple
PASS: r6rs-records-procedural.test: make-record-type-descriptor: simple
PASS: r6rs-records-procedural.test: make-record-type-descriptor: sealed records cannot be subtyped
PASS: r6rs-records-procedural.test: make-record-type-descriptor: non-generative records with same uid are eq
PASS: r6rs-records-procedural.test: make-record-type-descriptor: &assertion raised on conflicting non-generative types
PASS: r6rs-records-procedural.test: make-record-constructor-descriptor: simple protocol
PASS: r6rs-records-procedural.test: make-record-constructor-descriptor: protocol delegates to parent with protocol
PASS: r6rs-records-procedural.test: record-type-descriptor?: simple
PASS: r6rs-records-procedural.test: record-constructor: simple
PASS: r6rs-records-procedural.test: record-constructor: construct record subtype
PASS: r6rs-records-procedural.test: record-predicate: simple
PASS: r6rs-records-procedural.test: record-predicate: predicate returns true on subtype
PASS: r6rs-records-procedural.test: record-predicate: predicate returns false on supertype
PASS: r6rs-records-procedural.test: record-accessor: simple
PASS: r6rs-records-procedural.test: record-accessor: accessor for supertype applied to subtype
PASS: r6rs-records-procedural.test: record-mutator: simple
PASS: r6rs-records-procedural.test: record-mutator: &assertion raised on request for immutable field
PASS: r6rs-records-procedural.test: record-mutator: mutator for supertype applied to subtype
PASS: r6rs-records-syntactic.test: simple record names: define-record-type defines record type
PASS: r6rs-records-syntactic.test: simple record names: define-record-type defines record predicate
PASS: r6rs-records-syntactic.test: simple record names: define-record-type defines record-constructor
PASS: r6rs-records-syntactic.test: fully-specified record names: define-record-type defines named predicate
PASS: r6rs-records-syntactic.test: fully-specified record names: define-record-type defines named constructor
PASS: r6rs-records-syntactic.test: parent-rtd clause includes specified parent
PASS: r6rs-records-syntactic.test: parent clause includes specified parent
PASS: r6rs-records-syntactic.test: protocol clause includes specified protocol
PASS: r6rs-records-syntactic.test: sealed clause produces sealed type
PASS: r6rs-records-syntactic.test: opaque clause produces opaque type
PASS: r6rs-records-syntactic.test: nongenerative: nongenerative clause produces nongenerative type
PASS: r6rs-records-syntactic.test: nongenerative: nongenerative clause preserves specified uid
PASS: r6rs-records-syntactic.test: fields: raw symbol produces accessor only
PASS: r6rs-records-syntactic.test: fields: (immutable x) form produces accessor only
PASS: r6rs-records-syntactic.test: fields: (immutable x y) form produces named accessor
PASS: r6rs-records-syntactic.test: fields: (mutable x) form produces accessor and mutator
PASS: r6rs-records-syntactic.test: fields: (mutable x y) form produces named accessor and mutator
PASS: r6rs-records-syntactic.test: record-type-descriptor returns rtd
PASS: r6rs-records-syntactic.test: record-constructor-descriptor returns rcd
PASS: r6rs-records-syntactic.test: record hygiene: using shadowed record keywords fails
PASS: r6rs-records-syntactic.test: record hygiene: using shadowed record keywords fails 2
PASS: r6rs-records-syntactic.test: record hygiene: hygiene preserved when using macros
PASS: r6rs-unicode.test: char-foldcase: basic case folding
PASS: r6rs-unicode.test: char-foldcase: Turkic characters
PASS: r6rs-unicode.test: char-title-case?: simple
PASS: r6rs-unicode.test: string-foldcase: basic case folding
UNRESOLVED: r6rs-unicode.test: string-foldcase: case folding expands string
PASS: r7rs.test: (%test-equal? x 28)
PASS: r7rs.test: (%test-equal? (quote a) (quote a))
PASS: r7rs.test: (%test-equal? (quote (+ 1 2)) (quote (+ 1 2)))
PASS: r7rs.test: (%test-equal? (quote a) (quote a))
PASS: r7rs.test: (%test-equal? (quote ()) (quote ()))
PASS: r7rs.test: (%test-equal? (quote (+ 1 2)) (quote (+ 1 2)))
PASS: r7rs.test: (%test-equal? (quote (quote a)) (quote (quote a)))
PASS: r7rs.test: (%test-equal? (quote (quote a)) (quote (quote a)))
PASS: r7rs.test: (%test-equal? (quote abc) abc)
PASS: r7rs.test: (%test-equal? abc abc)
PASS: r7rs.test: (%test-equal? (quote 145932) 145932)
PASS: r7rs.test: (%test-equal? 145932 145932)
PASS: r7rs.test: (%test-equal? (quote #t) #t)
PASS: r7rs.test: (%test-equal? #t #t)
PASS: r7rs.test: (%test-equal? (+ 3 4) 7)
PASS: r7rs.test: (%test-equal? ((if #f + *) 3 4) 12)
PASS: r7rs.test: (%test-equal? ((lambda (x) (+ x x)) 4) 8)
PASS: r7rs.test: (%test-equal? (reverse-subtract 7 10) 3)
PASS: r7rs.test: (%test-equal? (add4 6) 10)
PASS: r7rs.test: (%test-equal? ((lambda x x) 3 4 5 6) (quote (3 4 5 6)))
PASS: r7rs.test: (%test-equal? ((lambda (x y . z) z) 3 4 5 6) (quote (5 6)))
PASS: r7rs.test: (%test-equal? (if (> 3 2) (quote yes) (quote no)) (quote yes))
PASS: r7rs.test: (%test-equal? (if (> 2 3) (quote yes) (quote no)) (quote no))
PASS: r7rs.test: (%test-equal? (if (> 3 2) (- 3 2) (+ 3 2)) 1)
PASS: r7rs.test: (%test-equal? (+ x 1) 3)
PASS: r7rs.test: (%test-equal? (cond ((> 3 2) (quote greater)) ((< 3 2) (quote less))) (quote greater))
PASS: r7rs.test: (%test-equal? (cond ((> 3 3) (quote greater)) ((< 3 3) (quote less)) (else (quote equal))) (quote equal))
PASS: r7rs.test: (%test-equal? (cond ((assv (quote b) (quote ((a 1) (b 2)))) => cadr) (else #f)) 2)
PASS: r7rs.test: (%test-equal? (case (* 2 3) ((2 3 5 7) (quote prime)) ((1 4 6 8 9) (quote composite))) (quote composite))
PASS: r7rs.test: (%test-equal? (case (car (quote (c d))) ((a e i o u) (quote vowel)) ((w y) (quote semivowel)) (else => (lambda (x) x))) (quote c))
PASS: r7rs.test: (%test-equal? (map (lambda (x) (case x ((a e i o u) => (lambda (w) (cons (quote vowel) w))) ((w y) (cons (quote semivowel) x)) (else => (lambda (w) (cons (quote other) w))))) (quote (z y x w u))) (quote ((other . z) (semivowel . y) (other . x) (semivowel . w) (vowel . u))))
PASS: r7rs.test: (%test-equal? (and (= 2 2) (> 2 1)) #t)
PASS: r7rs.test: (%test-equal? (and (= 2 2) (< 2 1)) #f)
PASS: r7rs.test: (%test-equal? (and 1 2 (quote c) (quote (f g))) (quote (f g)))
PASS: r7rs.test: (%test-equal? (and) #t)
PASS: r7rs.test: (%test-equal? (or (= 2 2) (> 2 1)) #t)
PASS: r7rs.test: (%test-equal? (or (= 2 2) (< 2 1)) #t)
PASS: r7rs.test: (%test-equal? (or #f #f #f) #f)
PASS: r7rs.test: (%test-equal? (or (memq (quote b) (quote (a b c))) (/ 3 0)) (quote (b c)))
PASS: r7rs.test: (%test-equal? (let ((x 2) (y 3)) (* x y)) 6)
PASS: r7rs.test: (%test-equal? (let ((x 2) (y 3)) (let ((x 7) (z (+ x y))) (* z x))) 35)
PASS: r7rs.test: (%test-equal? (let ((x 2) (y 3)) (let* ((x 7) (z (+ x y))) (* z x))) 70)
PASS: r7rs.test: (%test-equal? (letrec ((even? (lambda (n) (if (zero? n) #t (odd? (- n 1))))) (odd? (lambda (n) (if (zero? n) #f (even? (- n 1)))))) (even? 88)) #t)
PASS: r7rs.test: (%test-equal? (letrec* ((p (lambda (x) (+ 1 (q (- x 1))))) (q (lambda (y) (if (zero? y) 0 (+ 1 (p (- y 1)))))) (x (p 5)) (y x)) y) 5)
PASS: r7rs.test: (%test-equal? a 27)
PASS: r7rs.test: (%test-equal? b 9.728)
PASS: r7rs.test: (%test-equal? c 1800/497)
PASS: r7rs.test: (%test-equal? (* root rem) 35)
PASS: r7rs.test: (%test-equal? (let*-values (((root rem) (exact-integer-sqrt (expt 2 60)))) (list root rem)) (quote (1073741824 0)))
PASS: r7rs.test: (%test-equal? (let*-values (((root rem) (exact-integer-sqrt (expt 2 61)))) (list root rem)) (quote (1518500249 3000631951)))
PASS: r7rs.test: (%test-equal? (let*-values (((root rem) (exact-integer-sqrt (expt 2 119)))) (list root rem)) (quote (815238614083298888 443242361398135744)))
PASS: r7rs.test: (%test-equal? (let*-values (((root rem) (exact-integer-sqrt (expt 2 120)))) (list root rem)) (quote (1152921504606846976 0)))
PASS: r7rs.test: (%test-equal? (let*-values (((root rem) (exact-integer-sqrt (expt 2 121)))) (list root rem)) (quote (1630477228166597776 1772969445592542976)))
PASS: r7rs.test: (%test-equal? (let*-values (((root rem) (exact-integer-sqrt (expt 10 39)))) (list root rem)) (quote (31622776601683793319 62545769258890964239)))
PASS: r7rs.test: (%test-equal? rem 0)
PASS: r7rs.test: (%test-equal? (square root) (expt 2 140))
PASS: r7rs.test: (%test-equal? (let ((a (quote a)) (b (quote b)) (x (quote x)) (y (quote y))) (let*-values (((a b) (values x y)) ((x y) (values a b))) (list a b x y))) (quote (x y x y)))
PASS: r7rs.test: (%test-equal? (let-values () (quote ok)) (quote ok))
PASS: r7rs.test: (%test-equal? (let ((x 1)) (let*-values () (define x 2) #f) x) 1)
PASS: r7rs.test: (%test-equal? (+ x 1) 6)
PASS: r7rs.test: (%test-equal? (do ((vec (make-vector 5)) (i 0 (+ i 1))) ((= i 5) vec) (vector-set! vec i i)) (quote #(0 1 2 3 4)))
PASS: r7rs.test: (%test-equal? (let ((x (quote (1 3 5 7 9)))) (do ((x x (cdr x)) (sum 0 (+ sum (car x)))) ((null? x) sum))) 25)
PASS: r7rs.test: (%test-equal? (let loop ((numbers (quote (3 -2 1 6 -5))) (nonneg (quote ())) (neg (quote ()))) (cond ((null? numbers) (list nonneg neg)) ((>= (car numbers) 0) (loop (cdr numbers) (cons (car numbers) nonneg) neg)) ((< (car numbers) 0) (loop (cdr numbers) nonneg (cons (car numbers) neg))))) (quote ((6 1 3) (-5 -2))))
PASS: r7rs.test: (%test-equal? (force (delay (+ 1 2))) 3)
PASS: r7rs.test: (%test-equal? (let ((p (delay (+ 1 2)))) (list (force p) (force p))) (quote (3 3)))
PASS: r7rs.test: (%test-equal? (head (tail (tail integers))) 2)
PASS: r7rs.test: (%test-equal? (head (tail (tail (stream-filter odd? integers)))) 5)
PASS: r7rs.test: (%test-equal? (force p) 6)
PASS: r7rs.test: (%test-equal? (begin (set! x 10) (force p)) 6)
PASS: r7rs.test: (%test-equal? (promise? (delay (+ 2 2))) #t)
PASS: r7rs.test: (%test-equal? (promise? (make-promise (+ 2 2))) #t)
PASS: r7rs.test: (%test-equal? (let ((x (delay (+ 2 2)))) (force x) (promise? x)) #t)
PASS: r7rs.test: (%test-equal? (let ((x (make-promise (+ 2 2)))) (force x) (promise? x)) #t)
PASS: r7rs.test: (%test-equal? (f 12) 12)
PASS: r7rs.test: (%test-equal? (parameterize ((radix 2)) (f 12)) 1100)
PASS: r7rs.test: (%test-equal? (f 12) 12)
PASS: r7rs.test: (%test-equal? (quasiquote (list (unquote (+ 1 2)) 4)) (quote (list 3 4)))
PASS: r7rs.test: (%test-equal? (quasiquote (list (unquote name) (quote (unquote name)))) (quote (list a (quote a))))
PASS: r7rs.test: (%test-equal? (quasiquote (a (unquote (+ 1 2)) (unquote-splicing (map abs (quote (4 -5 6)))) b)) (quote (a 3 4 5 6 b)))
PASS: r7rs.test: (%test-equal? (quasiquote #(10 5 (unquote (square 2)) (unquote-splicing (map square (quote (4 3)))) 8)) (quote #(10 5 4 16 9 8)))
PASS: r7rs.test: (%test-equal? (quasiquote (a (quasiquote (b (unquote (+ 1 2)) (unquote (foo (unquote (+ 1 3)) d)) e)) f)) (quote (a (quasiquote (b (unquote (+ 1 2)) (unquote (foo 4 d)) e)) f)))
PASS: r7rs.test: (%test-equal? (quasiquote (a (quasiquote (b (unquote (unquote name1)) (unquote (quote (unquote name2))) d)) e)) (quote (a (quasiquote (b (unquote x) (unquote (quote y)) d)) e)))
PASS: r7rs.test: (%test-equal? (quasiquote (list (unquote (+ 1 2)) 4)) (quote (list 3 4)))
PASS: r7rs.test: (%test-equal? (quasiquote (list (unquote (+ 1 2)) 4)) (quasiquote (list (unquote (+ 1 2)) 4)))
PASS: r7rs.test: (%test-equal? (plus) 0)
PASS: r7rs.test: (%test-equal? (plus 1) 1)
PASS: r7rs.test: (%test-equal? (plus 1 2) 3)
PASS: r7rs.test: (%test-equal? (plus 1 2 3) 6)
PASS: r7rs.test: (%test-equal? (plus 1 2 3 4) 10)
PASS: r7rs.test: (%test-equal? (mult) 1)
PASS: r7rs.test: (%test-equal? (mult 1) 1)
PASS: r7rs.test: (%test-equal? (mult 1 2) 2)
PASS: r7rs.test: (%test-equal? (mult 1 2 3) 6)
PASS: r7rs.test: (%test-equal? (mult 1 2 3 4) 24)
PASS: r7rs.test: (%test-equal? (let-syntax ((when (syntax-rules () ((when test stmt1 stmt2 ...) (if test (begin stmt1 stmt2 ...)))))) (let ((if #t)) (when if (set! if (quote now))) if)) (quote now))
PASS: r7rs.test: (%test-equal? (let ((x (quote outer))) (let-syntax ((m (syntax-rules () ((m) x)))) (let ((x (quote inner))) (m)))) (quote outer))
PASS: r7rs.test: (%test-equal? (letrec-syntax ((my-or (syntax-rules () ((my-or) #f) ((my-or e) e) ((my-or e1 e2 ...) (let ((temp e1)) (if temp temp (my-or e2 ...))))))) (let ((x #f) (y 7) (temp 8) (let odd?) (if even?)) (my-or x (let temp) (if y) y))) 7)
PASS: r7rs.test: (%test-equal? (sequence1 0 1 2 3) 3)
PASS: r7rs.test: (%test-equal? (sequence2 1 2 3 4) 4)
PASS: r7rs.test: (%test-equal? (sequence3 2 3 4 5) 5)
PASS: r7rs.test: (%test-equal? (elli-esc-1) (quote ...))
PASS: r7rs.test: (%test-equal? (elli-esc-1 100) (quote (100 ...)))
PASS: r7rs.test: (%test-equal? (elli-esc-1 100 200) (quote (... 100 200)))
PASS: r7rs.test: (%test-equal? (part-2 10 (+ 21 22) (31 32) (41 42) (51 52) (+ 61 2) 77) (quote #((10 43) (31 41 51) (32 42 52) (63 77))))
PASS: r7rs.test: (%test-equal? (part-2x (10 (+ 21 22) (31 32) (41 42) (51 52) (+ 61 2) 77)) (quote #((10 43) (31 41 51) (32 42 52) (63 77) (rest:))))
PASS: r7rs.test: (%test-equal? (part-2x (10 (+ 21 22) (31 32) (41 42) (51 52) (+ 61 2) 77 . tail)) (quote #((10 43) (31 41 51) (32 42 52) (63 77) (rest: . tail))))
PASS: r7rs.test: (%test-equal? (underscore foo) (quote _))
PASS: r7rs.test: (%test-equal? (underscore2 (1 2)) 42)
PASS: r7rs.test: (%test-equal? (mad-hatter) 42)
PASS: r7rs.test: (%test-equal? (let ((=> #f)) (cond (#t => (quote ok)))) (quote ok))
PASS: r7rs.test: (%test-equal? x 1)
PASS: r7rs.test: (%test-equal? (bar 1) (quote x))
PASS: r7rs.test: (%test-equal? (ff 10) 100)
PASS: r7rs.test: (%test-equal? (vector-lit) (quote #(b)))
PASS: r7rs.test: (%test-equal? (quux399) 42)
PASS: r7rs.test: (%test-equal? (m k) (quote bound-identifier=?))
PASS: r7rs.test: (%test-equal? (add3 3) 6)
PASS: r7rs.test: (%test-equal? (first (quote (1 2))) 1)
PASS: r7rs.test: (%test-equal? (let ((x 5)) (define foo (lambda (y) (bar x y))) (define bar (lambda (a b) (+ (* a b) a))) (foo (+ x 3))) 45)
PASS: r7rs.test: (%test-equal? (let () (define-values () (values)) (quote ok)) (quote ok))
PASS: r7rs.test: (%test-equal? (let () (define-values (x) (values 1)) x) 1)
PASS: r7rs.test: (%test-equal? (let () (define-values x (values 1 2)) (apply + x)) 3)
PASS: r7rs.test: (%test-equal? (let () (define-values (x y) (values 1 2)) (+ x y)) 3)
PASS: r7rs.test: (%test-equal? (let () (define-values (x y z) (values 1 2 3)) (+ x y z)) 6)
PASS: r7rs.test: (%test-equal? (let () (define-values (x y . z) (values 1 2 3 4)) (+ x y (car z) (cadr z))) 10)
PASS: r7rs.test: (%test-equal? (let ((x 1) (y 2)) (define-syntax swap! (syntax-rules () ((swap! a b) (let ((tmp a)) (set! a b) (set! b tmp))))) (swap! x y) (list x y)) (quote (2 1)))
PASS: r7rs.test: (%test-equal? (pare? (kons 1 2)) #t)
PASS: r7rs.test: (%test-equal? (pare? (cons 1 2)) #f)
PASS: r7rs.test: (%test-equal? (kar (kons 1 2)) 1)
PASS: r7rs.test: (%test-equal? (kdr (kons 1 2)) 2)
PASS: r7rs.test: (%test-equal? (let ((k (kons 1 2))) (set-kar! k 3) (kar k)) 3)
PASS: r7rs.test: (%test-equal? (eqv? (quote a) (quote a)) #t)
PASS: r7rs.test: (%test-equal? (eqv? (quote a) (quote b)) #f)
PASS: r7rs.test: (%test-equal? (eqv? 2 2) #t)
PASS: r7rs.test: (%test-equal? (eqv? (quote ()) (quote ())) #t)
PASS: r7rs.test: (%test-equal? (eqv? 100000000 100000000) #t)
PASS: r7rs.test: (%test-equal? (eqv? (cons 1 2) (cons 1 2)) #f)
PASS: r7rs.test: (%test-equal? (eqv? (lambda () 1) (lambda () 2)) #f)
PASS: r7rs.test: (%test-equal? (eqv? #f (quote nil)) #f)
PASS: r7rs.test: (%test-equal? (let ((g (gen-counter))) (eqv? g g)) #t)
PASS: r7rs.test: (%test-equal? (eqv? (gen-counter) (gen-counter)) #f)
PASS: r7rs.test: (%test-equal? (let ((g (gen-loser))) (eqv? g g)) #t)
PASS: r7rs.test: (%test-equal? (letrec ((f (lambda () (if (eqv? f g) (quote f) (quote both)))) (g (lambda () (if (eqv? f g) (quote g) (quote both))))) (eqv? f g)) #f)
PASS: r7rs.test: (%test-equal? (let ((x (quote (a)))) (eqv? x x)) #t)
PASS: r7rs.test: (%test-equal? (eq? (quote a) (quote a)) #t)
PASS: r7rs.test: (%test-equal? (eq? (list (quote a)) (list (quote a))) #f)
PASS: r7rs.test: (%test-equal? (eq? (quote ()) (quote ())) #t)
PASS: r7rs.test: (%test-equal? (let ((x (quote (a)))) (eq? x x)) #t)
PASS: r7rs.test: (%test-equal? (let ((x (quote #()))) (eq? x x)) #t)
PASS: r7rs.test: (%test-equal? (let ((p (lambda (x) x))) (eq? p p)) #t)
PASS: r7rs.test: (%test-equal? (equal? (quote a) (quote a)) #t)
PASS: r7rs.test: (%test-equal? (equal? (quote (a)) (quote (a))) #t)
PASS: r7rs.test: (%test-equal? (equal? (quote (a (b) c)) (quote (a (b) c))) #t)
PASS: r7rs.test: (%test-equal? (equal? abc abc) #t)
PASS: r7rs.test: (%test-equal? (equal? 2 2) #t)
PASS: r7rs.test: (%test-equal? (equal? (make-vector 5 (quote a)) (make-vector 5 (quote a))) #t)
PASS: r7rs.test: (%test-equal? (complex? 3.0+4.0i) #t)
PASS: r7rs.test: (%test-equal? (complex? 3) #t)
PASS: r7rs.test: (%test-equal? (real? 3) #t)
PASS: r7rs.test: (%test-equal? (real? -2.5) #t)
PASS: r7rs.test: (%test-equal? (real? -2.5+0.0i) #f)
PASS: r7rs.test: (%test-equal? (real? 10000000000) #t)
PASS: r7rs.test: (%test-equal? (real? +inf.0) #t)
PASS: r7rs.test: (%test-equal? (rational? -inf.0) #f)
PASS: r7rs.test: (%test-equal? (rational? 3/5) #t)
PASS: r7rs.test: (%test-equal? (rational? 2) #t)
PASS: r7rs.test: (%test-equal? (integer? 3) #t)
PASS: r7rs.test: (%test-equal? (integer? 3.0) #t)
PASS: r7rs.test: (%test-equal? (integer? 2) #t)
PASS: r7rs.test: (%test-equal? (exact? 3.0) #f)
PASS: r7rs.test: (%test-equal? (exact? 3) #t)
PASS: r7rs.test: (%test-equal? (inexact? 3.0) #t)
PASS: r7rs.test: (%test-equal? (exact-integer? 32) #t)
PASS: r7rs.test: (%test-equal? (exact-integer? 32.0) #f)
PASS: r7rs.test: (%test-equal? (exact-integer? 32/5) #f)
PASS: r7rs.test: (%test-equal? (finite? 3) #t)
PASS: r7rs.test: (%test-equal? (finite? +inf.0) #f)
PASS: r7rs.test: (%test-equal? (finite? 3.0+inf.0i) #f)
PASS: r7rs.test: (%test-equal? (infinite? 3) #f)
PASS: r7rs.test: (%test-equal? (infinite? +inf.0) #t)
PASS: r7rs.test: (%test-equal? (infinite? +nan.0) #f)
PASS: r7rs.test: (%test-equal? (infinite? 3.0+inf.0i) #t)
PASS: r7rs.test: (%test-equal? (nan? +nan.0) #t)
PASS: r7rs.test: (%test-equal? (nan? 32) #f)
PASS: r7rs.test: (%test-equal? (nan? +nan.0+5.0i) #t)
PASS: r7rs.test: (%test-equal? (nan? 1.0+2.0i) #f)
PASS: r7rs.test: (%test-equal? (= 1 1.0 1.0+0.0i) #t)
PASS: r7rs.test: (%test-equal? (= 1.0 1.0+1.0i) #f)
PASS: r7rs.test: (%test-equal? (< 1 2 3) #t)
PASS: r7rs.test: (%test-equal? (< 1 1 2) #f)
PASS: r7rs.test: (%test-equal? (> 3.0 2.0 1.0) #t)
PASS: r7rs.test: (%test-equal? (> -3.0 2.0 1.0) #f)
PASS: r7rs.test: (%test-equal? (<= 1 1 2) #t)
PASS: r7rs.test: (%test-equal? (<= 1 2 1) #f)
PASS: r7rs.test: (%test-equal? (>= 2 1 1) #t)
PASS: r7rs.test: (%test-equal? (>= 1 2 1) #f)
PASS: r7rs.test: (%test-equal? (list (<= 1 1 2) (<= 2 1 3)) (quote (#t #f)))
PASS: r7rs.test: (%test-equal? (if (and (= a b) (= b c)) (= a c) #t) #t)
PASS: r7rs.test: (%test-equal? (if (and (<= a j) (< j (+ j 1))) (not (<= (+ j 1) a)) #t) #t)
PASS: r7rs.test: (%test-equal? (zero? 0) #t)
PASS: r7rs.test: (%test-equal? (zero? 0.0) #t)
PASS: r7rs.test: (%test-equal? (zero? 0.0+0.0i) #t)
PASS: r7rs.test: (%test-equal? (zero? 1) #f)
PASS: r7rs.test: (%test-equal? (zero? -1) #f)
PASS: r7rs.test: (%test-equal? (positive? 0) #f)
PASS: r7rs.test: (%test-equal? (positive? 0.0) #f)
PASS: r7rs.test: (%test-equal? (positive? 1) #t)
PASS: r7rs.test: (%test-equal? (positive? 1.0) #t)
PASS: r7rs.test: (%test-equal? (positive? -1) #f)
PASS: r7rs.test: (%test-equal? (positive? -1.0) #f)
PASS: r7rs.test: (%test-equal? (positive? +inf.0) #t)
PASS: r7rs.test: (%test-equal? (positive? -inf.0) #f)
PASS: r7rs.test: (%test-equal? (negative? 0) #f)
PASS: r7rs.test: (%test-equal? (negative? 0.0) #f)
PASS: r7rs.test: (%test-equal? (negative? 1) #f)
PASS: r7rs.test: (%test-equal? (negative? 1.0) #f)
PASS: r7rs.test: (%test-equal? (negative? -1) #t)
PASS: r7rs.test: (%test-equal? (negative? -1.0) #t)
PASS: r7rs.test: (%test-equal? (negative? +inf.0) #f)
PASS: r7rs.test: (%test-equal? (negative? -inf.0) #t)
PASS: r7rs.test: (%test-equal? (odd? 0) #f)
PASS: r7rs.test: (%test-equal? (odd? 1) #t)
PASS: r7rs.test: (%test-equal? (odd? -1) #t)
PASS: r7rs.test: (%test-equal? (odd? 102) #f)
PASS: r7rs.test: (%test-equal? (even? 0) #t)
PASS: r7rs.test: (%test-equal? (even? 1) #f)
PASS: r7rs.test: (%test-equal? (even? -2) #t)
PASS: r7rs.test: (%test-equal? (even? 102) #t)
PASS: r7rs.test: (%test-equal? (max 3) 3)
PASS: r7rs.test: (%test-equal? (max 3 4) 4)
PASS: r7rs.test: (%test-equal? (max 3.9 4) 4.0)
PASS: r7rs.test: (%test-equal? (max 5 3.9 4) 5.0)
PASS: r7rs.test: (%test-equal? (max 100 +inf.0) +inf.0)
PASS: r7rs.test: (%test-equal? (min 3) 3)
PASS: r7rs.test: (%test-equal? (min 3 4) 3)
PASS: r7rs.test: (%test-equal? (min 3 3.1) 3.0)
PASS: r7rs.test: (%test-equal? (min -inf.0 -100) -inf.0)
PASS: r7rs.test: (%test-equal? (+ 3 4) 7)
PASS: r7rs.test: (%test-equal? (+ 3) 3)
PASS: r7rs.test: (%test-equal? (+) 0)
PASS: r7rs.test: (%test-equal? (* 4) 4)
PASS: r7rs.test: (%test-equal? (*) 1)
PASS: r7rs.test: (%test-equal? (- 3 4) -1)
PASS: r7rs.test: (%test-equal? (- 3 4 5) -6)
PASS: r7rs.test: (%test-equal? (- 3) -3)
PASS: r7rs.test: (%test-equal? (/ 3 4 5) 3/20)
PASS: r7rs.test: (%test-equal? (/ 3) 1/3)
PASS: r7rs.test: (%test-equal? (abs -7) 7)
PASS: r7rs.test: (%test-equal? (abs 7) 7)
PASS: r7rs.test: (call-with-values (lambda () (floor/ 5 2)) list)
PASS: r7rs.test: (call-with-values (lambda () (floor/ -5 2)) list)
PASS: r7rs.test: (call-with-values (lambda () (floor/ 5 -2)) list)
PASS: r7rs.test: (call-with-values (lambda () (floor/ -5 -2)) list)
PASS: r7rs.test: (call-with-values (lambda () (truncate/ 5 2)) list)
PASS: r7rs.test: (call-with-values (lambda () (truncate/ -5 2)) list)
PASS: r7rs.test: (call-with-values (lambda () (truncate/ 5 -2)) list)
PASS: r7rs.test: (call-with-values (lambda () (truncate/ -5 -2)) list)
PASS: r7rs.test: (call-with-values (lambda () (truncate/ -5.0 -2)) list)
PASS: r7rs.test: (%test-equal? (modulo 13 4) 1)
PASS: r7rs.test: (%test-equal? (remainder 13 4) 1)
PASS: r7rs.test: (%test-equal? (modulo -13 4) 3)
PASS: r7rs.test: (%test-equal? (remainder -13 4) -1)
PASS: r7rs.test: (%test-equal? (modulo 13 -4) -3)
PASS: r7rs.test: (%test-equal? (remainder 13 -4) 1)
PASS: r7rs.test: (%test-equal? (modulo -13 -4) -1)
PASS: r7rs.test: (%test-equal? (remainder -13 -4) -1)
PASS: r7rs.test: (%test-equal? (remainder -13 -4.0) -1.0)
PASS: r7rs.test: (%test-equal? (gcd 32 -36) 4)
PASS: r7rs.test: (%test-equal? (gcd) 0)
PASS: r7rs.test: (%test-equal? (lcm 32 -36) 288)
PASS: r7rs.test: (%test-equal? (lcm 32.0 -36) 288.0)
PASS: r7rs.test: (%test-equal? (lcm) 1)
PASS: r7rs.test: (%test-equal? (numerator (/ 6 4)) 3)
PASS: r7rs.test: (%test-equal? (denominator (/ 6 4)) 2)
PASS: r7rs.test: (%test-equal? (denominator (inexact (/ 6 4))) 2.0)
PASS: r7rs.test: (%test-equal? (numerator 5.5) 11.0)
PASS: r7rs.test: (%test-equal? (denominator 5.5) 2.0)
PASS: r7rs.test: (%test-equal? (numerator 5.0) 5.0)
PASS: r7rs.test: (%test-equal? (denominator 5.0) 1.0)
PASS: r7rs.test: (%test-equal? (floor -4.3) -5.0)
PASS: r7rs.test: (%test-equal? (ceiling -4.3) -4.0)
PASS: r7rs.test: (%test-equal? (truncate -4.3) -4.0)
PASS: r7rs.test: (%test-equal? (round -4.3) -4.0)
PASS: r7rs.test: (%test-equal? (floor 3.5) 3.0)
PASS: r7rs.test: (%test-equal? (ceiling 3.5) 4.0)
PASS: r7rs.test: (%test-equal? (truncate 3.5) 3.0)
PASS: r7rs.test: (%test-equal? (round 3.5) 4.0)
PASS: r7rs.test: (%test-equal? (round 7/2) 4)
PASS: r7rs.test: (%test-equal? (round 7) 7)
PASS: r7rs.test: (%test-equal? (rationalize (exact 0.3) 1/10) 1/3)
PASS: r7rs.test: (%test-equal? (rationalize 0.3 1/10) 0.3333333333333333)
PASS: r7rs.test: (%test-equal? (inexact (exp 0)) 1.0)
PASS: r7rs.test: (%test-equal? (exp 3) 20.0855369231877)
PASS: r7rs.test: (%test-equal? (inexact (log 1)) 0.0)
PASS: r7rs.test: (%test-equal? (log (exp 1)) 1.0)
PASS: r7rs.test: (%test-equal? (log (exp 42)) 42.0)
PASS: r7rs.test: (%test-equal? (log 100 10) 2.0)
PASS: r7rs.test: (%test-equal? (log 4096 2) 12.0)
PASS: r7rs.test: (%test-equal? (inexact (sin 0)) 0.0)
PASS: r7rs.test: (%test-equal? (sin 1.5707963267949) 1.0)
PASS: r7rs.test: (%test-equal? (inexact (cos 0)) 1.0)
PASS: r7rs.test: (%test-equal? (cos 3.14159265358979) -1.0)
PASS: r7rs.test: (%test-equal? (inexact (tan 0)) 0.0)
PASS: r7rs.test: (%test-equal? (tan 1) 1.5574077246549)
PASS: r7rs.test: (%test-equal? (inexact (asin 0)) 0.0)
PASS: r7rs.test: (%test-equal? (asin 1) 1.5707963267949)
PASS: r7rs.test: (%test-equal? (inexact (acos 1)) 0.0)
PASS: r7rs.test: (%test-equal? (acos -1) 3.14159265358979)
PASS: r7rs.test: (%test-equal? (atan 0.0 1.0) 0.0)
PASS: r7rs.test: (%test-equal? (atan -0.0 1.0) -0.0)
PASS: r7rs.test: (%test-equal? (atan 1.0 1.0) 0.785398163397448)
PASS: r7rs.test: (%test-equal? (atan 1.0 0.0) 1.5707963267949)
PASS: r7rs.test: (%test-equal? (atan 1.0 -1.0) 2.35619449019234)
PASS: r7rs.test: (%test-equal? (atan 0.0 -1.0) 3.14159265358979)
PASS: r7rs.test: (%test-equal? (atan -0.0 -1.0) -3.14159265358979)
PASS: r7rs.test: (%test-equal? (atan -1.0 -1.0) -2.35619449019234)
PASS: r7rs.test: (%test-equal? (atan -1.0 0.0) -1.5707963267949)
PASS: r7rs.test: (%test-equal? (atan -1.0 1.0) -0.785398163397448)
PASS: r7rs.test: (%test-equal? (square 42) 1764)
PASS: r7rs.test: (%test-equal? (square 2) 4)
PASS: r7rs.test: (%test-equal? (inexact (sqrt 9)) 3.0)
PASS: r7rs.test: (%test-equal? (sqrt 2) 1.4142135623731)
PASS: r7rs.test: (%test-equal? (inexact (sqrt -1)) 0.0+1.0i)
PASS: r7rs.test: (%test-equal? (call-with-values (lambda () (exact-integer-sqrt 4)) list) (quote (2 0)))
PASS: r7rs.test: (%test-equal? (call-with-values (lambda () (exact-integer-sqrt 5)) list) (quote (2 1)))
PASS: r7rs.test: (%test-equal? (expt 3 3) 27)
PASS: r7rs.test: (%test-equal? (expt 0 0) 1)
PASS: r7rs.test: (%test-equal? (expt 0 1) 0)
PASS: r7rs.test: (%test-equal? (expt 0.0 0) 1.0)
PASS: r7rs.test: (%test-equal? (expt 0 1.0) 0.0)
PASS: r7rs.test: (%test-equal? (make-rectangular 1 2) 1.0+2.0i)
PASS: r7rs.test: (%test-equal? (make-polar 1 1) 0.54030230586814+0.841470984807897i)
PASS: r7rs.test: (%test-equal? (magnitude 1.0+2.0i) 2.23606797749979)
PASS: r7rs.test: (%test-equal? (angle 1.0+2.0i) 1.10714871779409)
PASS: r7rs.test: (%test-equal? (inexact 1) 1.0)
PASS: r7rs.test: (%test-equal? (inexact? (inexact 1)) #t)
PASS: r7rs.test: (%test-equal? (exact 1.0) 1)
PASS: r7rs.test: (%test-equal? (exact? (exact 1.0)) #t)
PASS: r7rs.test: (%test-equal? (string->number 100) 100)
PASS: r7rs.test: (%test-equal? (string->number 100 16) 256)
PASS: r7rs.test: (%test-equal? (string->number 1e2) 100.0)
PASS: r7rs.test: (%test-equal? #t #t)
PASS: r7rs.test: (%test-equal? #f #f)
PASS: r7rs.test: (%test-equal? (quote #f) #f)
PASS: r7rs.test: (%test-equal? (not #t) #f)
PASS: r7rs.test: (%test-equal? (not 3) #f)
PASS: r7rs.test: (%test-equal? (not (list 3)) #f)
PASS: r7rs.test: (%test-equal? (not #f) #t)
PASS: r7rs.test: (%test-equal? (not (quote ())) #f)
PASS: r7rs.test: (%test-equal? (not (list)) #f)
PASS: r7rs.test: (%test-equal? (not (quote nil)) #f)
PASS: r7rs.test: (%test-equal? (boolean? #f) #t)
PASS: r7rs.test: (%test-equal? (boolean? 0) #f)
PASS: r7rs.test: (%test-equal? (boolean? (quote ())) #f)
PASS: r7rs.test: (%test-equal? (boolean=? #t #t) #t)
PASS: r7rs.test: (%test-equal? (boolean=? #f #f) #t)
PASS: r7rs.test: (%test-equal? (boolean=? #t #f) #f)
PASS: r7rs.test: (%test-equal? (boolean=? #f #f #f) #t)
PASS: r7rs.test: (%test-equal? (boolean=? #t #t #f) #f)
PASS: r7rs.test: (%test-equal? (values y) (quote (a b c)))
PASS: r7rs.test: (%test-equal? (list? y) #t)
PASS: r7rs.test: (%test-equal? (values x) (quote (a . 4)))
PASS: r7rs.test: (%test-equal? (eqv? x y) #t)
PASS: r7rs.test: (%test-equal? (list? y) #f)
PASS: r7rs.test: (%test-equal? (list? x) #f)
PASS: r7rs.test: (%test-equal? (pair? (quote (a . b))) #t)
PASS: r7rs.test: (%test-equal? (pair? (quote (a b c))) #t)
PASS: r7rs.test: (%test-equal? (pair? (quote ())) #f)
PASS: r7rs.test: (%test-equal? (pair? (quote #(a b))) #f)
PASS: r7rs.test: (%test-equal? (cons (quote a) (quote ())) (quote (a)))
PASS: r7rs.test: (%test-equal? (cons (quote (a)) (quote (b c d))) (quote ((a) b c d)))
PASS: r7rs.test: (%test-equal? (cons a (quote (b c))) (quote (a b c)))
PASS: r7rs.test: (%test-equal? (cons (quote a) 3) (quote (a . 3)))
PASS: r7rs.test: (%test-equal? (cons (quote (a b)) (quote c)) (quote ((a b) . c)))
PASS: r7rs.test: (%test-equal? (car (quote (a b c))) (quote a))
PASS: r7rs.test: (%test-equal? (car (quote ((a) b c d))) (quote (a)))
PASS: r7rs.test: (%test-equal? (car (quote (1 . 2))) 1)
PASS: r7rs.test: (%test-equal? (cdr (quote ((a) b c d))) (quote (b c d)))
PASS: r7rs.test: (%test-equal? (cdr (quote (1 . 2))) 2)
PASS: r7rs.test: (%test-equal? (list? (quote (a b c))) #t)
PASS: r7rs.test: (%test-equal? (list? (quote ())) #t)
PASS: r7rs.test: (%test-equal? (list? (quote (a . b))) #f)
PASS: r7rs.test: (%test-equal? (let ((x (list (quote a)))) (set-cdr! x x) (list? x)) #f)
PASS: r7rs.test: (%test-equal? (make-list 2 3) (quote (3 3)))
PASS: r7rs.test: (%test-equal? (list (quote a) (+ 3 4) (quote c)) (quote (a 7 c)))
PASS: r7rs.test: (%test-equal? (list) (quote ()))
PASS: r7rs.test: (%test-equal? (length (quote (a b c))) 3)
PASS: r7rs.test: (%test-equal? (length (quote (a (b) (c d e)))) 3)
PASS: r7rs.test: (%test-equal? (length (quote ())) 0)
PASS: r7rs.test: (%test-equal? (append (quote (x)) (quote (y))) (quote (x y)))
PASS: r7rs.test: (%test-equal? (append (quote (a)) (quote (b c d))) (quote (a b c d)))
PASS: r7rs.test: (%test-equal? (append (quote (a (b))) (quote ((c)))) (quote (a (b) (c))))
PASS: r7rs.test: (%test-equal? (append (quote (a b)) (quote (c . d))) (quote (a b c . d)))
PASS: r7rs.test: (%test-equal? (append (quote ()) (quote a)) (quote a))
PASS: r7rs.test: (%test-equal? (reverse (quote (a b c))) (quote (c b a)))
PASS: r7rs.test: (%test-equal? (reverse (quote (a (b c) d (e (f))))) (quote ((e (f)) d (b c) a)))
PASS: r7rs.test: (%test-equal? (list-tail (quote (a b c d e)) 3) (quote (d e)))
PASS: r7rs.test: (%test-equal? (list-ref (quote (a b c d)) 2) (quote c))
PASS: r7rs.test: (%test-equal? (list-ref (quote (a b c d)) (exact (round 1.8))) (quote c))
PASS: r7rs.test: (%test-equal? (let ((lst (list 0 (quote (2 2 2 2)) Anna))) (list-set! lst 1 (quote (Sue Sue))) lst) (quote (0 (Sue Sue) Anna)))
PASS: r7rs.test: (%test-equal? (memq (quote a) (quote (a b c))) (quote (a b c)))
PASS: r7rs.test: (%test-equal? (memq (quote b) (quote (a b c))) (quote (b c)))
PASS: r7rs.test: (%test-equal? (memq (quote a) (quote (b c d))) #f)
PASS: r7rs.test: (%test-equal? (memq (list (quote a)) (quote (b (a) c))) #f)
PASS: r7rs.test: (%test-equal? (member (list (quote a)) (quote (b (a) c))) (quote ((a) c)))
PASS: r7rs.test: (%test-equal? (member B (quote (a b c)) string-ci=?) (quote (b c)))
PASS: r7rs.test: (%test-equal? (memv 101 (quote (100 101 102))) (quote (101 102)))
PASS: r7rs.test: (%test-equal? (assq (quote a) e) (quote (a 1)))
PASS: r7rs.test: (%test-equal? (assq (quote b) e) (quote (b 2)))
PASS: r7rs.test: (%test-equal? (assq (quote d) e) #f)
PASS: r7rs.test: (%test-equal? (assq (list (quote a)) (quote (((a)) ((b)) ((c))))) #f)
PASS: r7rs.test: (%test-equal? (assoc (list (quote a)) (quote (((a)) ((b)) ((c))))) (quote ((a))))
PASS: r7rs.test: (%test-equal? (assoc 2.0 (quote ((1 1) (2 4) (3 9))) =) (quote (2 4)))
PASS: r7rs.test: (%test-equal? (assv 5 (quote ((2 3) (5 7) (11 13)))) (quote (5 7)))
PASS: r7rs.test: (%test-equal? (list-copy (quote (1 2 3))) (quote (1 2 3)))
PASS: r7rs.test: (%test-equal? (list-copy foo) foo)
PASS: r7rs.test: (%test-equal? (list-copy (quote ())) (quote ()))
PASS: r7rs.test: (%test-equal? (list-copy (quote (3 . 4))) (quote (3 . 4)))
PASS: r7rs.test: (%test-equal? (list-copy (quote (6 7 8 . 9))) (quote (6 7 8 . 9)))
PASS: r7rs.test: (%test-equal? (quote ((a b) (c d) e)) l2)
PASS: r7rs.test: (%test-equal? (eq? (car l1) (car l2)) #t)
PASS: r7rs.test: (%test-equal? (eq? (cadr l1) (cadr l2)) #t)
PASS: r7rs.test: (%test-equal? (eq? (cdr l1) (cdr l2)) #f)
PASS: r7rs.test: (%test-equal? (eq? (cddr l1) (cddr l2)) #f)
PASS: r7rs.test: (%test-equal? (symbol? (quote foo)) #t)
PASS: r7rs.test: (%test-equal? (symbol? (car (quote (a b)))) #t)
PASS: r7rs.test: (%test-equal? (symbol? bar) #f)
PASS: r7rs.test: (%test-equal? (symbol? (quote nil)) #t)
PASS: r7rs.test: (%test-equal? (symbol? (quote ())) #f)
PASS: r7rs.test: (%test-equal? (symbol? #f) #f)
PASS: r7rs.test: (%test-equal? (symbol=? (quote a) (quote a)) #t)
PASS: r7rs.test: (%test-equal? (symbol=? (quote a) (quote A)) #f)
PASS: r7rs.test: (%test-equal? (symbol=? (quote a) (quote a) (quote a)) #t)
PASS: r7rs.test: (%test-equal? (symbol=? (quote a) (quote a) (quote A)) #f)
PASS: r7rs.test: (%test-equal? (symbol->string (quote flying-fish)) flying-fish)
PASS: r7rs.test: (%test-equal? (symbol->string (quote Martin)) Martin)
PASS: r7rs.test: (%test-equal? (symbol->string (string->symbol Malvina)) Malvina)
PASS: r7rs.test: (%test-equal? (string->symbol mISSISSIppi) (quote mISSISSIppi))
PASS: r7rs.test: (%test-equal? (eq? (quote bitBlt) (string->symbol bitBlt)) #t)
PASS: r7rs.test: (%test-equal? (eq? (quote LollyPop) (string->symbol (symbol->string (quote LollyPop)))) #t)
PASS: r7rs.test: (%test-equal? (string=? K. Harper, M.D. (symbol->string (string->symbol K. Harper, M.D.))) #t)
PASS: r7rs.test: (%test-equal? (char? a) #t)
PASS: r7rs.test: (%test-equal? (char? a) #f)
PASS: r7rs.test: (%test-equal? (char? (quote a)) #f)
PASS: r7rs.test: (%test-equal? (char? 0) #f)
PASS: r7rs.test: (%test-equal? (char=? a a a) #t)
PASS: r7rs.test: (%test-equal? (char=? a A) #f)
PASS: r7rs.test: (%test-equal? (char<? a b c) #t)
PASS: r7rs.test: (%test-equal? (char<? a a) #f)
PASS: r7rs.test: (%test-equal? (char<? b a) #f)
PASS: r7rs.test: (%test-equal? (char>? a b) #f)
PASS: r7rs.test: (%test-equal? (char>? a a) #f)
PASS: r7rs.test: (%test-equal? (char>? c b a) #t)
PASS: r7rs.test: (%test-equal? (char<=? a b b) #t)
PASS: r7rs.test: (%test-equal? (char<=? a a) #t)
PASS: r7rs.test: (%test-equal? (char<=? b a) #f)
PASS: r7rs.test: (%test-equal? (char>=? a b) #f)
PASS: r7rs.test: (%test-equal? (char>=? a a) #t)
PASS: r7rs.test: (%test-equal? (char>=? b b a) #t)
PASS: r7rs.test: (%test-equal? (char-ci=? a a) #t)
PASS: r7rs.test: (%test-equal? (char-ci=? a A a) #t)
PASS: r7rs.test: (%test-equal? (char-ci=? a b) #f)
PASS: r7rs.test: (%test-equal? (char-ci<? a B c) #t)
PASS: r7rs.test: (%test-equal? (char-ci<? A a) #f)
PASS: r7rs.test: (%test-equal? (char-ci<? b A) #f)
PASS: r7rs.test: (%test-equal? (char-ci>? A b) #f)
PASS: r7rs.test: (%test-equal? (char-ci>? a A) #f)
PASS: r7rs.test: (%test-equal? (char-ci>? c B a) #t)
PASS: r7rs.test: (%test-equal? (char-ci<=? a B b) #t)
PASS: r7rs.test: (%test-equal? (char-ci<=? A a) #t)
PASS: r7rs.test: (%test-equal? (char-ci<=? b A) #f)
PASS: r7rs.test: (%test-equal? (char-ci>=? A b) #f)
PASS: r7rs.test: (%test-equal? (char-ci>=? a A) #t)
PASS: r7rs.test: (%test-equal? (char-ci>=? b B a) #t)
PASS: r7rs.test: (%test-equal? (char-alphabetic? a) #t)
PASS: r7rs.test: (%test-equal? (char-alphabetic?  ) #f)
PASS: r7rs.test: (%test-equal? (char-numeric? 0) #t)
PASS: r7rs.test: (%test-equal? (char-numeric? .) #f)
PASS: r7rs.test: (%test-equal? (char-numeric? a) #f)
PASS: r7rs.test: (%test-equal? (char-whitespace?  ) #t)
PASS: r7rs.test: (%test-equal? (char-whitespace? 	) #t)
PASS: r7rs.test: (%test-equal? (char-whitespace? 
) #t)
PASS: r7rs.test: (%test-equal? (char-whitespace? _) #f)
PASS: r7rs.test: (%test-equal? (char-whitespace? a) #f)
PASS: r7rs.test: (%test-equal? (char-upper-case? A) #t)
PASS: r7rs.test: (%test-equal? (char-upper-case? a) #f)
PASS: r7rs.test: (%test-equal? (char-upper-case? 3) #f)
PASS: r7rs.test: (%test-equal? (char-lower-case? a) #t)
PASS: r7rs.test: (%test-equal? (char-lower-case? A) #f)
PASS: r7rs.test: (%test-equal? (char-lower-case? 3) #f)
PASS: r7rs.test: (%test-equal? (char-alphabetic? Λ) #t)
PASS: r7rs.test: (%test-equal? (char-alphabetic? ๐) #f)
PASS: r7rs.test: (%test-equal? (char-upper-case? Λ) #t)
PASS: r7rs.test: (%test-equal? (char-upper-case? λ) #f)
PASS: r7rs.test: (%test-equal? (char-lower-case? Λ) #f)
PASS: r7rs.test: (%test-equal? (char-lower-case? λ) #t)
PASS: r7rs.test: (%test-equal? (char-numeric? Λ) #f)
PASS: r7rs.test: (%test-equal? (char-numeric? ๐) #t)
PASS: r7rs.test: (%test-equal? (char-whitespace?  ) #t)
PASS: r7rs.test: (%test-equal? (digit-value 0) 0)
PASS: r7rs.test: (%test-equal? (digit-value 3) 3)
PASS: r7rs.test: (%test-equal? (digit-value 9) 9)
PASS: r7rs.test: (%test-equal? (digit-value ٤) 4)
PASS: r7rs.test: (%test-equal? (digit-value ૦) 0)
PASS: r7rs.test: (%test-equal? (digit-value .) #f)
PASS: r7rs.test: (%test-equal? (digit-value -) #f)
PASS: r7rs.test: (%test-equal? (char->integer a) 97)
PASS: r7rs.test: (%test-equal? (integer->char 97) a)
PASS: r7rs.test: (%test-equal? (char-upcase a) A)
PASS: r7rs.test: (%test-equal? (char-upcase A) A)
PASS: r7rs.test: (%test-equal? (char-downcase a) a)
PASS: r7rs.test: (%test-equal? (char-downcase A) a)
PASS: r7rs.test: (%test-equal? (char-foldcase a) a)
PASS: r7rs.test: (%test-equal? (char-foldcase A) a)
PASS: r7rs.test: (%test-equal? (char-upcase λ) Λ)
PASS: r7rs.test: (%test-equal? (char-upcase Λ) Λ)
PASS: r7rs.test: (%test-equal? (char-downcase λ) λ)
PASS: r7rs.test: (%test-equal? (char-downcase Λ) λ)
PASS: r7rs.test: (%test-equal? (char-foldcase λ) λ)
PASS: r7rs.test: (%test-equal? (char-foldcase Λ) λ)
PASS: r7rs.test: (%test-equal? (string? ) #t)
PASS: r7rs.test: (%test-equal? (string?  ) #t)
PASS: r7rs.test: (%test-equal? (string? (quote a)) #f)
PASS: r7rs.test: (%test-equal? (string? a) #f)
PASS: r7rs.test: (%test-equal? (string-length (make-string 3)) 3)
PASS: r7rs.test: (%test-equal? (make-string 3 -) ---)
PASS: r7rs.test: (%test-equal? (string) )
PASS: r7rs.test: (%test-equal? (string - - -) ---)
PASS: r7rs.test: (%test-equal? (string k i t t e n) kitten)
PASS: r7rs.test: (%test-equal? (string-length ) 0)
PASS: r7rs.test: (%test-equal? (string-length a) 1)
PASS: r7rs.test: (%test-equal? (string-length abc) 3)
PASS: r7rs.test: (%test-equal? (string-ref abc 0) a)
PASS: r7rs.test: (%test-equal? (string-ref abc 1) b)
PASS: r7rs.test: (%test-equal? (string-ref abc 2) c)
PASS: r7rs.test: (%test-equal? (let ((str (string a b c))) (string-set! str 1 -) str) a-c)
PASS: r7rs.test: (%test-equal? (let ((s (string a b c))) (string-set! s 1 🜀) s) (string a 🜀 c))
PASS: r7rs.test: (%test-equal? (string=?  ) #t)
PASS: r7rs.test: (%test-equal? (string=? abc abc abc) #t)
PASS: r7rs.test: (%test-equal? (string=?  abc) #f)
PASS: r7rs.test: (%test-equal? (string=? abc aBc) #f)
PASS: r7rs.test: (%test-equal? (string<?  ) #f)
PASS: r7rs.test: (%test-equal? (string<? abc abc) #f)
PASS: r7rs.test: (%test-equal? (string<? abc abcd acd) #t)
PASS: r7rs.test: (%test-equal? (string<? abcd abc) #f)
PASS: r7rs.test: (%test-equal? (string<? abc bbc) #t)
PASS: r7rs.test: (%test-equal? (string>?  ) #f)
PASS: r7rs.test: (%test-equal? (string>? abc abc) #f)
PASS: r7rs.test: (%test-equal? (string>? abc abcd) #f)
PASS: r7rs.test: (%test-equal? (string>? acd abcd abc) #t)
PASS: r7rs.test: (%test-equal? (string>? abc bbc) #f)
PASS: r7rs.test: (%test-equal? (string<=?  ) #t)
PASS: r7rs.test: (%test-equal? (string<=? abc abc) #t)
PASS: r7rs.test: (%test-equal? (string<=? abc abcd abcd) #t)
PASS: r7rs.test: (%test-equal? (string<=? abcd abc) #f)
PASS: r7rs.test: (%test-equal? (string<=? abc bbc) #t)
PASS: r7rs.test: (%test-equal? (string>=?  ) #t)
PASS: r7rs.test: (%test-equal? (string>=? abc abc) #t)
PASS: r7rs.test: (%test-equal? (string>=? abc abcd) #f)
PASS: r7rs.test: (%test-equal? (string>=? abcd abcd abc) #t)
PASS: r7rs.test: (%test-equal? (string>=? abc bbc) #f)
PASS: r7rs.test: (%test-equal? (string-ci=?  ) #t)
PASS: r7rs.test: (%test-equal? (string-ci=? abc abc) #t)
PASS: r7rs.test: (%test-equal? (string-ci=?  abc) #f)
PASS: r7rs.test: (%test-equal? (string-ci=? abc aBc) #t)
PASS: r7rs.test: (%test-equal? (string-ci=? abc aBcD) #f)
PASS: r7rs.test: (%test-equal? (string-ci<? abc aBc) #f)
PASS: r7rs.test: (%test-equal? (string-ci<? abc aBcD) #t)
PASS: r7rs.test: (%test-equal? (string-ci<? ABCd aBc) #f)
PASS: r7rs.test: (%test-equal? (string-ci>? abc aBc) #f)
PASS: r7rs.test: (%test-equal? (string-ci>? abc aBcD) #f)
PASS: r7rs.test: (%test-equal? (string-ci>? ABCd aBc) #t)
PASS: r7rs.test: (%test-equal? (string-ci<=? abc aBc) #t)
PASS: r7rs.test: (%test-equal? (string-ci<=? abc aBcD) #t)
PASS: r7rs.test: (%test-equal? (string-ci<=? ABCd aBc) #f)
PASS: r7rs.test: (%test-equal? (string-ci>=? abc aBc) #t)
PASS: r7rs.test: (%test-equal? (string-ci>=? abc aBcD) #f)
PASS: r7rs.test: (%test-equal? (string-ci>=? ABCd aBc) #t)
PASS: r7rs.test: (%test-equal? (string-ci=? ΑΒΓ αβγ αβγ) #t)
PASS: r7rs.test: (%test-equal? (string-ci<? ΑΒΓ αβγ) #f)
PASS: r7rs.test: (%test-equal? (string-ci>? ΑΒΓ αβγ) #f)
PASS: r7rs.test: (%test-equal? (string-ci<=? ΑΒΓ αβγ) #t)
PASS: r7rs.test: (%test-equal? (string-ci>=? ΑΒΓ αβγ) #t)
PASS: r7rs.test: (%test-equal? (string-upcase abc) ABC)
PASS: r7rs.test: (%test-equal? (string-upcase ABC) ABC)
PASS: r7rs.test: (%test-equal? (string-downcase abc) abc)
PASS: r7rs.test: (%test-equal? (string-downcase ABC) abc)
PASS: r7rs.test: (%test-equal? (string-foldcase abc) abc)
PASS: r7rs.test: (%test-equal? (string-foldcase ABC) abc)
PASS: r7rs.test: (%test-equal? (string-upcase αβγ) ΑΒΓ)
PASS: r7rs.test: (%test-equal? (string-upcase ΑΒΓ) ΑΒΓ)
PASS: r7rs.test: (%test-equal? (string-downcase αβγ) αβγ)
PASS: r7rs.test: (%test-equal? (string-downcase ΑΒΓ) αβγ)
PASS: r7rs.test: (%test-equal? (string-foldcase αβγ) αβγ)
PASS: r7rs.test: (%test-equal? (string-foldcase ΑΒΓ) αβγ)
PASS: r7rs.test: (%test-equal? (string-upcase ßa) SSA)
PASS: r7rs.test: (%test-equal? (string-downcase ßa) ßa)
PASS: r7rs.test: (%test-equal? (string-downcase SSA) ssa)
PASS: r7rs.test: (%test-equal? (string-downcase Maß) maß)
PASS: r7rs.test: (%test-equal? (string-foldcase Maß) mass)
PASS: r7rs.test: (%test-equal? (string-upcase İ) İ)
PASS: r7rs.test: (%test-equal? (string-downcase İ) i̇)
PASS: r7rs.test: (%test-equal? (string-foldcase İ) i̇)
PASS: r7rs.test: (%test-equal? (string-upcase ǰ) J̌)
PASS: r7rs.test: (%test-equal? (string-downcase ſ) ſ)
PASS: r7rs.test: (%test-equal? (string-foldcase ſ) s)
PASS: r7rs.test: (%test-equal? (string-upcase γλώσσα) ΓΛΏΣΣΑ)
PASS: r7rs.test: (%test-equal? (string-downcase ΓΛΏΣΣΑ) γλώσσα)
PASS: r7rs.test: (%test-equal? (string-foldcase ΓΛΏΣΣΑ) γλώσσα)
PASS: r7rs.test: (%test-equal? (string-upcase μέλος) ΜΈΛΟΣ)
PASS: r7rs.test: (%test-equal? (and (member (string-downcase ΜΈΛΟΣ) (quote (μέλος μέλοσ))) #t) #t)
XFAIL: r7rs.test: https://bugs.gnu.org/38235
PASS: r7rs.test: (%test-equal? (and (member (string-downcase ΜΈΛΟΣ ΕΝΌΣ) (quote (μέλος ενός μέλοσ ενόσ))) #t) #t)
PASS: r7rs.test: (%test-equal? (substring  0 0) )
PASS: r7rs.test: (%test-equal? (substring a 0 0) )
PASS: r7rs.test: (%test-equal? (substring abc 1 1) )
PASS: r7rs.test: (%test-equal? (substring abc 0 2) ab)
PASS: r7rs.test: (%test-equal? (substring abc 1 3) bc)
PASS: r7rs.test: (%test-equal? (string-append ) )
PASS: r7rs.test: (%test-equal? (string-append  ) )
PASS: r7rs.test: (%test-equal? (string-append  abc) abc)
PASS: r7rs.test: (%test-equal? (string-append abc ) abc)
PASS: r7rs.test: (%test-equal? (string-append abc de) abcde)
PASS: r7rs.test: (%test-equal? (string-append abc de f) abcdef)
PASS: r7rs.test: (%test-equal? (string->list ) (quote ()))
PASS: r7rs.test: (%test-equal? (string->list a) (quote (a)))
PASS: r7rs.test: (%test-equal? (string->list abc) (quote (a b c)))
PASS: r7rs.test: (%test-equal? (string->list abc 0) (quote (a b c)))
PASS: r7rs.test: (%test-equal? (string->list abc 1) (quote (b c)))
PASS: r7rs.test: (%test-equal? (string->list abc 1 3) (quote (b c)))
PASS: r7rs.test: (%test-equal? (list->string (quote ())) )
PASS: r7rs.test: (%test-equal? (list->string (quote (a b c))) abc)
PASS: r7rs.test: (%test-equal? (string-copy ) )
PASS: r7rs.test: (%test-equal? (string-copy  0) )
PASS: r7rs.test: (%test-equal? (string-copy  0 0) )
PASS: r7rs.test: (%test-equal? (string-copy abc) abc)
PASS: r7rs.test: (%test-equal? (string-copy abc 0) abc)
PASS: r7rs.test: (%test-equal? (string-copy abc 1) bc)
PASS: r7rs.test: (%test-equal? (string-copy abc 1 2) b)
PASS: r7rs.test: (%test-equal? (string-copy abc 1 3) bc)
PASS: r7rs.test: (%test-equal? (let ((str (make-string 5 x))) (string-fill! str -) str) -----)
PASS: r7rs.test: (%test-equal? (let ((str (make-string 5 x))) (string-fill! str - 2) str) xx---)
PASS: r7rs.test: (%test-equal? (let ((str (make-string 5 x))) (string-fill! str - 2 3) str) xx-xx)
PASS: r7rs.test: (%test-equal? (let ((str (string-copy abcde))) (string-copy! str 1 12345 0 2) str) a12de)
PASS: r7rs.test: (%test-equal? (let ((str (make-string 5 x))) (string-copy! str 0 -----) str) -----)
PASS: r7rs.test: (%test-equal? (let ((str (make-string 5 x))) (string-copy! str 0 ----- 2) str) ---xx)
PASS: r7rs.test: (%test-equal? (let ((str (make-string 5 x))) (string-copy! str 2 ----- 0 3) str) xx---)
PASS: r7rs.test: (%test-equal? (let ((str (make-string 5 x))) (string-copy! str 2 ----- 2 3) str) xx-xx)
PASS: r7rs.test: (%test-equal? (let ((str (string-copy abcde))) (string-copy! str 1 str 0 2) str) aabde)
PASS: r7rs.test: (%test-equal? (let ((str (string-copy abcde))) (string-copy! str 3 str 0 2) str) abcab)
PASS: r7rs.test: (%test-equal? (vector? (quote #(1 2 3))) #t)
PASS: r7rs.test: (%test-equal? (vector-length (make-vector 0)) 0)
PASS: r7rs.test: (%test-equal? (vector-length (make-vector 1000)) 1000)
PASS: r7rs.test: (%test-equal? (vector (quote a) (quote b) (quote c)) (quote #(a b c)))
PASS: r7rs.test: (%test-equal? (vector-ref (quote #(1 1 2 3 5 8 13 21)) 5) 8)
PASS: r7rs.test: (%test-equal? (vector-ref (quote #(1 1 2 3 5 8 13 21)) (let ((i (round (* 2 (acos -1))))) (if (inexact? i) (exact i) i))) 13)
PASS: r7rs.test: (%test-equal? (let ((vec (vector 0 (quote (2 2 2 2)) Anna))) (vector-set! vec 1 (quote (Sue Sue))) vec) (quote #(0 (Sue Sue) Anna)))
PASS: r7rs.test: (%test-equal? (vector->list (quote #(dah dah didah))) (quote (dah dah didah)))
PASS: r7rs.test: (%test-equal? (vector->list (quote #(dah dah didah)) 1) (quote (dah didah)))
PASS: r7rs.test: (%test-equal? (vector->list (quote #(dah dah didah)) 1 2) (quote (dah)))
PASS: r7rs.test: (%test-equal? (list->vector (quote (dididit dah))) (quote #(dididit dah)))
PASS: r7rs.test: (%test-equal? (string->vector ) (quote #()))
PASS: r7rs.test: (%test-equal? (string->vector ABC) (quote #(A B C)))
PASS: r7rs.test: (%test-equal? (string->vector ABC 1) (quote #(B C)))
PASS: r7rs.test: (%test-equal? (string->vector ABC 1 2) (quote #(B)))
PASS: r7rs.test: (%test-equal? (vector->string (quote #())) )
PASS: r7rs.test: (%test-equal? (vector->string (quote #(1 2 3))) 123)
PASS: r7rs.test: (%test-equal? (vector->string (quote #(1 2 3)) 1) 23)
PASS: r7rs.test: (%test-equal? (vector->string (quote #(1 2 3)) 1 2) 2)
PASS: r7rs.test: (%test-equal? (vector-copy (quote #())) (quote #()))
PASS: r7rs.test: (%test-equal? (vector-copy (quote #(a b c))) (quote #(a b c)))
PASS: r7rs.test: (%test-equal? (vector-copy (quote #(a b c)) 1) (quote #(b c)))
PASS: r7rs.test: (%test-equal? (vector-copy (quote #(a b c)) 1 2) (quote #(b)))
PASS: r7rs.test: (%test-equal? (vector-append (quote #())) (quote #()))
PASS: r7rs.test: (%test-equal? (vector-append (quote #()) (quote #())) (quote #()))
PASS: r7rs.test: (%test-equal? (vector-append (quote #()) (quote #(a b c))) (quote #(a b c)))
PASS: r7rs.test: (%test-equal? (vector-append (quote #(a b c)) (quote #())) (quote #(a b c)))
PASS: r7rs.test: (%test-equal? (vector-append (quote #(a b c)) (quote #(d e))) (quote #(a b c d e)))
PASS: r7rs.test: (%test-equal? (vector-append (quote #(a b c)) (quote #(d e)) (quote #(f))) (quote #(a b c d e f)))
PASS: r7rs.test: (%test-equal? (let ((vec (vector 1 2 3 4 5))) (vector-fill! vec (quote smash) 2 4) vec) (quote #(1 2 smash smash 5)))
PASS: r7rs.test: (%test-equal? (let ((vec (vector 1 2 3 4 5))) (vector-fill! vec (quote x)) vec) (quote #(x x x x x)))
PASS: r7rs.test: (%test-equal? (let ((vec (vector 1 2 3 4 5))) (vector-fill! vec (quote x) 2) vec) (quote #(1 2 x x x)))
PASS: r7rs.test: (%test-equal? (let ((vec (vector 1 2 3 4 5))) (vector-fill! vec (quote x) 2 3) vec) (quote #(1 2 x 4 5)))
PASS: r7rs.test: (%test-equal? (let ((vec (vector 1 2 3 4 5))) (vector-copy! vec 1 (quote #(a b c d e)) 0 2) vec) (quote #(1 a b 4 5)))
PASS: r7rs.test: (%test-equal? (let ((vec (vector 1 2 3 4 5))) (vector-copy! vec 0 (quote #(a b c d e))) vec) (quote #(a b c d e)))
PASS: r7rs.test: (%test-equal? (let ((vec (vector 1 2 3 4 5))) (vector-copy! vec 0 (quote #(a b c d e)) 2) vec) (quote #(c d e 4 5)))
PASS: r7rs.test: (%test-equal? (let ((vec (vector 1 2 3 4 5))) (vector-copy! vec 2 (quote #(a b c d e)) 0 3) vec) (quote #(1 2 a b c)))
PASS: r7rs.test: (%test-equal? (let ((vec (vector 1 2 3 4 5))) (vector-copy! vec 2 (quote #(a b c d e)) 2 3) vec) (quote #(1 2 c 4 5)))
PASS: r7rs.test: (%test-equal? (let ((vec (vector 1 2 3 4 5))) (vector-copy! vec 1 vec 0 2) vec) (quote #(1 1 2 4 5)))
PASS: r7rs.test: (%test-equal? (let ((vec (vector 1 2 3 4 5))) (vector-copy! vec 3 vec 0 2) vec) (quote #(1 2 3 1 2)))
PASS: r7rs.test: (%test-equal? (bytevector? #u8()) #t)
PASS: r7rs.test: (%test-equal? (bytevector? #u8(0 1 2)) #t)
PASS: r7rs.test: (%test-equal? (bytevector? (quote #())) #f)
PASS: r7rs.test: (%test-equal? (bytevector? (quote #(0 1 2))) #f)
PASS: r7rs.test: (%test-equal? (bytevector? (quote ())) #f)
PASS: r7rs.test: (%test-equal? (bytevector? (make-bytevector 0)) #t)
PASS: r7rs.test: (%test-equal? (bytevector-length (make-bytevector 0)) 0)
PASS: r7rs.test: (%test-equal? (bytevector-length (make-bytevector 1024)) 1024)
PASS: r7rs.test: (%test-equal? (bytevector-length (make-bytevector 1024 255)) 1024)
PASS: r7rs.test: (%test-equal? (bytevector-length (bytevector 0 1 2)) 3)
PASS: r7rs.test: (%test-equal? (bytevector-u8-ref (bytevector 0 1 2) 0) 0)
PASS: r7rs.test: (%test-equal? (bytevector-u8-ref (bytevector 0 1 2) 1) 1)
PASS: r7rs.test: (%test-equal? (bytevector-u8-ref (bytevector 0 1 2) 2) 2)
PASS: r7rs.test: (%test-equal? (let ((bv (bytevector 0 1 2))) (bytevector-u8-set! bv 1 255) bv) #u8(0 255 2))
PASS: r7rs.test: (%test-equal? (bytevector-copy #u8()) #u8())
PASS: r7rs.test: (%test-equal? (bytevector-copy #u8(0 1 2)) #u8(0 1 2))
PASS: r7rs.test: (%test-equal? (bytevector-copy #u8(0 1 2) 1) #u8(1 2))
PASS: r7rs.test: (%test-equal? (bytevector-copy #u8(0 1 2) 1 2) #u8(1))
PASS: r7rs.test: (%test-equal? (let ((bv (bytevector 1 2 3 4 5))) (bytevector-copy! bv 1 #u8(6 7 8 9 10) 0 2) bv) #u8(1 6 7 4 5))
PASS: r7rs.test: (%test-equal? (let ((bv (bytevector 1 2 3 4 5))) (bytevector-copy! bv 0 #u8(6 7 8 9 10)) bv) #u8(6 7 8 9 10))
PASS: r7rs.test: (%test-equal? (let ((bv (bytevector 1 2 3 4 5))) (bytevector-copy! bv 0 #u8(6 7 8 9 10) 2) bv) #u8(8 9 10 4 5))
PASS: r7rs.test: (%test-equal? (let ((bv (bytevector 1 2 3 4 5))) (bytevector-copy! bv 2 #u8(6 7 8 9 10) 0 3) bv) #u8(1 2 6 7 8))
PASS: r7rs.test: (%test-equal? (let ((bv (bytevector 1 2 3 4 5))) (bytevector-copy! bv 2 #u8(6 7 8 9 10) 2 3) bv) #u8(1 2 8 4 5))
PASS: r7rs.test: (%test-equal? (let ((bv (bytevector 1 2 3 4 5))) (bytevector-copy! bv 1 bv 0 2) bv) #u8(1 1 2 4 5))
PASS: r7rs.test: (%test-equal? (let ((bv (bytevector 1 2 3 4 5))) (bytevector-copy! bv 3 bv 0 2) bv) #u8(1 2 3 1 2))
PASS: r7rs.test: (%test-equal? (bytevector-append #u8()) #u8())
PASS: r7rs.test: (%test-equal? (bytevector-append #u8() #u8()) #u8())
PASS: r7rs.test: (%test-equal? (bytevector-append #u8() #u8(0 1 2)) #u8(0 1 2))
PASS: r7rs.test: (%test-equal? (bytevector-append #u8(0 1 2) #u8()) #u8(0 1 2))
PASS: r7rs.test: (%test-equal? (bytevector-append #u8(0 1 2) #u8(3 4)) #u8(0 1 2 3 4))
PASS: r7rs.test: (%test-equal? (bytevector-append #u8(0 1 2) #u8(3 4) #u8(5)) #u8(0 1 2 3 4 5))
PASS: r7rs.test: (%test-equal? (utf8->string #u8(65 66 67)) ABC)
PASS: r7rs.test: (%test-equal? (utf8->string #u8(0 65 66 67) 1) ABC)
PASS: r7rs.test: (%test-equal? (utf8->string #u8(0 65 66 67 0) 1 4) ABC)
PASS: r7rs.test: (%test-equal? (utf8->string #u8(0 206 187 0) 1 3) λ)
PASS: r7rs.test: (%test-equal? (string->utf8 ABC) #u8(65 66 67))
PASS: r7rs.test: (%test-equal? (string->utf8 ABC 1) #u8(66 67))
PASS: r7rs.test: (%test-equal? (string->utf8 ABC 1 2) #u8(66))
PASS: r7rs.test: (%test-equal? (string->utf8 λ) #u8(206 187))
PASS: r7rs.test: (%test-equal? (procedure? car) #t)
PASS: r7rs.test: (%test-equal? (procedure? (quote car)) #f)
PASS: r7rs.test: (%test-equal? (procedure? (lambda (x) (* x x))) #t)
PASS: r7rs.test: (%test-equal? (procedure? (quote (lambda (x) (* x x)))) #f)
PASS: r7rs.test: (%test-equal? (call-with-current-continuation procedure?) #t)
PASS: r7rs.test: (%test-equal? (apply + (list 3 4)) 7)
PASS: r7rs.test: (%test-equal? (apply + 3 4 (list)) 7)
PASS: r7rs.test: (guard (exn (else #t)) (apply +) #f)
PASS: r7rs.test: (guard (exn (else #t)) (apply + 3) #f)
PASS: r7rs.test: (guard (exn (else #t)) (apply + 3 4) #f)
PASS: r7rs.test: (guard (exn (else #t)) (apply + (quote (2 3 . 4))) #f)
PASS: r7rs.test: (%test-equal? (call-with-values (lambda () ((compose exact-integer-sqrt *) 12 75)) list) (quote (30 0)))
PASS: r7rs.test: (%test-equal? (map cadr (quote ((a b) (d e) (g h)))) (quote (b e h)))
PASS: r7rs.test: (%test-equal? (map (lambda (n) (expt n n)) (quote (1 2 3 4 5))) (quote (1 4 27 256 3125)))
PASS: r7rs.test: (%test-equal? (map + (quote (1 2 3)) (quote (4 5 6 7))) (quote (5 7 9)))
PASS: r7rs.test: (%test-equal? (let ((res (let ((count 0)) (map (lambda (ignored) (set! count (+ count 1)) count) (quote (a b)))))) (or (equal? res (quote (1 2))) (equal? res (quote (2 1))))) #t)
PASS: r7rs.test: (%test-equal? (let ((ls1 (list 10 100 1000)) (ls2 (list 1 2 3 4 5 6))) (set-cdr! (cddr ls1) ls1) (map * ls1 ls2)) (quote (10 200 3000 40 500 6000)))
PASS: r7rs.test: (%test-equal? (string-map char-foldcase AbdEgH) abdegh)
PASS: r7rs.test: (%test-equal? (string-map (lambda (c) (integer->char (+ 1 (char->integer c)))) HAL) IBM)
PASS: r7rs.test: (%test-equal? (string-map (lambda (c k) (if (eqv? k u) (char-upcase c) (char-downcase c))) studlycaps xxx ululululul) StUdLyCaPs)
PASS: r7rs.test: (%test-equal? (vector-map cadr (quote #((a b) (d e) (g h)))) (quote #(b e h)))
PASS: r7rs.test: (%test-equal? (vector-map (lambda (n) (expt n n)) (quote #(1 2 3 4 5))) (quote #(1 4 27 256 3125)))
PASS: r7rs.test: (%test-equal? (vector-map + (quote #(1 2 3)) (quote #(4 5 6 7))) (quote #(5 7 9)))
PASS: r7rs.test: (%test-equal? (let ((res (let ((count 0)) (vector-map (lambda (ignored) (set! count (+ count 1)) count) (quote #(a b)))))) (or (equal? res (quote #(1 2))) (equal? res (quote #(2 1))))) #t)
PASS: r7rs.test: (%test-equal? (let ((v (make-vector 5))) (for-each (lambda (i) (vector-set! v i (* i i))) (quote (0 1 2 3 4))) v) (quote #(0 1 4 9 16)))
PASS: r7rs.test: (%test-equal? (let ((ls1 (list 10 100 1000)) (ls2 (list 1 2 3 4 5 6)) (count 0)) (set-cdr! (cddr ls1) ls1) (for-each (lambda (x y) (set! count (+ count (* x y)))) ls2 ls1) count) 9750)
PASS: r7rs.test: (%test-equal? (let ((v (quote ()))) (string-for-each (lambda (c) (set! v (cons (char->integer c) v))) abcde) v) (quote (101 100 99 98 97)))
PASS: r7rs.test: (%test-equal? (let ((v (make-list 5))) (vector-for-each (lambda (i) (list-set! v i (* i i))) (quote #(0 1 2 3 4))) v) (quote (0 1 4 9 16)))
PASS: r7rs.test: (%test-equal? (call-with-current-continuation (lambda (exit) (for-each (lambda (x) (if (negative? x) (exit x))) (quote (54 0 37 -3 245 19))) #t)) -3)
PASS: r7rs.test: (%test-equal? (list-length (quote (1 2 3 4))) 4)
PASS: r7rs.test: (%test-equal? (list-length (quote (a b . c))) #f)
PASS: r7rs.test: (%test-equal? (call-with-values (lambda () (values 4 5)) (lambda (a b) b)) 5)
PASS: r7rs.test: (%test-equal? (call-with-values * -) -1)
PASS: r7rs.test: (%test-equal? (let ((path (quote ())) (c #f)) (let ((add (lambda (s) (set! path (cons s path))))) (dynamic-wind (lambda () (add (quote connect))) (lambda () (add (call-with-current-continuation (lambda (c0) (set! c c0) (quote talk1))))) (lambda () (add (quote disconnect)))) (if (< (length path) 4) (c (quote talk2)) (reverse path)))) (quote (connect talk1 disconnect connect talk2 disconnect)))
PASS: r7rs.test: (%test-equal? (with-exception-handler (lambda (con) 42) (lambda () (+ (raise-continuable should be a number) 23))) 65)
PASS: r7rs.test: (%test-equal? (error-object? (guard (exn (else exn)) (error BOOM! 1 2 3))) #t)
PASS: r7rs.test: (%test-equal? (error-object-message (guard (exn (else exn)) (error BOOM! 1 2 3))) BOOM!)
PASS: r7rs.test: (%test-equal? (error-object-irritants (guard (exn (else exn)) (error BOOM! 1 2 3))) (quote (1 2 3)))
PASS: r7rs.test: (%test-equal? (file-error? (guard (exn (else exn)) (error BOOM!))) #f)
XFAIL: r7rs.test: https://bugs.gnu.org/38237
PASS: r7rs.test: (%test-equal? (read-error? (guard (exn (else exn)) (error BOOM!))) #f)
PASS: r7rs.test: (%test-equal? (read-error? (guard (exn (else exn)) (read (open-input-string ))))) #t)
PASS: r7rs.test: (%test-equal? (test-exception-handler-1 5) 106)
PASS: r7rs.test: (%test-equal? something-went-wrong #f)
PASS: r7rs.test: (%test-equal? (test-exception-handler-1 -1) (quote exception))
PASS: r7rs.test: (%test-equal? something-went-wrong (quote (condition:  an-error)))
PASS: r7rs.test: (%test-equal? (test-exception-handler-2 5) 106)
PASS: r7rs.test: (%test-equal? something-went-wrong #f)
PASS: r7rs.test: (%test-equal? (test-exception-handler-2 -1) (quote caught-another-exception))
PASS: r7rs.test: (%test-equal? something-went-wrong #t)
PASS: r7rs.test: (%test-equal? (get-output-string out) should be a number)
PASS: r7rs.test: (%test-equal? value 65)
PASS: r7rs.test: (%test-equal? value (quote exception))
PASS: r7rs.test: (%test-equal? (get-output-string out) condition: an-error!)
PASS: r7rs.test: (%test-equal? (get-output-string out) )
PASS: r7rs.test: (%test-equal? value (quote positive))
PASS: r7rs.test: (%test-equal? (get-output-string out) )
PASS: r7rs.test: (%test-equal? value (quote negative))
PASS: r7rs.test: (%test-equal? (get-output-string out) reraised 0!)
PASS: r7rs.test: (%test-equal? value (quote zero))
PASS: r7rs.test: (%test-equal? (guard (condition ((assq (quote a) condition) => cdr) ((assq (quote b) condition))) (raise (list (cons (quote a) 42)))) 42)
PASS: r7rs.test: (%test-equal? (guard (condition ((assq (quote a) condition) => cdr) ((assq (quote b) condition))) (raise (list (cons (quote b) 23)))) (quote (b . 23)))
PASS: r7rs.test: (%test-equal? (guard (condition ((assq (quote c) condition) (quote caught-c)) ((assq (quote d) condition) (quote caught-d))) (list (sqrt 8) (guard (condition ((assq (quote a) condition) => cdr) ((assq (quote b) condition))) (raise (list (cons (quote d) 24)))))) (quote caught-d))
PASS: r7rs.test: (%test-equal? (let ((f (eval (quote (lambda (f x) (f x x))) (null-environment 5)))) (f + 10)) 20)
PASS: r7rs.test: (%test-equal? (eval (quote (expt 2 10)) (environment (quote (scheme base)))) 1024)
PASS: r7rs.test: (%test-equal? (inexact (eval (quote (sin 0)) (environment (quote (scheme inexact))))) 0.0)
PASS: r7rs.test: (%test-equal? (eval (quote (+ (expt 2 10) (inexact (sin 0)))) (environment (quote (scheme base)) (quote (scheme inexact)))) 1024.0)
PASS: r7rs.test: (%test-equal? (port? (current-input-port)) #t)
PASS: r7rs.test: (%test-equal? (input-port? (current-input-port)) #t)
PASS: r7rs.test: (%test-equal? (output-port? (current-output-port)) #t)
PASS: r7rs.test: (%test-equal? (output-port? (current-error-port)) #t)
PASS: r7rs.test: (%test-equal? (input-port? (open-input-string abc)) #t)
PASS: r7rs.test: (%test-equal? (output-port? (open-output-string)) #t)
PASS: r7rs.test: (%test-equal? (textual-port? (open-input-string abc)) #t)
PASS: r7rs.test: (%test-equal? (textual-port? (open-output-string)) #t)
PASS: r7rs.test: (%test-equal? (binary-port? (open-input-bytevector #u8(0 1 2))) #t)
PASS: r7rs.test: (%test-equal? (binary-port? (open-output-bytevector)) #t)
PASS: r7rs.test: (%test-equal? (input-port-open? (open-input-string abc)) #t)
PASS: r7rs.test: (%test-equal? (output-port-open? (open-output-string)) #t)
PASS: r7rs.test: (%test-equal? (let ((in (open-input-string abc))) (close-input-port in) (input-port-open? in)) #f)
PASS: r7rs.test: (%test-equal? (let ((out (open-output-string))) (close-output-port out) (output-port-open? out)) #f)
PASS: r7rs.test: (%test-equal? (let ((out (open-output-string))) (close-port out) (output-port-open? out)) #f)
PASS: r7rs.test: (%test-equal? (let ((in (open-input-string abc))) (close-input-port in) (guard (exn (else (quote error))) (read-char in))) (quote error))
PASS: r7rs.test: (%test-equal? (let ((out (open-output-string))) (close-output-port out) (guard (exn (else (quote error))) (write-char c out))) (quote error))
PASS: r7rs.test: (%test-equal? (eof-object? (eof-object)) #t)
PASS: r7rs.test: (%test-equal? (eof-object? (read (open-input-string ))) #t)
PASS: r7rs.test: (%test-equal? (char-ready? (open-input-string 42)) #t)
PASS: r7rs.test: (%test-equal? (read (open-input-string  42 )) 42)
PASS: r7rs.test: (%test-equal? (eof-object? (read-char (open-input-string ))) #t)
PASS: r7rs.test: (%test-equal? (read-char (open-input-string abc)) a)
PASS: r7rs.test: (%test-equal? (eof-object? (read-line (open-input-string ))) #t)
PASS: r7rs.test: (%test-equal? (read-line (open-input-string abc)) abc)
PASS: r7rs.test: (%test-equal? (read-line (open-input-string abc
def
)) abc)
PASS: r7rs.test: (%test-equal? (eof-object? (read-string 3 (open-input-string ))) #t)
PASS: r7rs.test: (%test-equal? (read-string 3 (open-input-string abcd)) abc)
PASS: r7rs.test: (%test-equal? (read-string 3 (open-input-string abc
def
)) abc)
PASS: r7rs.test: (%test-equal? c0 􏜀)
PASS: r7rs.test: (%test-equal? c1 􏜀)
PASS: r7rs.test: (%test-equal? c2 􏜁)
PASS: r7rs.test: (%test-equal? c3 􏜂)
PASS: r7rs.test: (%test-equal? (let ((out (open-output-string))) (write-char 􏜀 out) (get-output-string out)) (string 􏜀))
PASS: r7rs.test: (%test-equal? (let ((out (open-output-string))) (write (quote abc) out) (get-output-string out)) abc)
PASS: r7rs.test: (%test-equal? (let ((out (open-output-string))) (display abc def out) (get-output-string out)) abc def)
PASS: r7rs.test: (%test-equal? (let ((out (open-output-string))) (display a out) (display b out) (display c out) (get-output-string out)) abc)
PASS: r7rs.test: (%test-equal? (let* ((out (open-output-string)) (r (begin (newline out) (get-output-string out)))) (or (equal? r 
) (equal? r 
))) #t)
PASS: r7rs.test: (%test-equal? (let ((out (open-output-string))) (write-string abc def out) (get-output-string out)) abc def)
PASS: r7rs.test: (%test-equal? (let ((out (open-output-string))) (write-string abc def out 4) (get-output-string out)) def)
PASS: r7rs.test: (%test-equal? (let ((out (open-output-string))) (write-string abc def out 2 5) (get-output-string out)) c d)
PASS: r7rs.test: (%test-equal? (let ((out (open-output-string))) (flush-output-port out) (get-output-string out)) )
PASS: r7rs.test: (%test-equal? (eof-object? (read-u8 (open-input-bytevector #u8()))) #t)
PASS: r7rs.test: (%test-equal? (read-u8 (open-input-bytevector #u8(1 2 3))) 1)
PASS: r7rs.test: (%test-equal? (eof-object? (read-bytevector 3 (open-input-bytevector #u8()))) #t)
PASS: r7rs.test: (%test-equal? (u8-ready? (open-input-bytevector #u8(1))) #t)
PASS: r7rs.test: (%test-equal? (read-bytevector 3 (open-input-bytevector #u8(1))) #u8(1))
PASS: r7rs.test: (%test-equal? (read-bytevector 3 (open-input-bytevector #u8(1 2))) #u8(1 2))
PASS: r7rs.test: (%test-equal? (read-bytevector 3 (open-input-bytevector #u8(1 2 3))) #u8(1 2 3))
PASS: r7rs.test: (%test-equal? (read-bytevector 3 (open-input-bytevector #u8(1 2 3 4))) #u8(1 2 3))
PASS: r7rs.test: (%test-equal? (let ((bv (bytevector 1 2 3 4 5))) (eof-object? (read-bytevector! bv (open-input-bytevector #u8())))) #t)
PASS: r7rs.test: (%test-equal? (let ((bv (bytevector 1 2 3 4 5))) (read-bytevector! bv (open-input-bytevector #u8(6 7 8 9 10)) 0 5) bv) #u8(6 7 8 9 10))
PASS: r7rs.test: (%test-equal? (let ((bv (bytevector 1 2 3 4 5))) (read-bytevector! bv (open-input-bytevector #u8(6 7 8 9 10)) 0 3) bv) #u8(6 7 8 4 5))
PASS: r7rs.test: (%test-equal? (let ((bv (bytevector 1 2 3 4 5))) (read-bytevector! bv (open-input-bytevector #u8(6 7 8 9 10)) 3 4) bv) #u8(1 2 3 6 5))
PASS: r7rs.test: (%test-equal? (let ((out (open-output-bytevector))) (write-u8 1 out) (write-u8 2 out) (write-u8 3 out) (get-output-bytevector out)) #u8(1 2 3))
PASS: r7rs.test: (%test-equal? (let ((out (open-output-bytevector))) (write-bytevector #u8(1 2 3 4 5) out) (get-output-bytevector out)) #u8(1 2 3 4 5))
PASS: r7rs.test: (%test-equal? (let ((out (open-output-bytevector))) (write-bytevector #u8(1 2 3 4 5) out 2) (get-output-bytevector out)) #u8(3 4 5))
PASS: r7rs.test: (%test-equal? (let ((out (open-output-bytevector))) (write-bytevector #u8(1 2 3 4 5) out 2 4) (get-output-bytevector out)) #u8(3 4))
PASS: r7rs.test: (%test-equal? (let ((out (open-output-bytevector))) (flush-output-port out) (get-output-bytevector out)) #u8())
PASS: r7rs.test: (%test-equal? (and (member (let ((out (open-output-string)) (x (list 1))) (set-cdr! x x) (write-shared x out) (get-output-string out)) (quote (#0=(1 . #0#) #1=(1 . #1#)))) #t) #t)
PASS: r7rs.test: (%test-equal? (let ((out (open-output-string)) (x (list 1 2 3))) (write (list x x) out) (get-output-string out)) ((1 2 3) (1 2 3)))
PASS: r7rs.test: (%test-equal? (let ((out (open-output-string)) (x (list 1 2 3))) (write-simple (list x x) out) (get-output-string out)) ((1 2 3) (1 2 3)))
PASS: r7rs.test: (%test-equal? (and (member (let ((out (open-output-string)) (x (list 1 2 3))) (write-shared (list x x) out) (get-output-string out)) (quote ((#0=(1 2 3) #0#) (#1=(1 2 3) #1#)))) #t) #t)
PASS: r7rs.test: (%test-equal? (read (open-input-string #t)) #t)
PASS: r7rs.test: (%test-equal? (read (open-input-string #true)) #t)
PASS: r7rs.test: (%test-equal? (read (open-input-string #f)) #f)
PASS: r7rs.test: (%test-equal? (read (open-input-string #false)) #f)
PASS: r7rs.test: (%test-equal? (read2 (open-input-string #t(5))) (quote (#t 5)))
PASS: r7rs.test: (%test-equal? (read2 (open-input-string #true 6 )) (quote (#t . 6)))
PASS: r7rs.test: (%test-equal? (read2 (open-input-string #f 7)) (quote (#f . 7)))
PASS: r7rs.test: (%test-equal? (read2 (open-input-string #false"8")) (quote (#f . 8)))
PASS: r7rs.test: (%test-equal? (read (open-input-string ())) (quote ()))
PASS: r7rs.test: (%test-equal? (read (open-input-string (1 2))) (quote (1 2)))
PASS: r7rs.test: (%test-equal? (read (open-input-string (1 . 2))) (quote (1 . 2)))
PASS: r7rs.test: (%test-equal? (read (open-input-string (1 . (2)))) (quote (1 2)))
PASS: r7rs.test: (%test-equal? (read (open-input-string (1 . (2 3 4 . (5))))) (quote (1 2 3 4 5)))
XFAIL: r7rs.test: https://bugs.gnu.org/38236
XFAIL: r7rs.test: https://bugs.gnu.org/38236
PASS: r7rs.test: (%test-equal? (read (open-input-string '(1 2))) (quote (quote (1 2))))
PASS: r7rs.test: (%test-equal? (read (open-input-string '(1 ,2))) (quote (quote (1 (unquote 2)))))
PASS: r7rs.test: (%test-equal? (read (open-input-string '(1 ,@2))) (quote (quote (1 (unquote-splicing 2)))))
PASS: r7rs.test: (%test-equal? (read (open-input-string `(1 ,2))) (quote (quasiquote (1 (unquote 2)))))
PASS: r7rs.test: (%test-equal? (read (open-input-string #())) (quote #()))
PASS: r7rs.test: (%test-equal? (read (open-input-string #(a b))) (quote #(a b)))
PASS: r7rs.test: (%test-equal? (read (open-input-string #u8())) #u8())
PASS: r7rs.test: (%test-equal? (read (open-input-string #u8(0 1))) #u8(0 1))
PASS: r7rs.test: (%test-equal? (read (open-input-string abc)) (quote abc))
PASS: r7rs.test: (%test-equal? (read (open-input-string abc def)) (quote abc))
PASS: r7rs.test: (%test-equal? (read (open-input-string ABC)) (quote ABC))
PASS: r7rs.test: (%test-equal? (read (open-input-string |H\x65;llo|)) (quote Hello))
PASS: r7rs.test: (%test-equal? (read (open-input-string #!fold-case ABC)) (quote abc))
PASS: r7rs.test: (%test-equal? (read (open-input-string #!fold-case #!no-fold-case ABC)) (quote ABC))
PASS: r7rs.test: (%test-equal? (read (open-input-string #; abc def)) (quote def))
PASS: r7rs.test: (%test-equal? (read (open-input-string ; abc 
def)) (quote def))
PASS: r7rs.test: (%test-equal? (read (open-input-string #| abc |# def)) (quote def))
PASS: r7rs.test: (%test-equal? (read (open-input-string #| abc #| def |# |# ghi)) (quote ghi))
PASS: r7rs.test: (%test-equal? (read (open-input-string #; ; abc
 def ghi)) (quote ghi))
PASS: r7rs.test: (%test-equal? (read (open-input-string (#;sqrt abs -16))) (quote (abs -16)))
PASS: r7rs.test: (%test-equal? (read (open-input-string (a #; #;b c d))) (quote (a d)))
PASS: r7rs.test: (%test-equal? (read (open-input-string (a #;(b #;c d) e))) (quote (a e)))
PASS: r7rs.test: (%test-equal? (read (open-input-string (a . #;b c))) (quote (a . c)))
PASS: r7rs.test: (%test-equal? (read (open-input-string (a . b #;c))) (quote (a . b)))
XFAIL: r7rs.test: https://bugs.gnu.org/38238
XFAIL: r7rs.test: https://bugs.gnu.org/38238
XFAIL: r7rs.test: https://bugs.gnu.org/38238
XFAIL: r7rs.test: https://bugs.gnu.org/38238
XFAIL: r7rs.test: https://bugs.gnu.org/38238
XFAIL: r7rs.test: https://bugs.gnu.org/38238
PASS: r7rs.test: (%test-equal? (read (open-input-string #\a)) a)
PASS: r7rs.test: (%test-equal? (read (open-input-string #\space))  )
PASS: r7rs.test: (%test-equal? (char->integer (read (open-input-string #\null))) 0)
PASS: r7rs.test: (%test-equal? (char->integer (read (open-input-string #\alarm))) 7)
PASS: r7rs.test: (%test-equal? (char->integer (read (open-input-string #\backspace))) 8)
PASS: r7rs.test: (%test-equal? (char->integer (read (open-input-string #\tab))) 9)
PASS: r7rs.test: (%test-equal? (char->integer (read (open-input-string #\newline))) 10)
PASS: r7rs.test: (%test-equal? (char->integer (read (open-input-string #\return))) 13)
PASS: r7rs.test: (%test-equal? (char->integer (read (open-input-string #\delete))) 127)
PASS: r7rs.test: (%test-equal? (char->integer (read (open-input-string #\escape))) 27)
PASS: r7rs.test: (%test-equal? (char->integer (read (open-input-string #\λ))) 955)
PASS: r7rs.test: (%test-equal? (char->integer (read (open-input-string #\x03BB))) 955)
PASS: r7rs.test: (%test-equal? (read (open-input-string "abc")) abc)
PASS: r7rs.test: (%test-equal? (read (open-input-string "abc" "def")) abc)
PASS: r7rs.test: (%test-equal? (read (open-input-string "ABC")) ABC)
PASS: r7rs.test: (%test-equal? (read (open-input-string "H\x65;llo")) Hello)
PASS: r7rs.test: (%test-equal? (char->integer (string-ref (read (open-input-string "\a")) 0)) 7)
PASS: r7rs.test: (%test-equal? (char->integer (string-ref (read (open-input-string "\b")) 0)) 8)
PASS: r7rs.test: (%test-equal? (char->integer (string-ref (read (open-input-string "\t")) 0)) 9)
PASS: r7rs.test: (%test-equal? (char->integer (string-ref (read (open-input-string "\n")) 0)) 10)
PASS: r7rs.test: (%test-equal? (char->integer (string-ref (read (open-input-string "\r")) 0)) 13)
PASS: r7rs.test: (%test-equal? (char->integer (string-ref (read (open-input-string "\"")) 0)) 34)
PASS: r7rs.test: (%test-equal? (char->integer (string-ref (read (open-input-string "\|")) 0)) 124)
PASS: r7rs.test: (%test-equal? (read (open-input-string "line 1
line 2
")) line 1
line 2
)
PASS: r7rs.test: (%test-equal? (read (open-input-string "line 1\
continued
")) line 1continued
)
XFAIL: r7rs.test: https://bugs.gnu.org/38239
PASS: r7rs.test: (%test-equal? (read (open-input-string "line 1\
 continued
")) line 1continued
)
XFAIL: r7rs.test: https://bugs.gnu.org/38239
XFAIL: r7rs.test: https://bugs.gnu.org/38239
PASS: r7rs.test: (%test-equal? (char->integer (string-ref (read (open-input-string "\x03BB;")) 0)) 955)
PASS: r7rs.test: (%test-equal? (values z) 1)
PASS: r7rs.test: (%test-equal? (and (member z-str (quote (1))) #t) #t)
PASS: r7rs.test: (%test-equal? (values z) 1)
PASS: r7rs.test: (%test-equal? (and (member z-str (quote (+1 1))) #t) #t)
PASS: r7rs.test: (%test-equal? (values z) -1)
PASS: r7rs.test: (%test-equal? (and (member z-str (quote (-1))) #t) #t)
PASS: r7rs.test: (%test-equal? (values z) 1.0)
PASS: r7rs.test: (%test-equal? (and (member z-str (quote (#i1 1.0 1.))) #t) #t)
PASS: r7rs.test: (%test-equal? (values z) 1.0)
PASS: r7rs.test: (%test-equal? (and (member z-str (quote (#I1 1.0 1.))) #t) #t)
PASS: r7rs.test: (%test-equal? (values z) -1.0)
PASS: r7rs.test: (%test-equal? (and (member z-str (quote (#i-1 -1.0 -1.))) #t) #t)
PASS: r7rs.test: (%test-equal? (values z) 1.0)
PASS: r7rs.test: (%test-equal? (and (member z-str (quote (1.0 1.0 1.))) #t) #t)
PASS: r7rs.test: (%test-equal? (values z) 1.0)
PASS: r7rs.test: (%test-equal? (and (member z-str (quote (1. 1.0 1.))) #t) #t)
PASS: r7rs.test: (%test-equal? (values z) 0.1)
PASS: r7rs.test: (%test-equal? (and (member z-str (quote (.1 0.1 100.0e-3))) #t) #t)
PASS: r7rs.test: (%test-equal? (values z) -0.1)
PASS: r7rs.test: (%test-equal? (and (member z-str (quote (-.1 -0.1 -100.0e-3))) #t) #t)
PASS: r7rs.test: (%test-equal? (values z) -0.0)
PASS: r7rs.test: (%test-equal? (and (member z-str (quote (-.0 -0. -0.0 0.0 0. .0))) #t) #t)
PASS: r7rs.test: (%test-equal? (values z) -0.0)
PASS: r7rs.test: (%test-equal? (and (member z-str (quote (-0. -.0 -0.0 0.0 0. .0))) #t) #t)
PASS: r7rs.test: (%test-equal? (values z) 1.0)
PASS: r7rs.test: (%test-equal? (and (member z-str (quote (#i1.0 1.0 1.))) #t) #t)
PASS: r7rs.test: (%test-equal? (values z) 1)
PASS: r7rs.test: (%test-equal? (and (member z-str (quote (#e1.0 1))) #t) #t)
PASS: r7rs.test: (%test-equal? (values z) 0)
PASS: r7rs.test: (%test-equal? (and (member z-str (quote (#e-.0 0))) #t) #t)
PASS: r7rs.test: (%test-equal? (values z) 0)
PASS: r7rs.test: (%test-equal? (and (member z-str (quote (#e-0. 0))) #t) #t)
PASS: r7rs.test: (%test-equal? (values z) 100.0)
PASS: r7rs.test: (%test-equal? (and (member z-str (quote (1e2 100.0 100.))) #t) #t)
PASS: r7rs.test: (%test-equal? (values z) 100.0)
PASS: r7rs.test: (%test-equal? (and (member z-str (quote (1E2 100.0 100.))) #t) #t)
PASS: r7rs.test: (%test-equal? (values z) 100.0)
PASS: r7rs.test: (%test-equal? (and (member z-str (quote (1s2 100.0 100.))) #t) #t)
PASS: r7rs.test: (%test-equal? (values z) 100.0)
PASS: r7rs.test: (%test-equal? (and (member z-str (quote (1S2 100.0 100.))) #t) #t)
PASS: r7rs.test: (%test-equal? (values z) 100.0)
PASS: r7rs.test: (%test-equal? (and (member z-str (quote (1f2 100.0 100.))) #t) #t)
PASS: r7rs.test: (%test-equal? (values z) 100.0)
PASS: r7rs.test: (%test-equal? (and (member z-str (quote (1F2 100.0 100.))) #t) #t)
PASS: r7rs.test: (%test-equal? (values z) 100.0)
PASS: r7rs.test: (%test-equal? (and (member z-str (quote (1d2 100.0 100.))) #t) #t)
PASS: r7rs.test: (%test-equal? (values z) 100.0)
PASS: r7rs.test: (%test-equal? (and (member z-str (quote (1D2 100.0 100.))) #t) #t)
PASS: r7rs.test: (%test-equal? (values z) 100.0)
PASS: r7rs.test: (%test-equal? (and (member z-str (quote (1l2 100.0 100.))) #t) #t)
PASS: r7rs.test: (%test-equal? (values z) 100.0)
PASS: r7rs.test: (%test-equal? (and (member z-str (quote (1L2 100.0 100.))) #t) #t)
PASS: r7rs.test: (%test-equal? (values z) +inf.0)
PASS: r7rs.test: (%test-equal? (and (member z-str (quote (+inf.0 +inf.0 +Inf.0))) #t) #t)
PASS: r7rs.test: (%test-equal? (values z) +inf.0)
PASS: r7rs.test: (%test-equal? (and (member z-str (quote (+InF.0 +inf.0 +Inf.0))) #t) #t)
PASS: r7rs.test: (%test-equal? (values z) -inf.0)
PASS: r7rs.test: (%test-equal? (and (member z-str (quote (-inf.0 -inf.0 -Inf.0))) #t) #t)
PASS: r7rs.test: (%test-equal? (values z) -inf.0)
PASS: r7rs.test: (%test-equal? (and (member z-str (quote (-iNF.0 -inf.0 -Inf.0))) #t) #t)
PASS: r7rs.test: (%test-equal? (values z) +inf.0)
PASS: r7rs.test: (%test-equal? (and (member z-str (quote (#i+inf.0 +inf.0 +Inf.0))) #t) #t)
PASS: r7rs.test: (%test-equal? (values z) -inf.0)
PASS: r7rs.test: (%test-equal? (and (member z-str (quote (#i-inf.0 -inf.0 -Inf.0))) #t) #t)
PASS: r7rs.test: (%test-equal? (values z) (/ 1 2))
PASS: r7rs.test: (%test-equal? (and (member z-str (quote (1/2))) #t) #t)
PASS: r7rs.test: (%test-equal? (values z) (/ 1 2))
PASS: r7rs.test: (%test-equal? (and (member z-str (quote (#e1/2 1/2))) #t) #t)
PASS: r7rs.test: (%test-equal? (values z) 5)
PASS: r7rs.test: (%test-equal? (and (member z-str (quote (10/2 5))) #t) #t)
PASS: r7rs.test: (%test-equal? (values z) (- (/ 1 2)))
PASS: r7rs.test: (%test-equal? (and (member z-str (quote (-1/2))) #t) #t)
PASS: r7rs.test: (%test-equal? (values z) 0)
PASS: r7rs.test: (%test-equal? (and (member z-str (quote (0/10 0))) #t) #t)
PASS: r7rs.test: (%test-equal? (values z) 0)
PASS: r7rs.test: (%test-equal? (and (member z-str (quote (#e0/10 0))) #t) #t)
PASS: r7rs.test: (%test-equal? (values z) (/ 3.0 2.0))
PASS: r7rs.test: (%test-equal? (and (member z-str (quote (#i3/2 1.5))) #t) #t)
PASS: r7rs.test: (%test-equal? (values z) (make-rectangular 1.0 2))
PASS: r7rs.test: (%test-equal? (and (member z-str (quote (1.0+2i 1.0+2.0i 1.0+2i 1.+2i 1.+2.i))) #t) #t)
PASS: r7rs.test: (%test-equal? (values z) (make-rectangular 1 2.0))
PASS: r7rs.test: (%test-equal? (and (member z-str (quote (1+2.0i 1.0+2.0i 1+2.0i 1.+2.i 1+2.i))) #t) #t)
PASS: r7rs.test: (%test-equal? (values z) (make-rectangular 100.0 1.0))
PASS: r7rs.test: (%test-equal? (and (member z-str (quote (1e2+1.0i 100.0+1.0i 100.+1.i))) #t) #t)
PASS: r7rs.test: (%test-equal? (values z) (make-rectangular 100.0 1.0))
PASS: r7rs.test: (%test-equal? (and (member z-str (quote (1s2+1.0i 100.0+1.0i 100.+1.i))) #t) #t)
PASS: r7rs.test: (%test-equal? (values z) (make-rectangular 1.0 100.0))
PASS: r7rs.test: (%test-equal? (and (member z-str (quote (1.0+1e2i 1.0+100.0i 1.+100.i))) #t) #t)
PASS: r7rs.test: (%test-equal? (values z) (make-rectangular 1.0 100.0))
PASS: r7rs.test: (%test-equal? (and (member z-str (quote (1.0+1s2i 1.0+100.0i 1.+100.i))) #t) #t)
PASS: r7rs.test: (%test-equal? (values z) (make-rectangular 0.5 (/ 3 4)))
PASS: r7rs.test: (%test-equal? (and (member z-str (quote (0.5+3/4i 0.5+0.75i .5+.75i 0.5+3/4i .5+3/4i 500.0e-3+750.0e-3i))) #t) #t)
PASS: r7rs.test: (%test-equal? (values z) (make-rectangular +inf.0 +inf.0))
PASS: r7rs.test: (%test-equal? (and (member z-str (quote (+inf.0+inf.0i +Inf.0+Inf.0i))) #t) #t)
PASS: r7rs.test: (%test-equal? (values z) (make-rectangular -inf.0 +inf.0))
PASS: r7rs.test: (%test-equal? (and (member z-str (quote (-inf.0+inf.0i -Inf.0+Inf.0i))) #t) #t)
PASS: r7rs.test: (%test-equal? (values z) (make-rectangular -inf.0 -inf.0))
PASS: r7rs.test: (%test-equal? (and (member z-str (quote (-inf.0-inf.0i -Inf.0-Inf.0i))) #t) #t)
PASS: r7rs.test: (%test-equal? (values z) (make-rectangular +inf.0 -inf.0))
PASS: r7rs.test: (%test-equal? (and (member z-str (quote (+inf.0-inf.0i +Inf.0-Inf.0i))) #t) #t)
PASS: r7rs.test: (%test-equal? (values z) 17)
PASS: r7rs.test: (%test-equal? (and (member z-str (quote (#x11 17))) #t) #t)
PASS: r7rs.test: (%test-equal? (values z) 17)
PASS: r7rs.test: (%test-equal? (and (member z-str (quote (#X11 17))) #t) #t)
PASS: r7rs.test: (%test-equal? (values z) 11)
PASS: r7rs.test: (%test-equal? (and (member z-str (quote (#d11 11))) #t) #t)
PASS: r7rs.test: (%test-equal? (values z) 11)
PASS: r7rs.test: (%test-equal? (and (member z-str (quote (#D11 11))) #t) #t)
PASS: r7rs.test: (%test-equal? (values z) 9)
PASS: r7rs.test: (%test-equal? (and (member z-str (quote (#o11 9))) #t) #t)
PASS: r7rs.test: (%test-equal? (values z) 9)
PASS: r7rs.test: (%test-equal? (and (member z-str (quote (#O11 9))) #t) #t)
PASS: r7rs.test: (%test-equal? (values z) 3)
PASS: r7rs.test: (%test-equal? (and (member z-str (quote (#b11 3))) #t) #t)
PASS: r7rs.test: (%test-equal? (values z) 3)
PASS: r7rs.test: (%test-equal? (and (member z-str (quote (#B11 3))) #t) #t)
PASS: r7rs.test: (%test-equal? (values z) 7)
PASS: r7rs.test: (%test-equal? (and (member z-str (quote (#o7 7))) #t) #t)
PASS: r7rs.test: (%test-equal? (values z) 10)
PASS: r7rs.test: (%test-equal? (and (member z-str (quote (#xa 10))) #t) #t)
PASS: r7rs.test: (%test-equal? (values z) 10)
PASS: r7rs.test: (%test-equal? (and (member z-str (quote (#xA 10))) #t) #t)
PASS: r7rs.test: (%test-equal? (values z) 15)
PASS: r7rs.test: (%test-equal? (and (member z-str (quote (#xf 15))) #t) #t)
PASS: r7rs.test: (%test-equal? (values z) -16)
PASS: r7rs.test: (%test-equal? (and (member z-str (quote (#x-10 -16))) #t) #t)
PASS: r7rs.test: (%test-equal? (values z) -10)
PASS: r7rs.test: (%test-equal? (and (member z-str (quote (#d-10 -10))) #t) #t)
PASS: r7rs.test: (%test-equal? (values z) -8)
PASS: r7rs.test: (%test-equal? (and (member z-str (quote (#o-10 -8))) #t) #t)
PASS: r7rs.test: (%test-equal? (values z) -2)
PASS: r7rs.test: (%test-equal? (and (member z-str (quote (#b-10 -2))) #t) #t)
PASS: r7rs.test: (%test-equal? (values z) 16)
PASS: r7rs.test: (%test-equal? (and (member z-str (quote (#e#x10 16))) #t) #t)
PASS: r7rs.test: (%test-equal? (values z) 16.0)
PASS: r7rs.test: (%test-equal? (and (member z-str (quote (#i#x10 16.0 16.))) #t) #t)
PASS: r7rs.test: (%test-equal? (values z) 1.0)
PASS: r7rs.test: (%test-equal? (and (member z-str (quote (#d1. 1.0 1.))) #t) #t)
PASS: r7rs.test: (%test-equal? (values z) 0.1)
PASS: r7rs.test: (%test-equal? (and (member z-str (quote (#d.1 0.1 .1 100.0e-3))) #t) #t)
PASS: r7rs.test: (%test-equal? (values z) 482)
PASS: r7rs.test: (%test-equal? (and (member z-str (quote (#x1e2 482))) #t) #t)
PASS: r7rs.test: (%test-equal? (values z) 100.0)
PASS: r7rs.test: (%test-equal? (and (member z-str (quote (#d1e2 100.0 100.))) #t) #t)
PASS: r7rs.test: (%test-equal? (values z) 8)
PASS: r7rs.test: (%test-equal? (and (member z-str (quote (#x10/2 8))) #t) #t)
PASS: r7rs.test: (%test-equal? (values z) (/ 17 2))
PASS: r7rs.test: (%test-equal? (and (member z-str (quote (#x11/2 17/2))) #t) #t)
PASS: r7rs.test: (%test-equal? (values z) (/ 11 2))
PASS: r7rs.test: (%test-equal? (and (member z-str (quote (#d11/2 11/2))) #t) #t)
PASS: r7rs.test: (%test-equal? (values z) (/ 9 2))
PASS: r7rs.test: (%test-equal? (and (member z-str (quote (#o11/2 9/2))) #t) #t)
PASS: r7rs.test: (%test-equal? (values z) (/ 3 2))
PASS: r7rs.test: (%test-equal? (and (member z-str (quote (#b11/10 3/2))) #t) #t)
PASS: r7rs.test: (%test-equal? (values z) (make-rectangular 1.0 1.0))
PASS: r7rs.test: (%test-equal? (and (member z-str (quote (#d1.0+1.0i 1.0+1.0i 1.+1.i))) #t) #t)
PASS: r7rs.test: (%test-equal? (values z) (make-rectangular 1.0 1.0))
PASS: r7rs.test: (%test-equal? (and (member z-str (quote (#i1.0+1.0i 1.0+1.0i 1.+1.i))) #t) #t)
PASS: r7rs.test: (%test-equal? (string? (get-environment-variable PATH)) #t)
PASS: r7rs.test: (%test-equal? (list? env) #t)
PASS: r7rs.test: (%test-equal? (all? env-pair? env) #t)
PASS: r7rs.test: (%test-equal? (list? (command-line)) #t)
PASS: r7rs.test: (%test-equal? (real? (current-second)) #t)
PASS: r7rs.test: (%test-equal? (inexact? (current-second)) #t)
PASS: r7rs.test: (%test-equal? (exact? (current-jiffy)) #t)
PASS: r7rs.test: (%test-equal? (exact? (jiffies-per-second)) #t)
PASS: r7rs.test: (%test-equal? (list? (features)) #t)
PASS: r7rs.test: (%test-equal? (and (memq (quote r7rs) (features)) #t) #t)
PASS: r7rs.test: (%test-equal? (file-exists? .) #t)
PASS: r7rs.test: (%test-equal? (file-exists?  no such file ) #f)
XFAIL: r7rs.test: https://bugs.gnu.org/38237
PASS: random.test: random:normal-vector!: non uniform
PASS: random.test: random:normal-vector!: uniform (f64)
PASS: random.test: random:normal-vector!: empty argument
PASS: random.test: random:hollow-sphere!: non uniform
PASS: random.test: random:hollow-sphere!: uniform (f64)
PASS: random.test: random:hollow-sphere!: empty argument
PASS: rdelim.test: read-line: one line
PASS: rdelim.test: read-line: two lines, trim
PASS: rdelim.test: read-line: two lines, concat
PASS: rdelim.test: read-line: two lines, peek
PASS: rdelim.test: read-line: two lines, split
PASS: rdelim.test: read-line: two Greek lines, trim
PASS: rdelim.test: read-line: decoding error
PASS: rdelim.test: read-line: decoding error, substitute
PASS: rdelim.test: read-delimited: delimiter hit
PASS: rdelim.test: read-delimited: delimiter hit, split
PASS: rdelim.test: read-delimited: delimiter hit, concat
PASS: rdelim.test: read-delimited: delimiter hit, peek
PASS: rdelim.test: read-delimited: eof
PASS: rdelim.test: read-delimited!: delimiter hit
PASS: rdelim.test: read-delimited!: delimiter hit, start+end
PASS: rdelim.test: read-delimited!: delimiter hit, split
PASS: rdelim.test: read-delimited!: delimiter hit, concat
PASS: rdelim.test: read-delimited!: delimiter hit, peek
PASS: rdelim.test: read-delimited!: string too small
PASS: rdelim.test: read-delimited!: string too small, start+end
PASS: rdelim.test: read-delimited!: string too small, split
PASS: rdelim.test: read-delimited!: eof
PASS: rdelim.test: read-delimited!: eof, split
PASS: rdelim.test: read-string: short string
PASS: rdelim.test: read-string: 100 chars
PASS: rdelim.test: read-string: longer than 100 chars
PASS: rdelim.test: read-string: longer than 100 chars, with limit
PASS: rdelim.test: read-string!: buf smaller
PASS: rdelim.test: read-string!: buf right size
PASS: rdelim.test: read-string!: buf bigger
PASS: reader.test: reading: 0
PASS: reader.test: reading: 1++i
PASS: reader.test: reading: 1+i+i
PASS: reader.test: reading: 1+e10000i
PASS: reader.test: reading: -nan.0-1i
PASS: reader.test: reading: '|' in string literals
PASS: reader.test: reading: '(' in string literals
PASS: reader.test: reading: #\escape
PASS: reader.test: reading: #true
PASS: reader.test: reading: #false
PASS: reader.test: reading: error message on bad #
PASS: reader.test: reading: block comment
PASS: reader.test: reading: block comment finishing s-exp
PASS: reader.test: reading: R6RS lexeme comment
PASS: reader.test: reading: partial R6RS lexeme comment
PASS: reader.test: reading: R6RS/SRFI-30 block comment
PASS: reader.test: reading: R6RS/SRFI-30 nested block comment
PASS: reader.test: reading: R6RS/SRFI-30 nested block comment (2)
PASS: reader.test: reading: R6RS/SRFI-30 nested block comment (3)
PASS: reader.test: reading: R6RS/SRFI-30 block comment syntax overridden
PASS: reader.test: reading: unprintable symbol
PASS: reader.test: reading: CR recognized as a token delimiter
PASS: reader.test: reading: returned strings are mutable
PASS: reader.test: reading: square brackets are parens
PASS: reader.test: reading: paren mismatch
PASS: reader.test: reading: paren mismatch (2)
PASS: reader.test: reading: paren mismatch (3)
PASS: reader.test: reading: paren mismatch (4)
PASS: reader.test: reading: (read-string (#f1))
PASS: reader.test: reading: (read-string (#fa))
PASS: reader.test: reading: (read-string (#Fa))
PASS: reader.test: reading: (read-string (#t1))
PASS: reader.test: reading: (read-string (#tr))
PASS: reader.test: reading: (read-string (#Tr))
PASS: reader.test: reading: (read-string (#TrUe))
PASS: reader.test: reading: (read-string (#TRUE))
PASS: reader.test: reading: (read-string (#true))
PASS: reader.test: reading: (read-string (#false))
PASS: reader.test: reading: (read-string (#FALSE))
PASS: reader.test: reading: (read-string (#FaLsE))
PASS: reader.test: reading: (eof-object? (read-string #!!#))
PASS: reader.test: radix passed to number->string can't be zero
PASS: reader.test: radix passed to number->string can't be one either
PASS: reader.test: mismatching parentheses: read-error location
PASS: reader.test: mismatching parentheses: opening parenthesis
PASS: reader.test: mismatching parentheses: closing parenthesis following mismatched opening
PASS: reader.test: mismatching parentheses: closing square bracket following mismatched opening
PASS: reader.test: mismatching parentheses: opening vector parenthesis
PASS: reader.test: mismatching parentheses: closing parenthesis following mismatched vector opening
PASS: reader.test: exceptions: unterminated block comment
PASS: reader.test: exceptions: R6RS/SRFI-30 unterminated nested block comment
PASS: reader.test: exceptions: unknown character name
PASS: reader.test: exceptions: unknown sharp object
PASS: reader.test: exceptions: eof in string
PASS: reader.test: exceptions: invalid escape in string
PASS: reader.test: read-options: case-sensitive
PASS: reader.test: read-options: case-insensitive
PASS: reader.test: read-options: r7rs-symbols
PASS: reader.test: read-options: prefix keywords
PASS: reader.test: read-options: prefix non-keywords
PASS: reader.test: read-options: postfix keywords
PASS: reader.test: read-options: long postfix keywords
PASS: reader.test: read-options: `:' is not a postfix keyword (per SRFI-88)
PASS: reader.test: read-options: no positions
PASS: reader.test: read-options: positions
PASS: reader.test: read-options: positions on quote
PASS: reader.test: read-options: position of SCSH block comment
PASS: reader.test: read-options: r6rs-hex-escapes: non-hex char in two-digit hex-escape
PASS: reader.test: read-options: r6rs-hex-escapes: non-hex char in four-digit hex-escape
PASS: reader.test: read-options: r6rs-hex-escapes: non-hex char in six-digit hex-escape
PASS: reader.test: read-options: r6rs-hex-escapes: no semicolon at termination of one-digit hex-escape
PASS: reader.test: read-options: r6rs-hex-escapes: no semicolon at termination of three-digit hex-escape
PASS: reader.test: read-options: r6rs-hex-escapes: two-digit hex escape
PASS: reader.test: read-options: r6rs-hex-escapes: four-digit hex escape
PASS: reader.test: read-options: r6rs-hex-escapes: six-digit hex escape
PASS: reader.test: read-options: r6rs-hex-escapes: escaped characters match non-escaped ASCII characters
PASS: reader.test: read-options: r6rs-hex-escapes: write R6RS string escapes
PASS: reader.test: read-options: r6rs-hex-escapes: display R6RS string escapes
PASS: reader.test: read-options: r6rs-hex-escapes: one-digit hex escape
PASS: reader.test: read-options: r6rs-hex-escapes: two-digit hex escape
PASS: reader.test: read-options: r6rs-hex-escapes: four-digit hex escape
PASS: reader.test: read-options: r6rs-hex-escapes: eight-digit hex escape
PASS: reader.test: read-options: r6rs-hex-escapes: write R6RS escapes
PASS: reader.test: read-options: hungry escapes: default not hungry
PASS: reader.test: read-options: hungry escapes: hungry
PASS: reader.test: per-port-read-options: case-sensitive
PASS: reader.test: per-port-read-options: case-insensitive
PASS: reader.test: per-port-read-options: r6rs: case sensitive
PASS: reader.test: per-port-read-options: r6rs: square brackets
PASS: reader.test: per-port-read-options: r6rs: hex string escapes
PASS: reader.test: per-port-read-options: r6rs: keyword style: postfix disabled
PASS: reader.test: per-port-read-options: r6rs: keyword style: prefix disabled
PASS: reader.test: #;: #;foo 10
PASS: reader.test: #;: #;(10 20 30) foo
PASS: reader.test: #;: #;   (10 20 30) foo
PASS: reader.test: #;: #;
10
20
PASS: reader.test: #;: #;foo
PASS: reader.test: #;: #;
PASS: reader.test: #;: #;(
PASS: reader.test: #': #'foo
PASS: reader.test: #': #`foo
PASS: reader.test: #': #,foo
PASS: reader.test: #': #,@foo
PASS: reader.test: #{}#: (equal? (read-string #{}#) (quote #{}#))
PASS: reader.test: #{}#: (not (equal? (read-string (a #{.}# b)) (quote (a . b))))
PASS: reader.test: #{}#: (equal? (read-string #{a}#) (quote a))
PASS: reader.test: #{}#: (equal? (read-string #{a b}#) (quote #{a b}#))
PASS: reader.test: #{}#: #{
PASS: reader.test: #{}#: (equal? (read-string #{a\x20;b}#) (quote #{a b}#))
PASS: reader.test: deprecated #{}# escapes: (equal? (read-string #{a\ b}#) (quote #{a b}#))
PASS: reader.test: read-syntax: annotations
PASS: receive.test: receive: cond-expand srfi-8
PASS: records.test: records: constructor: 0 args (2 required)
PASS: records.test: records: constructor: 1 arg (2 required)
PASS: records.test: records: constructor: 2 args (2 required)
PASS: records.test: records: constructor: non-latin-1
PASS: records.test: records: modifier and getter: set
PASS: records.test: records: modifier and getter: set 2
PASS: records.test: records: record type name: foo
PASS: records.test: records: record type name: fŏŏ
PASS: records.test: records: printer: foo
PASS: records.test: records: printer: fŏŏ
PASS: records.test: records: subtyping: (not (record-type-extensible? a))
PASS: records.test: records: subtyping: (record-type-extensible? b)
PASS: records.test: records: subtyping: (not (record-type-extensible? c))
PASS: records.test: records: subtyping: subtyping final: a
PASS: records.test: records: subtyping: subtyping final: c
PASS: records.test: records: subtyping: fields of subtype
PASS: records.test: records: subtyping: final predicate: a? a
PASS: records.test: records: subtyping: final predicate: a? b
PASS: records.test: records: subtyping: non-final predicate: b? a
PASS: records.test: records: subtyping: non-final predicate: b? b
PASS: records.test: records: subtyping: non-final predicate: b? c
PASS: records.test: records: subtyping: final predicate: c? a
PASS: records.test: records: subtyping: final predicate: c? b
PASS: records.test: records: subtyping: final predicate: c? c
PASS: records.test: records: subtyping: b accessor on b
PASS: records.test: records: subtyping: b accessor on c
PASS: records.test: records: subtyping: c accessor on c
PASS: records.test: records: prefab types: (eq? a (make-record-type (quote a) (quote (s t)) #:uid uid))
PASS: records.test: records: prefab types: different name
PASS: records.test: records: prefab types: different fields
PASS: records.test: records: prefab types: fewer fields
PASS: records.test: records: prefab types: more fields
PASS: records.test: records: prefab types: adding a parent
PASS: records.test: records: prefab types: specifying a printer
PASS: records.test: records: prefab types: non-final
PASS: records.test: records: opaque types: (record-type-opaque? a)
PASS: records.test: records: opaque types: (not (record-type-opaque? b))
PASS: records.test: records: opaque types: (record-type-opaque? c)
PASS: records.test: records: opaque types: non-opaque
PASS: records.test: records: immutable fields: bad field
PASS: records.test: records: immutable fields: bad field
PASS: records.test: records: immutable fields: bad field
PASS: records.test: records: immutable fields: 7
PASS: records.test: records: immutable fields: 23
PASS: records.test: records: immutable fields: (procedure? (record-modifier a (quote s)))
PASS: records.test: records: immutable fields: (procedure? (record-modifier a (quote t)))
PASS: records.test: records: immutable fields: (procedure? (record-modifier a (quote u)))
PASS: records.test: records: immutable fields: immutable
PASS: records.test: records: immutable fields: (procedure? (record-modifier b (quote s)))
PASS: records.test: records: immutable fields: (procedure? (record-modifier b (quote t)))
PASS: records.test: records: immutable fields: (procedure? (record-modifier b (quote u)))
PASS: records.test: records: immutable fields: immutable
PASS: records.test: records: immutable fields: (procedure? (record-modifier b (quote w)))
PASS: records.test: records: immutable fields: immutable
PASS: regexp.test: make-regexp: no args
PASS: regexp.test: make-regexp: bad pat arg
PASS: regexp.test: make-regexp: bad arg 2
PASS: regexp.test: make-regexp: bad arg 3
PASS: regexp.test: match:string: foo
PASS: regexp.test: match:string: foo offset 1
PASS: regexp.test: regexp-exec: non-integer offset
PASS: regexp.test: regexp-exec: non-string input
PASS: regexp.test: regexp-exec: non-string input, with offset
PASS: regexp.test: regexp-exec: nul in input
PASS: regexp.test: regexp-exec: non-integer flags
PASS: regexp.test: fold-matches: without flags
PASS: regexp.test: fold-matches: with flags
PASS: regexp.test: fold-matches: regexp/notbol is set correctly
PASS: regexp.test: regexp-quote: no args
PASS: regexp.test: regexp-quote: bad string arg
PASS: regexp.test: regexp-quote: regexp/basic: (char 1 #\soh "\x01")
PASS: regexp.test: regexp-quote: regexp/basic: (char 2 #\stx "\x02")
PASS: regexp.test: regexp-quote: regexp/basic: (char 3 #\etx "\x03")
PASS: regexp.test: regexp-quote: regexp/basic: (char 4 #\eot "\x04")
PASS: regexp.test: regexp-quote: regexp/basic: (char 5 #\enq "\x05")
PASS: regexp.test: regexp-quote: regexp/basic: (char 6 #\ack "\x06")
PASS: regexp.test: regexp-quote: regexp/basic: (char 7 #\alarm "\a")
PASS: regexp.test: regexp-quote: regexp/basic: (char 8 #\backspace "\b")
PASS: regexp.test: regexp-quote: regexp/basic: (char 9 #\tab "\t")
PASS: regexp.test: regexp-quote: regexp/basic: (char 10 #\newline "\n")
PASS: regexp.test: regexp-quote: regexp/basic: (char 11 #\vtab "\v")
PASS: regexp.test: regexp-quote: regexp/basic: (char 12 #\page "\f")
PASS: regexp.test: regexp-quote: regexp/basic: (char 13 #\return "\r")
PASS: regexp.test: regexp-quote: regexp/basic: (char 14 #\so "\x0e")
PASS: regexp.test: regexp-quote: regexp/basic: (char 15 #\si "\x0f")
PASS: regexp.test: regexp-quote: regexp/basic: (char 16 #\dle "\x10")
PASS: regexp.test: regexp-quote: regexp/basic: (char 17 #\dc1 "\x11")
PASS: regexp.test: regexp-quote: regexp/basic: (char 18 #\dc2 "\x12")
PASS: regexp.test: regexp-quote: regexp/basic: (char 19 #\dc3 "\x13")
PASS: regexp.test: regexp-quote: regexp/basic: (char 20 #\dc4 "\x14")
PASS: regexp.test: regexp-quote: regexp/basic: (char 21 #\nak "\x15")
PASS: regexp.test: regexp-quote: regexp/basic: (char 22 #\syn "\x16")
PASS: regexp.test: regexp-quote: regexp/basic: (char 23 #\etb "\x17")
PASS: regexp.test: regexp-quote: regexp/basic: (char 24 #\can "\x18")
PASS: regexp.test: regexp-quote: regexp/basic: (char 25 #\em "\x19")
PASS: regexp.test: regexp-quote: regexp/basic: (char 26 #\sub "\x1a")
PASS: regexp.test: regexp-quote: regexp/basic: (char 27 #\esc "\x1b")
PASS: regexp.test: regexp-quote: regexp/basic: (char 28 #\fs "\x1c")
PASS: regexp.test: regexp-quote: regexp/basic: (char 29 #\gs "\x1d")
PASS: regexp.test: regexp-quote: regexp/basic: (char 30 #\rs "\x1e")
PASS: regexp.test: regexp-quote: regexp/basic: (char 31 #\us "\x1f")
PASS: regexp.test: regexp-quote: regexp/basic: (char 32 #\space " ")
PASS: regexp.test: regexp-quote: regexp/basic: (char 33 #\! "!")
PASS: regexp.test: regexp-quote: regexp/basic: (char 34 #\" "\"")
PASS: regexp.test: regexp-quote: regexp/basic: (char 35 #\# "#")
PASS: regexp.test: regexp-quote: regexp/basic: (char 36 #\$ "$")
PASS: regexp.test: regexp-quote: regexp/basic: (char 37 #\% "%")
PASS: regexp.test: regexp-quote: regexp/basic: (char 38 #\& "&")
PASS: regexp.test: regexp-quote: regexp/basic: (char 39 #\' "'")
PASS: regexp.test: regexp-quote: regexp/basic: (char 40 #\( "(")
PASS: regexp.test: regexp-quote: regexp/basic: (char 41 #\) ")")
PASS: regexp.test: regexp-quote: regexp/basic: (char 42 #\* "*")
PASS: regexp.test: regexp-quote: regexp/basic: (char 43 #\+ "+")
PASS: regexp.test: regexp-quote: regexp/basic: (char 44 #\, ",")
PASS: regexp.test: regexp-quote: regexp/basic: (char 45 #\- "-")
PASS: regexp.test: regexp-quote: regexp/basic: (char 46 #\. ".")
PASS: regexp.test: regexp-quote: regexp/basic: (char 47 #\/ "/")
PASS: regexp.test: regexp-quote: regexp/basic: (char 48 #\0 "0")
PASS: regexp.test: regexp-quote: regexp/basic: (char 49 #\1 "1")
PASS: regexp.test: regexp-quote: regexp/basic: (char 50 #\2 "2")
PASS: regexp.test: regexp-quote: regexp/basic: (char 51 #\3 "3")
PASS: regexp.test: regexp-quote: regexp/basic: (char 52 #\4 "4")
PASS: regexp.test: regexp-quote: regexp/basic: (char 53 #\5 "5")
PASS: regexp.test: regexp-quote: regexp/basic: (char 54 #\6 "6")
PASS: regexp.test: regexp-quote: regexp/basic: (char 55 #\7 "7")
PASS: regexp.test: regexp-quote: regexp/basic: (char 56 #\8 "8")
PASS: regexp.test: regexp-quote: regexp/basic: (char 57 #\9 "9")
PASS: regexp.test: regexp-quote: regexp/basic: (char 58 #\: ":")
PASS: regexp.test: regexp-quote: regexp/basic: (char 59 #\; ";")
PASS: regexp.test: regexp-quote: regexp/basic: (char 60 #\< "<")
PASS: regexp.test: regexp-quote: regexp/basic: (char 61 #\= "=")
PASS: regexp.test: regexp-quote: regexp/basic: (char 62 #\> ">")
PASS: regexp.test: regexp-quote: regexp/basic: (char 63 #\? "?")
PASS: regexp.test: regexp-quote: regexp/basic: (char 64 #\@ "@")
PASS: regexp.test: regexp-quote: regexp/basic: (char 65 #\A "A")
PASS: regexp.test: regexp-quote: regexp/basic: (char 66 #\B "B")
PASS: regexp.test: regexp-quote: regexp/basic: (char 67 #\C "C")
PASS: regexp.test: regexp-quote: regexp/basic: (char 68 #\D "D")
PASS: regexp.test: regexp-quote: regexp/basic: (char 69 #\E "E")
PASS: regexp.test: regexp-quote: regexp/basic: (char 70 #\F "F")
PASS: regexp.test: regexp-quote: regexp/basic: (char 71 #\G "G")
PASS: regexp.test: regexp-quote: regexp/basic: (char 72 #\H "H")
PASS: regexp.test: regexp-quote: regexp/basic: (char 73 #\I "I")
PASS: regexp.test: regexp-quote: regexp/basic: (char 74 #\J "J")
PASS: regexp.test: regexp-quote: regexp/basic: (char 75 #\K "K")
PASS: regexp.test: regexp-quote: regexp/basic: (char 76 #\L "L")
PASS: regexp.test: regexp-quote: regexp/basic: (char 77 #\M "M")
PASS: regexp.test: regexp-quote: regexp/basic: (char 78 #\N "N")
PASS: regexp.test: regexp-quote: regexp/basic: (char 79 #\O "O")
PASS: regexp.test: regexp-quote: regexp/basic: (char 80 #\P "P")
PASS: regexp.test: regexp-quote: regexp/basic: (char 81 #\Q "Q")
PASS: regexp.test: regexp-quote: regexp/basic: (char 82 #\R "R")
PASS: regexp.test: regexp-quote: regexp/basic: (char 83 #\S "S")
PASS: regexp.test: regexp-quote: regexp/basic: (char 84 #\T "T")
PASS: regexp.test: regexp-quote: regexp/basic: (char 85 #\U "U")
PASS: regexp.test: regexp-quote: regexp/basic: (char 86 #\V "V")
PASS: regexp.test: regexp-quote: regexp/basic: (char 87 #\W "W")
PASS: regexp.test: regexp-quote: regexp/basic: (char 88 #\X "X")
PASS: regexp.test: regexp-quote: regexp/basic: (char 89 #\Y "Y")
PASS: regexp.test: regexp-quote: regexp/basic: (char 90 #\Z "Z")
PASS: regexp.test: regexp-quote: regexp/basic: (char 91 #\[ "[")
PASS: regexp.test: regexp-quote: regexp/basic: (char 92 #\\ "\\")
PASS: regexp.test: regexp-quote: regexp/basic: (char 93 #\] "]")
PASS: regexp.test: regexp-quote: regexp/basic: (char 94 #\^ "^")
PASS: regexp.test: regexp-quote: regexp/basic: (char 95 #\_ "_")
PASS: regexp.test: regexp-quote: regexp/basic: (char 96 #\` "`")
PASS: regexp.test: regexp-quote: regexp/basic: (char 97 #\a "a")
PASS: regexp.test: regexp-quote: regexp/basic: (char 98 #\b "b")
PASS: regexp.test: regexp-quote: regexp/basic: (char 99 #\c "c")
PASS: regexp.test: regexp-quote: regexp/basic: (char 100 #\d "d")
PASS: regexp.test: regexp-quote: regexp/basic: (char 101 #\e "e")
PASS: regexp.test: regexp-quote: regexp/basic: (char 102 #\f "f")
PASS: regexp.test: regexp-quote: regexp/basic: (char 103 #\g "g")
PASS: regexp.test: regexp-quote: regexp/basic: (char 104 #\h "h")
PASS: regexp.test: regexp-quote: regexp/basic: (char 105 #\i "i")
PASS: regexp.test: regexp-quote: regexp/basic: (char 106 #\j "j")
PASS: regexp.test: regexp-quote: regexp/basic: (char 107 #\k "k")
PASS: regexp.test: regexp-quote: regexp/basic: (char 108 #\l "l")
PASS: regexp.test: regexp-quote: regexp/basic: (char 109 #\m "m")
PASS: regexp.test: regexp-quote: regexp/basic: (char 110 #\n "n")
PASS: regexp.test: regexp-quote: regexp/basic: (char 111 #\o "o")
PASS: regexp.test: regexp-quote: regexp/basic: (char 112 #\p "p")
PASS: regexp.test: regexp-quote: regexp/basic: (char 113 #\q "q")
PASS: regexp.test: regexp-quote: regexp/basic: (char 114 #\r "r")
PASS: regexp.test: regexp-quote: regexp/basic: (char 115 #\s "s")
PASS: regexp.test: regexp-quote: regexp/basic: (char 116 #\t "t")
PASS: regexp.test: regexp-quote: regexp/basic: (char 117 #\u "u")
PASS: regexp.test: regexp-quote: regexp/basic: (char 118 #\v "v")
PASS: regexp.test: regexp-quote: regexp/basic: (char 119 #\w "w")
PASS: regexp.test: regexp-quote: regexp/basic: (char 120 #\x "x")
PASS: regexp.test: regexp-quote: regexp/basic: (char 121 #\y "y")
PASS: regexp.test: regexp-quote: regexp/basic: (char 122 #\z "z")
PASS: regexp.test: regexp-quote: regexp/basic: (char 123 #\{ "{")
PASS: regexp.test: regexp-quote: regexp/basic: (char 124 #\| "|")
PASS: regexp.test: regexp-quote: regexp/basic: (char 125 #\} "}")
PASS: regexp.test: regexp-quote: regexp/basic: (char 126 #\~ "~")
PASS: regexp.test: regexp-quote: regexp/basic: (char 127 #\delete "\x7f")
UNRESOLVED: regexp.test: regexp-quote: regexp/basic: (char 128 #\200 "\x80")
UNRESOLVED: regexp.test: regexp-quote: regexp/basic: (char 129 #\201 "\x81")
UNRESOLVED: regexp.test: regexp-quote: regexp/basic: (char 130 #\202 "\x82")
UNRESOLVED: regexp.test: regexp-quote: regexp/basic: (char 131 #\203 "\x83")
UNRESOLVED: regexp.test: regexp-quote: regexp/basic: (char 132 #\204 "\x84")
UNRESOLVED: regexp.test: regexp-quote: regexp/basic: (char 133 #\205 "\x85")
UNRESOLVED: regexp.test: regexp-quote: regexp/basic: (char 134 #\206 "\x86")
UNRESOLVED: regexp.test: regexp-quote: regexp/basic: (char 135 #\207 "\x87")
UNRESOLVED: regexp.test: regexp-quote: regexp/basic: (char 136 #\210 "\x88")
UNRESOLVED: regexp.test: regexp-quote: regexp/basic: (char 137 #\211 "\x89")
UNRESOLVED: regexp.test: regexp-quote: regexp/basic: (char 138 #\212 "\x8a")
UNRESOLVED: regexp.test: regexp-quote: regexp/basic: (char 139 #\213 "\x8b")
UNRESOLVED: regexp.test: regexp-quote: regexp/basic: (char 140 #\214 "\x8c")
UNRESOLVED: regexp.test: regexp-quote: regexp/basic: (char 141 #\215 "\x8d")
UNRESOLVED: regexp.test: regexp-quote: regexp/basic: (char 142 #\216 "\x8e")
UNRESOLVED: regexp.test: regexp-quote: regexp/basic: (char 143 #\217 "\x8f")
UNRESOLVED: regexp.test: regexp-quote: regexp/basic: (char 144 #\220 "\x90")
UNRESOLVED: regexp.test: regexp-quote: regexp/basic: (char 145 #\221 "\x91")
UNRESOLVED: regexp.test: regexp-quote: regexp/basic: (char 146 #\222 "\x92")
UNRESOLVED: regexp.test: regexp-quote: regexp/basic: (char 147 #\223 "\x93")
UNRESOLVED: regexp.test: regexp-quote: regexp/basic: (char 148 #\224 "\x94")
UNRESOLVED: regexp.test: regexp-quote: regexp/basic: (char 149 #\225 "\x95")
UNRESOLVED: regexp.test: regexp-quote: regexp/basic: (char 150 #\226 "\x96")
UNRESOLVED: regexp.test: regexp-quote: regexp/basic: (char 151 #\227 "\x97")
UNRESOLVED: regexp.test: regexp-quote: regexp/basic: (char 152 #\230 "\x98")
UNRESOLVED: regexp.test: regexp-quote: regexp/basic: (char 153 #\231 "\x99")
UNRESOLVED: regexp.test: regexp-quote: regexp/basic: (char 154 #\232 "\x9a")
UNRESOLVED: regexp.test: regexp-quote: regexp/basic: (char 155 #\233 "\x9b")
UNRESOLVED: regexp.test: regexp-quote: regexp/basic: (char 156 #\234 "\x9c")
UNRESOLVED: regexp.test: regexp-quote: regexp/basic: (char 157 #\235 "\x9d")
UNRESOLVED: regexp.test: regexp-quote: regexp/basic: (char 158 #\236 "\x9e")
UNRESOLVED: regexp.test: regexp-quote: regexp/basic: (char 159 #\237 "\x9f")
UNRESOLVED: regexp.test: regexp-quote: regexp/basic: (char 160 #\240 "\xa0")
UNRESOLVED: regexp.test: regexp-quote: regexp/basic: (char 161 #\¡ "¡")
UNRESOLVED: regexp.test: regexp-quote: regexp/basic: (char 162 #\¢ "¢")
UNRESOLVED: regexp.test: regexp-quote: regexp/basic: (char 163 #\£ "£")
UNRESOLVED: regexp.test: regexp-quote: regexp/basic: (char 164 #\¤ "¤")
UNRESOLVED: regexp.test: regexp-quote: regexp/basic: (char 165 #\¥ "¥")
UNRESOLVED: regexp.test: regexp-quote: regexp/basic: (char 166 #\¦ "¦")
UNRESOLVED: regexp.test: regexp-quote: regexp/basic: (char 167 #\§ "§")
UNRESOLVED: regexp.test: regexp-quote: regexp/basic: (char 168 #\¨ "¨")
UNRESOLVED: regexp.test: regexp-quote: regexp/basic: (char 169 #\© "©")
UNRESOLVED: regexp.test: regexp-quote: regexp/basic: (char 170 #\ª "ª")
UNRESOLVED: regexp.test: regexp-quote: regexp/basic: (char 171 #\« "«")
UNRESOLVED: regexp.test: regexp-quote: regexp/basic: (char 172 #\¬ "¬")
UNRESOLVED: regexp.test: regexp-quote: regexp/basic: (char 173 #\255 "\xad")
UNRESOLVED: regexp.test: regexp-quote: regexp/basic: (char 174 #\® "®")
UNRESOLVED: regexp.test: regexp-quote: regexp/basic: (char 175 #\¯ "¯")
UNRESOLVED: regexp.test: regexp-quote: regexp/basic: (char 176 #\° "°")
UNRESOLVED: regexp.test: regexp-quote: regexp/basic: (char 177 #\± "±")
UNRESOLVED: regexp.test: regexp-quote: regexp/basic: (char 178 #\² "²")
UNRESOLVED: regexp.test: regexp-quote: regexp/basic: (char 179 #\³ "³")
UNRESOLVED: regexp.test: regexp-quote: regexp/basic: (char 180 #\´ "´")
UNRESOLVED: regexp.test: regexp-quote: regexp/basic: (char 181 #\µ "µ")
UNRESOLVED: regexp.test: regexp-quote: regexp/basic: (char 182 #\¶ "¶")
UNRESOLVED: regexp.test: regexp-quote: regexp/basic: (char 183 #\· "·")
UNRESOLVED: regexp.test: regexp-quote: regexp/basic: (char 184 #\¸ "¸")
UNRESOLVED: regexp.test: regexp-quote: regexp/basic: (char 185 #\¹ "¹")
UNRESOLVED: regexp.test: regexp-quote: regexp/basic: (char 186 #\º "º")
UNRESOLVED: regexp.test: regexp-quote: regexp/basic: (char 187 #\» "»")
UNRESOLVED: regexp.test: regexp-quote: regexp/basic: (char 188 #\¼ "¼")
UNRESOLVED: regexp.test: regexp-quote: regexp/basic: (char 189 #\½ "½")
UNRESOLVED: regexp.test: regexp-quote: regexp/basic: (char 190 #\¾ "¾")
UNRESOLVED: regexp.test: regexp-quote: regexp/basic: (char 191 #\¿ "¿")
UNRESOLVED: regexp.test: regexp-quote: regexp/basic: (char 192 #\À "À")
UNRESOLVED: regexp.test: regexp-quote: regexp/basic: (char 193 #\Á "Á")
UNRESOLVED: regexp.test: regexp-quote: regexp/basic: (char 194 #\Â "Â")
UNRESOLVED: regexp.test: regexp-quote: regexp/basic: (char 195 #\Ã "Ã")
UNRESOLVED: regexp.test: regexp-quote: regexp/basic: (char 196 #\Ä "Ä")
UNRESOLVED: regexp.test: regexp-quote: regexp/basic: (char 197 #\Å "Å")
UNRESOLVED: regexp.test: regexp-quote: regexp/basic: (char 198 #\Æ "Æ")
UNRESOLVED: regexp.test: regexp-quote: regexp/basic: (char 199 #\Ç "Ç")
UNRESOLVED: regexp.test: regexp-quote: regexp/basic: (char 200 #\È "È")
UNRESOLVED: regexp.test: regexp-quote: regexp/basic: (char 201 #\É "É")
UNRESOLVED: regexp.test: regexp-quote: regexp/basic: (char 202 #\Ê "Ê")
UNRESOLVED: regexp.test: regexp-quote: regexp/basic: (char 203 #\Ë "Ë")
UNRESOLVED: regexp.test: regexp-quote: regexp/basic: (char 204 #\Ì "Ì")
UNRESOLVED: regexp.test: regexp-quote: regexp/basic: (char 205 #\Í "Í")
UNRESOLVED: regexp.test: regexp-quote: regexp/basic: (char 206 #\Î "Î")
UNRESOLVED: regexp.test: regexp-quote: regexp/basic: (char 207 #\Ï "Ï")
UNRESOLVED: regexp.test: regexp-quote: regexp/basic: (char 208 #\Ð "Ð")
UNRESOLVED: regexp.test: regexp-quote: regexp/basic: (char 209 #\Ñ "Ñ")
UNRESOLVED: regexp.test: regexp-quote: regexp/basic: (char 210 #\Ò "Ò")
UNRESOLVED: regexp.test: regexp-quote: regexp/basic: (char 211 #\Ó "Ó")
UNRESOLVED: regexp.test: regexp-quote: regexp/basic: (char 212 #\Ô "Ô")
UNRESOLVED: regexp.test: regexp-quote: regexp/basic: (char 213 #\Õ "Õ")
UNRESOLVED: regexp.test: regexp-quote: regexp/basic: (char 214 #\Ö "Ö")
UNRESOLVED: regexp.test: regexp-quote: regexp/basic: (char 215 #\× "×")
UNRESOLVED: regexp.test: regexp-quote: regexp/basic: (char 216 #\Ø "Ø")
UNRESOLVED: regexp.test: regexp-quote: regexp/basic: (char 217 #\Ù "Ù")
UNRESOLVED: regexp.test: regexp-quote: regexp/basic: (char 218 #\Ú "Ú")
UNRESOLVED: regexp.test: regexp-quote: regexp/basic: (char 219 #\Û "Û")
UNRESOLVED: regexp.test: regexp-quote: regexp/basic: (char 220 #\Ü "Ü")
UNRESOLVED: regexp.test: regexp-quote: regexp/basic: (char 221 #\Ý "Ý")
UNRESOLVED: regexp.test: regexp-quote: regexp/basic: (char 222 #\Þ "Þ")
UNRESOLVED: regexp.test: regexp-quote: regexp/basic: (char 223 #\ß "ß")
UNRESOLVED: regexp.test: regexp-quote: regexp/basic: (char 224 #\à "à")
UNRESOLVED: regexp.test: regexp-quote: regexp/basic: (char 225 #\á "á")
UNRESOLVED: regexp.test: regexp-quote: regexp/basic: (char 226 #\â "â")
UNRESOLVED: regexp.test: regexp-quote: regexp/basic: (char 227 #\ã "ã")
UNRESOLVED: regexp.test: regexp-quote: regexp/basic: (char 228 #\ä "ä")
UNRESOLVED: regexp.test: regexp-quote: regexp/basic: (char 229 #\å "å")
UNRESOLVED: regexp.test: regexp-quote: regexp/basic: (char 230 #\æ "æ")
UNRESOLVED: regexp.test: regexp-quote: regexp/basic: (char 231 #\ç "ç")
UNRESOLVED: regexp.test: regexp-quote: regexp/basic: (char 232 #\è "è")
UNRESOLVED: regexp.test: regexp-quote: regexp/basic: (char 233 #\é "é")
UNRESOLVED: regexp.test: regexp-quote: regexp/basic: (char 234 #\ê "ê")
UNRESOLVED: regexp.test: regexp-quote: regexp/basic: (char 235 #\ë "ë")
UNRESOLVED: regexp.test: regexp-quote: regexp/basic: (char 236 #\ì "ì")
UNRESOLVED: regexp.test: regexp-quote: regexp/basic: (char 237 #\í "í")
UNRESOLVED: regexp.test: regexp-quote: regexp/basic: (char 238 #\î "î")
UNRESOLVED: regexp.test: regexp-quote: regexp/basic: (char 239 #\ï "ï")
UNRESOLVED: regexp.test: regexp-quote: regexp/basic: (char 240 #\ð "ð")
UNRESOLVED: regexp.test: regexp-quote: regexp/basic: (char 241 #\ñ "ñ")
UNRESOLVED: regexp.test: regexp-quote: regexp/basic: (char 242 #\ò "ò")
UNRESOLVED: regexp.test: regexp-quote: regexp/basic: (char 243 #\ó "ó")
UNRESOLVED: regexp.test: regexp-quote: regexp/basic: (char 244 #\ô "ô")
UNRESOLVED: regexp.test: regexp-quote: regexp/basic: (char 245 #\õ "õ")
UNRESOLVED: regexp.test: regexp-quote: regexp/basic: (char 246 #\ö "ö")
UNRESOLVED: regexp.test: regexp-quote: regexp/basic: (char 247 #\÷ "÷")
UNRESOLVED: regexp.test: regexp-quote: regexp/basic: (char 248 #\ø "ø")
UNRESOLVED: regexp.test: regexp-quote: regexp/basic: (char 249 #\ù "ù")
UNRESOLVED: regexp.test: regexp-quote: regexp/basic: (char 250 #\ú "ú")
UNRESOLVED: regexp.test: regexp-quote: regexp/basic: (char 251 #\û "û")
UNRESOLVED: regexp.test: regexp-quote: regexp/basic: (char 252 #\ü "ü")
UNRESOLVED: regexp.test: regexp-quote: regexp/basic: (char 253 #\ý "ý")
UNRESOLVED: regexp.test: regexp-quote: regexp/basic: (char 254 #\þ "þ")
UNRESOLVED: regexp.test: regexp-quote: regexp/basic: (char 255 #\ÿ "ÿ")
PASS: regexp.test: regexp-quote: regexp/basic: (string "aX" 1 #\soh "a\x01" "a\x01")
PASS: regexp.test: regexp-quote: regexp/basic: (string "aX" 2 #\stx "a\x02" "a\x02")
PASS: regexp.test: regexp-quote: regexp/basic: (string "aX" 3 #\etx "a\x03" "a\x03")
PASS: regexp.test: regexp-quote: regexp/basic: (string "aX" 4 #\eot "a\x04" "a\x04")
PASS: regexp.test: regexp-quote: regexp/basic: (string "aX" 5 #\enq "a\x05" "a\x05")
PASS: regexp.test: regexp-quote: regexp/basic: (string "aX" 6 #\ack "a\x06" "a\x06")
PASS: regexp.test: regexp-quote: regexp/basic: (string "aX" 7 #\alarm "a\a" "a\a")
PASS: regexp.test: regexp-quote: regexp/basic: (string "aX" 8 #\backspace "a\b" "a\b")
PASS: regexp.test: regexp-quote: regexp/basic: (string "aX" 9 #\tab "a\t" "a\t")
PASS: regexp.test: regexp-quote: regexp/basic: (string "aX" 10 #\newline "a\n" "a\n")
PASS: regexp.test: regexp-quote: regexp/basic: (string "aX" 11 #\vtab "a\v" "a\v")
PASS: regexp.test: regexp-quote: regexp/basic: (string "aX" 12 #\page "a\f" "a\f")
PASS: regexp.test: regexp-quote: regexp/basic: (string "aX" 13 #\return "a\r" "a\r")
PASS: regexp.test: regexp-quote: regexp/basic: (string "aX" 14 #\so "a\x0e" "a\x0e")
PASS: regexp.test: regexp-quote: regexp/basic: (string "aX" 15 #\si "a\x0f" "a\x0f")
PASS: regexp.test: regexp-quote: regexp/basic: (string "aX" 16 #\dle "a\x10" "a\x10")
PASS: regexp.test: regexp-quote: regexp/basic: (string "aX" 17 #\dc1 "a\x11" "a\x11")
PASS: regexp.test: regexp-quote: regexp/basic: (string "aX" 18 #\dc2 "a\x12" "a\x12")
PASS: regexp.test: regexp-quote: regexp/basic: (string "aX" 19 #\dc3 "a\x13" "a\x13")
PASS: regexp.test: regexp-quote: regexp/basic: (string "aX" 20 #\dc4 "a\x14" "a\x14")
PASS: regexp.test: regexp-quote: regexp/basic: (string "aX" 21 #\nak "a\x15" "a\x15")
PASS: regexp.test: regexp-quote: regexp/basic: (string "aX" 22 #\syn "a\x16" "a\x16")
PASS: regexp.test: regexp-quote: regexp/basic: (string "aX" 23 #\etb "a\x17" "a\x17")
PASS: regexp.test: regexp-quote: regexp/basic: (string "aX" 24 #\can "a\x18" "a\x18")
PASS: regexp.test: regexp-quote: regexp/basic: (string "aX" 25 #\em "a\x19" "a\x19")
PASS: regexp.test: regexp-quote: regexp/basic: (string "aX" 26 #\sub "a\x1a" "a\x1a")
PASS: regexp.test: regexp-quote: regexp/basic: (string "aX" 27 #\esc "a\x1b" "a\x1b")
PASS: regexp.test: regexp-quote: regexp/basic: (string "aX" 28 #\fs "a\x1c" "a\x1c")
PASS: regexp.test: regexp-quote: regexp/basic: (string "aX" 29 #\gs "a\x1d" "a\x1d")
PASS: regexp.test: regexp-quote: regexp/basic: (string "aX" 30 #\rs "a\x1e" "a\x1e")
PASS: regexp.test: regexp-quote: regexp/basic: (string "aX" 31 #\us "a\x1f" "a\x1f")
PASS: regexp.test: regexp-quote: regexp/basic: (string "aX" 32 #\space "a " "a ")
PASS: regexp.test: regexp-quote: regexp/basic: (string "aX" 33 #\! "a!" "a!")
PASS: regexp.test: regexp-quote: regexp/basic: (string "aX" 34 #\" "a\"" "a\"")
PASS: regexp.test: regexp-quote: regexp/basic: (string "aX" 35 #\# "a#" "a#")
PASS: regexp.test: regexp-quote: regexp/basic: (string "aX" 36 #\$ "a$" "a\\$")
PASS: regexp.test: regexp-quote: regexp/basic: (string "aX" 37 #\% "a%" "a%")
PASS: regexp.test: regexp-quote: regexp/basic: (string "aX" 38 #\& "a&" "a&")
PASS: regexp.test: regexp-quote: regexp/basic: (string "aX" 39 #\' "a'" "a'")
PASS: regexp.test: regexp-quote: regexp/basic: (string "aX" 40 #\( "a(" "a[(]")
PASS: regexp.test: regexp-quote: regexp/basic: (string "aX" 41 #\) "a)" "a[)]")
PASS: regexp.test: regexp-quote: regexp/basic: (string "aX" 42 #\* "a*" "a\\*")
PASS: regexp.test: regexp-quote: regexp/basic: (string "aX" 43 #\+ "a+" "a[+]")
PASS: regexp.test: regexp-quote: regexp/basic: (string "aX" 44 #\, "a," "a,")
PASS: regexp.test: regexp-quote: regexp/basic: (string "aX" 45 #\- "a-" "a-")
PASS: regexp.test: regexp-quote: regexp/basic: (string "aX" 46 #\. "a." "a\\.")
PASS: regexp.test: regexp-quote: regexp/basic: (string "aX" 47 #\/ "a/" "a/")
PASS: regexp.test: regexp-quote: regexp/basic: (string "aX" 48 #\0 "a0" "a0")
PASS: regexp.test: regexp-quote: regexp/basic: (string "aX" 49 #\1 "a1" "a1")
PASS: regexp.test: regexp-quote: regexp/basic: (string "aX" 50 #\2 "a2" "a2")
PASS: regexp.test: regexp-quote: regexp/basic: (string "aX" 51 #\3 "a3" "a3")
PASS: regexp.test: regexp-quote: regexp/basic: (string "aX" 52 #\4 "a4" "a4")
PASS: regexp.test: regexp-quote: regexp/basic: (string "aX" 53 #\5 "a5" "a5")
PASS: regexp.test: regexp-quote: regexp/basic: (string "aX" 54 #\6 "a6" "a6")
PASS: regexp.test: regexp-quote: regexp/basic: (string "aX" 55 #\7 "a7" "a7")
PASS: regexp.test: regexp-quote: regexp/basic: (string "aX" 56 #\8 "a8" "a8")
PASS: regexp.test: regexp-quote: regexp/basic: (string "aX" 57 #\9 "a9" "a9")
PASS: regexp.test: regexp-quote: regexp/basic: (string "aX" 58 #\: "a:" "a:")
PASS: regexp.test: regexp-quote: regexp/basic: (string "aX" 59 #\; "a;" "a;")
PASS: regexp.test: regexp-quote: regexp/basic: (string "aX" 60 #\< "a<" "a<")
PASS: regexp.test: regexp-quote: regexp/basic: (string "aX" 61 #\= "a=" "a=")
PASS: regexp.test: regexp-quote: regexp/basic: (string "aX" 62 #\> "a>" "a>")
PASS: regexp.test: regexp-quote: regexp/basic: (string "aX" 63 #\? "a?" "a[?]")
PASS: regexp.test: regexp-quote: regexp/basic: (string "aX" 64 #\@ "a@" "a@")
PASS: regexp.test: regexp-quote: regexp/basic: (string "aX" 65 #\A "aA" "aA")
PASS: regexp.test: regexp-quote: regexp/basic: (string "aX" 66 #\B "aB" "aB")
PASS: regexp.test: regexp-quote: regexp/basic: (string "aX" 67 #\C "aC" "aC")
PASS: regexp.test: regexp-quote: regexp/basic: (string "aX" 68 #\D "aD" "aD")
PASS: regexp.test: regexp-quote: regexp/basic: (string "aX" 69 #\E "aE" "aE")
PASS: regexp.test: regexp-quote: regexp/basic: (string "aX" 70 #\F "aF" "aF")
PASS: regexp.test: regexp-quote: regexp/basic: (string "aX" 71 #\G "aG" "aG")
PASS: regexp.test: regexp-quote: regexp/basic: (string "aX" 72 #\H "aH" "aH")
PASS: regexp.test: regexp-quote: regexp/basic: (string "aX" 73 #\I "aI" "aI")
PASS: regexp.test: regexp-quote: regexp/basic: (string "aX" 74 #\J "aJ" "aJ")
PASS: regexp.test: regexp-quote: regexp/basic: (string "aX" 75 #\K "aK" "aK")
PASS: regexp.test: regexp-quote: regexp/basic: (string "aX" 76 #\L "aL" "aL")
PASS: regexp.test: regexp-quote: regexp/basic: (string "aX" 77 #\M "aM" "aM")
PASS: regexp.test: regexp-quote: regexp/basic: (string "aX" 78 #\N "aN" "aN")
PASS: regexp.test: regexp-quote: regexp/basic: (string "aX" 79 #\O "aO" "aO")
PASS: regexp.test: regexp-quote: regexp/basic: (string "aX" 80 #\P "aP" "aP")
PASS: regexp.test: regexp-quote: regexp/basic: (string "aX" 81 #\Q "aQ" "aQ")
PASS: regexp.test: regexp-quote: regexp/basic: (string "aX" 82 #\R "aR" "aR")
PASS: regexp.test: regexp-quote: regexp/basic: (string "aX" 83 #\S "aS" "aS")
PASS: regexp.test: regexp-quote: regexp/basic: (string "aX" 84 #\T "aT" "aT")
PASS: regexp.test: regexp-quote: regexp/basic: (string "aX" 85 #\U "aU" "aU")
PASS: regexp.test: regexp-quote: regexp/basic: (string "aX" 86 #\V "aV" "aV")
PASS: regexp.test: regexp-quote: regexp/basic: (string "aX" 87 #\W "aW" "aW")
PASS: regexp.test: regexp-quote: regexp/basic: (string "aX" 88 #\X "aX" "aX")
PASS: regexp.test: regexp-quote: regexp/basic: (string "aX" 89 #\Y "aY" "aY")
PASS: regexp.test: regexp-quote: regexp/basic: (string "aX" 90 #\Z "aZ" "aZ")
PASS: regexp.test: regexp-quote: regexp/basic: (string "aX" 91 #\[ "a[" "a\\[")
PASS: regexp.test: regexp-quote: regexp/basic: (string "aX" 92 #\\ "a\\" "a\\\\")
PASS: regexp.test: regexp-quote: regexp/basic: (string "aX" 93 #\] "a]" "a]")
PASS: regexp.test: regexp-quote: regexp/basic: (string "aX" 94 #\^ "a^" "a\\^")
PASS: regexp.test: regexp-quote: regexp/basic: (string "aX" 95 #\_ "a_" "a_")
PASS: regexp.test: regexp-quote: regexp/basic: (string "aX" 96 #\` "a`" "a`")
PASS: regexp.test: regexp-quote: regexp/basic: (string "aX" 97 #\a "aa" "aa")
PASS: regexp.test: regexp-quote: regexp/basic: (string "aX" 98 #\b "ab" "ab")
PASS: regexp.test: regexp-quote: regexp/basic: (string "aX" 99 #\c "ac" "ac")
PASS: regexp.test: regexp-quote: regexp/basic: (string "aX" 100 #\d "ad" "ad")
PASS: regexp.test: regexp-quote: regexp/basic: (string "aX" 101 #\e "ae" "ae")
PASS: regexp.test: regexp-quote: regexp/basic: (string "aX" 102 #\f "af" "af")
PASS: regexp.test: regexp-quote: regexp/basic: (string "aX" 103 #\g "ag" "ag")
PASS: regexp.test: regexp-quote: regexp/basic: (string "aX" 104 #\h "ah" "ah")
PASS: regexp.test: regexp-quote: regexp/basic: (string "aX" 105 #\i "ai" "ai")
PASS: regexp.test: regexp-quote: regexp/basic: (string "aX" 106 #\j "aj" "aj")
PASS: regexp.test: regexp-quote: regexp/basic: (string "aX" 107 #\k "ak" "ak")
PASS: regexp.test: regexp-quote: regexp/basic: (string "aX" 108 #\l "al" "al")
PASS: regexp.test: regexp-quote: regexp/basic: (string "aX" 109 #\m "am" "am")
PASS: regexp.test: regexp-quote: regexp/basic: (string "aX" 110 #\n "an" "an")
PASS: regexp.test: regexp-quote: regexp/basic: (string "aX" 111 #\o "ao" "ao")
PASS: regexp.test: regexp-quote: regexp/basic: (string "aX" 112 #\p "ap" "ap")
PASS: regexp.test: regexp-quote: regexp/basic: (string "aX" 113 #\q "aq" "aq")
PASS: regexp.test: regexp-quote: regexp/basic: (string "aX" 114 #\r "ar" "ar")
PASS: regexp.test: regexp-quote: regexp/basic: (string "aX" 115 #\s "as" "as")
PASS: regexp.test: regexp-quote: regexp/basic: (string "aX" 116 #\t "at" "at")
PASS: regexp.test: regexp-quote: regexp/basic: (string "aX" 117 #\u "au" "au")
PASS: regexp.test: regexp-quote: regexp/basic: (string "aX" 118 #\v "av" "av")
PASS: regexp.test: regexp-quote: regexp/basic: (string "aX" 119 #\w "aw" "aw")
PASS: regexp.test: regexp-quote: regexp/basic: (string "aX" 120 #\x "ax" "ax")
PASS: regexp.test: regexp-quote: regexp/basic: (string "aX" 121 #\y "ay" "ay")
PASS: regexp.test: regexp-quote: regexp/basic: (string "aX" 122 #\z "az" "az")
PASS: regexp.test: regexp-quote: regexp/basic: (string "aX" 123 #\{ "a{" "a[{]")
PASS: regexp.test: regexp-quote: regexp/basic: (string "aX" 124 #\| "a|" "a[|]")
PASS: regexp.test: regexp-quote: regexp/basic: (string "aX" 125 #\} "a}" "a[}]")
PASS: regexp.test: regexp-quote: regexp/basic: (string "aX" 126 #\~ "a~" "a~")
PASS: regexp.test: regexp-quote: regexp/basic: (string "aX" 127 #\delete "a\x7f" "a\x7f")
UNRESOLVED: regexp.test: regexp-quote: regexp/basic: (string "aX" 128 #\200 "a\x80" "a\x80")
UNRESOLVED: regexp.test: regexp-quote: regexp/basic: (string "aX" 129 #\201 "a\x81" "a\x81")
UNRESOLVED: regexp.test: regexp-quote: regexp/basic: (string "aX" 130 #\202 "a\x82" "a\x82")
UNRESOLVED: regexp.test: regexp-quote: regexp/basic: (string "aX" 131 #\203 "a\x83" "a\x83")
UNRESOLVED: regexp.test: regexp-quote: regexp/basic: (string "aX" 132 #\204 "a\x84" "a\x84")
UNRESOLVED: regexp.test: regexp-quote: regexp/basic: (string "aX" 133 #\205 "a\x85" "a\x85")
UNRESOLVED: regexp.test: regexp-quote: regexp/basic: (string "aX" 134 #\206 "a\x86" "a\x86")
UNRESOLVED: regexp.test: regexp-quote: regexp/basic: (string "aX" 135 #\207 "a\x87" "a\x87")
UNRESOLVED: regexp.test: regexp-quote: regexp/basic: (string "aX" 136 #\210 "a\x88" "a\x88")
UNRESOLVED: regexp.test: regexp-quote: regexp/basic: (string "aX" 137 #\211 "a\x89" "a\x89")
UNRESOLVED: regexp.test: regexp-quote: regexp/basic: (string "aX" 138 #\212 "a\x8a" "a\x8a")
UNRESOLVED: regexp.test: regexp-quote: regexp/basic: (string "aX" 139 #\213 "a\x8b" "a\x8b")
UNRESOLVED: regexp.test: regexp-quote: regexp/basic: (string "aX" 140 #\214 "a\x8c" "a\x8c")
UNRESOLVED: regexp.test: regexp-quote: regexp/basic: (string "aX" 141 #\215 "a\x8d" "a\x8d")
UNRESOLVED: regexp.test: regexp-quote: regexp/basic: (string "aX" 142 #\216 "a\x8e" "a\x8e")
UNRESOLVED: regexp.test: regexp-quote: regexp/basic: (string "aX" 143 #\217 "a\x8f" "a\x8f")
UNRESOLVED: regexp.test: regexp-quote: regexp/basic: (string "aX" 144 #\220 "a\x90" "a\x90")
UNRESOLVED: regexp.test: regexp-quote: regexp/basic: (string "aX" 145 #\221 "a\x91" "a\x91")
UNRESOLVED: regexp.test: regexp-quote: regexp/basic: (string "aX" 146 #\222 "a\x92" "a\x92")
UNRESOLVED: regexp.test: regexp-quote: regexp/basic: (string "aX" 147 #\223 "a\x93" "a\x93")
UNRESOLVED: regexp.test: regexp-quote: regexp/basic: (string "aX" 148 #\224 "a\x94" "a\x94")
UNRESOLVED: regexp.test: regexp-quote: regexp/basic: (string "aX" 149 #\225 "a\x95" "a\x95")
UNRESOLVED: regexp.test: regexp-quote: regexp/basic: (string "aX" 150 #\226 "a\x96" "a\x96")
UNRESOLVED: regexp.test: regexp-quote: regexp/basic: (string "aX" 151 #\227 "a\x97" "a\x97")
UNRESOLVED: regexp.test: regexp-quote: regexp/basic: (string "aX" 152 #\230 "a\x98" "a\x98")
UNRESOLVED: regexp.test: regexp-quote: regexp/basic: (string "aX" 153 #\231 "a\x99" "a\x99")
UNRESOLVED: regexp.test: regexp-quote: regexp/basic: (string "aX" 154 #\232 "a\x9a" "a\x9a")
UNRESOLVED: regexp.test: regexp-quote: regexp/basic: (string "aX" 155 #\233 "a\x9b" "a\x9b")
UNRESOLVED: regexp.test: regexp-quote: regexp/basic: (string "aX" 156 #\234 "a\x9c" "a\x9c")
UNRESOLVED: regexp.test: regexp-quote: regexp/basic: (string "aX" 157 #\235 "a\x9d" "a\x9d")
UNRESOLVED: regexp.test: regexp-quote: regexp/basic: (string "aX" 158 #\236 "a\x9e" "a\x9e")
UNRESOLVED: regexp.test: regexp-quote: regexp/basic: (string "aX" 159 #\237 "a\x9f" "a\x9f")
UNRESOLVED: regexp.test: regexp-quote: regexp/basic: (string "aX" 160 #\240 "a\xa0" "a\xa0")
UNRESOLVED: regexp.test: regexp-quote: regexp/basic: (string "aX" 161 #\¡ "a¡" "a¡")
UNRESOLVED: regexp.test: regexp-quote: regexp/basic: (string "aX" 162 #\¢ "a¢" "a¢")
UNRESOLVED: regexp.test: regexp-quote: regexp/basic: (string "aX" 163 #\£ "a£" "a£")
UNRESOLVED: regexp.test: regexp-quote: regexp/basic: (string "aX" 164 #\¤ "a¤" "a¤")
UNRESOLVED: regexp.test: regexp-quote: regexp/basic: (string "aX" 165 #\¥ "a¥" "a¥")
UNRESOLVED: regexp.test: regexp-quote: regexp/basic: (string "aX" 166 #\¦ "a¦" "a¦")
UNRESOLVED: regexp.test: regexp-quote: regexp/basic: (string "aX" 167 #\§ "a§" "a§")
UNRESOLVED: regexp.test: regexp-quote: regexp/basic: (string "aX" 168 #\¨ "a¨" "a¨")
UNRESOLVED: regexp.test: regexp-quote: regexp/basic: (string "aX" 169 #\© "a©" "a©")
UNRESOLVED: regexp.test: regexp-quote: regexp/basic: (string "aX" 170 #\ª "aª" "aª")
UNRESOLVED: regexp.test: regexp-quote: regexp/basic: (string "aX" 171 #\« "a«" "a«")
UNRESOLVED: regexp.test: regexp-quote: regexp/basic: (string "aX" 172 #\¬ "a¬" "a¬")
UNRESOLVED: regexp.test: regexp-quote: regexp/basic: (string "aX" 173 #\255 "a\xad" "a\xad")
UNRESOLVED: regexp.test: regexp-quote: regexp/basic: (string "aX" 174 #\® "a®" "a®")
UNRESOLVED: regexp.test: regexp-quote: regexp/basic: (string "aX" 175 #\¯ "a¯" "a¯")
UNRESOLVED: regexp.test: regexp-quote: regexp/basic: (string "aX" 176 #\° "a°" "a°")
UNRESOLVED: regexp.test: regexp-quote: regexp/basic: (string "aX" 177 #\± "a±" "a±")
UNRESOLVED: regexp.test: regexp-quote: regexp/basic: (string "aX" 178 #\² "a²" "a²")
UNRESOLVED: regexp.test: regexp-quote: regexp/basic: (string "aX" 179 #\³ "a³" "a³")
UNRESOLVED: regexp.test: regexp-quote: regexp/basic: (string "aX" 180 #\´ "a´" "a´")
UNRESOLVED: regexp.test: regexp-quote: regexp/basic: (string "aX" 181 #\µ "aµ" "aµ")
UNRESOLVED: regexp.test: regexp-quote: regexp/basic: (string "aX" 182 #\¶ "a¶" "a¶")
UNRESOLVED: regexp.test: regexp-quote: regexp/basic: (string "aX" 183 #\· "a·" "a·")
UNRESOLVED: regexp.test: regexp-quote: regexp/basic: (string "aX" 184 #\¸ "a¸" "a¸")
UNRESOLVED: regexp.test: regexp-quote: regexp/basic: (string "aX" 185 #\¹ "a¹" "a¹")
UNRESOLVED: regexp.test: regexp-quote: regexp/basic: (string "aX" 186 #\º "aº" "aº")
UNRESOLVED: regexp.test: regexp-quote: regexp/basic: (string "aX" 187 #\» "a»" "a»")
UNRESOLVED: regexp.test: regexp-quote: regexp/basic: (string "aX" 188 #\¼ "a¼" "a¼")
UNRESOLVED: regexp.test: regexp-quote: regexp/basic: (string "aX" 189 #\½ "a½" "a½")
UNRESOLVED: regexp.test: regexp-quote: regexp/basic: (string "aX" 190 #\¾ "a¾" "a¾")
UNRESOLVED: regexp.test: regexp-quote: regexp/basic: (string "aX" 191 #\¿ "a¿" "a¿")
UNRESOLVED: regexp.test: regexp-quote: regexp/basic: (string "aX" 192 #\À "aÀ" "aÀ")
UNRESOLVED: regexp.test: regexp-quote: regexp/basic: (string "aX" 193 #\Á "aÁ" "aÁ")
UNRESOLVED: regexp.test: regexp-quote: regexp/basic: (string "aX" 194 #\Â "aÂ" "aÂ")
UNRESOLVED: regexp.test: regexp-quote: regexp/basic: (string "aX" 195 #\Ã "aÃ" "aÃ")
UNRESOLVED: regexp.test: regexp-quote: regexp/basic: (string "aX" 196 #\Ä "aÄ" "aÄ")
UNRESOLVED: regexp.test: regexp-quote: regexp/basic: (string "aX" 197 #\Å "aÅ" "aÅ")
UNRESOLVED: regexp.test: regexp-quote: regexp/basic: (string "aX" 198 #\Æ "aÆ" "aÆ")
UNRESOLVED: regexp.test: regexp-quote: regexp/basic: (string "aX" 199 #\Ç "aÇ" "aÇ")
UNRESOLVED: regexp.test: regexp-quote: regexp/basic: (string "aX" 200 #\È "aÈ" "aÈ")
UNRESOLVED: regexp.test: regexp-quote: regexp/basic: (string "aX" 201 #\É "aÉ" "aÉ")
UNRESOLVED: regexp.test: regexp-quote: regexp/basic: (string "aX" 202 #\Ê "aÊ" "aÊ")
UNRESOLVED: regexp.test: regexp-quote: regexp/basic: (string "aX" 203 #\Ë "aË" "aË")
UNRESOLVED: regexp.test: regexp-quote: regexp/basic: (string "aX" 204 #\Ì "aÌ" "aÌ")
UNRESOLVED: regexp.test: regexp-quote: regexp/basic: (string "aX" 205 #\Í "aÍ" "aÍ")
UNRESOLVED: regexp.test: regexp-quote: regexp/basic: (string "aX" 206 #\Î "aÎ" "aÎ")
UNRESOLVED: regexp.test: regexp-quote: regexp/basic: (string "aX" 207 #\Ï "aÏ" "aÏ")
UNRESOLVED: regexp.test: regexp-quote: regexp/basic: (string "aX" 208 #\Ð "aÐ" "aÐ")
UNRESOLVED: regexp.test: regexp-quote: regexp/basic: (string "aX" 209 #\Ñ "aÑ" "aÑ")
UNRESOLVED: regexp.test: regexp-quote: regexp/basic: (string "aX" 210 #\Ò "aÒ" "aÒ")
UNRESOLVED: regexp.test: regexp-quote: regexp/basic: (string "aX" 211 #\Ó "aÓ" "aÓ")
UNRESOLVED: regexp.test: regexp-quote: regexp/basic: (string "aX" 212 #\Ô "aÔ" "aÔ")
UNRESOLVED: regexp.test: regexp-quote: regexp/basic: (string "aX" 213 #\Õ "aÕ" "aÕ")
UNRESOLVED: regexp.test: regexp-quote: regexp/basic: (string "aX" 214 #\Ö "aÖ" "aÖ")
UNRESOLVED: regexp.test: regexp-quote: regexp/basic: (string "aX" 215 #\× "a×" "a×")
UNRESOLVED: regexp.test: regexp-quote: regexp/basic: (string "aX" 216 #\Ø "aØ" "aØ")
UNRESOLVED: regexp.test: regexp-quote: regexp/basic: (string "aX" 217 #\Ù "aÙ" "aÙ")
UNRESOLVED: regexp.test: regexp-quote: regexp/basic: (string "aX" 218 #\Ú "aÚ" "aÚ")
UNRESOLVED: regexp.test: regexp-quote: regexp/basic: (string "aX" 219 #\Û "aÛ" "aÛ")
UNRESOLVED: regexp.test: regexp-quote: regexp/basic: (string "aX" 220 #\Ü "aÜ" "aÜ")
UNRESOLVED: regexp.test: regexp-quote: regexp/basic: (string "aX" 221 #\Ý "aÝ" "aÝ")
UNRESOLVED: regexp.test: regexp-quote: regexp/basic: (string "aX" 222 #\Þ "aÞ" "aÞ")
UNRESOLVED: regexp.test: regexp-quote: regexp/basic: (string "aX" 223 #\ß "aß" "aß")
UNRESOLVED: regexp.test: regexp-quote: regexp/basic: (string "aX" 224 #\à "aà" "aà")
UNRESOLVED: regexp.test: regexp-quote: regexp/basic: (string "aX" 225 #\á "aá" "aá")
UNRESOLVED: regexp.test: regexp-quote: regexp/basic: (string "aX" 226 #\â "aâ" "aâ")
UNRESOLVED: regexp.test: regexp-quote: regexp/basic: (string "aX" 227 #\ã "aã" "aã")
UNRESOLVED: regexp.test: regexp-quote: regexp/basic: (string "aX" 228 #\ä "aä" "aä")
UNRESOLVED: regexp.test: regexp-quote: regexp/basic: (string "aX" 229 #\å "aå" "aå")
UNRESOLVED: regexp.test: regexp-quote: regexp/basic: (string "aX" 230 #\æ "aæ" "aæ")
UNRESOLVED: regexp.test: regexp-quote: regexp/basic: (string "aX" 231 #\ç "aç" "aç")
UNRESOLVED: regexp.test: regexp-quote: regexp/basic: (string "aX" 232 #\è "aè" "aè")
UNRESOLVED: regexp.test: regexp-quote: regexp/basic: (string "aX" 233 #\é "aé" "aé")
UNRESOLVED: regexp.test: regexp-quote: regexp/basic: (string "aX" 234 #\ê "aê" "aê")
UNRESOLVED: regexp.test: regexp-quote: regexp/basic: (string "aX" 235 #\ë "aë" "aë")
UNRESOLVED: regexp.test: regexp-quote: regexp/basic: (string "aX" 236 #\ì "aì" "aì")
UNRESOLVED: regexp.test: regexp-quote: regexp/basic: (string "aX" 237 #\í "aí" "aí")
UNRESOLVED: regexp.test: regexp-quote: regexp/basic: (string "aX" 238 #\î "aî" "aî")
UNRESOLVED: regexp.test: regexp-quote: regexp/basic: (string "aX" 239 #\ï "aï" "aï")
UNRESOLVED: regexp.test: regexp-quote: regexp/basic: (string "aX" 240 #\ð "að" "að")
UNRESOLVED: regexp.test: regexp-quote: regexp/basic: (string "aX" 241 #\ñ "añ" "añ")
UNRESOLVED: regexp.test: regexp-quote: regexp/basic: (string "aX" 242 #\ò "aò" "aò")
UNRESOLVED: regexp.test: regexp-quote: regexp/basic: (string "aX" 243 #\ó "aó" "aó")
UNRESOLVED: regexp.test: regexp-quote: regexp/basic: (string "aX" 244 #\ô "aô" "aô")
UNRESOLVED: regexp.test: regexp-quote: regexp/basic: (string "aX" 245 #\õ "aõ" "aõ")
UNRESOLVED: regexp.test: regexp-quote: regexp/basic: (string "aX" 246 #\ö "aö" "aö")
UNRESOLVED: regexp.test: regexp-quote: regexp/basic: (string "aX" 247 #\÷ "a÷" "a÷")
UNRESOLVED: regexp.test: regexp-quote: regexp/basic: (string "aX" 248 #\ø "aø" "aø")
UNRESOLVED: regexp.test: regexp-quote: regexp/basic: (string "aX" 249 #\ù "aù" "aù")
UNRESOLVED: regexp.test: regexp-quote: regexp/basic: (string "aX" 250 #\ú "aú" "aú")
UNRESOLVED: regexp.test: regexp-quote: regexp/basic: (string "aX" 251 #\û "aû" "aû")
UNRESOLVED: regexp.test: regexp-quote: regexp/basic: (string "aX" 252 #\ü "aü" "aü")
UNRESOLVED: regexp.test: regexp-quote: regexp/basic: (string "aX" 253 #\ý "aý" "aý")
UNRESOLVED: regexp.test: regexp-quote: regexp/basic: (string "aX" 254 #\þ "aþ" "aþ")
UNRESOLVED: regexp.test: regexp-quote: regexp/basic: (string "aX" 255 #\ÿ "aÿ" "aÿ")
UNRESOLVED: regexp.test: regexp-quote: regexp/basic: string of all chars
PASS: regexp.test: regexp-quote: regexp/extended: (char 1 #\soh "\x01")
PASS: regexp.test: regexp-quote: regexp/extended: (char 2 #\stx "\x02")
PASS: regexp.test: regexp-quote: regexp/extended: (char 3 #\etx "\x03")
PASS: regexp.test: regexp-quote: regexp/extended: (char 4 #\eot "\x04")
PASS: regexp.test: regexp-quote: regexp/extended: (char 5 #\enq "\x05")
PASS: regexp.test: regexp-quote: regexp/extended: (char 6 #\ack "\x06")
PASS: regexp.test: regexp-quote: regexp/extended: (char 7 #\alarm "\a")
PASS: regexp.test: regexp-quote: regexp/extended: (char 8 #\backspace "\b")
PASS: regexp.test: regexp-quote: regexp/extended: (char 9 #\tab "\t")
PASS: regexp.test: regexp-quote: regexp/extended: (char 10 #\newline "\n")
PASS: regexp.test: regexp-quote: regexp/extended: (char 11 #\vtab "\v")
PASS: regexp.test: regexp-quote: regexp/extended: (char 12 #\page "\f")
PASS: regexp.test: regexp-quote: regexp/extended: (char 13 #\return "\r")
PASS: regexp.test: regexp-quote: regexp/extended: (char 14 #\so "\x0e")
PASS: regexp.test: regexp-quote: regexp/extended: (char 15 #\si "\x0f")
PASS: regexp.test: regexp-quote: regexp/extended: (char 16 #\dle "\x10")
PASS: regexp.test: regexp-quote: regexp/extended: (char 17 #\dc1 "\x11")
PASS: regexp.test: regexp-quote: regexp/extended: (char 18 #\dc2 "\x12")
PASS: regexp.test: regexp-quote: regexp/extended: (char 19 #\dc3 "\x13")
PASS: regexp.test: regexp-quote: regexp/extended: (char 20 #\dc4 "\x14")
PASS: regexp.test: regexp-quote: regexp/extended: (char 21 #\nak "\x15")
PASS: regexp.test: regexp-quote: regexp/extended: (char 22 #\syn "\x16")
PASS: regexp.test: regexp-quote: regexp/extended: (char 23 #\etb "\x17")
PASS: regexp.test: regexp-quote: regexp/extended: (char 24 #\can "\x18")
PASS: regexp.test: regexp-quote: regexp/extended: (char 25 #\em "\x19")
PASS: regexp.test: regexp-quote: regexp/extended: (char 26 #\sub "\x1a")
PASS: regexp.test: regexp-quote: regexp/extended: (char 27 #\esc "\x1b")
PASS: regexp.test: regexp-quote: regexp/extended: (char 28 #\fs "\x1c")
PASS: regexp.test: regexp-quote: regexp/extended: (char 29 #\gs "\x1d")
PASS: regexp.test: regexp-quote: regexp/extended: (char 30 #\rs "\x1e")
PASS: regexp.test: regexp-quote: regexp/extended: (char 31 #\us "\x1f")
PASS: regexp.test: regexp-quote: regexp/extended: (char 32 #\space " ")
PASS: regexp.test: regexp-quote: regexp/extended: (char 33 #\! "!")
PASS: regexp.test: regexp-quote: regexp/extended: (char 34 #\" "\"")
PASS: regexp.test: regexp-quote: regexp/extended: (char 35 #\# "#")
PASS: regexp.test: regexp-quote: regexp/extended: (char 36 #\$ "$")
PASS: regexp.test: regexp-quote: regexp/extended: (char 37 #\% "%")
PASS: regexp.test: regexp-quote: regexp/extended: (char 38 #\& "&")
PASS: regexp.test: regexp-quote: regexp/extended: (char 39 #\' "'")
PASS: regexp.test: regexp-quote: regexp/extended: (char 40 #\( "(")
PASS: regexp.test: regexp-quote: regexp/extended: (char 41 #\) ")")
PASS: regexp.test: regexp-quote: regexp/extended: (char 42 #\* "*")
PASS: regexp.test: regexp-quote: regexp/extended: (char 43 #\+ "+")
PASS: regexp.test: regexp-quote: regexp/extended: (char 44 #\, ",")
PASS: regexp.test: regexp-quote: regexp/extended: (char 45 #\- "-")
PASS: regexp.test: regexp-quote: regexp/extended: (char 46 #\. ".")
PASS: regexp.test: regexp-quote: regexp/extended: (char 47 #\/ "/")
PASS: regexp.test: regexp-quote: regexp/extended: (char 48 #\0 "0")
PASS: regexp.test: regexp-quote: regexp/extended: (char 49 #\1 "1")
PASS: regexp.test: regexp-quote: regexp/extended: (char 50 #\2 "2")
PASS: regexp.test: regexp-quote: regexp/extended: (char 51 #\3 "3")
PASS: regexp.test: regexp-quote: regexp/extended: (char 52 #\4 "4")
PASS: regexp.test: regexp-quote: regexp/extended: (char 53 #\5 "5")
PASS: regexp.test: regexp-quote: regexp/extended: (char 54 #\6 "6")
PASS: regexp.test: regexp-quote: regexp/extended: (char 55 #\7 "7")
PASS: regexp.test: regexp-quote: regexp/extended: (char 56 #\8 "8")
PASS: regexp.test: regexp-quote: regexp/extended: (char 57 #\9 "9")
PASS: regexp.test: regexp-quote: regexp/extended: (char 58 #\: ":")
PASS: regexp.test: regexp-quote: regexp/extended: (char 59 #\; ";")
PASS: regexp.test: regexp-quote: regexp/extended: (char 60 #\< "<")
PASS: regexp.test: regexp-quote: regexp/extended: (char 61 #\= "=")
PASS: regexp.test: regexp-quote: regexp/extended: (char 62 #\> ">")
PASS: regexp.test: regexp-quote: regexp/extended: (char 63 #\? "?")
PASS: regexp.test: regexp-quote: regexp/extended: (char 64 #\@ "@")
PASS: regexp.test: regexp-quote: regexp/extended: (char 65 #\A "A")
PASS: regexp.test: regexp-quote: regexp/extended: (char 66 #\B "B")
PASS: regexp.test: regexp-quote: regexp/extended: (char 67 #\C "C")
PASS: regexp.test: regexp-quote: regexp/extended: (char 68 #\D "D")
PASS: regexp.test: regexp-quote: regexp/extended: (char 69 #\E "E")
PASS: regexp.test: regexp-quote: regexp/extended: (char 70 #\F "F")
PASS: regexp.test: regexp-quote: regexp/extended: (char 71 #\G "G")
PASS: regexp.test: regexp-quote: regexp/extended: (char 72 #\H "H")
PASS: regexp.test: regexp-quote: regexp/extended: (char 73 #\I "I")
PASS: regexp.test: regexp-quote: regexp/extended: (char 74 #\J "J")
PASS: regexp.test: regexp-quote: regexp/extended: (char 75 #\K "K")
PASS: regexp.test: regexp-quote: regexp/extended: (char 76 #\L "L")
PASS: regexp.test: regexp-quote: regexp/extended: (char 77 #\M "M")
PASS: regexp.test: regexp-quote: regexp/extended: (char 78 #\N "N")
PASS: regexp.test: regexp-quote: regexp/extended: (char 79 #\O "O")
PASS: regexp.test: regexp-quote: regexp/extended: (char 80 #\P "P")
PASS: regexp.test: regexp-quote: regexp/extended: (char 81 #\Q "Q")
PASS: regexp.test: regexp-quote: regexp/extended: (char 82 #\R "R")
PASS: regexp.test: regexp-quote: regexp/extended: (char 83 #\S "S")
PASS: regexp.test: regexp-quote: regexp/extended: (char 84 #\T "T")
PASS: regexp.test: regexp-quote: regexp/extended: (char 85 #\U "U")
PASS: regexp.test: regexp-quote: regexp/extended: (char 86 #\V "V")
PASS: regexp.test: regexp-quote: regexp/extended: (char 87 #\W "W")
PASS: regexp.test: regexp-quote: regexp/extended: (char 88 #\X "X")
PASS: regexp.test: regexp-quote: regexp/extended: (char 89 #\Y "Y")
PASS: regexp.test: regexp-quote: regexp/extended: (char 90 #\Z "Z")
PASS: regexp.test: regexp-quote: regexp/extended: (char 91 #\[ "[")
PASS: regexp.test: regexp-quote: regexp/extended: (char 92 #\\ "\\")
PASS: regexp.test: regexp-quote: regexp/extended: (char 93 #\] "]")
PASS: regexp.test: regexp-quote: regexp/extended: (char 94 #\^ "^")
PASS: regexp.test: regexp-quote: regexp/extended: (char 95 #\_ "_")
PASS: regexp.test: regexp-quote: regexp/extended: (char 96 #\` "`")
PASS: regexp.test: regexp-quote: regexp/extended: (char 97 #\a "a")
PASS: regexp.test: regexp-quote: regexp/extended: (char 98 #\b "b")
PASS: regexp.test: regexp-quote: regexp/extended: (char 99 #\c "c")
PASS: regexp.test: regexp-quote: regexp/extended: (char 100 #\d "d")
PASS: regexp.test: regexp-quote: regexp/extended: (char 101 #\e "e")
PASS: regexp.test: regexp-quote: regexp/extended: (char 102 #\f "f")
PASS: regexp.test: regexp-quote: regexp/extended: (char 103 #\g "g")
PASS: regexp.test: regexp-quote: regexp/extended: (char 104 #\h "h")
PASS: regexp.test: regexp-quote: regexp/extended: (char 105 #\i "i")
PASS: regexp.test: regexp-quote: regexp/extended: (char 106 #\j "j")
PASS: regexp.test: regexp-quote: regexp/extended: (char 107 #\k "k")
PASS: regexp.test: regexp-quote: regexp/extended: (char 108 #\l "l")
PASS: regexp.test: regexp-quote: regexp/extended: (char 109 #\m "m")
PASS: regexp.test: regexp-quote: regexp/extended: (char 110 #\n "n")
PASS: regexp.test: regexp-quote: regexp/extended: (char 111 #\o "o")
PASS: regexp.test: regexp-quote: regexp/extended: (char 112 #\p "p")
PASS: regexp.test: regexp-quote: regexp/extended: (char 113 #\q "q")
PASS: regexp.test: regexp-quote: regexp/extended: (char 114 #\r "r")
PASS: regexp.test: regexp-quote: regexp/extended: (char 115 #\s "s")
PASS: regexp.test: regexp-quote: regexp/extended: (char 116 #\t "t")
PASS: regexp.test: regexp-quote: regexp/extended: (char 117 #\u "u")
PASS: regexp.test: regexp-quote: regexp/extended: (char 118 #\v "v")
PASS: regexp.test: regexp-quote: regexp/extended: (char 119 #\w "w")
PASS: regexp.test: regexp-quote: regexp/extended: (char 120 #\x "x")
PASS: regexp.test: regexp-quote: regexp/extended: (char 121 #\y "y")
PASS: regexp.test: regexp-quote: regexp/extended: (char 122 #\z "z")
PASS: regexp.test: regexp-quote: regexp/extended: (char 123 #\{ "{")
PASS: regexp.test: regexp-quote: regexp/extended: (char 124 #\| "|")
PASS: regexp.test: regexp-quote: regexp/extended: (char 125 #\} "}")
PASS: regexp.test: regexp-quote: regexp/extended: (char 126 #\~ "~")
PASS: regexp.test: regexp-quote: regexp/extended: (char 127 #\delete "\x7f")
UNRESOLVED: regexp.test: regexp-quote: regexp/extended: (char 128 #\200 "\x80")
UNRESOLVED: regexp.test: regexp-quote: regexp/extended: (char 129 #\201 "\x81")
UNRESOLVED: regexp.test: regexp-quote: regexp/extended: (char 130 #\202 "\x82")
UNRESOLVED: regexp.test: regexp-quote: regexp/extended: (char 131 #\203 "\x83")
UNRESOLVED: regexp.test: regexp-quote: regexp/extended: (char 132 #\204 "\x84")
UNRESOLVED: regexp.test: regexp-quote: regexp/extended: (char 133 #\205 "\x85")
UNRESOLVED: regexp.test: regexp-quote: regexp/extended: (char 134 #\206 "\x86")
UNRESOLVED: regexp.test: regexp-quote: regexp/extended: (char 135 #\207 "\x87")
UNRESOLVED: regexp.test: regexp-quote: regexp/extended: (char 136 #\210 "\x88")
UNRESOLVED: regexp.test: regexp-quote: regexp/extended: (char 137 #\211 "\x89")
UNRESOLVED: regexp.test: regexp-quote: regexp/extended: (char 138 #\212 "\x8a")
UNRESOLVED: regexp.test: regexp-quote: regexp/extended: (char 139 #\213 "\x8b")
UNRESOLVED: regexp.test: regexp-quote: regexp/extended: (char 140 #\214 "\x8c")
UNRESOLVED: regexp.test: regexp-quote: regexp/extended: (char 141 #\215 "\x8d")
UNRESOLVED: regexp.test: regexp-quote: regexp/extended: (char 142 #\216 "\x8e")
UNRESOLVED: regexp.test: regexp-quote: regexp/extended: (char 143 #\217 "\x8f")
UNRESOLVED: regexp.test: regexp-quote: regexp/extended: (char 144 #\220 "\x90")
UNRESOLVED: regexp.test: regexp-quote: regexp/extended: (char 145 #\221 "\x91")
UNRESOLVED: regexp.test: regexp-quote: regexp/extended: (char 146 #\222 "\x92")
UNRESOLVED: regexp.test: regexp-quote: regexp/extended: (char 147 #\223 "\x93")
UNRESOLVED: regexp.test: regexp-quote: regexp/extended: (char 148 #\224 "\x94")
UNRESOLVED: regexp.test: regexp-quote: regexp/extended: (char 149 #\225 "\x95")
UNRESOLVED: regexp.test: regexp-quote: regexp/extended: (char 150 #\226 "\x96")
UNRESOLVED: regexp.test: regexp-quote: regexp/extended: (char 151 #\227 "\x97")
UNRESOLVED: regexp.test: regexp-quote: regexp/extended: (char 152 #\230 "\x98")
UNRESOLVED: regexp.test: regexp-quote: regexp/extended: (char 153 #\231 "\x99")
UNRESOLVED: regexp.test: regexp-quote: regexp/extended: (char 154 #\232 "\x9a")
UNRESOLVED: regexp.test: regexp-quote: regexp/extended: (char 155 #\233 "\x9b")
UNRESOLVED: regexp.test: regexp-quote: regexp/extended: (char 156 #\234 "\x9c")
UNRESOLVED: regexp.test: regexp-quote: regexp/extended: (char 157 #\235 "\x9d")
UNRESOLVED: regexp.test: regexp-quote: regexp/extended: (char 158 #\236 "\x9e")
UNRESOLVED: regexp.test: regexp-quote: regexp/extended: (char 159 #\237 "\x9f")
UNRESOLVED: regexp.test: regexp-quote: regexp/extended: (char 160 #\240 "\xa0")
UNRESOLVED: regexp.test: regexp-quote: regexp/extended: (char 161 #\¡ "¡")
UNRESOLVED: regexp.test: regexp-quote: regexp/extended: (char 162 #\¢ "¢")
UNRESOLVED: regexp.test: regexp-quote: regexp/extended: (char 163 #\£ "£")
UNRESOLVED: regexp.test: regexp-quote: regexp/extended: (char 164 #\¤ "¤")
UNRESOLVED: regexp.test: regexp-quote: regexp/extended: (char 165 #\¥ "¥")
UNRESOLVED: regexp.test: regexp-quote: regexp/extended: (char 166 #\¦ "¦")
UNRESOLVED: regexp.test: regexp-quote: regexp/extended: (char 167 #\§ "§")
UNRESOLVED: regexp.test: regexp-quote: regexp/extended: (char 168 #\¨ "¨")
UNRESOLVED: regexp.test: regexp-quote: regexp/extended: (char 169 #\© "©")
UNRESOLVED: regexp.test: regexp-quote: regexp/extended: (char 170 #\ª "ª")
UNRESOLVED: regexp.test: regexp-quote: regexp/extended: (char 171 #\« "«")
UNRESOLVED: regexp.test: regexp-quote: regexp/extended: (char 172 #\¬ "¬")
UNRESOLVED: regexp.test: regexp-quote: regexp/extended: (char 173 #\255 "\xad")
UNRESOLVED: regexp.test: regexp-quote: regexp/extended: (char 174 #\® "®")
UNRESOLVED: regexp.test: regexp-quote: regexp/extended: (char 175 #\¯ "¯")
UNRESOLVED: regexp.test: regexp-quote: regexp/extended: (char 176 #\° "°")
UNRESOLVED: regexp.test: regexp-quote: regexp/extended: (char 177 #\± "±")
UNRESOLVED: regexp.test: regexp-quote: regexp/extended: (char 178 #\² "²")
UNRESOLVED: regexp.test: regexp-quote: regexp/extended: (char 179 #\³ "³")
UNRESOLVED: regexp.test: regexp-quote: regexp/extended: (char 180 #\´ "´")
UNRESOLVED: regexp.test: regexp-quote: regexp/extended: (char 181 #\µ "µ")
UNRESOLVED: regexp.test: regexp-quote: regexp/extended: (char 182 #\¶ "¶")
UNRESOLVED: regexp.test: regexp-quote: regexp/extended: (char 183 #\· "·")
UNRESOLVED: regexp.test: regexp-quote: regexp/extended: (char 184 #\¸ "¸")
UNRESOLVED: regexp.test: regexp-quote: regexp/extended: (char 185 #\¹ "¹")
UNRESOLVED: regexp.test: regexp-quote: regexp/extended: (char 186 #\º "º")
UNRESOLVED: regexp.test: regexp-quote: regexp/extended: (char 187 #\» "»")
UNRESOLVED: regexp.test: regexp-quote: regexp/extended: (char 188 #\¼ "¼")
UNRESOLVED: regexp.test: regexp-quote: regexp/extended: (char 189 #\½ "½")
UNRESOLVED: regexp.test: regexp-quote: regexp/extended: (char 190 #\¾ "¾")
UNRESOLVED: regexp.test: regexp-quote: regexp/extended: (char 191 #\¿ "¿")
UNRESOLVED: regexp.test: regexp-quote: regexp/extended: (char 192 #\À "À")
UNRESOLVED: regexp.test: regexp-quote: regexp/extended: (char 193 #\Á "Á")
UNRESOLVED: regexp.test: regexp-quote: regexp/extended: (char 194 #\Â "Â")
UNRESOLVED: regexp.test: regexp-quote: regexp/extended: (char 195 #\Ã "Ã")
UNRESOLVED: regexp.test: regexp-quote: regexp/extended: (char 196 #\Ä "Ä")
UNRESOLVED: regexp.test: regexp-quote: regexp/extended: (char 197 #\Å "Å")
UNRESOLVED: regexp.test: regexp-quote: regexp/extended: (char 198 #\Æ "Æ")
UNRESOLVED: regexp.test: regexp-quote: regexp/extended: (char 199 #\Ç "Ç")
UNRESOLVED: regexp.test: regexp-quote: regexp/extended: (char 200 #\È "È")
UNRESOLVED: regexp.test: regexp-quote: regexp/extended: (char 201 #\É "É")
UNRESOLVED: regexp.test: regexp-quote: regexp/extended: (char 202 #\Ê "Ê")
UNRESOLVED: regexp.test: regexp-quote: regexp/extended: (char 203 #\Ë "Ë")
UNRESOLVED: regexp.test: regexp-quote: regexp/extended: (char 204 #\Ì "Ì")
UNRESOLVED: regexp.test: regexp-quote: regexp/extended: (char 205 #\Í "Í")
UNRESOLVED: regexp.test: regexp-quote: regexp/extended: (char 206 #\Î "Î")
UNRESOLVED: regexp.test: regexp-quote: regexp/extended: (char 207 #\Ï "Ï")
UNRESOLVED: regexp.test: regexp-quote: regexp/extended: (char 208 #\Ð "Ð")
UNRESOLVED: regexp.test: regexp-quote: regexp/extended: (char 209 #\Ñ "Ñ")
UNRESOLVED: regexp.test: regexp-quote: regexp/extended: (char 210 #\Ò "Ò")
UNRESOLVED: regexp.test: regexp-quote: regexp/extended: (char 211 #\Ó "Ó")
UNRESOLVED: regexp.test: regexp-quote: regexp/extended: (char 212 #\Ô "Ô")
UNRESOLVED: regexp.test: regexp-quote: regexp/extended: (char 213 #\Õ "Õ")
UNRESOLVED: regexp.test: regexp-quote: regexp/extended: (char 214 #\Ö "Ö")
UNRESOLVED: regexp.test: regexp-quote: regexp/extended: (char 215 #\× "×")
UNRESOLVED: regexp.test: regexp-quote: regexp/extended: (char 216 #\Ø "Ø")
UNRESOLVED: regexp.test: regexp-quote: regexp/extended: (char 217 #\Ù "Ù")
UNRESOLVED: regexp.test: regexp-quote: regexp/extended: (char 218 #\Ú "Ú")
UNRESOLVED: regexp.test: regexp-quote: regexp/extended: (char 219 #\Û "Û")
UNRESOLVED: regexp.test: regexp-quote: regexp/extended: (char 220 #\Ü "Ü")
UNRESOLVED: regexp.test: regexp-quote: regexp/extended: (char 221 #\Ý "Ý")
UNRESOLVED: regexp.test: regexp-quote: regexp/extended: (char 222 #\Þ "Þ")
UNRESOLVED: regexp.test: regexp-quote: regexp/extended: (char 223 #\ß "ß")
UNRESOLVED: regexp.test: regexp-quote: regexp/extended: (char 224 #\à "à")
UNRESOLVED: regexp.test: regexp-quote: regexp/extended: (char 225 #\á "á")
UNRESOLVED: regexp.test: regexp-quote: regexp/extended: (char 226 #\â "â")
UNRESOLVED: regexp.test: regexp-quote: regexp/extended: (char 227 #\ã "ã")
UNRESOLVED: regexp.test: regexp-quote: regexp/extended: (char 228 #\ä "ä")
UNRESOLVED: regexp.test: regexp-quote: regexp/extended: (char 229 #\å "å")
UNRESOLVED: regexp.test: regexp-quote: regexp/extended: (char 230 #\æ "æ")
UNRESOLVED: regexp.test: regexp-quote: regexp/extended: (char 231 #\ç "ç")
UNRESOLVED: regexp.test: regexp-quote: regexp/extended: (char 232 #\è "è")
UNRESOLVED: regexp.test: regexp-quote: regexp/extended: (char 233 #\é "é")
UNRESOLVED: regexp.test: regexp-quote: regexp/extended: (char 234 #\ê "ê")
UNRESOLVED: regexp.test: regexp-quote: regexp/extended: (char 235 #\ë "ë")
UNRESOLVED: regexp.test: regexp-quote: regexp/extended: (char 236 #\ì "ì")
UNRESOLVED: regexp.test: regexp-quote: regexp/extended: (char 237 #\í "í")
UNRESOLVED: regexp.test: regexp-quote: regexp/extended: (char 238 #\î "î")
UNRESOLVED: regexp.test: regexp-quote: regexp/extended: (char 239 #\ï "ï")
UNRESOLVED: regexp.test: regexp-quote: regexp/extended: (char 240 #\ð "ð")
UNRESOLVED: regexp.test: regexp-quote: regexp/extended: (char 241 #\ñ "ñ")
UNRESOLVED: regexp.test: regexp-quote: regexp/extended: (char 242 #\ò "ò")
UNRESOLVED: regexp.test: regexp-quote: regexp/extended: (char 243 #\ó "ó")
UNRESOLVED: regexp.test: regexp-quote: regexp/extended: (char 244 #\ô "ô")
UNRESOLVED: regexp.test: regexp-quote: regexp/extended: (char 245 #\õ "õ")
UNRESOLVED: regexp.test: regexp-quote: regexp/extended: (char 246 #\ö "ö")
UNRESOLVED: regexp.test: regexp-quote: regexp/extended: (char 247 #\÷ "÷")
UNRESOLVED: regexp.test: regexp-quote: regexp/extended: (char 248 #\ø "ø")
UNRESOLVED: regexp.test: regexp-quote: regexp/extended: (char 249 #\ù "ù")
UNRESOLVED: regexp.test: regexp-quote: regexp/extended: (char 250 #\ú "ú")
UNRESOLVED: regexp.test: regexp-quote: regexp/extended: (char 251 #\û "û")
UNRESOLVED: regexp.test: regexp-quote: regexp/extended: (char 252 #\ü "ü")
UNRESOLVED: regexp.test: regexp-quote: regexp/extended: (char 253 #\ý "ý")
UNRESOLVED: regexp.test: regexp-quote: regexp/extended: (char 254 #\þ "þ")
UNRESOLVED: regexp.test: regexp-quote: regexp/extended: (char 255 #\ÿ "ÿ")
PASS: regexp.test: regexp-quote: regexp/extended: (string "aX" 1 #\soh "a\x01" "a\x01")
PASS: regexp.test: regexp-quote: regexp/extended: (string "aX" 2 #\stx "a\x02" "a\x02")
PASS: regexp.test: regexp-quote: regexp/extended: (string "aX" 3 #\etx "a\x03" "a\x03")
PASS: regexp.test: regexp-quote: regexp/extended: (string "aX" 4 #\eot "a\x04" "a\x04")
PASS: regexp.test: regexp-quote: regexp/extended: (string "aX" 5 #\enq "a\x05" "a\x05")
PASS: regexp.test: regexp-quote: regexp/extended: (string "aX" 6 #\ack "a\x06" "a\x06")
PASS: regexp.test: regexp-quote: regexp/extended: (string "aX" 7 #\alarm "a\a" "a\a")
PASS: regexp.test: regexp-quote: regexp/extended: (string "aX" 8 #\backspace "a\b" "a\b")
PASS: regexp.test: regexp-quote: regexp/extended: (string "aX" 9 #\tab "a\t" "a\t")
PASS: regexp.test: regexp-quote: regexp/extended: (string "aX" 10 #\newline "a\n" "a\n")
PASS: regexp.test: regexp-quote: regexp/extended: (string "aX" 11 #\vtab "a\v" "a\v")
PASS: regexp.test: regexp-quote: regexp/extended: (string "aX" 12 #\page "a\f" "a\f")
PASS: regexp.test: regexp-quote: regexp/extended: (string "aX" 13 #\return "a\r" "a\r")
PASS: regexp.test: regexp-quote: regexp/extended: (string "aX" 14 #\so "a\x0e" "a\x0e")
PASS: regexp.test: regexp-quote: regexp/extended: (string "aX" 15 #\si "a\x0f" "a\x0f")
PASS: regexp.test: regexp-quote: regexp/extended: (string "aX" 16 #\dle "a\x10" "a\x10")
PASS: regexp.test: regexp-quote: regexp/extended: (string "aX" 17 #\dc1 "a\x11" "a\x11")
PASS: regexp.test: regexp-quote: regexp/extended: (string "aX" 18 #\dc2 "a\x12" "a\x12")
PASS: regexp.test: regexp-quote: regexp/extended: (string "aX" 19 #\dc3 "a\x13" "a\x13")
PASS: regexp.test: regexp-quote: regexp/extended: (string "aX" 20 #\dc4 "a\x14" "a\x14")
PASS: regexp.test: regexp-quote: regexp/extended: (string "aX" 21 #\nak "a\x15" "a\x15")
PASS: regexp.test: regexp-quote: regexp/extended: (string "aX" 22 #\syn "a\x16" "a\x16")
PASS: regexp.test: regexp-quote: regexp/extended: (string "aX" 23 #\etb "a\x17" "a\x17")
PASS: regexp.test: regexp-quote: regexp/extended: (string "aX" 24 #\can "a\x18" "a\x18")
PASS: regexp.test: regexp-quote: regexp/extended: (string "aX" 25 #\em "a\x19" "a\x19")
PASS: regexp.test: regexp-quote: regexp/extended: (string "aX" 26 #\sub "a\x1a" "a\x1a")
PASS: regexp.test: regexp-quote: regexp/extended: (string "aX" 27 #\esc "a\x1b" "a\x1b")
PASS: regexp.test: regexp-quote: regexp/extended: (string "aX" 28 #\fs "a\x1c" "a\x1c")
PASS: regexp.test: regexp-quote: regexp/extended: (string "aX" 29 #\gs "a\x1d" "a\x1d")
PASS: regexp.test: regexp-quote: regexp/extended: (string "aX" 30 #\rs "a\x1e" "a\x1e")
PASS: regexp.test: regexp-quote: regexp/extended: (string "aX" 31 #\us "a\x1f" "a\x1f")
PASS: regexp.test: regexp-quote: regexp/extended: (string "aX" 32 #\space "a " "a ")
PASS: regexp.test: regexp-quote: regexp/extended: (string "aX" 33 #\! "a!" "a!")
PASS: regexp.test: regexp-quote: regexp/extended: (string "aX" 34 #\" "a\"" "a\"")
PASS: regexp.test: regexp-quote: regexp/extended: (string "aX" 35 #\# "a#" "a#")
PASS: regexp.test: regexp-quote: regexp/extended: (string "aX" 36 #\$ "a$" "a\\$")
PASS: regexp.test: regexp-quote: regexp/extended: (string "aX" 37 #\% "a%" "a%")
PASS: regexp.test: regexp-quote: regexp/extended: (string "aX" 38 #\& "a&" "a&")
PASS: regexp.test: regexp-quote: regexp/extended: (string "aX" 39 #\' "a'" "a'")
PASS: regexp.test: regexp-quote: regexp/extended: (string "aX" 40 #\( "a(" "a[(]")
PASS: regexp.test: regexp-quote: regexp/extended: (string "aX" 41 #\) "a)" "a[)]")
PASS: regexp.test: regexp-quote: regexp/extended: (string "aX" 42 #\* "a*" "a\\*")
PASS: regexp.test: regexp-quote: regexp/extended: (string "aX" 43 #\+ "a+" "a[+]")
PASS: regexp.test: regexp-quote: regexp/extended: (string "aX" 44 #\, "a," "a,")
PASS: regexp.test: regexp-quote: regexp/extended: (string "aX" 45 #\- "a-" "a-")
PASS: regexp.test: regexp-quote: regexp/extended: (string "aX" 46 #\. "a." "a\\.")
PASS: regexp.test: regexp-quote: regexp/extended: (string "aX" 47 #\/ "a/" "a/")
PASS: regexp.test: regexp-quote: regexp/extended: (string "aX" 48 #\0 "a0" "a0")
PASS: regexp.test: regexp-quote: regexp/extended: (string "aX" 49 #\1 "a1" "a1")
PASS: regexp.test: regexp-quote: regexp/extended: (string "aX" 50 #\2 "a2" "a2")
PASS: regexp.test: regexp-quote: regexp/extended: (string "aX" 51 #\3 "a3" "a3")
PASS: regexp.test: regexp-quote: regexp/extended: (string "aX" 52 #\4 "a4" "a4")
PASS: regexp.test: regexp-quote: regexp/extended: (string "aX" 53 #\5 "a5" "a5")
PASS: regexp.test: regexp-quote: regexp/extended: (string "aX" 54 #\6 "a6" "a6")
PASS: regexp.test: regexp-quote: regexp/extended: (string "aX" 55 #\7 "a7" "a7")
PASS: regexp.test: regexp-quote: regexp/extended: (string "aX" 56 #\8 "a8" "a8")
PASS: regexp.test: regexp-quote: regexp/extended: (string "aX" 57 #\9 "a9" "a9")
PASS: regexp.test: regexp-quote: regexp/extended: (string "aX" 58 #\: "a:" "a:")
PASS: regexp.test: regexp-quote: regexp/extended: (string "aX" 59 #\; "a;" "a;")
PASS: regexp.test: regexp-quote: regexp/extended: (string "aX" 60 #\< "a<" "a<")
PASS: regexp.test: regexp-quote: regexp/extended: (string "aX" 61 #\= "a=" "a=")
PASS: regexp.test: regexp-quote: regexp/extended: (string "aX" 62 #\> "a>" "a>")
PASS: regexp.test: regexp-quote: regexp/extended: (string "aX" 63 #\? "a?" "a[?]")
PASS: regexp.test: regexp-quote: regexp/extended: (string "aX" 64 #\@ "a@" "a@")
PASS: regexp.test: regexp-quote: regexp/extended: (string "aX" 65 #\A "aA" "aA")
PASS: regexp.test: regexp-quote: regexp/extended: (string "aX" 66 #\B "aB" "aB")
PASS: regexp.test: regexp-quote: regexp/extended: (string "aX" 67 #\C "aC" "aC")
PASS: regexp.test: regexp-quote: regexp/extended: (string "aX" 68 #\D "aD" "aD")
PASS: regexp.test: regexp-quote: regexp/extended: (string "aX" 69 #\E "aE" "aE")
PASS: regexp.test: regexp-quote: regexp/extended: (string "aX" 70 #\F "aF" "aF")
PASS: regexp.test: regexp-quote: regexp/extended: (string "aX" 71 #\G "aG" "aG")
PASS: regexp.test: regexp-quote: regexp/extended: (string "aX" 72 #\H "aH" "aH")
PASS: regexp.test: regexp-quote: regexp/extended: (string "aX" 73 #\I "aI" "aI")
PASS: regexp.test: regexp-quote: regexp/extended: (string "aX" 74 #\J "aJ" "aJ")
PASS: regexp.test: regexp-quote: regexp/extended: (string "aX" 75 #\K "aK" "aK")
PASS: regexp.test: regexp-quote: regexp/extended: (string "aX" 76 #\L "aL" "aL")
PASS: regexp.test: regexp-quote: regexp/extended: (string "aX" 77 #\M "aM" "aM")
PASS: regexp.test: regexp-quote: regexp/extended: (string "aX" 78 #\N "aN" "aN")
PASS: regexp.test: regexp-quote: regexp/extended: (string "aX" 79 #\O "aO" "aO")
PASS: regexp.test: regexp-quote: regexp/extended: (string "aX" 80 #\P "aP" "aP")
PASS: regexp.test: regexp-quote: regexp/extended: (string "aX" 81 #\Q "aQ" "aQ")
PASS: regexp.test: regexp-quote: regexp/extended: (string "aX" 82 #\R "aR" "aR")
PASS: regexp.test: regexp-quote: regexp/extended: (string "aX" 83 #\S "aS" "aS")
PASS: regexp.test: regexp-quote: regexp/extended: (string "aX" 84 #\T "aT" "aT")
PASS: regexp.test: regexp-quote: regexp/extended: (string "aX" 85 #\U "aU" "aU")
PASS: regexp.test: regexp-quote: regexp/extended: (string "aX" 86 #\V "aV" "aV")
PASS: regexp.test: regexp-quote: regexp/extended: (string "aX" 87 #\W "aW" "aW")
PASS: regexp.test: regexp-quote: regexp/extended: (string "aX" 88 #\X "aX" "aX")
PASS: regexp.test: regexp-quote: regexp/extended: (string "aX" 89 #\Y "aY" "aY")
PASS: regexp.test: regexp-quote: regexp/extended: (string "aX" 90 #\Z "aZ" "aZ")
PASS: regexp.test: regexp-quote: regexp/extended: (string "aX" 91 #\[ "a[" "a\\[")
PASS: regexp.test: regexp-quote: regexp/extended: (string "aX" 92 #\\ "a\\" "a\\\\")
PASS: regexp.test: regexp-quote: regexp/extended: (string "aX" 93 #\] "a]" "a]")
PASS: regexp.test: regexp-quote: regexp/extended: (string "aX" 94 #\^ "a^" "a\\^")
PASS: regexp.test: regexp-quote: regexp/extended: (string "aX" 95 #\_ "a_" "a_")
PASS: regexp.test: regexp-quote: regexp/extended: (string "aX" 96 #\` "a`" "a`")
PASS: regexp.test: regexp-quote: regexp/extended: (string "aX" 97 #\a "aa" "aa")
PASS: regexp.test: regexp-quote: regexp/extended: (string "aX" 98 #\b "ab" "ab")
PASS: regexp.test: regexp-quote: regexp/extended: (string "aX" 99 #\c "ac" "ac")
PASS: regexp.test: regexp-quote: regexp/extended: (string "aX" 100 #\d "ad" "ad")
PASS: regexp.test: regexp-quote: regexp/extended: (string "aX" 101 #\e "ae" "ae")
PASS: regexp.test: regexp-quote: regexp/extended: (string "aX" 102 #\f "af" "af")
PASS: regexp.test: regexp-quote: regexp/extended: (string "aX" 103 #\g "ag" "ag")
PASS: regexp.test: regexp-quote: regexp/extended: (string "aX" 104 #\h "ah" "ah")
PASS: regexp.test: regexp-quote: regexp/extended: (string "aX" 105 #\i "ai" "ai")
PASS: regexp.test: regexp-quote: regexp/extended: (string "aX" 106 #\j "aj" "aj")
PASS: regexp.test: regexp-quote: regexp/extended: (string "aX" 107 #\k "ak" "ak")
PASS: regexp.test: regexp-quote: regexp/extended: (string "aX" 108 #\l "al" "al")
PASS: regexp.test: regexp-quote: regexp/extended: (string "aX" 109 #\m "am" "am")
PASS: regexp.test: regexp-quote: regexp/extended: (string "aX" 110 #\n "an" "an")
PASS: regexp.test: regexp-quote: regexp/extended: (string "aX" 111 #\o "ao" "ao")
PASS: regexp.test: regexp-quote: regexp/extended: (string "aX" 112 #\p "ap" "ap")
PASS: regexp.test: regexp-quote: regexp/extended: (string "aX" 113 #\q "aq" "aq")
PASS: regexp.test: regexp-quote: regexp/extended: (string "aX" 114 #\r "ar" "ar")
PASS: regexp.test: regexp-quote: regexp/extended: (string "aX" 115 #\s "as" "as")
PASS: regexp.test: regexp-quote: regexp/extended: (string "aX" 116 #\t "at" "at")
PASS: regexp.test: regexp-quote: regexp/extended: (string "aX" 117 #\u "au" "au")
PASS: regexp.test: regexp-quote: regexp/extended: (string "aX" 118 #\v "av" "av")
PASS: regexp.test: regexp-quote: regexp/extended: (string "aX" 119 #\w "aw" "aw")
PASS: regexp.test: regexp-quote: regexp/extended: (string "aX" 120 #\x "ax" "ax")
PASS: regexp.test: regexp-quote: regexp/extended: (string "aX" 121 #\y "ay" "ay")
PASS: regexp.test: regexp-quote: regexp/extended: (string "aX" 122 #\z "az" "az")
PASS: regexp.test: regexp-quote: regexp/extended: (string "aX" 123 #\{ "a{" "a[{]")
PASS: regexp.test: regexp-quote: regexp/extended: (string "aX" 124 #\| "a|" "a[|]")
PASS: regexp.test: regexp-quote: regexp/extended: (string "aX" 125 #\} "a}" "a[}]")
PASS: regexp.test: regexp-quote: regexp/extended: (string "aX" 126 #\~ "a~" "a~")
PASS: regexp.test: regexp-quote: regexp/extended: (string "aX" 127 #\delete "a\x7f" "a\x7f")
UNRESOLVED: regexp.test: regexp-quote: regexp/extended: (string "aX" 128 #\200 "a\x80" "a\x80")
UNRESOLVED: regexp.test: regexp-quote: regexp/extended: (string "aX" 129 #\201 "a\x81" "a\x81")
UNRESOLVED: regexp.test: regexp-quote: regexp/extended: (string "aX" 130 #\202 "a\x82" "a\x82")
UNRESOLVED: regexp.test: regexp-quote: regexp/extended: (string "aX" 131 #\203 "a\x83" "a\x83")
UNRESOLVED: regexp.test: regexp-quote: regexp/extended: (string "aX" 132 #\204 "a\x84" "a\x84")
UNRESOLVED: regexp.test: regexp-quote: regexp/extended: (string "aX" 133 #\205 "a\x85" "a\x85")
UNRESOLVED: regexp.test: regexp-quote: regexp/extended: (string "aX" 134 #\206 "a\x86" "a\x86")
UNRESOLVED: regexp.test: regexp-quote: regexp/extended: (string "aX" 135 #\207 "a\x87" "a\x87")
UNRESOLVED: regexp.test: regexp-quote: regexp/extended: (string "aX" 136 #\210 "a\x88" "a\x88")
UNRESOLVED: regexp.test: regexp-quote: regexp/extended: (string "aX" 137 #\211 "a\x89" "a\x89")
UNRESOLVED: regexp.test: regexp-quote: regexp/extended: (string "aX" 138 #\212 "a\x8a" "a\x8a")
UNRESOLVED: regexp.test: regexp-quote: regexp/extended: (string "aX" 139 #\213 "a\x8b" "a\x8b")
UNRESOLVED: regexp.test: regexp-quote: regexp/extended: (string "aX" 140 #\214 "a\x8c" "a\x8c")
UNRESOLVED: regexp.test: regexp-quote: regexp/extended: (string "aX" 141 #\215 "a\x8d" "a\x8d")
UNRESOLVED: regexp.test: regexp-quote: regexp/extended: (string "aX" 142 #\216 "a\x8e" "a\x8e")
UNRESOLVED: regexp.test: regexp-quote: regexp/extended: (string "aX" 143 #\217 "a\x8f" "a\x8f")
UNRESOLVED: regexp.test: regexp-quote: regexp/extended: (string "aX" 144 #\220 "a\x90" "a\x90")
UNRESOLVED: regexp.test: regexp-quote: regexp/extended: (string "aX" 145 #\221 "a\x91" "a\x91")
UNRESOLVED: regexp.test: regexp-quote: regexp/extended: (string "aX" 146 #\222 "a\x92" "a\x92")
UNRESOLVED: regexp.test: regexp-quote: regexp/extended: (string "aX" 147 #\223 "a\x93" "a\x93")
UNRESOLVED: regexp.test: regexp-quote: regexp/extended: (string "aX" 148 #\224 "a\x94" "a\x94")
UNRESOLVED: regexp.test: regexp-quote: regexp/extended: (string "aX" 149 #\225 "a\x95" "a\x95")
UNRESOLVED: regexp.test: regexp-quote: regexp/extended: (string "aX" 150 #\226 "a\x96" "a\x96")
UNRESOLVED: regexp.test: regexp-quote: regexp/extended: (string "aX" 151 #\227 "a\x97" "a\x97")
UNRESOLVED: regexp.test: regexp-quote: regexp/extended: (string "aX" 152 #\230 "a\x98" "a\x98")
UNRESOLVED: regexp.test: regexp-quote: regexp/extended: (string "aX" 153 #\231 "a\x99" "a\x99")
UNRESOLVED: regexp.test: regexp-quote: regexp/extended: (string "aX" 154 #\232 "a\x9a" "a\x9a")
UNRESOLVED: regexp.test: regexp-quote: regexp/extended: (string "aX" 155 #\233 "a\x9b" "a\x9b")
UNRESOLVED: regexp.test: regexp-quote: regexp/extended: (string "aX" 156 #\234 "a\x9c" "a\x9c")
UNRESOLVED: regexp.test: regexp-quote: regexp/extended: (string "aX" 157 #\235 "a\x9d" "a\x9d")
UNRESOLVED: regexp.test: regexp-quote: regexp/extended: (string "aX" 158 #\236 "a\x9e" "a\x9e")
UNRESOLVED: regexp.test: regexp-quote: regexp/extended: (string "aX" 159 #\237 "a\x9f" "a\x9f")
UNRESOLVED: regexp.test: regexp-quote: regexp/extended: (string "aX" 160 #\240 "a\xa0" "a\xa0")
UNRESOLVED: regexp.test: regexp-quote: regexp/extended: (string "aX" 161 #\¡ "a¡" "a¡")
UNRESOLVED: regexp.test: regexp-quote: regexp/extended: (string "aX" 162 #\¢ "a¢" "a¢")
UNRESOLVED: regexp.test: regexp-quote: regexp/extended: (string "aX" 163 #\£ "a£" "a£")
UNRESOLVED: regexp.test: regexp-quote: regexp/extended: (string "aX" 164 #\¤ "a¤" "a¤")
UNRESOLVED: regexp.test: regexp-quote: regexp/extended: (string "aX" 165 #\¥ "a¥" "a¥")
UNRESOLVED: regexp.test: regexp-quote: regexp/extended: (string "aX" 166 #\¦ "a¦" "a¦")
UNRESOLVED: regexp.test: regexp-quote: regexp/extended: (string "aX" 167 #\§ "a§" "a§")
UNRESOLVED: regexp.test: regexp-quote: regexp/extended: (string "aX" 168 #\¨ "a¨" "a¨")
UNRESOLVED: regexp.test: regexp-quote: regexp/extended: (string "aX" 169 #\© "a©" "a©")
UNRESOLVED: regexp.test: regexp-quote: regexp/extended: (string "aX" 170 #\ª "aª" "aª")
UNRESOLVED: regexp.test: regexp-quote: regexp/extended: (string "aX" 171 #\« "a«" "a«")
UNRESOLVED: regexp.test: regexp-quote: regexp/extended: (string "aX" 172 #\¬ "a¬" "a¬")
UNRESOLVED: regexp.test: regexp-quote: regexp/extended: (string "aX" 173 #\255 "a\xad" "a\xad")
UNRESOLVED: regexp.test: regexp-quote: regexp/extended: (string "aX" 174 #\® "a®" "a®")
UNRESOLVED: regexp.test: regexp-quote: regexp/extended: (string "aX" 175 #\¯ "a¯" "a¯")
UNRESOLVED: regexp.test: regexp-quote: regexp/extended: (string "aX" 176 #\° "a°" "a°")
UNRESOLVED: regexp.test: regexp-quote: regexp/extended: (string "aX" 177 #\± "a±" "a±")
UNRESOLVED: regexp.test: regexp-quote: regexp/extended: (string "aX" 178 #\² "a²" "a²")
UNRESOLVED: regexp.test: regexp-quote: regexp/extended: (string "aX" 179 #\³ "a³" "a³")
UNRESOLVED: regexp.test: regexp-quote: regexp/extended: (string "aX" 180 #\´ "a´" "a´")
UNRESOLVED: regexp.test: regexp-quote: regexp/extended: (string "aX" 181 #\µ "aµ" "aµ")
UNRESOLVED: regexp.test: regexp-quote: regexp/extended: (string "aX" 182 #\¶ "a¶" "a¶")
UNRESOLVED: regexp.test: regexp-quote: regexp/extended: (string "aX" 183 #\· "a·" "a·")
UNRESOLVED: regexp.test: regexp-quote: regexp/extended: (string "aX" 184 #\¸ "a¸" "a¸")
UNRESOLVED: regexp.test: regexp-quote: regexp/extended: (string "aX" 185 #\¹ "a¹" "a¹")
UNRESOLVED: regexp.test: regexp-quote: regexp/extended: (string "aX" 186 #\º "aº" "aº")
UNRESOLVED: regexp.test: regexp-quote: regexp/extended: (string "aX" 187 #\» "a»" "a»")
UNRESOLVED: regexp.test: regexp-quote: regexp/extended: (string "aX" 188 #\¼ "a¼" "a¼")
UNRESOLVED: regexp.test: regexp-quote: regexp/extended: (string "aX" 189 #\½ "a½" "a½")
UNRESOLVED: regexp.test: regexp-quote: regexp/extended: (string "aX" 190 #\¾ "a¾" "a¾")
UNRESOLVED: regexp.test: regexp-quote: regexp/extended: (string "aX" 191 #\¿ "a¿" "a¿")
UNRESOLVED: regexp.test: regexp-quote: regexp/extended: (string "aX" 192 #\À "aÀ" "aÀ")
UNRESOLVED: regexp.test: regexp-quote: regexp/extended: (string "aX" 193 #\Á "aÁ" "aÁ")
UNRESOLVED: regexp.test: regexp-quote: regexp/extended: (string "aX" 194 #\Â "aÂ" "aÂ")
UNRESOLVED: regexp.test: regexp-quote: regexp/extended: (string "aX" 195 #\Ã "aÃ" "aÃ")
UNRESOLVED: regexp.test: regexp-quote: regexp/extended: (string "aX" 196 #\Ä "aÄ" "aÄ")
UNRESOLVED: regexp.test: regexp-quote: regexp/extended: (string "aX" 197 #\Å "aÅ" "aÅ")
UNRESOLVED: regexp.test: regexp-quote: regexp/extended: (string "aX" 198 #\Æ "aÆ" "aÆ")
UNRESOLVED: regexp.test: regexp-quote: regexp/extended: (string "aX" 199 #\Ç "aÇ" "aÇ")
UNRESOLVED: regexp.test: regexp-quote: regexp/extended: (string "aX" 200 #\È "aÈ" "aÈ")
UNRESOLVED: regexp.test: regexp-quote: regexp/extended: (string "aX" 201 #\É "aÉ" "aÉ")
UNRESOLVED: regexp.test: regexp-quote: regexp/extended: (string "aX" 202 #\Ê "aÊ" "aÊ")
UNRESOLVED: regexp.test: regexp-quote: regexp/extended: (string "aX" 203 #\Ë "aË" "aË")
UNRESOLVED: regexp.test: regexp-quote: regexp/extended: (string "aX" 204 #\Ì "aÌ" "aÌ")
UNRESOLVED: regexp.test: regexp-quote: regexp/extended: (string "aX" 205 #\Í "aÍ" "aÍ")
UNRESOLVED: regexp.test: regexp-quote: regexp/extended: (string "aX" 206 #\Î "aÎ" "aÎ")
UNRESOLVED: regexp.test: regexp-quote: regexp/extended: (string "aX" 207 #\Ï "aÏ" "aÏ")
UNRESOLVED: regexp.test: regexp-quote: regexp/extended: (string "aX" 208 #\Ð "aÐ" "aÐ")
UNRESOLVED: regexp.test: regexp-quote: regexp/extended: (string "aX" 209 #\Ñ "aÑ" "aÑ")
UNRESOLVED: regexp.test: regexp-quote: regexp/extended: (string "aX" 210 #\Ò "aÒ" "aÒ")
UNRESOLVED: regexp.test: regexp-quote: regexp/extended: (string "aX" 211 #\Ó "aÓ" "aÓ")
UNRESOLVED: regexp.test: regexp-quote: regexp/extended: (string "aX" 212 #\Ô "aÔ" "aÔ")
UNRESOLVED: regexp.test: regexp-quote: regexp/extended: (string "aX" 213 #\Õ "aÕ" "aÕ")
UNRESOLVED: regexp.test: regexp-quote: regexp/extended: (string "aX" 214 #\Ö "aÖ" "aÖ")
UNRESOLVED: regexp.test: regexp-quote: regexp/extended: (string "aX" 215 #\× "a×" "a×")
UNRESOLVED: regexp.test: regexp-quote: regexp/extended: (string "aX" 216 #\Ø "aØ" "aØ")
UNRESOLVED: regexp.test: regexp-quote: regexp/extended: (string "aX" 217 #\Ù "aÙ" "aÙ")
UNRESOLVED: regexp.test: regexp-quote: regexp/extended: (string "aX" 218 #\Ú "aÚ" "aÚ")
UNRESOLVED: regexp.test: regexp-quote: regexp/extended: (string "aX" 219 #\Û "aÛ" "aÛ")
UNRESOLVED: regexp.test: regexp-quote: regexp/extended: (string "aX" 220 #\Ü "aÜ" "aÜ")
UNRESOLVED: regexp.test: regexp-quote: regexp/extended: (string "aX" 221 #\Ý "aÝ" "aÝ")
UNRESOLVED: regexp.test: regexp-quote: regexp/extended: (string "aX" 222 #\Þ "aÞ" "aÞ")
UNRESOLVED: regexp.test: regexp-quote: regexp/extended: (string "aX" 223 #\ß "aß" "aß")
UNRESOLVED: regexp.test: regexp-quote: regexp/extended: (string "aX" 224 #\à "aà" "aà")
UNRESOLVED: regexp.test: regexp-quote: regexp/extended: (string "aX" 225 #\á "aá" "aá")
UNRESOLVED: regexp.test: regexp-quote: regexp/extended: (string "aX" 226 #\â "aâ" "aâ")
UNRESOLVED: regexp.test: regexp-quote: regexp/extended: (string "aX" 227 #\ã "aã" "aã")
UNRESOLVED: regexp.test: regexp-quote: regexp/extended: (string "aX" 228 #\ä "aä" "aä")
UNRESOLVED: regexp.test: regexp-quote: regexp/extended: (string "aX" 229 #\å "aå" "aå")
UNRESOLVED: regexp.test: regexp-quote: regexp/extended: (string "aX" 230 #\æ "aæ" "aæ")
UNRESOLVED: regexp.test: regexp-quote: regexp/extended: (string "aX" 231 #\ç "aç" "aç")
UNRESOLVED: regexp.test: regexp-quote: regexp/extended: (string "aX" 232 #\è "aè" "aè")
UNRESOLVED: regexp.test: regexp-quote: regexp/extended: (string "aX" 233 #\é "aé" "aé")
UNRESOLVED: regexp.test: regexp-quote: regexp/extended: (string "aX" 234 #\ê "aê" "aê")
UNRESOLVED: regexp.test: regexp-quote: regexp/extended: (string "aX" 235 #\ë "aë" "aë")
UNRESOLVED: regexp.test: regexp-quote: regexp/extended: (string "aX" 236 #\ì "aì" "aì")
UNRESOLVED: regexp.test: regexp-quote: regexp/extended: (string "aX" 237 #\í "aí" "aí")
UNRESOLVED: regexp.test: regexp-quote: regexp/extended: (string "aX" 238 #\î "aî" "aî")
UNRESOLVED: regexp.test: regexp-quote: regexp/extended: (string "aX" 239 #\ï "aï" "aï")
UNRESOLVED: regexp.test: regexp-quote: regexp/extended: (string "aX" 240 #\ð "að" "að")
UNRESOLVED: regexp.test: regexp-quote: regexp/extended: (string "aX" 241 #\ñ "añ" "añ")
UNRESOLVED: regexp.test: regexp-quote: regexp/extended: (string "aX" 242 #\ò "aò" "aò")
UNRESOLVED: regexp.test: regexp-quote: regexp/extended: (string "aX" 243 #\ó "aó" "aó")
UNRESOLVED: regexp.test: regexp-quote: regexp/extended: (string "aX" 244 #\ô "aô" "aô")
UNRESOLVED: regexp.test: regexp-quote: regexp/extended: (string "aX" 245 #\õ "aõ" "aõ")
UNRESOLVED: regexp.test: regexp-quote: regexp/extended: (string "aX" 246 #\ö "aö" "aö")
UNRESOLVED: regexp.test: regexp-quote: regexp/extended: (string "aX" 247 #\÷ "a÷" "a÷")
UNRESOLVED: regexp.test: regexp-quote: regexp/extended: (string "aX" 248 #\ø "aø" "aø")
UNRESOLVED: regexp.test: regexp-quote: regexp/extended: (string "aX" 249 #\ù "aù" "aù")
UNRESOLVED: regexp.test: regexp-quote: regexp/extended: (string "aX" 250 #\ú "aú" "aú")
UNRESOLVED: regexp.test: regexp-quote: regexp/extended: (string "aX" 251 #\û "aû" "aû")
UNRESOLVED: regexp.test: regexp-quote: regexp/extended: (string "aX" 252 #\ü "aü" "aü")
UNRESOLVED: regexp.test: regexp-quote: regexp/extended: (string "aX" 253 #\ý "aý" "aý")
UNRESOLVED: regexp.test: regexp-quote: regexp/extended: (string "aX" 254 #\þ "aþ" "aþ")
UNRESOLVED: regexp.test: regexp-quote: regexp/extended: (string "aX" 255 #\ÿ "aÿ" "aÿ")
UNRESOLVED: regexp.test: regexp-quote: regexp/extended: string of all chars
PASS: regexp.test: regexp-substitute: (): port is string port
PASS: regexp.test: regexp-substitute: (): port is #f
PASS: regexp.test: regexp-substitute: ("string1"): port is string port
PASS: regexp.test: regexp-substitute: ("string1"): port is #f
PASS: regexp.test: regexp-substitute: ("string1" "string2"): port is string port
PASS: regexp.test: regexp-substitute: ("string1" "string2"): port is #f
PASS: regexp.test: regexp-substitute: (0): port is string port
PASS: regexp.test: regexp-substitute: (0): port is #f
PASS: regexp.test: regexp-substitute: ("hi-" 0 "-bye"): port is string port
PASS: regexp.test: regexp-substitute: ("hi-" 0 "-bye"): port is #f
PASS: regexp.test: regexp-substitute: (1): port is string port
PASS: regexp.test: regexp-substitute: (1): port is #f
PASS: regexp.test: regexp-substitute: ("hi-" 1 "-bye"): port is string port
PASS: regexp.test: regexp-substitute: ("hi-" 1 "-bye"): port is #f
PASS: regexp.test: regexp-substitute: ("hi-" 2 "-bye"): port is string port
PASS: regexp.test: regexp-substitute: ("hi-" 2 "-bye"): port is #f
PASS: regexp.test: regexp-substitute: (pre): port is string port
PASS: regexp.test: regexp-substitute: (pre): port is #f
PASS: regexp.test: regexp-substitute: (post): port is string port
PASS: regexp.test: regexp-substitute: (post): port is #f
PASS: regexp.test: regexp-substitute: (post pre): port is string port
PASS: regexp.test: regexp-substitute: (post pre): port is #f
PASS: regexp.test: regexp-substitute: (post pre post pre): port is string port
PASS: regexp.test: regexp-substitute: (post pre post pre): port is #f
PASS: regexp.test: regexp-substitute: (post 2 1 pre): port is string port
PASS: regexp.test: regexp-substitute: (post 2 1 pre): port is #f
PASS: regexp.test: regexp-substitute: ("foo" 1 1 1 1 "bar"): port is string port
PASS: regexp.test: regexp-substitute: ("foo" 1 1 1 1 "bar"): port is #f
PASS: regexp.test: regexp-substitute/global: ("a(x*)b" "ab" "hi"): port is string port
PASS: regexp.test: regexp-substitute/global: ("a(x*)b" "ab" "hi"): port is #f
PASS: regexp.test: regexp-substitute/global: ("a(x*)b" "ab" 1): port is string port
PASS: regexp.test: regexp-substitute/global: ("a(x*)b" "ab" 1): port is #f
PASS: regexp.test: regexp-substitute/global: ("a(x*)b" "axxb" 1): port is string port
PASS: regexp.test: regexp-substitute/global: ("a(x*)b" "axxb" 1): port is #f
PASS: regexp.test: regexp-substitute/global: ("a(x*)b" "_axxb_" 1): port is string port
PASS: regexp.test: regexp-substitute/global: ("a(x*)b" "_axxb_" 1): port is #f
PASS: regexp.test: regexp-substitute/global: ("a(x*)b" "preaxxbpost" pre): port is string port
PASS: regexp.test: regexp-substitute/global: ("a(x*)b" "preaxxbpost" pre): port is #f
PASS: regexp.test: regexp-substitute/global: ("a(x*)b" "preaxxbpost" post): port is string port
PASS: regexp.test: regexp-substitute/global: ("a(x*)b" "preaxxbpost" post): port is #f
PASS: regexp.test: regexp-substitute/global: ("x" "string" pre "y" post): port is string port
PASS: regexp.test: regexp-substitute/global: ("x" "string" pre "y" post): port is #f
PASS: regexp.test: regexp-substitute/global: ("a(x*)b" "_axxb_" #<procedure 4035450 at ice-9/eval.scm:333:13 (a)>): port is string port
PASS: regexp.test: regexp-substitute/global: ("a(x*)b" "_axxb_" #<procedure 4035450 at ice-9/eval.scm:333:13 (a)>): port is #f
PASS: regexp.test: regexp-substitute/global: ("x+" "_axbxxcxxxd_" pre "y" post): port is string port
PASS: regexp.test: regexp-substitute/global: ("x+" "_axbxxcxxxd_" pre "y" post): port is #f
PASS: regexp.test: regexp-substitute/global: ("x*" "_axbxxcxxxd_" pre "y" post): port is string port
PASS: regexp.test: regexp-substitute/global: ("x*" "_axbxxcxxxd_" pre "y" post): port is #f
PASS: regexp.test: regexp-substitute/global: ("a(x*)b" "_axxbaxbaxxxb_" #<procedure 528b0f0 at ice-9/eval.scm:333:13 (a)> ":" post): port is string port
PASS: regexp.test: regexp-substitute/global: ("a(x*)b" "_axxbaxbaxxxb_" #<procedure 528b0f0 at ice-9/eval.scm:333:13 (a)> ":" post): port is #f
PASS: regexp.test: regexp-substitute/global: ("a(x*)b" "_axxbaxxxxbaxxxxxxxb_" #<procedure 5296930 at ice-9/eval.scm:333:13 (a)> ":" post ":" #<procedure 5296920 at ice-9/eval.scm:333:13 (a)>): port is string port
PASS: regexp.test: regexp-substitute/global: ("a(x*)b" "_axxbaxxxxbaxxxxxxxb_" #<procedure 5296930 at ice-9/eval.scm:333:13 (a)> ":" post ":" #<procedure 5296920 at ice-9/eval.scm:333:13 (a)>): port is #f
PASS: regexp.test: regexp-substitute/globalpost): port is string port
PASS: regexp.test: regexp-substitute/globalpost): port is #f
PASS: regexp.test: nonascii locales: match structures refer to char offsets
PASS: regexp.test: nonascii locales: match structures refer to char offsets, non-ASCII pattern
PASS: rnrs-libraries.test: ice-9 receive: import
PASS: rnrs-libraries.test: ice-9 receive: resolve-interface
PASS: rnrs-libraries.test: ice-9 receive: resolve-r6rs-interface
PASS: rnrs-libraries.test: ice-9 receive: resolve-r6rs-interface (2)
PASS: rnrs-libraries.test: ice-9 receive: module uses
PASS: rnrs-libraries.test: ice-9 receive: interface contents
PASS: rnrs-libraries.test: ice-9 receive: interface uses
PASS: rnrs-libraries.test: ice-9 receive: version
PASS: rnrs-libraries.test: ice-9 receive: calling receive from current env
PASS: rnrs-libraries.test: rnrs-test-a: no double
PASS: rnrs-libraries.test: rnrs-test-a: import
PASS: rnrs-libraries.test: rnrs-test-a: still no double
PASS: rnrs-libraries.test: rnrs-test-a: resolve-interface
PASS: rnrs-libraries.test: rnrs-test-a: resolve-interface (2)
PASS: rnrs-libraries.test: rnrs-test-a: resolve-r6rs-interface
PASS: rnrs-libraries.test: rnrs-test-a: resolve-r6rs-interface (2)
PASS: rnrs-libraries.test: rnrs-test-a: module uses
PASS: rnrs-libraries.test: rnrs-test-a: interface contents
PASS: rnrs-libraries.test: rnrs-test-a: interface uses
PASS: rnrs-libraries.test: rnrs-test-a: version
PASS: rnrs-libraries.test: rnrs-test-a: calling double
PASS: rnrs-libraries.test: rnrs-test-a: calling double from current env
PASS: rnrs-libraries.test: implicit phasing: in library form: explicit phasing ignored
PASS: rnrs-libraries.test: implicit phasing: in library form: explicit phasing ignored
PASS: rnrs-libraries.test: import features: only: contents
PASS: rnrs-libraries.test: import features: except: contains
PASS: rnrs-libraries.test: import features: except: does not contain
PASS: rnrs-libraries.test: import features: prefix: contains
PASS: rnrs-libraries.test: import features: prefix: does not contain
PASS: rnrs-libraries.test: import features: rename: contents
PASS: rnrs-libraries.test: import features: rename: contains
PASS: rnrs-libraries.test: import features: srfi: renaming works
PASS: rnrs-libraries.test: import features: macro: multiple clauses
PASS: rtl-compilation.test: tail context: (run-bytecode (quote (let ((x 1)) x)))
PASS: rtl-compilation.test: tail context: (run-bytecode 1)
PASS: rtl-compilation.test: tail context: (run-bytecode (quote (if #f #f)))
PASS: rtl-compilation.test: tail context: top-level define
PASS: rtl-compilation.test: tail context: top-level set!
PASS: rtl-compilation.test: tail context: top-level apply [single value]
PASS: rtl-compilation.test: tail context: top-level apply [zero values]
PASS: rtl-compilation.test: tail context: top-level apply [two values]
PASS: rtl-compilation.test: tail context: call-with-values
PASS: rtl-compilation.test: tail context: (run-bytecode (quote cons))
PASS: rtl-compilation.test: tail context: ((run-bytecode (quote (lambda () 1))))
PASS: rtl-compilation.test: tail context: ((run-bytecode (quote (lambda (x) 1))) 2)
PASS: rtl-compilation.test: tail context: ((run-bytecode (quote (lambda (x) x))) 1)
PASS: rtl-compilation.test: tail context: ((((run-bytecode (quote (lambda (x) (lambda (y) (lambda (z) (+ x y z)))))) 1) 2) 3)
PASS: rtl-compilation.test: tail context: (run-bytecode (quote (identity 1)))
PASS: rtl-compilation.test: tail context: (run-bytecode (quote (cons 1 2)))
PASS: rtl-compilation.test: tail context: (call-with-values (lambda () (run-bytecode (quote (values 1 2)))) list)
PASS: rtl-compilation.test: tail context: ((run-bytecode (quote (lambda (x y z rest) (apply + x y z rest)))) 2 3 5 (quote (7 11)))
PASS: rtl-compilation.test: values context: (run-bytecode (quote (let ((rat (lambda (n d) (call-with-values (lambda () (floor/ n d)) (lambda (q r) (cons q r)))))) (rat 10 3))))
PASS: rtl-compilation.test: contification: ((run-bytecode (quote (lambda (x) (define (even? x) (if (null? x) #t (odd? (cdr x)))) (define (odd? x) (if (null? x) #f (even? (cdr x)))) (even? x)))) (quote (1 2 3 4)))
PASS: rtl-compilation.test: contification: (not ((run-bytecode (quote (lambda (x) (define (even? x) (if (null? x) #t (odd? (cdr x)))) (define (odd? x) (if (null? x) #f (even? (cdr x)))) (even? x)))) (quote (1 2 3))))
PASS: rtl-compilation.test: contification: ((run-bytecode (quote (lambda (x) (define (even? x) (if (null? x) #t (odd? (cdr x)))) (define (odd? x) (if (null? x) #f (even? (cdr x)))) (list (even? x))))) (quote (1 2 3 4)))
PASS: rtl-compilation.test: contification: ((run-bytecode (quote (lambda (x do-even?) (define (even? x) (if (null? x) #t (odd? (cdr x)))) (define (odd? x) (if (null? x) #f (even? (cdr x)))) (if do-even? (even? x) (odd? x))))) (quote (1 2 3 4)) #t)
PASS: rtl-compilation.test: case-lambda: simple
PASS: rtl-compilation.test: case-lambda: no match
PASS: rtl-compilation.test: case-lambda: zero clauses called with no args
PASS: rtl-compilation.test: case-lambda: zero clauses called with args
PASS: rtl-compilation.test: mixed contexts: sequences
PASS: rtl-compilation.test: mixed contexts: mutable lexicals
PASS: rtl.test: load-constant: 1
PASS: rtl.test: load-constant: -1
PASS: rtl.test: load-constant: 0
PASS: rtl.test: load-constant: 536870911
PASS: rtl.test: load-constant: -536870912
PASS: rtl.test: load-constant: #t
PASS: rtl.test: load-constant: #\c
PASS: rtl.test: load-constant: #\㺀
PASS: rtl.test: load-constant: 3.14
PASS: rtl.test: load-constant: "foo"
PASS: rtl.test: load-constant: foo
PASS: rtl.test: load-constant: #:foo
PASS: rtl.test: load-constant: "æ"
PASS: rtl.test: load-constant: "λ"
PASS: rtl.test: load-constant: (1 . 2)
PASS: rtl.test: load-constant: (1 2 3 4)
PASS: rtl.test: load-constant: #(1 2 3)
PASS: rtl.test: load-constant: #("foo" "bar" (quote baz))
PASS: rtl.test: load-constant: #vu8()
PASS: rtl.test: load-constant: #vu8(1 2 3 4 128 129 130)
PASS: rtl.test: load-constant: #u32()
PASS: rtl.test: load-constant: #u32(1 2 3 4 128 129 130 255 1000)
PASS: rtl.test: bad constants: #<uninterned-symbol foo 2576520>
PASS: rtl.test: bad constants: #<procedure 2580600 at ice-9/eval.scm:330:13 ()>
PASS: rtl.test: static procedure: 42
PASS: rtl.test: loop: 499500
PASS: rtl.test: call: 42
PASS: rtl.test: call: 6
PASS: rtl.test: tail-call: 3
PASS: rtl.test: tail-call: 6
PASS: rtl.test: debug contexts: program name
PASS: rtl.test: debug contexts: program address
PASS: rtl.test: procedure name: (procedure-name (assemble-program (quote ((begin-program foo ((name . foo))) (begin-standard-arity #t () 1 #f) (load-constant 0 42) (return-values) (end-arity) (end-program)))))
PASS: rtl.test: simple procedure arity: (object->string (assemble-program (quote ((begin-program foo ((name . foo))) (begin-standard-arity #t () 1 #f) (definition closure 0 scm) (load-constant 0 42) (return-values) (end-arity) (end-program)))))
PASS: rtl.test: simple procedure arity: (object->string (assemble-program (quote ((begin-program foo ((name . foo))) (begin-standard-arity #t (x y) 3 #f) (definition closure 0 scm) (definition x 1 scm) (definition y 2 scm) (load-constant 2 42) (reset-frame 1) (return-values) (end-arity) (end-program)))))
PASS: rtl.test: simple procedure arity: (object->string (assemble-program (quote ((begin-program foo ((name . foo))) (begin-opt-arity #t (x) (y) z 4 #f) (definition closure 0 scm) (definition x 1 scm) (definition y 2 scm) (definition z 3 scm) (load-constant 3 42) (reset-frame 1) (return-values) (end-arity) (end-program)))))
PASS: rtl.test: procedure docstrings: (procedure-documentation (assemble-program (quote ((begin-program foo ((name . foo) (documentation . qux qux))) (begin-standard-arity #t () 1 #f) (load-constant 0 42) (return-values) (end-arity) (end-program)))))
PASS: rtl.test: procedure properties: (procedure-properties (assemble-program (quote ((begin-program foo ()) (begin-standard-arity #t () 1 #f) (load-constant 0 42) (return-values) (end-arity) (end-program)))))
PASS: rtl.test: procedure properties: (procedure-properties (assemble-program (quote ((begin-program foo ((name . foo) (documentation . qux qux))) (begin-standard-arity #t () 1 #f) (load-constant 0 42) (return-values) (end-arity) (end-program)))))
PASS: rtl.test: procedure properties: (procedure-properties (assemble-program (quote ((begin-program foo ((name . foo) (documentation . qux qux) (moo . mooooooooooooo))) (begin-standard-arity #t () 1 #f) (load-constant 0 42) (return-values) (end-arity) (end-program)))))
PASS: rtl.test: procedure properties: (procedure-name (assemble-program (quote ((begin-program foo ((name . foo) (documentation . qux qux) (moo . mooooooooooooo))) (begin-standard-arity #t () 1 #f) (load-constant 0 42) (return-values) (end-arity) (end-program)))))
PASS: sandbox.test: time limit: 0 busy loop
PASS: sandbox.test: time limit: 0.001 busy loop
PASS: sandbox.test: time limit: 0 sleep
PASS: sandbox.test: time limit: 0.001 sleep
PASS: sandbox.test: allocation limit: 0 alloc loop
PASS: sandbox.test: allocation limit: 1e6 alloc loop
PASS: sandbox.test: allocation limit: 0 recurse
PASS: sandbox.test: allocation limit: 1e6 recurse
PASS: sandbox.test: eval-in-sandbox: (eval-in-sandbox 42)
PASS: sandbox.test: eval-in-sandbox: (eval-in-sandbox (quote (quote foo)))
PASS: sandbox.test: eval-in-sandbox: (eval-in-sandbox (quote (cons 1 2)))
PASS: sandbox.test: eval-in-sandbox: @@ unavailable
PASS: sandbox.test: eval-in-sandbox: foo unavailable
PASS: sandbox.test: eval-in-sandbox: set! unavailable
PASS: sandbox.test: eval-in-sandbox: open-file unavailable
PASS: sandbox.test: eval-in-sandbox: current-input-port unavailable
PASS: sandbox.test: eval-in-sandbox: call-with-output-file unavailable
PASS: sandbox.test: eval-in-sandbox: vector-set! unavailable
PASS: sandbox.test: eval-in-sandbox: (eval-in-sandbox (quote vector-set!) #:bindings all-pure-and-impure-bindings)
PASS: sandbox.test: eval-in-sandbox: limit exceeded
PASS: session.test: apropos-fold-all: a root module: ice-9
PASS: session.test: apropos-fold-all: a child of test-suite
PASS: session.test: apropos-fold-all: a non-module
PASS: session.test: apropos-fold-all: a childish non-module
PASS: session.test: apropos-fold-all: an anonymous module
PASS: session.test: apropos-fold-exported: a child of test-suite
PASS: session.test: apropos-fold-exported: a child of ice-9
PASS: session.test: procedure-arguments: lambda
PASS: session.test: procedure-arguments: lambda with rest
PASS: session.test: procedure-arguments: lambda* with optionals
PASS: session.test: procedure-arguments: lambda* with keywords
PASS: session.test: procedure-arguments: lambda* with keywords and a-o-k
PASS: session.test: procedure-arguments: lambda* with optionals, keys, and rest
PASS: session.test: procedure-arguments: aok? is preserved
PASS: session.test: procedure-arguments: interpreted procedures (simple)
PASS: session.test: procedure-arguments: interpreted procedures (complex)
PASS: signals.test: sigaction: handler arg is an invalid integer
PASS: signals.test: setitimer: current itimers are 0: ITIMER_REAL
PASS: signals.test: setitimer: current itimers are 0: ITIMER_VIRTUAL
PASS: signals.test: setitimer: current itimers are 0: ITIMER_PROF
PASS: signals.test: setitimer: setting values correctly: initial setting
PASS: signals.test: setitimer: setting values correctly: reset to zero
PASS: signals.test: setitimer: usecs > 1e6: initial setting
PASS: signals.test: setitimer: usecs > 1e6: reset to zero
PASS: sort.test: sort: less function taking less than two arguments
PASS: sort.test: sort: less function taking more than two arguments
PASS: sort.test: sort: sort of vector
PASS: sort.test: sort: sort of typed vector
PASS: sort.test: sort!: sort of empty vector
PASS: sort.test: sort!: sort of vector
PASS: sort.test: sort!: sort of empty typed vector
PASS: sort.test: sort!: sort! of typed vector
PASS: sort.test: sort!: sort! of non-contigous array
PASS: sort.test: sort!: sort! of non-contigous typed array
PASS: sort.test: sort!: sort! of negative-increment array
PASS: sort.test: sort!: sort! of non-zero base index array
PASS: sort.test: sort!: sort! of non-zero base index typed array
PASS: sort.test: sort!: sort! of negative-increment typed array
PASS: sort.test: stable-sort!: stable-sort!
PASS: sort.test: stable-sort!: stable-sort! of non-contigous array
PASS: sort.test: stable-sort!: stable-sort! of negative-increment array
PASS: sort.test: stable-sort!: stable-sort! of non-zero base index array
PASS: sort.test: stable-sort: empty list
PASS: sort.test: stable-sort: empty vector
PASS: sort.test: mutable/immutable arguments: immutable arguments: sort! of empty vector (eval)
PASS: sort.test: mutable/immutable arguments: immutable arguments: sort! of empty vector (compile -O0)
PASS: sort.test: mutable/immutable arguments: immutable arguments: sort! of empty vector (compile -O2)
PASS: sort.test: mutable/immutable arguments: immutable arguments: sort of immutable vector (eval)
PASS: sort.test: mutable/immutable arguments: immutable arguments: sort of immutable vector (compile -O0)
PASS: sort.test: mutable/immutable arguments: immutable arguments: sort of immutable vector (compile -O2)
PASS: sort.test: mutable/immutable arguments: sort! of mutable vector (compile)
PASS: srcprop.test: source-properties: no props
PASS: srcprop.test: source-properties: read properties: pairs
PASS: srcprop.test: source-properties: read properties: vectors
PASS: srcprop.test: source-properties: read properties: bytevectors
PASS: srcprop.test: source-properties: read properties: bitvectors
PASS: srcprop.test: source-properties: read properties: srfi4 vectors
PASS: srcprop.test: source-properties: read properties: arrays
PASS: srcprop.test: source-properties: read properties: strings
PASS: srcprop.test: source-properties: read properties: null string
PASS: srcprop.test: source-properties: read properties: floats
PASS: srcprop.test: source-properties: read properties: fractions
PASS: srcprop.test: source-properties: read properties: complex numbers
PASS: srcprop.test: source-properties: read properties: bignums
PASS: srcprop.test: source-properties: read properties: fixnums (should have none)
PASS: srcprop.test: source-properties: read properties: symbols (should have none)
PASS: srcprop.test: source-properties: read properties: keywords (should have none)
PASS: srcprop.test: source-properties: read properties: characters (should have none)
PASS: srcprop.test: source-properties: read properties: booleans (should have none)
UNRESOLVED: srcprop.test: set-source-property!: setting the breakpoint property works
UNRESOLVED: srcprop.test: set-source-properties!: setting the breakpoint property works
PASS: srcprop.test: set-source-properties!: copied props: visible to source-property
PASS: srcprop.test: set-source-properties!: copied props: visible to source-properties
PASS: srfi-1.test: alist-copy: too few args
PASS: srfi-1.test: alist-copy: too many args
PASS: srfi-1.test: alist-copy: ()
PASS: srfi-1.test: alist-copy: ((1 . 2))
PASS: srfi-1.test: alist-copy: ((1 . 2) (3 . 4))
PASS: srfi-1.test: alist-copy: ((1 . 2) (3 . 4) (5 . 6))
PASS: srfi-1.test: alist-delete: equality call arg order
PASS: srfi-1.test: alist-delete: delete keys greater than 5
PASS: srfi-1.test: alist-delete: empty
PASS: srfi-1.test: alist-delete: (y)
PASS: srfi-1.test: alist-delete: (n)
PASS: srfi-1.test: alist-delete: (y y)
PASS: srfi-1.test: alist-delete: (n y)
PASS: srfi-1.test: alist-delete: (y n)
PASS: srfi-1.test: alist-delete: (n n)
PASS: srfi-1.test: alist-delete: (y y y)
PASS: srfi-1.test: alist-delete: (n y y)
PASS: srfi-1.test: alist-delete: (y n y)
PASS: srfi-1.test: alist-delete: (n n y)
PASS: srfi-1.test: alist-delete: (y y n)
PASS: srfi-1.test: alist-delete: (n y n)
PASS: srfi-1.test: alist-delete: (y n n)
PASS: srfi-1.test: alist-delete: (n n n)
PASS: srfi-1.test: append-map: one list: ()
PASS: srfi-1.test: append-map: one list: (1)
PASS: srfi-1.test: append-map: one list: (1 2)
PASS: srfi-1.test: append-map: one list: () ()
PASS: srfi-1.test: append-map: one list: () (1)
PASS: srfi-1.test: append-map: one list: () (1 2)
PASS: srfi-1.test: append-map: one list: (1) (2)
PASS: srfi-1.test: append-map: one list: (1 2) ()
PASS: srfi-1.test: append-map: two lists: () / 9
PASS: srfi-1.test: append-map: two lists: (1) / 9
PASS: srfi-1.test: append-map: two lists: () () / 9 9
PASS: srfi-1.test: append-map: two lists: (1) (2) / 9
PASS: srfi-1.test: append-map: two lists: (1) (2) / 9 9
PASS: srfi-1.test: append-reverse: too few args (0)
PASS: srfi-1.test: append-reverse: too few args (1)
PASS: srfi-1.test: append-reverse: too many args (3)
PASS: srfi-1.test: append-reverse: (valid-append-reverse (quote ()) (quote ()) (quote ()))
PASS: srfi-1.test: append-reverse: (valid-append-reverse (quote ()) (quote (1 2 3)) (quote (1 2 3)))
PASS: srfi-1.test: append-reverse: (valid-append-reverse (quote (1)) (quote ()) (quote (1)))
PASS: srfi-1.test: append-reverse: (valid-append-reverse (quote (1)) (quote (2)) (quote (1 2)))
PASS: srfi-1.test: append-reverse: (valid-append-reverse (quote (1)) (quote (2 3)) (quote (1 2 3)))
PASS: srfi-1.test: append-reverse: (valid-append-reverse (quote (1 2)) (quote ()) (quote (2 1)))
PASS: srfi-1.test: append-reverse: (valid-append-reverse (quote (1 2)) (quote (3)) (quote (2 1 3)))
PASS: srfi-1.test: append-reverse: (valid-append-reverse (quote (1 2)) (quote (3 4)) (quote (2 1 3 4)))
PASS: srfi-1.test: append-reverse: (valid-append-reverse (quote (1 2 3)) (quote ()) (quote (3 2 1)))
PASS: srfi-1.test: append-reverse: (valid-append-reverse (quote (1 2 3)) (quote (4)) (quote (3 2 1 4)))
PASS: srfi-1.test: append-reverse: (valid-append-reverse (quote (1 2 3)) (quote (4 5)) (quote (3 2 1 4 5)))
PASS: srfi-1.test: append-reverse!: too few args (0)
PASS: srfi-1.test: append-reverse!: too few args (1)
PASS: srfi-1.test: append-reverse!: too many args (3)
PASS: srfi-1.test: append-reverse!: (equal? (quote ()) (append-reverse! (quote ()) (quote ())))
PASS: srfi-1.test: append-reverse!: (equal? (quote (1 2 3)) (append-reverse! (quote ()) (quote (1 2 3))))
PASS: srfi-1.test: append-reverse!: (equal? (quote (1)) (append-reverse! (quote (1)) (quote ())))
PASS: srfi-1.test: append-reverse!: (equal? (quote (1 2)) (append-reverse! (quote (1)) (quote (2))))
PASS: srfi-1.test: append-reverse!: (equal? (quote (1 2 3)) (append-reverse! (quote (1)) (quote (2 3))))
PASS: srfi-1.test: append-reverse!: (equal? (quote (2 1)) (append-reverse! (quote (1 2)) (quote ())))
PASS: srfi-1.test: append-reverse!: (equal? (quote (2 1 3)) (append-reverse! (quote (1 2)) (quote (3))))
PASS: srfi-1.test: append-reverse!: (equal? (quote (2 1 3 4)) (append-reverse! (quote (1 2)) (quote (3 4))))
PASS: srfi-1.test: append-reverse!: (equal? (quote (3 2 1)) (append-reverse! (quote (1 2 3)) (quote ())))
PASS: srfi-1.test: append-reverse!: (equal? (quote (3 2 1 4)) (append-reverse! (quote (1 2 3)) (quote (4))))
PASS: srfi-1.test: append-reverse!: (equal? (quote (3 2 1 4 5)) (append-reverse! (quote (1 2 3)) (quote (4 5))))
PASS: srfi-1.test: assoc: not found
PASS: srfi-1.test: assoc: found
PASS: srfi-1.test: assoc: = arg order
PASS: srfi-1.test: assoc: srfi-1 example <
PASS: srfi-1.test: break: empty
PASS: srfi-1.test: break: y
PASS: srfi-1.test: break: n
PASS: srfi-1.test: break: yy
PASS: srfi-1.test: break: ny
PASS: srfi-1.test: break: yn
PASS: srfi-1.test: break: nn
PASS: srfi-1.test: break: yyy
PASS: srfi-1.test: break: nyy
PASS: srfi-1.test: break: yny
PASS: srfi-1.test: break: nny
PASS: srfi-1.test: break: yyn
PASS: srfi-1.test: break: nyn
PASS: srfi-1.test: break: ynn
PASS: srfi-1.test: break: nnn
PASS: srfi-1.test: break!: empty
PASS: srfi-1.test: break!: y
PASS: srfi-1.test: break!: n
PASS: srfi-1.test: break!: yy
PASS: srfi-1.test: break!: ny
PASS: srfi-1.test: break!: yn
PASS: srfi-1.test: break!: nn
PASS: srfi-1.test: break!: yyy
PASS: srfi-1.test: break!: nyy
PASS: srfi-1.test: break!: yny
PASS: srfi-1.test: break!: nny
PASS: srfi-1.test: break!: yyn
PASS: srfi-1.test: break!: nyn
PASS: srfi-1.test: break!: ynn
PASS: srfi-1.test: break!: nnn
PASS: srfi-1.test: car+cdr: (1 . 2)
PASS: srfi-1.test: concatenate: too few args
PASS: srfi-1.test: concatenate: too many args
PASS: srfi-1.test: concatenate: number
PASS: srfi-1.test: concatenate: vector
PASS: srfi-1.test: concatenate: no lists
PASS: srfi-1.test: concatenate: (try (quote ((1))) (quote (1)))
PASS: srfi-1.test: concatenate: (try (quote ((1 2))) (quote (1 2)))
PASS: srfi-1.test: concatenate: (try (quote (() (1))) (quote (1)))
PASS: srfi-1.test: concatenate: (try (quote (() () (1))) (quote (1)))
PASS: srfi-1.test: concatenate: (try (quote ((1) (2))) (quote (1 2)))
PASS: srfi-1.test: concatenate: (try (quote (() (1 2))) (quote (1 2)))
PASS: srfi-1.test: concatenate: (try (quote ((1) 2)) (quote (1 . 2)))
PASS: srfi-1.test: concatenate: (try (quote ((1) (2) 3)) (quote (1 2 . 3)))
PASS: srfi-1.test: concatenate: (try (quote ((1) (2) (3 . 4))) (quote (1 2 3 . 4)))
PASS: srfi-1.test: concatenate!: too few args
PASS: srfi-1.test: concatenate!: too many args
PASS: srfi-1.test: concatenate!: number
PASS: srfi-1.test: concatenate!: vector
PASS: srfi-1.test: concatenate!: no lists
PASS: srfi-1.test: concatenate!: (try (quote ((1))) (quote (1)))
PASS: srfi-1.test: concatenate!: (try (quote ((1 2))) (quote (1 2)))
PASS: srfi-1.test: concatenate!: (try (quote (() (1))) (quote (1)))
PASS: srfi-1.test: concatenate!: (try (quote (() () (1))) (quote (1)))
PASS: srfi-1.test: concatenate!: (try (quote ((1) (2))) (quote (1 2)))
PASS: srfi-1.test: concatenate!: (try (quote (() (1 2))) (quote (1 2)))
PASS: srfi-1.test: concatenate!: (try (quote ((1) 2)) (quote (1 . 2)))
PASS: srfi-1.test: concatenate!: (try (quote ((1) (2) 3)) (quote (1 2 . 3)))
PASS: srfi-1.test: concatenate!: (try (quote ((1) (2) (3 . 4))) (quote (1 2 3 . 4)))
PASS: srfi-1.test: count: no args
PASS: srfi-1.test: count: one arg
PASS: srfi-1.test: count: one list: empty list
PASS: srfi-1.test: count: one list: pred arg count 0
PASS: srfi-1.test: count: one list: pred arg count 2
PASS: srfi-1.test: count: one list: improper 1
PASS: srfi-1.test: count: one list: improper 2
PASS: srfi-1.test: count: one list: improper 3
PASS: srfi-1.test: count: one list: (= 0 (count or1 (quote (#f))))
PASS: srfi-1.test: count: one list: (= 1 (count or1 (quote (#t))))
PASS: srfi-1.test: count: one list: (= 0 (count or1 (quote (#f #f))))
PASS: srfi-1.test: count: one list: (= 1 (count or1 (quote (#f #t))))
PASS: srfi-1.test: count: one list: (= 1 (count or1 (quote (#t #f))))
PASS: srfi-1.test: count: one list: (= 2 (count or1 (quote (#t #t))))
PASS: srfi-1.test: count: one list: (= 0 (count or1 (quote (#f #f #f))))
PASS: srfi-1.test: count: one list: (= 1 (count or1 (quote (#f #f #t))))
PASS: srfi-1.test: count: one list: (= 1 (count or1 (quote (#t #f #f))))
PASS: srfi-1.test: count: one list: (= 2 (count or1 (quote (#t #f #t))))
PASS: srfi-1.test: count: one list: (= 3 (count or1 (quote (#t #t #t))))
PASS: srfi-1.test: count: two lists: arg order
PASS: srfi-1.test: count: two lists: empty lists
PASS: srfi-1.test: count: two lists: pred arg count 0
PASS: srfi-1.test: count: two lists: pred arg count 1
PASS: srfi-1.test: count: two lists: pred arg count 3
PASS: srfi-1.test: count: two lists: improper first 1
PASS: srfi-1.test: count: two lists: improper first 2
PASS: srfi-1.test: count: two lists: improper first 3
PASS: srfi-1.test: count: two lists: improper second 1
PASS: srfi-1.test: count: two lists: improper second 2
PASS: srfi-1.test: count: two lists: improper second 3
PASS: srfi-1.test: count: two lists: (= 0 (count or2 (quote (#f)) (quote (#f))))
PASS: srfi-1.test: count: two lists: (= 1 (count or2 (quote (#t)) (quote (#f))))
PASS: srfi-1.test: count: two lists: (= 1 (count or2 (quote (#f)) (quote (#t))))
PASS: srfi-1.test: count: two lists: (= 0 (count or2 (quote (#f #f)) (quote (#f #f))))
PASS: srfi-1.test: count: two lists: (= 1 (count or2 (quote (#t #f)) (quote (#t #f))))
PASS: srfi-1.test: count: two lists: (= 2 (count or2 (quote (#t #t)) (quote (#f #f))))
PASS: srfi-1.test: count: two lists: (= 2 (count or2 (quote (#t #f)) (quote (#f #t))))
PASS: srfi-1.test: count: two lists: stop shortest: (= 2 (count or2 (quote (#t #f #t)) (quote (#f #t))))
PASS: srfi-1.test: count: two lists: stop shortest: (= 2 (count or2 (quote (#t #f #t #t)) (quote (#f #t))))
PASS: srfi-1.test: count: two lists: stop shortest: (= 2 (count or2 (quote (#t #f)) (quote (#f #t #t))))
PASS: srfi-1.test: count: two lists: stop shortest: (= 2 (count or2 (quote (#t #f)) (quote (#f #t #t #t))))
PASS: srfi-1.test: count: three lists: arg order
PASS: srfi-1.test: count: three lists: empty lists
PASS: srfi-1.test: count: three lists: pred arg count 0
PASS: srfi-1.test: count: three lists: pred arg count 2
PASS: srfi-1.test: count: three lists: pred arg count 4
PASS: srfi-1.test: count: three lists: improper first 1
PASS: srfi-1.test: count: three lists: improper first 2
PASS: srfi-1.test: count: three lists: improper first 3
PASS: srfi-1.test: count: three lists: improper second 1
PASS: srfi-1.test: count: three lists: improper second 2
PASS: srfi-1.test: count: three lists: improper second 3
PASS: srfi-1.test: count: three lists: improper third 1
PASS: srfi-1.test: count: three lists: improper third 2
PASS: srfi-1.test: count: three lists: improper third 3
PASS: srfi-1.test: count: three lists: (= 0 (count or3 (quote (#f)) (quote (#f)) (quote (#f))))
PASS: srfi-1.test: count: three lists: (= 1 (count or3 (quote (#t)) (quote (#f)) (quote (#f))))
PASS: srfi-1.test: count: three lists: (= 1 (count or3 (quote (#f)) (quote (#t)) (quote (#f))))
PASS: srfi-1.test: count: three lists: (= 1 (count or3 (quote (#f)) (quote (#f)) (quote (#t))))
PASS: srfi-1.test: count: three lists: (= 0 (count or3 (quote (#f #f)) (quote (#f #f)) (quote (#f #f))))
PASS: srfi-1.test: count: three lists: (= 1 (count or3 (quote (#t #f)) (quote (#f #f)) (quote (#f #f))))
PASS: srfi-1.test: count: three lists: (= 1 (count or3 (quote (#f #t)) (quote (#f #f)) (quote (#f #f))))
PASS: srfi-1.test: count: three lists: (= 1 (count or3 (quote (#f #f)) (quote (#t #f)) (quote (#f #f))))
PASS: srfi-1.test: count: three lists: (= 1 (count or3 (quote (#f #f)) (quote (#f #t)) (quote (#f #f))))
PASS: srfi-1.test: count: three lists: (= 1 (count or3 (quote (#f #f)) (quote (#f #f)) (quote (#t #f))))
PASS: srfi-1.test: count: three lists: (= 1 (count or3 (quote (#f #f)) (quote (#f #f)) (quote (#f #t))))
PASS: srfi-1.test: count: three lists: (= 2 (count or3 (quote (#t #t)) (quote (#f #f)) (quote (#f #f))))
PASS: srfi-1.test: count: three lists: (= 2 (count or3 (quote (#f #f)) (quote (#t #t)) (quote (#f #f))))
PASS: srfi-1.test: count: three lists: (= 2 (count or3 (quote (#f #f)) (quote (#f #f)) (quote (#t #t))))
PASS: srfi-1.test: count: three lists: (= 2 (count or3 (quote (#f #f)) (quote (#t #f)) (quote (#f #t))))
PASS: srfi-1.test: count: three lists: stop shortest: (= 0 (count or3 (quote ()) (quote (#t #t #t)) (quote (#t #t))))
PASS: srfi-1.test: count: three lists: stop shortest: (= 0 (count or3 (quote (#t #t #t)) (quote ()) (quote (#t #t))))
PASS: srfi-1.test: count: three lists: stop shortest: (= 0 (count or3 (quote (#t #t #t)) (quote (#t #t)) (quote ())))
PASS: srfi-1.test: count: three lists: stop shortest: (= 1 (count or3 (quote (#t)) (quote (#t #t #t)) (quote (#t #t))))
PASS: srfi-1.test: count: three lists: stop shortest: (= 1 (count or3 (quote (#t #t #t)) (quote (#t)) (quote (#t #t))))
PASS: srfi-1.test: count: three lists: stop shortest: (= 1 (count or3 (quote (#t #t #t)) (quote (#t #t)) (quote (#t))))
PASS: srfi-1.test: count: three lists: apply list unchanged
PASS: srfi-1.test: delete: too few args
PASS: srfi-1.test: delete: too many args
PASS: srfi-1.test: delete: empty
PASS: srfi-1.test: delete: equal?
PASS: srfi-1.test: delete: eq?
PASS: srfi-1.test: delete: called arg order
PASS: srfi-1.test: delete: (): result
PASS: srfi-1.test: delete: (): non-destructive
PASS: srfi-1.test: delete: (#f): result
PASS: srfi-1.test: delete: (#f): non-destructive
PASS: srfi-1.test: delete: (0): result
PASS: srfi-1.test: delete: (0): non-destructive
PASS: srfi-1.test: delete: (#f #f): result
PASS: srfi-1.test: delete: (#f #f): non-destructive
PASS: srfi-1.test: delete: (#f 0): result
PASS: srfi-1.test: delete: (#f 0): non-destructive
PASS: srfi-1.test: delete: (1 #f): result
PASS: srfi-1.test: delete: (1 #f): non-destructive
PASS: srfi-1.test: delete: (1 0): result
PASS: srfi-1.test: delete: (1 0): non-destructive
PASS: srfi-1.test: delete: (#f #f #f): result
PASS: srfi-1.test: delete: (#f #f #f): non-destructive
PASS: srfi-1.test: delete: (#f #f 0): result
PASS: srfi-1.test: delete: (#f #f 0): non-destructive
PASS: srfi-1.test: delete: (#f 1 #f): result
PASS: srfi-1.test: delete: (#f 1 #f): non-destructive
PASS: srfi-1.test: delete: (#f 1 0): result
PASS: srfi-1.test: delete: (#f 1 0): non-destructive
PASS: srfi-1.test: delete: (2 #f #f): result
PASS: srfi-1.test: delete: (2 #f #f): non-destructive
PASS: srfi-1.test: delete: (2 #f 0): result
PASS: srfi-1.test: delete: (2 #f 0): non-destructive
PASS: srfi-1.test: delete: (2 1 #f): result
PASS: srfi-1.test: delete: (2 1 #f): non-destructive
PASS: srfi-1.test: delete: (2 1 0): result
PASS: srfi-1.test: delete: (2 1 0): non-destructive
PASS: srfi-1.test: delete: (#f #f #f #f): result
PASS: srfi-1.test: delete: (#f #f #f #f): non-destructive
PASS: srfi-1.test: delete: (#f #f #f 0): result
PASS: srfi-1.test: delete: (#f #f #f 0): non-destructive
PASS: srfi-1.test: delete: (#f #f 1 #f): result
PASS: srfi-1.test: delete: (#f #f 1 #f): non-destructive
PASS: srfi-1.test: delete: (#f #f 1 0): result
PASS: srfi-1.test: delete: (#f #f 1 0): non-destructive
PASS: srfi-1.test: delete: (#f 2 #f #f): result
PASS: srfi-1.test: delete: (#f 2 #f #f): non-destructive
PASS: srfi-1.test: delete: (#f 2 #f 0): result
PASS: srfi-1.test: delete: (#f 2 #f 0): non-destructive
PASS: srfi-1.test: delete: (#f 2 1 #f): result
PASS: srfi-1.test: delete: (#f 2 1 #f): non-destructive
PASS: srfi-1.test: delete: (#f 2 1 0): result
PASS: srfi-1.test: delete: (#f 2 1 0): non-destructive
PASS: srfi-1.test: delete: (3 #f #f #f): result
PASS: srfi-1.test: delete: (3 #f #f #f): non-destructive
PASS: srfi-1.test: delete: (3 #f #f 0): result
PASS: srfi-1.test: delete: (3 #f #f 0): non-destructive
PASS: srfi-1.test: delete: (3 #f 1 #f): result
PASS: srfi-1.test: delete: (3 #f 1 #f): non-destructive
PASS: srfi-1.test: delete: (3 #f 1 0): result
PASS: srfi-1.test: delete: (3 #f 1 0): non-destructive
PASS: srfi-1.test: delete: (3 2 #f #f): result
PASS: srfi-1.test: delete: (3 2 #f #f): non-destructive
PASS: srfi-1.test: delete: (3 2 #f 0): result
PASS: srfi-1.test: delete: (3 2 #f 0): non-destructive
PASS: srfi-1.test: delete: (3 2 1 #f): result
PASS: srfi-1.test: delete: (3 2 1 #f): non-destructive
PASS: srfi-1.test: delete: (3 2 1 0): result
PASS: srfi-1.test: delete: (3 2 1 0): non-destructive
PASS: srfi-1.test: delete: (#f #f #f #f #f): result
PASS: srfi-1.test: delete: (#f #f #f #f #f): non-destructive
PASS: srfi-1.test: delete: (#f #f #f #f 0): result
PASS: srfi-1.test: delete: (#f #f #f #f 0): non-destructive
PASS: srfi-1.test: delete: (#f #f #f 1 #f): result
PASS: srfi-1.test: delete: (#f #f #f 1 #f): non-destructive
PASS: srfi-1.test: delete: (#f #f #f 1 0): result
PASS: srfi-1.test: delete: (#f #f #f 1 0): non-destructive
PASS: srfi-1.test: delete: (#f #f 2 #f #f): result
PASS: srfi-1.test: delete: (#f #f 2 #f #f): non-destructive
PASS: srfi-1.test: delete: (#f #f 2 #f 0): result
PASS: srfi-1.test: delete: (#f #f 2 #f 0): non-destructive
PASS: srfi-1.test: delete: (#f #f 2 1 #f): result
PASS: srfi-1.test: delete: (#f #f 2 1 #f): non-destructive
PASS: srfi-1.test: delete: (#f #f 2 1 0): result
PASS: srfi-1.test: delete: (#f #f 2 1 0): non-destructive
PASS: srfi-1.test: delete: (#f 3 #f #f #f): result
PASS: srfi-1.test: delete: (#f 3 #f #f #f): non-destructive
PASS: srfi-1.test: delete: (#f 3 #f #f 0): result
PASS: srfi-1.test: delete: (#f 3 #f #f 0): non-destructive
PASS: srfi-1.test: delete: (#f 3 #f 1 #f): result
PASS: srfi-1.test: delete: (#f 3 #f 1 #f): non-destructive
PASS: srfi-1.test: delete: (#f 3 #f 1 0): result
PASS: srfi-1.test: delete: (#f 3 #f 1 0): non-destructive
PASS: srfi-1.test: delete: (#f 3 2 #f #f): result
PASS: srfi-1.test: delete: (#f 3 2 #f #f): non-destructive
PASS: srfi-1.test: delete: (#f 3 2 #f 0): result
PASS: srfi-1.test: delete: (#f 3 2 #f 0): non-destructive
PASS: srfi-1.test: delete: (#f 3 2 1 #f): result
PASS: srfi-1.test: delete: (#f 3 2 1 #f): non-destructive
PASS: srfi-1.test: delete: (#f 3 2 1 0): result
PASS: srfi-1.test: delete: (#f 3 2 1 0): non-destructive
PASS: srfi-1.test: delete: (4 #f #f #f #f): result
PASS: srfi-1.test: delete: (4 #f #f #f #f): non-destructive
PASS: srfi-1.test: delete: (4 #f #f #f 0): result
PASS: srfi-1.test: delete: (4 #f #f #f 0): non-destructive
PASS: srfi-1.test: delete: (4 #f #f 1 #f): result
PASS: srfi-1.test: delete: (4 #f #f 1 #f): non-destructive
PASS: srfi-1.test: delete: (4 #f #f 1 0): result
PASS: srfi-1.test: delete: (4 #f #f 1 0): non-destructive
PASS: srfi-1.test: delete: (4 #f 2 #f #f): result
PASS: srfi-1.test: delete: (4 #f 2 #f #f): non-destructive
PASS: srfi-1.test: delete: (4 #f 2 #f 0): result
PASS: srfi-1.test: delete: (4 #f 2 #f 0): non-destructive
PASS: srfi-1.test: delete: (4 #f 2 1 #f): result
PASS: srfi-1.test: delete: (4 #f 2 1 #f): non-destructive
PASS: srfi-1.test: delete: (4 #f 2 1 0): result
PASS: srfi-1.test: delete: (4 #f 2 1 0): non-destructive
PASS: srfi-1.test: delete: (4 3 #f #f #f): result
PASS: srfi-1.test: delete: (4 3 #f #f #f): non-destructive
PASS: srfi-1.test: delete: (4 3 #f #f 0): result
PASS: srfi-1.test: delete: (4 3 #f #f 0): non-destructive
PASS: srfi-1.test: delete: (4 3 #f 1 #f): result
PASS: srfi-1.test: delete: (4 3 #f 1 #f): non-destructive
PASS: srfi-1.test: delete: (4 3 #f 1 0): result
PASS: srfi-1.test: delete: (4 3 #f 1 0): non-destructive
PASS: srfi-1.test: delete: (4 3 2 #f #f): result
PASS: srfi-1.test: delete: (4 3 2 #f #f): non-destructive
PASS: srfi-1.test: delete: (4 3 2 #f 0): result
PASS: srfi-1.test: delete: (4 3 2 #f 0): non-destructive
PASS: srfi-1.test: delete: (4 3 2 1 #f): result
PASS: srfi-1.test: delete: (4 3 2 1 #f): non-destructive
PASS: srfi-1.test: delete: (4 3 2 1 0): result
PASS: srfi-1.test: delete: (4 3 2 1 0): non-destructive
PASS: srfi-1.test: delete!: too few args
PASS: srfi-1.test: delete!: too many args
PASS: srfi-1.test: delete!: empty
PASS: srfi-1.test: delete!: equal?
PASS: srfi-1.test: delete!: eq?
PASS: srfi-1.test: delete!: called arg order
PASS: srfi-1.test: delete!: ()
PASS: srfi-1.test: delete!: (#f)
PASS: srfi-1.test: delete!: (0)
PASS: srfi-1.test: delete!: (#f #f)
PASS: srfi-1.test: delete!: (#f 0)
PASS: srfi-1.test: delete!: (1)
PASS: srfi-1.test: delete!: (1 0)
PASS: srfi-1.test: delete!: (#f #f #f)
PASS: srfi-1.test: delete!: (#f #f 0)
PASS: srfi-1.test: delete!: (#f 1)
PASS: srfi-1.test: delete!: (#f 1 0)
PASS: srfi-1.test: delete!: (2)
PASS: srfi-1.test: delete!: (2 0)
PASS: srfi-1.test: delete!: (2 1)
PASS: srfi-1.test: delete!: (2 1 0)
PASS: srfi-1.test: delete!: (#f #f #f #f)
PASS: srfi-1.test: delete!: (#f #f #f 0)
PASS: srfi-1.test: delete!: (#f #f 1)
PASS: srfi-1.test: delete!: (#f #f 1 0)
PASS: srfi-1.test: delete!: (#f 2)
PASS: srfi-1.test: delete!: (#f 2 0)
PASS: srfi-1.test: delete!: (#f 2 1)
PASS: srfi-1.test: delete!: (#f 2 1 0)
PASS: srfi-1.test: delete!: (3)
PASS: srfi-1.test: delete!: (3 0)
PASS: srfi-1.test: delete!: (3 1)
PASS: srfi-1.test: delete!: (3 1 0)
PASS: srfi-1.test: delete!: (3 2)
PASS: srfi-1.test: delete!: (3 2 0)
PASS: srfi-1.test: delete!: (3 2 1)
PASS: srfi-1.test: delete!: (3 2 1 0)
PASS: srfi-1.test: delete!: (#f #f #f #f #f)
PASS: srfi-1.test: delete!: (#f #f #f #f 0)
PASS: srfi-1.test: delete!: (#f #f #f 1)
PASS: srfi-1.test: delete!: (#f #f #f 1 0)
PASS: srfi-1.test: delete!: (#f #f 2)
PASS: srfi-1.test: delete!: (#f #f 2 0)
PASS: srfi-1.test: delete!: (#f #f 2 1)
PASS: srfi-1.test: delete!: (#f #f 2 1 0)
PASS: srfi-1.test: delete!: (#f 3)
PASS: srfi-1.test: delete!: (#f 3 0)
PASS: srfi-1.test: delete!: (#f 3 1)
PASS: srfi-1.test: delete!: (#f 3 1 0)
PASS: srfi-1.test: delete!: (#f 3 2)
PASS: srfi-1.test: delete!: (#f 3 2 0)
PASS: srfi-1.test: delete!: (#f 3 2 1)
PASS: srfi-1.test: delete!: (#f 3 2 1 0)
PASS: srfi-1.test: delete!: (4)
PASS: srfi-1.test: delete!: (4 0)
PASS: srfi-1.test: delete!: (4 1)
PASS: srfi-1.test: delete!: (4 1 0)
PASS: srfi-1.test: delete!: (4 2)
PASS: srfi-1.test: delete!: (4 2 0)
PASS: srfi-1.test: delete!: (4 2 1)
PASS: srfi-1.test: delete!: (4 2 1 0)
PASS: srfi-1.test: delete!: (4 3)
PASS: srfi-1.test: delete!: (4 3 0)
PASS: srfi-1.test: delete!: (4 3 1)
PASS: srfi-1.test: delete!: (4 3 1 0)
PASS: srfi-1.test: delete!: (4 3 2)
PASS: srfi-1.test: delete!: (4 3 2 0)
PASS: srfi-1.test: delete!: (4 3 2 1)
PASS: srfi-1.test: delete!: (4 3 2 1 0)
PASS: srfi-1.test: delete-duplicates: too few args
PASS: srfi-1.test: delete-duplicates: too many args
PASS: srfi-1.test: delete-duplicates: empty
PASS: srfi-1.test: delete-duplicates: equal? (the default)
PASS: srfi-1.test: delete-duplicates: eq?
PASS: srfi-1.test: delete-duplicates: called arg order
PASS: srfi-1.test: delete-duplicates: (0): result
PASS: srfi-1.test: delete-duplicates: (0): non-destructive
PASS: srfi-1.test: delete-duplicates: (0 0): result
PASS: srfi-1.test: delete-duplicates: (0 0): non-destructive
PASS: srfi-1.test: delete-duplicates: (0 1): result
PASS: srfi-1.test: delete-duplicates: (0 1): non-destructive
PASS: srfi-1.test: delete-duplicates: (1 0): result
PASS: srfi-1.test: delete-duplicates: (1 0): non-destructive
PASS: srfi-1.test: delete-duplicates: (1 1): result
PASS: srfi-1.test: delete-duplicates: (1 1): non-destructive
PASS: srfi-1.test: delete-duplicates: (0 0 0): result
PASS: srfi-1.test: delete-duplicates: (0 0 0): non-destructive
PASS: srfi-1.test: delete-duplicates: (0 0 1): result
PASS: srfi-1.test: delete-duplicates: (0 0 1): non-destructive
PASS: srfi-1.test: delete-duplicates: (0 0 2): result
PASS: srfi-1.test: delete-duplicates: (0 0 2): non-destructive
PASS: srfi-1.test: delete-duplicates: (0 1 0): result
PASS: srfi-1.test: delete-duplicates: (0 1 0): non-destructive
PASS: srfi-1.test: delete-duplicates: (0 1 1): result
PASS: srfi-1.test: delete-duplicates: (0 1 1): non-destructive
PASS: srfi-1.test: delete-duplicates: (0 1 2): result
PASS: srfi-1.test: delete-duplicates: (0 1 2): non-destructive
PASS: srfi-1.test: delete-duplicates: (0 2 0): result
PASS: srfi-1.test: delete-duplicates: (0 2 0): non-destructive
PASS: srfi-1.test: delete-duplicates: (0 2 1): result
PASS: srfi-1.test: delete-duplicates: (0 2 1): non-destructive
PASS: srfi-1.test: delete-duplicates: (0 2 2): result
PASS: srfi-1.test: delete-duplicates: (0 2 2): non-destructive
PASS: srfi-1.test: delete-duplicates: (1 0 0): result
PASS: srfi-1.test: delete-duplicates: (1 0 0): non-destructive
PASS: srfi-1.test: delete-duplicates: (1 0 1): result
PASS: srfi-1.test: delete-duplicates: (1 0 1): non-destructive
PASS: srfi-1.test: delete-duplicates: (1 0 2): result
PASS: srfi-1.test: delete-duplicates: (1 0 2): non-destructive
PASS: srfi-1.test: delete-duplicates: (1 1 0): result
PASS: srfi-1.test: delete-duplicates: (1 1 0): non-destructive
PASS: srfi-1.test: delete-duplicates: (1 1 1): result
PASS: srfi-1.test: delete-duplicates: (1 1 1): non-destructive
PASS: srfi-1.test: delete-duplicates: (1 1 2): result
PASS: srfi-1.test: delete-duplicates: (1 1 2): non-destructive
PASS: srfi-1.test: delete-duplicates: (1 2 0): result
PASS: srfi-1.test: delete-duplicates: (1 2 0): non-destructive
PASS: srfi-1.test: delete-duplicates: (1 2 1): result
PASS: srfi-1.test: delete-duplicates: (1 2 1): non-destructive
PASS: srfi-1.test: delete-duplicates: (1 2 2): result
PASS: srfi-1.test: delete-duplicates: (1 2 2): non-destructive
PASS: srfi-1.test: delete-duplicates: (2 0 0): result
PASS: srfi-1.test: delete-duplicates: (2 0 0): non-destructive
PASS: srfi-1.test: delete-duplicates: (2 0 1): result
PASS: srfi-1.test: delete-duplicates: (2 0 1): non-destructive
PASS: srfi-1.test: delete-duplicates: (2 0 2): result
PASS: srfi-1.test: delete-duplicates: (2 0 2): non-destructive
PASS: srfi-1.test: delete-duplicates: (2 1 0): result
PASS: srfi-1.test: delete-duplicates: (2 1 0): non-destructive
PASS: srfi-1.test: delete-duplicates: (2 1 1): result
PASS: srfi-1.test: delete-duplicates: (2 1 1): non-destructive
PASS: srfi-1.test: delete-duplicates: (2 1 2): result
PASS: srfi-1.test: delete-duplicates: (2 1 2): non-destructive
PASS: srfi-1.test: delete-duplicates: (2 2 0): result
PASS: srfi-1.test: delete-duplicates: (2 2 0): non-destructive
PASS: srfi-1.test: delete-duplicates: (2 2 1): result
PASS: srfi-1.test: delete-duplicates: (2 2 1): non-destructive
PASS: srfi-1.test: delete-duplicates: (2 2 2): result
PASS: srfi-1.test: delete-duplicates: (2 2 2): non-destructive
PASS: srfi-1.test: delete-duplicates: (0 0 0 0): result
PASS: srfi-1.test: delete-duplicates: (0 0 0 0): non-destructive
PASS: srfi-1.test: delete-duplicates: (0 0 0 1): result
PASS: srfi-1.test: delete-duplicates: (0 0 0 1): non-destructive
PASS: srfi-1.test: delete-duplicates: (0 0 0 2): result
PASS: srfi-1.test: delete-duplicates: (0 0 0 2): non-destructive
PASS: srfi-1.test: delete-duplicates: (0 0 0 3): result
PASS: srfi-1.test: delete-duplicates: (0 0 0 3): non-destructive
PASS: srfi-1.test: delete-duplicates: (0 0 1 0): result
PASS: srfi-1.test: delete-duplicates: (0 0 1 0): non-destructive
PASS: srfi-1.test: delete-duplicates: (0 0 1 1): result
PASS: srfi-1.test: delete-duplicates: (0 0 1 1): non-destructive
PASS: srfi-1.test: delete-duplicates: (0 0 1 2): result
PASS: srfi-1.test: delete-duplicates: (0 0 1 2): non-destructive
PASS: srfi-1.test: delete-duplicates: (0 0 1 3): result
PASS: srfi-1.test: delete-duplicates: (0 0 1 3): non-destructive
PASS: srfi-1.test: delete-duplicates: (0 0 2 0): result
PASS: srfi-1.test: delete-duplicates: (0 0 2 0): non-destructive
PASS: srfi-1.test: delete-duplicates: (0 0 2 1): result
PASS: srfi-1.test: delete-duplicates: (0 0 2 1): non-destructive
PASS: srfi-1.test: delete-duplicates: (0 0 2 2): result
PASS: srfi-1.test: delete-duplicates: (0 0 2 2): non-destructive
PASS: srfi-1.test: delete-duplicates: (0 0 2 3): result
PASS: srfi-1.test: delete-duplicates: (0 0 2 3): non-destructive
PASS: srfi-1.test: delete-duplicates: (0 0 3 0): result
PASS: srfi-1.test: delete-duplicates: (0 0 3 0): non-destructive
PASS: srfi-1.test: delete-duplicates: (0 0 3 1): result
PASS: srfi-1.test: delete-duplicates: (0 0 3 1): non-destructive
PASS: srfi-1.test: delete-duplicates: (0 0 3 2): result
PASS: srfi-1.test: delete-duplicates: (0 0 3 2): non-destructive
PASS: srfi-1.test: delete-duplicates: (0 0 3 3): result
PASS: srfi-1.test: delete-duplicates: (0 0 3 3): non-destructive
PASS: srfi-1.test: delete-duplicates: (0 1 0 0): result
PASS: srfi-1.test: delete-duplicates: (0 1 0 0): non-destructive
PASS: srfi-1.test: delete-duplicates: (0 1 0 1): result
PASS: srfi-1.test: delete-duplicates: (0 1 0 1): non-destructive
PASS: srfi-1.test: delete-duplicates: (0 1 0 2): result
PASS: srfi-1.test: delete-duplicates: (0 1 0 2): non-destructive
PASS: srfi-1.test: delete-duplicates: (0 1 0 3): result
PASS: srfi-1.test: delete-duplicates: (0 1 0 3): non-destructive
PASS: srfi-1.test: delete-duplicates: (0 1 1 0): result
PASS: srfi-1.test: delete-duplicates: (0 1 1 0): non-destructive
PASS: srfi-1.test: delete-duplicates: (0 1 1 1): result
PASS: srfi-1.test: delete-duplicates: (0 1 1 1): non-destructive
PASS: srfi-1.test: delete-duplicates: (0 1 1 2): result
PASS: srfi-1.test: delete-duplicates: (0 1 1 2): non-destructive
PASS: srfi-1.test: delete-duplicates: (0 1 1 3): result
PASS: srfi-1.test: delete-duplicates: (0 1 1 3): non-destructive
PASS: srfi-1.test: delete-duplicates: (0 1 2 0): result
PASS: srfi-1.test: delete-duplicates: (0 1 2 0): non-destructive
PASS: srfi-1.test: delete-duplicates: (0 1 2 1): result
PASS: srfi-1.test: delete-duplicates: (0 1 2 1): non-destructive
PASS: srfi-1.test: delete-duplicates: (0 1 2 2): result
PASS: srfi-1.test: delete-duplicates: (0 1 2 2): non-destructive
PASS: srfi-1.test: delete-duplicates: (0 1 2 3): result
PASS: srfi-1.test: delete-duplicates: (0 1 2 3): non-destructive
PASS: srfi-1.test: delete-duplicates: (0 1 3 0): result
PASS: srfi-1.test: delete-duplicates: (0 1 3 0): non-destructive
PASS: srfi-1.test: delete-duplicates: (0 1 3 1): result
PASS: srfi-1.test: delete-duplicates: (0 1 3 1): non-destructive
PASS: srfi-1.test: delete-duplicates: (0 1 3 2): result
PASS: srfi-1.test: delete-duplicates: (0 1 3 2): non-destructive
PASS: srfi-1.test: delete-duplicates: (0 1 3 3): result
PASS: srfi-1.test: delete-duplicates: (0 1 3 3): non-destructive
PASS: srfi-1.test: delete-duplicates: (0 2 0 0): result
PASS: srfi-1.test: delete-duplicates: (0 2 0 0): non-destructive
PASS: srfi-1.test: delete-duplicates: (0 2 0 1): result
PASS: srfi-1.test: delete-duplicates: (0 2 0 1): non-destructive
PASS: srfi-1.test: delete-duplicates: (0 2 0 2): result
PASS: srfi-1.test: delete-duplicates: (0 2 0 2): non-destructive
PASS: srfi-1.test: delete-duplicates: (0 2 0 3): result
PASS: srfi-1.test: delete-duplicates: (0 2 0 3): non-destructive
PASS: srfi-1.test: delete-duplicates: (0 2 1 0): result
PASS: srfi-1.test: delete-duplicates: (0 2 1 0): non-destructive
PASS: srfi-1.test: delete-duplicates: (0 2 1 1): result
PASS: srfi-1.test: delete-duplicates: (0 2 1 1): non-destructive
PASS: srfi-1.test: delete-duplicates: (0 2 1 2): result
PASS: srfi-1.test: delete-duplicates: (0 2 1 2): non-destructive
PASS: srfi-1.test: delete-duplicates: (0 2 1 3): result
PASS: srfi-1.test: delete-duplicates: (0 2 1 3): non-destructive
PASS: srfi-1.test: delete-duplicates: (0 2 2 0): result
PASS: srfi-1.test: delete-duplicates: (0 2 2 0): non-destructive
PASS: srfi-1.test: delete-duplicates: (0 2 2 1): result
PASS: srfi-1.test: delete-duplicates: (0 2 2 1): non-destructive
PASS: srfi-1.test: delete-duplicates: (0 2 2 2): result
PASS: srfi-1.test: delete-duplicates: (0 2 2 2): non-destructive
PASS: srfi-1.test: delete-duplicates: (0 2 2 3): result
PASS: srfi-1.test: delete-duplicates: (0 2 2 3): non-destructive
PASS: srfi-1.test: delete-duplicates: (0 2 3 0): result
PASS: srfi-1.test: delete-duplicates: (0 2 3 0): non-destructive
PASS: srfi-1.test: delete-duplicates: (0 2 3 1): result
PASS: srfi-1.test: delete-duplicates: (0 2 3 1): non-destructive
PASS: srfi-1.test: delete-duplicates: (0 2 3 2): result
PASS: srfi-1.test: delete-duplicates: (0 2 3 2): non-destructive
PASS: srfi-1.test: delete-duplicates: (0 2 3 3): result
PASS: srfi-1.test: delete-duplicates: (0 2 3 3): non-destructive
PASS: srfi-1.test: delete-duplicates: (0 3 0 0): result
PASS: srfi-1.test: delete-duplicates: (0 3 0 0): non-destructive
PASS: srfi-1.test: delete-duplicates: (0 3 0 1): result
PASS: srfi-1.test: delete-duplicates: (0 3 0 1): non-destructive
PASS: srfi-1.test: delete-duplicates: (0 3 0 2): result
PASS: srfi-1.test: delete-duplicates: (0 3 0 2): non-destructive
PASS: srfi-1.test: delete-duplicates: (0 3 0 3): result
PASS: srfi-1.test: delete-duplicates: (0 3 0 3): non-destructive
PASS: srfi-1.test: delete-duplicates: (0 3 1 0): result
PASS: srfi-1.test: delete-duplicates: (0 3 1 0): non-destructive
PASS: srfi-1.test: delete-duplicates: (0 3 1 1): result
PASS: srfi-1.test: delete-duplicates: (0 3 1 1): non-destructive
PASS: srfi-1.test: delete-duplicates: (0 3 1 2): result
PASS: srfi-1.test: delete-duplicates: (0 3 1 2): non-destructive
PASS: srfi-1.test: delete-duplicates: (0 3 1 3): result
PASS: srfi-1.test: delete-duplicates: (0 3 1 3): non-destructive
PASS: srfi-1.test: delete-duplicates: (0 3 2 0): result
PASS: srfi-1.test: delete-duplicates: (0 3 2 0): non-destructive
PASS: srfi-1.test: delete-duplicates: (0 3 2 1): result
PASS: srfi-1.test: delete-duplicates: (0 3 2 1): non-destructive
PASS: srfi-1.test: delete-duplicates: (0 3 2 2): result
PASS: srfi-1.test: delete-duplicates: (0 3 2 2): non-destructive
PASS: srfi-1.test: delete-duplicates: (0 3 2 3): result
PASS: srfi-1.test: delete-duplicates: (0 3 2 3): non-destructive
PASS: srfi-1.test: delete-duplicates: (0 3 3 0): result
PASS: srfi-1.test: delete-duplicates: (0 3 3 0): non-destructive
PASS: srfi-1.test: delete-duplicates: (0 3 3 1): result
PASS: srfi-1.test: delete-duplicates: (0 3 3 1): non-destructive
PASS: srfi-1.test: delete-duplicates: (0 3 3 2): result
PASS: srfi-1.test: delete-duplicates: (0 3 3 2): non-destructive
PASS: srfi-1.test: delete-duplicates: (0 3 3 3): result
PASS: srfi-1.test: delete-duplicates: (0 3 3 3): non-destructive
PASS: srfi-1.test: delete-duplicates: (1 0 0 0): result
PASS: srfi-1.test: delete-duplicates: (1 0 0 0): non-destructive
PASS: srfi-1.test: delete-duplicates: (1 0 0 1): result
PASS: srfi-1.test: delete-duplicates: (1 0 0 1): non-destructive
PASS: srfi-1.test: delete-duplicates: (1 0 0 2): result
PASS: srfi-1.test: delete-duplicates: (1 0 0 2): non-destructive
PASS: srfi-1.test: delete-duplicates: (1 0 0 3): result
PASS: srfi-1.test: delete-duplicates: (1 0 0 3): non-destructive
PASS: srfi-1.test: delete-duplicates: (1 0 1 0): result
PASS: srfi-1.test: delete-duplicates: (1 0 1 0): non-destructive
PASS: srfi-1.test: delete-duplicates: (1 0 1 1): result
PASS: srfi-1.test: delete-duplicates: (1 0 1 1): non-destructive
PASS: srfi-1.test: delete-duplicates: (1 0 1 2): result
PASS: srfi-1.test: delete-duplicates: (1 0 1 2): non-destructive
PASS: srfi-1.test: delete-duplicates: (1 0 1 3): result
PASS: srfi-1.test: delete-duplicates: (1 0 1 3): non-destructive
PASS: srfi-1.test: delete-duplicates: (1 0 2 0): result
PASS: srfi-1.test: delete-duplicates: (1 0 2 0): non-destructive
PASS: srfi-1.test: delete-duplicates: (1 0 2 1): result
PASS: srfi-1.test: delete-duplicates: (1 0 2 1): non-destructive
PASS: srfi-1.test: delete-duplicates: (1 0 2 2): result
PASS: srfi-1.test: delete-duplicates: (1 0 2 2): non-destructive
PASS: srfi-1.test: delete-duplicates: (1 0 2 3): result
PASS: srfi-1.test: delete-duplicates: (1 0 2 3): non-destructive
PASS: srfi-1.test: delete-duplicates: (1 0 3 0): result
PASS: srfi-1.test: delete-duplicates: (1 0 3 0): non-destructive
PASS: srfi-1.test: delete-duplicates: (1 0 3 1): result
PASS: srfi-1.test: delete-duplicates: (1 0 3 1): non-destructive
PASS: srfi-1.test: delete-duplicates: (1 0 3 2): result
PASS: srfi-1.test: delete-duplicates: (1 0 3 2): non-destructive
PASS: srfi-1.test: delete-duplicates: (1 0 3 3): result
PASS: srfi-1.test: delete-duplicates: (1 0 3 3): non-destructive
PASS: srfi-1.test: delete-duplicates: (1 1 0 0): result
PASS: srfi-1.test: delete-duplicates: (1 1 0 0): non-destructive
PASS: srfi-1.test: delete-duplicates: (1 1 0 1): result
PASS: srfi-1.test: delete-duplicates: (1 1 0 1): non-destructive
PASS: srfi-1.test: delete-duplicates: (1 1 0 2): result
PASS: srfi-1.test: delete-duplicates: (1 1 0 2): non-destructive
PASS: srfi-1.test: delete-duplicates: (1 1 0 3): result
PASS: srfi-1.test: delete-duplicates: (1 1 0 3): non-destructive
PASS: srfi-1.test: delete-duplicates: (1 1 1 0): result
PASS: srfi-1.test: delete-duplicates: (1 1 1 0): non-destructive
PASS: srfi-1.test: delete-duplicates: (1 1 1 1): result
PASS: srfi-1.test: delete-duplicates: (1 1 1 1): non-destructive
PASS: srfi-1.test: delete-duplicates: (1 1 1 2): result
PASS: srfi-1.test: delete-duplicates: (1 1 1 2): non-destructive
PASS: srfi-1.test: delete-duplicates: (1 1 1 3): result
PASS: srfi-1.test: delete-duplicates: (1 1 1 3): non-destructive
PASS: srfi-1.test: delete-duplicates: (1 1 2 0): result
PASS: srfi-1.test: delete-duplicates: (1 1 2 0): non-destructive
PASS: srfi-1.test: delete-duplicates: (1 1 2 1): result
PASS: srfi-1.test: delete-duplicates: (1 1 2 1): non-destructive
PASS: srfi-1.test: delete-duplicates: (1 1 2 2): result
PASS: srfi-1.test: delete-duplicates: (1 1 2 2): non-destructive
PASS: srfi-1.test: delete-duplicates: (1 1 2 3): result
PASS: srfi-1.test: delete-duplicates: (1 1 2 3): non-destructive
PASS: srfi-1.test: delete-duplicates: (1 1 3 0): result
PASS: srfi-1.test: delete-duplicates: (1 1 3 0): non-destructive
PASS: srfi-1.test: delete-duplicates: (1 1 3 1): result
PASS: srfi-1.test: delete-duplicates: (1 1 3 1): non-destructive
PASS: srfi-1.test: delete-duplicates: (1 1 3 2): result
PASS: srfi-1.test: delete-duplicates: (1 1 3 2): non-destructive
PASS: srfi-1.test: delete-duplicates: (1 1 3 3): result
PASS: srfi-1.test: delete-duplicates: (1 1 3 3): non-destructive
PASS: srfi-1.test: delete-duplicates: (1 2 0 0): result
PASS: srfi-1.test: delete-duplicates: (1 2 0 0): non-destructive
PASS: srfi-1.test: delete-duplicates: (1 2 0 1): result
PASS: srfi-1.test: delete-duplicates: (1 2 0 1): non-destructive
PASS: srfi-1.test: delete-duplicates: (1 2 0 2): result
PASS: srfi-1.test: delete-duplicates: (1 2 0 2): non-destructive
PASS: srfi-1.test: delete-duplicates: (1 2 0 3): result
PASS: srfi-1.test: delete-duplicates: (1 2 0 3): non-destructive
PASS: srfi-1.test: delete-duplicates: (1 2 1 0): result
PASS: srfi-1.test: delete-duplicates: (1 2 1 0): non-destructive
PASS: srfi-1.test: delete-duplicates: (1 2 1 1): result
PASS: srfi-1.test: delete-duplicates: (1 2 1 1): non-destructive
PASS: srfi-1.test: delete-duplicates: (1 2 1 2): result
PASS: srfi-1.test: delete-duplicates: (1 2 1 2): non-destructive
PASS: srfi-1.test: delete-duplicates: (1 2 1 3): result
PASS: srfi-1.test: delete-duplicates: (1 2 1 3): non-destructive
PASS: srfi-1.test: delete-duplicates: (1 2 2 0): result
PASS: srfi-1.test: delete-duplicates: (1 2 2 0): non-destructive
PASS: srfi-1.test: delete-duplicates: (1 2 2 1): result
PASS: srfi-1.test: delete-duplicates: (1 2 2 1): non-destructive
PASS: srfi-1.test: delete-duplicates: (1 2 2 2): result
PASS: srfi-1.test: delete-duplicates: (1 2 2 2): non-destructive
PASS: srfi-1.test: delete-duplicates: (1 2 2 3): result
PASS: srfi-1.test: delete-duplicates: (1 2 2 3): non-destructive
PASS: srfi-1.test: delete-duplicates: (1 2 3 0): result
PASS: srfi-1.test: delete-duplicates: (1 2 3 0): non-destructive
PASS: srfi-1.test: delete-duplicates: (1 2 3 1): result
PASS: srfi-1.test: delete-duplicates: (1 2 3 1): non-destructive
PASS: srfi-1.test: delete-duplicates: (1 2 3 2): result
PASS: srfi-1.test: delete-duplicates: (1 2 3 2): non-destructive
PASS: srfi-1.test: delete-duplicates: (1 2 3 3): result
PASS: srfi-1.test: delete-duplicates: (1 2 3 3): non-destructive
PASS: srfi-1.test: delete-duplicates: (1 3 0 0): result
PASS: srfi-1.test: delete-duplicates: (1 3 0 0): non-destructive
PASS: srfi-1.test: delete-duplicates: (1 3 0 1): result
PASS: srfi-1.test: delete-duplicates: (1 3 0 1): non-destructive
PASS: srfi-1.test: delete-duplicates: (1 3 0 2): result
PASS: srfi-1.test: delete-duplicates: (1 3 0 2): non-destructive
PASS: srfi-1.test: delete-duplicates: (1 3 0 3): result
PASS: srfi-1.test: delete-duplicates: (1 3 0 3): non-destructive
PASS: srfi-1.test: delete-duplicates: (1 3 1 0): result
PASS: srfi-1.test: delete-duplicates: (1 3 1 0): non-destructive
PASS: srfi-1.test: delete-duplicates: (1 3 1 1): result
PASS: srfi-1.test: delete-duplicates: (1 3 1 1): non-destructive
PASS: srfi-1.test: delete-duplicates: (1 3 1 2): result
PASS: srfi-1.test: delete-duplicates: (1 3 1 2): non-destructive
PASS: srfi-1.test: delete-duplicates: (1 3 1 3): result
PASS: srfi-1.test: delete-duplicates: (1 3 1 3): non-destructive
PASS: srfi-1.test: delete-duplicates: (1 3 2 0): result
PASS: srfi-1.test: delete-duplicates: (1 3 2 0): non-destructive
PASS: srfi-1.test: delete-duplicates: (1 3 2 1): result
PASS: srfi-1.test: delete-duplicates: (1 3 2 1): non-destructive
PASS: srfi-1.test: delete-duplicates: (1 3 2 2): result
PASS: srfi-1.test: delete-duplicates: (1 3 2 2): non-destructive
PASS: srfi-1.test: delete-duplicates: (1 3 2 3): result
PASS: srfi-1.test: delete-duplicates: (1 3 2 3): non-destructive
PASS: srfi-1.test: delete-duplicates: (1 3 3 0): result
PASS: srfi-1.test: delete-duplicates: (1 3 3 0): non-destructive
PASS: srfi-1.test: delete-duplicates: (1 3 3 1): result
PASS: srfi-1.test: delete-duplicates: (1 3 3 1): non-destructive
PASS: srfi-1.test: delete-duplicates: (1 3 3 2): result
PASS: srfi-1.test: delete-duplicates: (1 3 3 2): non-destructive
PASS: srfi-1.test: delete-duplicates: (1 3 3 3): result
PASS: srfi-1.test: delete-duplicates: (1 3 3 3): non-destructive
PASS: srfi-1.test: delete-duplicates: (2 0 0 0): result
PASS: srfi-1.test: delete-duplicates: (2 0 0 0): non-destructive
PASS: srfi-1.test: delete-duplicates: (2 0 0 1): result
PASS: srfi-1.test: delete-duplicates: (2 0 0 1): non-destructive
PASS: srfi-1.test: delete-duplicates: (2 0 0 2): result
PASS: srfi-1.test: delete-duplicates: (2 0 0 2): non-destructive
PASS: srfi-1.test: delete-duplicates: (2 0 0 3): result
PASS: srfi-1.test: delete-duplicates: (2 0 0 3): non-destructive
PASS: srfi-1.test: delete-duplicates: (2 0 1 0): result
PASS: srfi-1.test: delete-duplicates: (2 0 1 0): non-destructive
PASS: srfi-1.test: delete-duplicates: (2 0 1 1): result
PASS: srfi-1.test: delete-duplicates: (2 0 1 1): non-destructive
PASS: srfi-1.test: delete-duplicates: (2 0 1 2): result
PASS: srfi-1.test: delete-duplicates: (2 0 1 2): non-destructive
PASS: srfi-1.test: delete-duplicates: (2 0 1 3): result
PASS: srfi-1.test: delete-duplicates: (2 0 1 3): non-destructive
PASS: srfi-1.test: delete-duplicates: (2 0 2 0): result
PASS: srfi-1.test: delete-duplicates: (2 0 2 0): non-destructive
PASS: srfi-1.test: delete-duplicates: (2 0 2 1): result
PASS: srfi-1.test: delete-duplicates: (2 0 2 1): non-destructive
PASS: srfi-1.test: delete-duplicates: (2 0 2 2): result
PASS: srfi-1.test: delete-duplicates: (2 0 2 2): non-destructive
PASS: srfi-1.test: delete-duplicates: (2 0 2 3): result
PASS: srfi-1.test: delete-duplicates: (2 0 2 3): non-destructive
PASS: srfi-1.test: delete-duplicates: (2 0 3 0): result
PASS: srfi-1.test: delete-duplicates: (2 0 3 0): non-destructive
PASS: srfi-1.test: delete-duplicates: (2 0 3 1): result
PASS: srfi-1.test: delete-duplicates: (2 0 3 1): non-destructive
PASS: srfi-1.test: delete-duplicates: (2 0 3 2): result
PASS: srfi-1.test: delete-duplicates: (2 0 3 2): non-destructive
PASS: srfi-1.test: delete-duplicates: (2 0 3 3): result
PASS: srfi-1.test: delete-duplicates: (2 0 3 3): non-destructive
PASS: srfi-1.test: delete-duplicates: (2 1 0 0): result
PASS: srfi-1.test: delete-duplicates: (2 1 0 0): non-destructive
PASS: srfi-1.test: delete-duplicates: (2 1 0 1): result
PASS: srfi-1.test: delete-duplicates: (2 1 0 1): non-destructive
PASS: srfi-1.test: delete-duplicates: (2 1 0 2): result
PASS: srfi-1.test: delete-duplicates: (2 1 0 2): non-destructive
PASS: srfi-1.test: delete-duplicates: (2 1 0 3): result
PASS: srfi-1.test: delete-duplicates: (2 1 0 3): non-destructive
PASS: srfi-1.test: delete-duplicates: (2 1 1 0): result
PASS: srfi-1.test: delete-duplicates: (2 1 1 0): non-destructive
PASS: srfi-1.test: delete-duplicates: (2 1 1 1): result
PASS: srfi-1.test: delete-duplicates: (2 1 1 1): non-destructive
PASS: srfi-1.test: delete-duplicates: (2 1 1 2): result
PASS: srfi-1.test: delete-duplicates: (2 1 1 2): non-destructive
PASS: srfi-1.test: delete-duplicates: (2 1 1 3): result
PASS: srfi-1.test: delete-duplicates: (2 1 1 3): non-destructive
PASS: srfi-1.test: delete-duplicates: (2 1 2 0): result
PASS: srfi-1.test: delete-duplicates: (2 1 2 0): non-destructive
PASS: srfi-1.test: delete-duplicates: (2 1 2 1): result
PASS: srfi-1.test: delete-duplicates: (2 1 2 1): non-destructive
PASS: srfi-1.test: delete-duplicates: (2 1 2 2): result
PASS: srfi-1.test: delete-duplicates: (2 1 2 2): non-destructive
PASS: srfi-1.test: delete-duplicates: (2 1 2 3): result
PASS: srfi-1.test: delete-duplicates: (2 1 2 3): non-destructive
PASS: srfi-1.test: delete-duplicates: (2 1 3 0): result
PASS: srfi-1.test: delete-duplicates: (2 1 3 0): non-destructive
PASS: srfi-1.test: delete-duplicates: (2 1 3 1): result
PASS: srfi-1.test: delete-duplicates: (2 1 3 1): non-destructive
PASS: srfi-1.test: delete-duplicates: (2 1 3 2): result
PASS: srfi-1.test: delete-duplicates: (2 1 3 2): non-destructive
PASS: srfi-1.test: delete-duplicates: (2 1 3 3): result
PASS: srfi-1.test: delete-duplicates: (2 1 3 3): non-destructive
PASS: srfi-1.test: delete-duplicates: (2 2 0 0): result
PASS: srfi-1.test: delete-duplicates: (2 2 0 0): non-destructive
PASS: srfi-1.test: delete-duplicates: (2 2 0 1): result
PASS: srfi-1.test: delete-duplicates: (2 2 0 1): non-destructive
PASS: srfi-1.test: delete-duplicates: (2 2 0 2): result
PASS: srfi-1.test: delete-duplicates: (2 2 0 2): non-destructive
PASS: srfi-1.test: delete-duplicates: (2 2 0 3): result
PASS: srfi-1.test: delete-duplicates: (2 2 0 3): non-destructive
PASS: srfi-1.test: delete-duplicates: (2 2 1 0): result
PASS: srfi-1.test: delete-duplicates: (2 2 1 0): non-destructive
PASS: srfi-1.test: delete-duplicates: (2 2 1 1): result
PASS: srfi-1.test: delete-duplicates: (2 2 1 1): non-destructive
PASS: srfi-1.test: delete-duplicates: (2 2 1 2): result
PASS: srfi-1.test: delete-duplicates: (2 2 1 2): non-destructive
PASS: srfi-1.test: delete-duplicates: (2 2 1 3): result
PASS: srfi-1.test: delete-duplicates: (2 2 1 3): non-destructive
PASS: srfi-1.test: delete-duplicates: (2 2 2 0): result
PASS: srfi-1.test: delete-duplicates: (2 2 2 0): non-destructive
PASS: srfi-1.test: delete-duplicates: (2 2 2 1): result
PASS: srfi-1.test: delete-duplicates: (2 2 2 1): non-destructive
PASS: srfi-1.test: delete-duplicates: (2 2 2 2): result
PASS: srfi-1.test: delete-duplicates: (2 2 2 2): non-destructive
PASS: srfi-1.test: delete-duplicates: (2 2 2 3): result
PASS: srfi-1.test: delete-duplicates: (2 2 2 3): non-destructive
PASS: srfi-1.test: delete-duplicates: (2 2 3 0): result
PASS: srfi-1.test: delete-duplicates: (2 2 3 0): non-destructive
PASS: srfi-1.test: delete-duplicates: (2 2 3 1): result
PASS: srfi-1.test: delete-duplicates: (2 2 3 1): non-destructive
PASS: srfi-1.test: delete-duplicates: (2 2 3 2): result
PASS: srfi-1.test: delete-duplicates: (2 2 3 2): non-destructive
PASS: srfi-1.test: delete-duplicates: (2 2 3 3): result
PASS: srfi-1.test: delete-duplicates: (2 2 3 3): non-destructive
PASS: srfi-1.test: delete-duplicates: (2 3 0 0): result
PASS: srfi-1.test: delete-duplicates: (2 3 0 0): non-destructive
PASS: srfi-1.test: delete-duplicates: (2 3 0 1): result
PASS: srfi-1.test: delete-duplicates: (2 3 0 1): non-destructive
PASS: srfi-1.test: delete-duplicates: (2 3 0 2): result
PASS: srfi-1.test: delete-duplicates: (2 3 0 2): non-destructive
PASS: srfi-1.test: delete-duplicates: (2 3 0 3): result
PASS: srfi-1.test: delete-duplicates: (2 3 0 3): non-destructive
PASS: srfi-1.test: delete-duplicates: (2 3 1 0): result
PASS: srfi-1.test: delete-duplicates: (2 3 1 0): non-destructive
PASS: srfi-1.test: delete-duplicates: (2 3 1 1): result
PASS: srfi-1.test: delete-duplicates: (2 3 1 1): non-destructive
PASS: srfi-1.test: delete-duplicates: (2 3 1 2): result
PASS: srfi-1.test: delete-duplicates: (2 3 1 2): non-destructive
PASS: srfi-1.test: delete-duplicates: (2 3 1 3): result
PASS: srfi-1.test: delete-duplicates: (2 3 1 3): non-destructive
PASS: srfi-1.test: delete-duplicates: (2 3 2 0): result
PASS: srfi-1.test: delete-duplicates: (2 3 2 0): non-destructive
PASS: srfi-1.test: delete-duplicates: (2 3 2 1): result
PASS: srfi-1.test: delete-duplicates: (2 3 2 1): non-destructive
PASS: srfi-1.test: delete-duplicates: (2 3 2 2): result
PASS: srfi-1.test: delete-duplicates: (2 3 2 2): non-destructive
PASS: srfi-1.test: delete-duplicates: (2 3 2 3): result
PASS: srfi-1.test: delete-duplicates: (2 3 2 3): non-destructive
PASS: srfi-1.test: delete-duplicates: (2 3 3 0): result
PASS: srfi-1.test: delete-duplicates: (2 3 3 0): non-destructive
PASS: srfi-1.test: delete-duplicates: (2 3 3 1): result
PASS: srfi-1.test: delete-duplicates: (2 3 3 1): non-destructive
PASS: srfi-1.test: delete-duplicates: (2 3 3 2): result
PASS: srfi-1.test: delete-duplicates: (2 3 3 2): non-destructive
PASS: srfi-1.test: delete-duplicates: (2 3 3 3): result
PASS: srfi-1.test: delete-duplicates: (2 3 3 3): non-destructive
PASS: srfi-1.test: delete-duplicates: (3 0 0 0): result
PASS: srfi-1.test: delete-duplicates: (3 0 0 0): non-destructive
PASS: srfi-1.test: delete-duplicates: (3 0 0 1): result
PASS: srfi-1.test: delete-duplicates: (3 0 0 1): non-destructive
PASS: srfi-1.test: delete-duplicates: (3 0 0 2): result
PASS: srfi-1.test: delete-duplicates: (3 0 0 2): non-destructive
PASS: srfi-1.test: delete-duplicates: (3 0 0 3): result
PASS: srfi-1.test: delete-duplicates: (3 0 0 3): non-destructive
PASS: srfi-1.test: delete-duplicates: (3 0 1 0): result
PASS: srfi-1.test: delete-duplicates: (3 0 1 0): non-destructive
PASS: srfi-1.test: delete-duplicates: (3 0 1 1): result
PASS: srfi-1.test: delete-duplicates: (3 0 1 1): non-destructive
PASS: srfi-1.test: delete-duplicates: (3 0 1 2): result
PASS: srfi-1.test: delete-duplicates: (3 0 1 2): non-destructive
PASS: srfi-1.test: delete-duplicates: (3 0 1 3): result
PASS: srfi-1.test: delete-duplicates: (3 0 1 3): non-destructive
PASS: srfi-1.test: delete-duplicates: (3 0 2 0): result
PASS: srfi-1.test: delete-duplicates: (3 0 2 0): non-destructive
PASS: srfi-1.test: delete-duplicates: (3 0 2 1): result
PASS: srfi-1.test: delete-duplicates: (3 0 2 1): non-destructive
PASS: srfi-1.test: delete-duplicates: (3 0 2 2): result
PASS: srfi-1.test: delete-duplicates: (3 0 2 2): non-destructive
PASS: srfi-1.test: delete-duplicates: (3 0 2 3): result
PASS: srfi-1.test: delete-duplicates: (3 0 2 3): non-destructive
PASS: srfi-1.test: delete-duplicates: (3 0 3 0): result
PASS: srfi-1.test: delete-duplicates: (3 0 3 0): non-destructive
PASS: srfi-1.test: delete-duplicates: (3 0 3 1): result
PASS: srfi-1.test: delete-duplicates: (3 0 3 1): non-destructive
PASS: srfi-1.test: delete-duplicates: (3 0 3 2): result
PASS: srfi-1.test: delete-duplicates: (3 0 3 2): non-destructive
PASS: srfi-1.test: delete-duplicates: (3 0 3 3): result
PASS: srfi-1.test: delete-duplicates: (3 0 3 3): non-destructive
PASS: srfi-1.test: delete-duplicates: (3 1 0 0): result
PASS: srfi-1.test: delete-duplicates: (3 1 0 0): non-destructive
PASS: srfi-1.test: delete-duplicates: (3 1 0 1): result
PASS: srfi-1.test: delete-duplicates: (3 1 0 1): non-destructive
PASS: srfi-1.test: delete-duplicates: (3 1 0 2): result
PASS: srfi-1.test: delete-duplicates: (3 1 0 2): non-destructive
PASS: srfi-1.test: delete-duplicates: (3 1 0 3): result
PASS: srfi-1.test: delete-duplicates: (3 1 0 3): non-destructive
PASS: srfi-1.test: delete-duplicates: (3 1 1 0): result
PASS: srfi-1.test: delete-duplicates: (3 1 1 0): non-destructive
PASS: srfi-1.test: delete-duplicates: (3 1 1 1): result
PASS: srfi-1.test: delete-duplicates: (3 1 1 1): non-destructive
PASS: srfi-1.test: delete-duplicates: (3 1 1 2): result
PASS: srfi-1.test: delete-duplicates: (3 1 1 2): non-destructive
PASS: srfi-1.test: delete-duplicates: (3 1 1 3): result
PASS: srfi-1.test: delete-duplicates: (3 1 1 3): non-destructive
PASS: srfi-1.test: delete-duplicates: (3 1 2 0): result
PASS: srfi-1.test: delete-duplicates: (3 1 2 0): non-destructive
PASS: srfi-1.test: delete-duplicates: (3 1 2 1): result
PASS: srfi-1.test: delete-duplicates: (3 1 2 1): non-destructive
PASS: srfi-1.test: delete-duplicates: (3 1 2 2): result
PASS: srfi-1.test: delete-duplicates: (3 1 2 2): non-destructive
PASS: srfi-1.test: delete-duplicates: (3 1 2 3): result
PASS: srfi-1.test: delete-duplicates: (3 1 2 3): non-destructive
PASS: srfi-1.test: delete-duplicates: (3 1 3 0): result
PASS: srfi-1.test: delete-duplicates: (3 1 3 0): non-destructive
PASS: srfi-1.test: delete-duplicates: (3 1 3 1): result
PASS: srfi-1.test: delete-duplicates: (3 1 3 1): non-destructive
PASS: srfi-1.test: delete-duplicates: (3 1 3 2): result
PASS: srfi-1.test: delete-duplicates: (3 1 3 2): non-destructive
PASS: srfi-1.test: delete-duplicates: (3 1 3 3): result
PASS: srfi-1.test: delete-duplicates: (3 1 3 3): non-destructive
PASS: srfi-1.test: delete-duplicates: (3 2 0 0): result
PASS: srfi-1.test: delete-duplicates: (3 2 0 0): non-destructive
PASS: srfi-1.test: delete-duplicates: (3 2 0 1): result
PASS: srfi-1.test: delete-duplicates: (3 2 0 1): non-destructive
PASS: srfi-1.test: delete-duplicates: (3 2 0 2): result
PASS: srfi-1.test: delete-duplicates: (3 2 0 2): non-destructive
PASS: srfi-1.test: delete-duplicates: (3 2 0 3): result
PASS: srfi-1.test: delete-duplicates: (3 2 0 3): non-destructive
PASS: srfi-1.test: delete-duplicates: (3 2 1 0): result
PASS: srfi-1.test: delete-duplicates: (3 2 1 0): non-destructive
PASS: srfi-1.test: delete-duplicates: (3 2 1 1): result
PASS: srfi-1.test: delete-duplicates: (3 2 1 1): non-destructive
PASS: srfi-1.test: delete-duplicates: (3 2 1 2): result
PASS: srfi-1.test: delete-duplicates: (3 2 1 2): non-destructive
PASS: srfi-1.test: delete-duplicates: (3 2 1 3): result
PASS: srfi-1.test: delete-duplicates: (3 2 1 3): non-destructive
PASS: srfi-1.test: delete-duplicates: (3 2 2 0): result
PASS: srfi-1.test: delete-duplicates: (3 2 2 0): non-destructive
PASS: srfi-1.test: delete-duplicates: (3 2 2 1): result
PASS: srfi-1.test: delete-duplicates: (3 2 2 1): non-destructive
PASS: srfi-1.test: delete-duplicates: (3 2 2 2): result
PASS: srfi-1.test: delete-duplicates: (3 2 2 2): non-destructive
PASS: srfi-1.test: delete-duplicates: (3 2 2 3): result
PASS: srfi-1.test: delete-duplicates: (3 2 2 3): non-destructive
PASS: srfi-1.test: delete-duplicates: (3 2 3 0): result
PASS: srfi-1.test: delete-duplicates: (3 2 3 0): non-destructive
PASS: srfi-1.test: delete-duplicates: (3 2 3 1): result
PASS: srfi-1.test: delete-duplicates: (3 2 3 1): non-destructive
PASS: srfi-1.test: delete-duplicates: (3 2 3 2): result
PASS: srfi-1.test: delete-duplicates: (3 2 3 2): non-destructive
PASS: srfi-1.test: delete-duplicates: (3 2 3 3): result
PASS: srfi-1.test: delete-duplicates: (3 2 3 3): non-destructive
PASS: srfi-1.test: delete-duplicates: (3 3 0 0): result
PASS: srfi-1.test: delete-duplicates: (3 3 0 0): non-destructive
PASS: srfi-1.test: delete-duplicates: (3 3 0 1): result
PASS: srfi-1.test: delete-duplicates: (3 3 0 1): non-destructive
PASS: srfi-1.test: delete-duplicates: (3 3 0 2): result
PASS: srfi-1.test: delete-duplicates: (3 3 0 2): non-destructive
PASS: srfi-1.test: delete-duplicates: (3 3 0 3): result
PASS: srfi-1.test: delete-duplicates: (3 3 0 3): non-destructive
PASS: srfi-1.test: delete-duplicates: (3 3 1 0): result
PASS: srfi-1.test: delete-duplicates: (3 3 1 0): non-destructive
PASS: srfi-1.test: delete-duplicates: (3 3 1 1): result
PASS: srfi-1.test: delete-duplicates: (3 3 1 1): non-destructive
PASS: srfi-1.test: delete-duplicates: (3 3 1 2): result
PASS: srfi-1.test: delete-duplicates: (3 3 1 2): non-destructive
PASS: srfi-1.test: delete-duplicates: (3 3 1 3): result
PASS: srfi-1.test: delete-duplicates: (3 3 1 3): non-destructive
PASS: srfi-1.test: delete-duplicates: (3 3 2 0): result
PASS: srfi-1.test: delete-duplicates: (3 3 2 0): non-destructive
PASS: srfi-1.test: delete-duplicates: (3 3 2 1): result
PASS: srfi-1.test: delete-duplicates: (3 3 2 1): non-destructive
PASS: srfi-1.test: delete-duplicates: (3 3 2 2): result
PASS: srfi-1.test: delete-duplicates: (3 3 2 2): non-destructive
PASS: srfi-1.test: delete-duplicates: (3 3 2 3): result
PASS: srfi-1.test: delete-duplicates: (3 3 2 3): non-destructive
PASS: srfi-1.test: delete-duplicates: (3 3 3 0): result
PASS: srfi-1.test: delete-duplicates: (3 3 3 0): non-destructive
PASS: srfi-1.test: delete-duplicates: (3 3 3 1): result
PASS: srfi-1.test: delete-duplicates: (3 3 3 1): non-destructive
PASS: srfi-1.test: delete-duplicates: (3 3 3 2): result
PASS: srfi-1.test: delete-duplicates: (3 3 3 2): non-destructive
PASS: srfi-1.test: delete-duplicates: (3 3 3 3): result
PASS: srfi-1.test: delete-duplicates: (3 3 3 3): non-destructive
PASS: srfi-1.test: delete-duplicates!: too few args
PASS: srfi-1.test: delete-duplicates!: too many args
PASS: srfi-1.test: delete-duplicates!: empty
PASS: srfi-1.test: delete-duplicates!: equal? (the default)
PASS: srfi-1.test: delete-duplicates!: eq?
PASS: srfi-1.test: delete-duplicates!: called arg order
PASS: srfi-1.test: delete-duplicates!: (0)
PASS: srfi-1.test: delete-duplicates!: (0)
PASS: srfi-1.test: delete-duplicates!: (0 1)
PASS: srfi-1.test: delete-duplicates!: (1 0)
PASS: srfi-1.test: delete-duplicates!: (1)
PASS: srfi-1.test: delete-duplicates!: (0)
PASS: srfi-1.test: delete-duplicates!: (0 1)
PASS: srfi-1.test: delete-duplicates!: (0 2)
PASS: srfi-1.test: delete-duplicates!: (0 1)
PASS: srfi-1.test: delete-duplicates!: (0 1)
PASS: srfi-1.test: delete-duplicates!: (0 1 2)
PASS: srfi-1.test: delete-duplicates!: (0 2)
PASS: srfi-1.test: delete-duplicates!: (0 2 1)
PASS: srfi-1.test: delete-duplicates!: (0 2)
PASS: srfi-1.test: delete-duplicates!: (1 0)
PASS: srfi-1.test: delete-duplicates!: (1 0)
PASS: srfi-1.test: delete-duplicates!: (1 0 2)
PASS: srfi-1.test: delete-duplicates!: (1 0)
PASS: srfi-1.test: delete-duplicates!: (1)
PASS: srfi-1.test: delete-duplicates!: (1 2)
PASS: srfi-1.test: delete-duplicates!: (1 2 0)
PASS: srfi-1.test: delete-duplicates!: (1 2)
PASS: srfi-1.test: delete-duplicates!: (1 2)
PASS: srfi-1.test: delete-duplicates!: (2 0)
PASS: srfi-1.test: delete-duplicates!: (2 0 1)
PASS: srfi-1.test: delete-duplicates!: (2 0)
PASS: srfi-1.test: delete-duplicates!: (2 1 0)
PASS: srfi-1.test: delete-duplicates!: (2 1)
PASS: srfi-1.test: delete-duplicates!: (2 1)
PASS: srfi-1.test: delete-duplicates!: (2 0)
PASS: srfi-1.test: delete-duplicates!: (2 1)
PASS: srfi-1.test: delete-duplicates!: (2)
PASS: srfi-1.test: delete-duplicates!: (0)
PASS: srfi-1.test: delete-duplicates!: (0 1)
PASS: srfi-1.test: delete-duplicates!: (0 2)
PASS: srfi-1.test: delete-duplicates!: (0 3)
PASS: srfi-1.test: delete-duplicates!: (0 1)
PASS: srfi-1.test: delete-duplicates!: (0 1)
PASS: srfi-1.test: delete-duplicates!: (0 1 2)
PASS: srfi-1.test: delete-duplicates!: (0 1 3)
PASS: srfi-1.test: delete-duplicates!: (0 2)
PASS: srfi-1.test: delete-duplicates!: (0 2 1)
PASS: srfi-1.test: delete-duplicates!: (0 2)
PASS: srfi-1.test: delete-duplicates!: (0 2 3)
PASS: srfi-1.test: delete-duplicates!: (0 3)
PASS: srfi-1.test: delete-duplicates!: (0 3 1)
PASS: srfi-1.test: delete-duplicates!: (0 3 2)
PASS: srfi-1.test: delete-duplicates!: (0 3)
PASS: srfi-1.test: delete-duplicates!: (0 1)
PASS: srfi-1.test: delete-duplicates!: (0 1)
PASS: srfi-1.test: delete-duplicates!: (0 1 2)
PASS: srfi-1.test: delete-duplicates!: (0 1 3)
PASS: srfi-1.test: delete-duplicates!: (0 1)
PASS: srfi-1.test: delete-duplicates!: (0 1)
PASS: srfi-1.test: delete-duplicates!: (0 1 2)
PASS: srfi-1.test: delete-duplicates!: (0 1 3)
PASS: srfi-1.test: delete-duplicates!: (0 1 2)
PASS: srfi-1.test: delete-duplicates!: (0 1 2)
PASS: srfi-1.test: delete-duplicates!: (0 1 2)
PASS: srfi-1.test: delete-duplicates!: (0 1 2 3)
PASS: srfi-1.test: delete-duplicates!: (0 1 3)
PASS: srfi-1.test: delete-duplicates!: (0 1 3)
PASS: srfi-1.test: delete-duplicates!: (0 1 3 2)
PASS: srfi-1.test: delete-duplicates!: (0 1 3)
PASS: srfi-1.test: delete-duplicates!: (0 2)
PASS: srfi-1.test: delete-duplicates!: (0 2 1)
PASS: srfi-1.test: delete-duplicates!: (0 2)
PASS: srfi-1.test: delete-duplicates!: (0 2 3)
PASS: srfi-1.test: delete-duplicates!: (0 2 1)
PASS: srfi-1.test: delete-duplicates!: (0 2 1)
PASS: srfi-1.test: delete-duplicates!: (0 2 1)
PASS: srfi-1.test: delete-duplicates!: (0 2 1 3)
PASS: srfi-1.test: delete-duplicates!: (0 2)
PASS: srfi-1.test: delete-duplicates!: (0 2 1)
PASS: srfi-1.test: delete-duplicates!: (0 2)
PASS: srfi-1.test: delete-duplicates!: (0 2 3)
PASS: srfi-1.test: delete-duplicates!: (0 2 3)
PASS: srfi-1.test: delete-duplicates!: (0 2 3 1)
PASS: srfi-1.test: delete-duplicates!: (0 2 3)
PASS: srfi-1.test: delete-duplicates!: (0 2 3)
PASS: srfi-1.test: delete-duplicates!: (0 3)
PASS: srfi-1.test: delete-duplicates!: (0 3 1)
PASS: srfi-1.test: delete-duplicates!: (0 3 2)
PASS: srfi-1.test: delete-duplicates!: (0 3)
PASS: srfi-1.test: delete-duplicates!: (0 3 1)
PASS: srfi-1.test: delete-duplicates!: (0 3 1)
PASS: srfi-1.test: delete-duplicates!: (0 3 1 2)
PASS: srfi-1.test: delete-duplicates!: (0 3 1)
PASS: srfi-1.test: delete-duplicates!: (0 3 2)
PASS: srfi-1.test: delete-duplicates!: (0 3 2 1)
PASS: srfi-1.test: delete-duplicates!: (0 3 2)
PASS: srfi-1.test: delete-duplicates!: (0 3 2)
PASS: srfi-1.test: delete-duplicates!: (0 3)
PASS: srfi-1.test: delete-duplicates!: (0 3 1)
PASS: srfi-1.test: delete-duplicates!: (0 3 2)
PASS: srfi-1.test: delete-duplicates!: (0 3)
PASS: srfi-1.test: delete-duplicates!: (1 0)
PASS: srfi-1.test: delete-duplicates!: (1 0)
PASS: srfi-1.test: delete-duplicates!: (1 0 2)
PASS: srfi-1.test: delete-duplicates!: (1 0 3)
PASS: srfi-1.test: delete-duplicates!: (1 0)
PASS: srfi-1.test: delete-duplicates!: (1 0)
PASS: srfi-1.test: delete-duplicates!: (1 0 2)
PASS: srfi-1.test: delete-duplicates!: (1 0 3)
PASS: srfi-1.test: delete-duplicates!: (1 0 2)
PASS: srfi-1.test: delete-duplicates!: (1 0 2)
PASS: srfi-1.test: delete-duplicates!: (1 0 2)
PASS: srfi-1.test: delete-duplicates!: (1 0 2 3)
PASS: srfi-1.test: delete-duplicates!: (1 0 3)
PASS: srfi-1.test: delete-duplicates!: (1 0 3)
PASS: srfi-1.test: delete-duplicates!: (1 0 3 2)
PASS: srfi-1.test: delete-duplicates!: (1 0 3)
PASS: srfi-1.test: delete-duplicates!: (1 0)
PASS: srfi-1.test: delete-duplicates!: (1 0)
PASS: srfi-1.test: delete-duplicates!: (1 0 2)
PASS: srfi-1.test: delete-duplicates!: (1 0 3)
PASS: srfi-1.test: delete-duplicates!: (1 0)
PASS: srfi-1.test: delete-duplicates!: (1)
PASS: srfi-1.test: delete-duplicates!: (1 2)
PASS: srfi-1.test: delete-duplicates!: (1 3)
PASS: srfi-1.test: delete-duplicates!: (1 2 0)
PASS: srfi-1.test: delete-duplicates!: (1 2)
PASS: srfi-1.test: delete-duplicates!: (1 2)
PASS: srfi-1.test: delete-duplicates!: (1 2 3)
PASS: srfi-1.test: delete-duplicates!: (1 3 0)
PASS: srfi-1.test: delete-duplicates!: (1 3)
PASS: srfi-1.test: delete-duplicates!: (1 3 2)
PASS: srfi-1.test: delete-duplicates!: (1 3)
PASS: srfi-1.test: delete-duplicates!: (1 2 0)
PASS: srfi-1.test: delete-duplicates!: (1 2 0)
PASS: srfi-1.test: delete-duplicates!: (1 2 0)
PASS: srfi-1.test: delete-duplicates!: (1 2 0 3)
PASS: srfi-1.test: delete-duplicates!: (1 2 0)
PASS: srfi-1.test: delete-duplicates!: (1 2)
PASS: srfi-1.test: delete-duplicates!: (1 2)
PASS: srfi-1.test: delete-duplicates!: (1 2 3)
PASS: srfi-1.test: delete-duplicates!: (1 2 0)
PASS: srfi-1.test: delete-duplicates!: (1 2)
PASS: srfi-1.test: delete-duplicates!: (1 2)
PASS: srfi-1.test: delete-duplicates!: (1 2 3)
PASS: srfi-1.test: delete-duplicates!: (1 2 3 0)
PASS: srfi-1.test: delete-duplicates!: (1 2 3)
PASS: srfi-1.test: delete-duplicates!: (1 2 3)
PASS: srfi-1.test: delete-duplicates!: (1 2 3)
PASS: srfi-1.test: delete-duplicates!: (1 3 0)
PASS: srfi-1.test: delete-duplicates!: (1 3 0)
PASS: srfi-1.test: delete-duplicates!: (1 3 0 2)
PASS: srfi-1.test: delete-duplicates!: (1 3 0)
PASS: srfi-1.test: delete-duplicates!: (1 3 0)
PASS: srfi-1.test: delete-duplicates!: (1 3)
PASS: srfi-1.test: delete-duplicates!: (1 3 2)
PASS: srfi-1.test: delete-duplicates!: (1 3)
PASS: srfi-1.test: delete-duplicates!: (1 3 2 0)
PASS: srfi-1.test: delete-duplicates!: (1 3 2)
PASS: srfi-1.test: delete-duplicates!: (1 3 2)
PASS: srfi-1.test: delete-duplicates!: (1 3 2)
PASS: srfi-1.test: delete-duplicates!: (1 3 0)
PASS: srfi-1.test: delete-duplicates!: (1 3)
PASS: srfi-1.test: delete-duplicates!: (1 3 2)
PASS: srfi-1.test: delete-duplicates!: (1 3)
PASS: srfi-1.test: delete-duplicates!: (2 0)
PASS: srfi-1.test: delete-duplicates!: (2 0 1)
PASS: srfi-1.test: delete-duplicates!: (2 0)
PASS: srfi-1.test: delete-duplicates!: (2 0 3)
PASS: srfi-1.test: delete-duplicates!: (2 0 1)
PASS: srfi-1.test: delete-duplicates!: (2 0 1)
PASS: srfi-1.test: delete-duplicates!: (2 0 1)
PASS: srfi-1.test: delete-duplicates!: (2 0 1 3)
PASS: srfi-1.test: delete-duplicates!: (2 0)
PASS: srfi-1.test: delete-duplicates!: (2 0 1)
PASS: srfi-1.test: delete-duplicates!: (2 0)
PASS: srfi-1.test: delete-duplicates!: (2 0 3)
PASS: srfi-1.test: delete-duplicates!: (2 0 3)
PASS: srfi-1.test: delete-duplicates!: (2 0 3 1)
PASS: srfi-1.test: delete-duplicates!: (2 0 3)
PASS: srfi-1.test: delete-duplicates!: (2 0 3)
PASS: srfi-1.test: delete-duplicates!: (2 1 0)
PASS: srfi-1.test: delete-duplicates!: (2 1 0)
PASS: srfi-1.test: delete-duplicates!: (2 1 0)
PASS: srfi-1.test: delete-duplicates!: (2 1 0 3)
PASS: srfi-1.test: delete-duplicates!: (2 1 0)
PASS: srfi-1.test: delete-duplicates!: (2 1)
PASS: srfi-1.test: delete-duplicates!: (2 1)
PASS: srfi-1.test: delete-duplicates!: (2 1 3)
PASS: srfi-1.test: delete-duplicates!: (2 1 0)
PASS: srfi-1.test: delete-duplicates!: (2 1)
PASS: srfi-1.test: delete-duplicates!: (2 1)
PASS: srfi-1.test: delete-duplicates!: (2 1 3)
PASS: srfi-1.test: delete-duplicates!: (2 1 3 0)
PASS: srfi-1.test: delete-duplicates!: (2 1 3)
PASS: srfi-1.test: delete-duplicates!: (2 1 3)
PASS: srfi-1.test: delete-duplicates!: (2 1 3)
PASS: srfi-1.test: delete-duplicates!: (2 0)
PASS: srfi-1.test: delete-duplicates!: (2 0 1)
PASS: srfi-1.test: delete-duplicates!: (2 0)
PASS: srfi-1.test: delete-duplicates!: (2 0 3)
PASS: srfi-1.test: delete-duplicates!: (2 1 0)
PASS: srfi-1.test: delete-duplicates!: (2 1)
PASS: srfi-1.test: delete-duplicates!: (2 1)
PASS: srfi-1.test: delete-duplicates!: (2 1 3)
PASS: srfi-1.test: delete-duplicates!: (2 0)
PASS: srfi-1.test: delete-duplicates!: (2 1)
PASS: srfi-1.test: delete-duplicates!: (2)
PASS: srfi-1.test: delete-duplicates!: (2 3)
PASS: srfi-1.test: delete-duplicates!: (2 3 0)
PASS: srfi-1.test: delete-duplicates!: (2 3 1)
PASS: srfi-1.test: delete-duplicates!: (2 3)
PASS: srfi-1.test: delete-duplicates!: (2 3)
PASS: srfi-1.test: delete-duplicates!: (2 3 0)
PASS: srfi-1.test: delete-duplicates!: (2 3 0 1)
PASS: srfi-1.test: delete-duplicates!: (2 3 0)
PASS: srfi-1.test: delete-duplicates!: (2 3 0)
PASS: srfi-1.test: delete-duplicates!: (2 3 1 0)
PASS: srfi-1.test: delete-duplicates!: (2 3 1)
PASS: srfi-1.test: delete-duplicates!: (2 3 1)
PASS: srfi-1.test: delete-duplicates!: (2 3 1)
PASS: srfi-1.test: delete-duplicates!: (2 3 0)
PASS: srfi-1.test: delete-duplicates!: (2 3 1)
PASS: srfi-1.test: delete-duplicates!: (2 3)
PASS: srfi-1.test: delete-duplicates!: (2 3)
PASS: srfi-1.test: delete-duplicates!: (2 3 0)
PASS: srfi-1.test: delete-duplicates!: (2 3 1)
PASS: srfi-1.test: delete-duplicates!: (2 3)
PASS: srfi-1.test: delete-duplicates!: (2 3)
PASS: srfi-1.test: delete-duplicates!: (3 0)
PASS: srfi-1.test: delete-duplicates!: (3 0 1)
PASS: srfi-1.test: delete-duplicates!: (3 0 2)
PASS: srfi-1.test: delete-duplicates!: (3 0)
PASS: srfi-1.test: delete-duplicates!: (3 0 1)
PASS: srfi-1.test: delete-duplicates!: (3 0 1)
PASS: srfi-1.test: delete-duplicates!: (3 0 1 2)
PASS: srfi-1.test: delete-duplicates!: (3 0 1)
PASS: srfi-1.test: delete-duplicates!: (3 0 2)
PASS: srfi-1.test: delete-duplicates!: (3 0 2 1)
PASS: srfi-1.test: delete-duplicates!: (3 0 2)
PASS: srfi-1.test: delete-duplicates!: (3 0 2)
PASS: srfi-1.test: delete-duplicates!: (3 0)
PASS: srfi-1.test: delete-duplicates!: (3 0 1)
PASS: srfi-1.test: delete-duplicates!: (3 0 2)
PASS: srfi-1.test: delete-duplicates!: (3 0)
PASS: srfi-1.test: delete-duplicates!: (3 1 0)
PASS: srfi-1.test: delete-duplicates!: (3 1 0)
PASS: srfi-1.test: delete-duplicates!: (3 1 0 2)
PASS: srfi-1.test: delete-duplicates!: (3 1 0)
PASS: srfi-1.test: delete-duplicates!: (3 1 0)
PASS: srfi-1.test: delete-duplicates!: (3 1)
PASS: srfi-1.test: delete-duplicates!: (3 1 2)
PASS: srfi-1.test: delete-duplicates!: (3 1)
PASS: srfi-1.test: delete-duplicates!: (3 1 2 0)
PASS: srfi-1.test: delete-duplicates!: (3 1 2)
PASS: srfi-1.test: delete-duplicates!: (3 1 2)
PASS: srfi-1.test: delete-duplicates!: (3 1 2)
PASS: srfi-1.test: delete-duplicates!: (3 1 0)
PASS: srfi-1.test: delete-duplicates!: (3 1)
PASS: srfi-1.test: delete-duplicates!: (3 1 2)
PASS: srfi-1.test: delete-duplicates!: (3 1)
PASS: srfi-1.test: delete-duplicates!: (3 2 0)
PASS: srfi-1.test: delete-duplicates!: (3 2 0 1)
PASS: srfi-1.test: delete-duplicates!: (3 2 0)
PASS: srfi-1.test: delete-duplicates!: (3 2 0)
PASS: srfi-1.test: delete-duplicates!: (3 2 1 0)
PASS: srfi-1.test: delete-duplicates!: (3 2 1)
PASS: srfi-1.test: delete-duplicates!: (3 2 1)
PASS: srfi-1.test: delete-duplicates!: (3 2 1)
PASS: srfi-1.test: delete-duplicates!: (3 2 0)
PASS: srfi-1.test: delete-duplicates!: (3 2 1)
PASS: srfi-1.test: delete-duplicates!: (3 2)
PASS: srfi-1.test: delete-duplicates!: (3 2)
PASS: srfi-1.test: delete-duplicates!: (3 2 0)
PASS: srfi-1.test: delete-duplicates!: (3 2 1)
PASS: srfi-1.test: delete-duplicates!: (3 2)
PASS: srfi-1.test: delete-duplicates!: (3 2)
PASS: srfi-1.test: delete-duplicates!: (3 0)
PASS: srfi-1.test: delete-duplicates!: (3 0 1)
PASS: srfi-1.test: delete-duplicates!: (3 0 2)
PASS: srfi-1.test: delete-duplicates!: (3 0)
PASS: srfi-1.test: delete-duplicates!: (3 1 0)
PASS: srfi-1.test: delete-duplicates!: (3 1)
PASS: srfi-1.test: delete-duplicates!: (3 1 2)
PASS: srfi-1.test: delete-duplicates!: (3 1)
PASS: srfi-1.test: delete-duplicates!: (3 2 0)
PASS: srfi-1.test: delete-duplicates!: (3 2 1)
PASS: srfi-1.test: delete-duplicates!: (3 2)
PASS: srfi-1.test: delete-duplicates!: (3 2)
PASS: srfi-1.test: delete-duplicates!: (3 0)
PASS: srfi-1.test: delete-duplicates!: (3 1)
PASS: srfi-1.test: delete-duplicates!: (3 2)
PASS: srfi-1.test: delete-duplicates!: (3)
PASS: srfi-1.test: drop: '() 0
PASS: srfi-1.test: drop: '(a) 0
PASS: srfi-1.test: drop: '(a b) 0
PASS: srfi-1.test: drop: '(a) 1
PASS: srfi-1.test: drop: '(a b) 1
PASS: srfi-1.test: drop: '(a b) 2
PASS: srfi-1.test: drop: '(a b c) 1
PASS: srfi-1.test: drop: circular '(a) 0
PASS: srfi-1.test: drop: circular '(a) 1
PASS: srfi-1.test: drop: circular '(a) 2
PASS: srfi-1.test: drop: circular '(a b) 1
PASS: srfi-1.test: drop: circular '(a b) 2
PASS: srfi-1.test: drop: circular '(a b) 5
PASS: srfi-1.test: drop: '(a . b) 1
PASS: srfi-1.test: drop: '(a b . c) 1
PASS: srfi-1.test: drop-right: () -1
PASS: srfi-1.test: drop-right: (equal? (quote ()) (drop-right (quote ()) 0))
PASS: srfi-1.test: drop-right: () 1
PASS: srfi-1.test: drop-right: (1) -1
PASS: srfi-1.test: drop-right: (equal? (quote (1)) (drop-right (quote (1)) 0))
PASS: srfi-1.test: drop-right: (equal? (quote ()) (drop-right (quote (1)) 1))
PASS: srfi-1.test: drop-right: (1) 2
PASS: srfi-1.test: drop-right: (4 5) -1
PASS: srfi-1.test: drop-right: (equal? (quote (4 5)) (drop-right (quote (4 5)) 0))
PASS: srfi-1.test: drop-right: (equal? (quote (4)) (drop-right (quote (4 5)) 1))
PASS: srfi-1.test: drop-right: (equal? (quote ()) (drop-right (quote (4 5)) 2))
PASS: srfi-1.test: drop-right: (4 5) 3
PASS: srfi-1.test: drop-right: (4 5 6) -1
PASS: srfi-1.test: drop-right: (equal? (quote (4 5 6)) (drop-right (quote (4 5 6)) 0))
PASS: srfi-1.test: drop-right: (equal? (quote (4 5)) (drop-right (quote (4 5 6)) 1))
PASS: srfi-1.test: drop-right: (equal? (quote (4)) (drop-right (quote (4 5 6)) 2))
PASS: srfi-1.test: drop-right: (equal? (quote ()) (drop-right (quote (4 5 6)) 3))
PASS: srfi-1.test: drop-right: (4 5 6) 4
PASS: srfi-1.test: drop-right: (a b . c) 0
PASS: srfi-1.test: drop-right: (a b . c) 1
PASS: srfi-1.test: drop-right!: () -1
PASS: srfi-1.test: drop-right!: (equal? (quote ()) (drop-right! (quote ()) 0))
PASS: srfi-1.test: drop-right!: () 1
PASS: srfi-1.test: drop-right!: (1) -1
PASS: srfi-1.test: drop-right!: (equal? (quote (1)) (drop-right! (list 1) 0))
PASS: srfi-1.test: drop-right!: (equal? (quote ()) (drop-right! (list 1) 1))
PASS: srfi-1.test: drop-right!: (1) 2
PASS: srfi-1.test: drop-right!: (4 5) -1
PASS: srfi-1.test: drop-right!: (equal? (quote (4 5)) (drop-right! (list 4 5) 0))
PASS: srfi-1.test: drop-right!: (equal? (quote (4)) (drop-right! (list 4 5) 1))
PASS: srfi-1.test: drop-right!: (equal? (quote ()) (drop-right! (list 4 5) 2))
PASS: srfi-1.test: drop-right!: (4 5) 3
PASS: srfi-1.test: drop-right!: (4 5 6) -1
PASS: srfi-1.test: drop-right!: (equal? (quote (4 5 6)) (drop-right! (list 4 5 6) 0))
PASS: srfi-1.test: drop-right!: (equal? (quote (4 5)) (drop-right! (list 4 5 6) 1))
PASS: srfi-1.test: drop-right!: (equal? (quote (4)) (drop-right! (list 4 5 6) 2))
PASS: srfi-1.test: drop-right!: (equal? (quote ()) (drop-right! (list 4 5 6) 3))
PASS: srfi-1.test: drop-right!: (4 5 6) 4
PASS: srfi-1.test: drop-while: (equal? (quote ()) (drop-while odd? (quote ())))
PASS: srfi-1.test: drop-while: (equal? (quote ()) (drop-while odd? (quote (1))))
PASS: srfi-1.test: drop-while: (equal? (quote ()) (drop-while odd? (quote (1 3))))
PASS: srfi-1.test: drop-while: (equal? (quote ()) (drop-while odd? (quote (1 3 5))))
PASS: srfi-1.test: drop-while: (equal? (quote (2)) (drop-while odd? (quote (2))))
PASS: srfi-1.test: drop-while: (equal? (quote (2)) (drop-while odd? (quote (1 2))))
PASS: srfi-1.test: drop-while: (equal? (quote (4)) (drop-while odd? (quote (1 3 4))))
PASS: srfi-1.test: drop-while: (equal? (quote (2 1)) (drop-while odd? (quote (2 1))))
PASS: srfi-1.test: drop-while: (equal? (quote (4 3)) (drop-while odd? (quote (1 4 3))))
PASS: srfi-1.test: drop-while: (equal? (quote (4 1 3)) (drop-while odd? (quote (4 1 3))))
PASS: srfi-1.test: eighth: () -1
PASS: srfi-1.test: eighth: (eq? (quote h) (eighth (quote (a b c d e f g h))))
PASS: srfi-1.test: eighth: (eq? (quote h) (eighth (quote (a b c d e f g h i))))
PASS: srfi-1.test: fifth: () -1
PASS: srfi-1.test: fifth: (eq? (quote e) (fifth (quote (a b c d e))))
PASS: srfi-1.test: fifth: (eq? (quote e) (fifth (quote (a b c d e f))))
PASS: srfi-1.test: filter-map: one list: 'x
PASS: srfi-1.test: filter-map: one list: '(1 . x)
PASS: srfi-1.test: filter-map: one list: (1)
PASS: srfi-1.test: filter-map: one list: (#f)
PASS: srfi-1.test: filter-map: one list: (1 2)
PASS: srfi-1.test: filter-map: one list: (#f 2)
PASS: srfi-1.test: filter-map: one list: (#f #f)
PASS: srfi-1.test: filter-map: one list: (1 2 3)
PASS: srfi-1.test: filter-map: one list: (#f 2 3)
PASS: srfi-1.test: filter-map: one list: (1 #f 3)
PASS: srfi-1.test: filter-map: one list: (1 2 #f)
PASS: srfi-1.test: filter-map: two lists: 'x '(1 2 3)
PASS: srfi-1.test: filter-map: two lists: '(1 2 3) 'x
PASS: srfi-1.test: filter-map: two lists: '(1 . x) '(1 2 3)
PASS: srfi-1.test: filter-map: two lists: '(1 2 3) '(1 . x)
PASS: srfi-1.test: filter-map: two lists: (1 2 3) (4 5 6)
PASS: srfi-1.test: filter-map: two lists: (#f 2 3) (4 5)
PASS: srfi-1.test: filter-map: two lists: (4 #f) (1 2 3)
PASS: srfi-1.test: filter-map: two lists: () (1 2 3)
PASS: srfi-1.test: filter-map: two lists: (1 2 3) ()
PASS: srfi-1.test: filter-map: three lists: 'x '(1 2 3) '(1 2 3)
PASS: srfi-1.test: filter-map: three lists: '(1 2 3) 'x '(1 2 3)
PASS: srfi-1.test: filter-map: three lists: '(1 2 3) '(1 2 3) 'x
PASS: srfi-1.test: filter-map: three lists: '(1 . x) '(1 2 3) '(1 2 3)
PASS: srfi-1.test: filter-map: three lists: '(1 2 3) '(1 . x) '(1 2 3)
PASS: srfi-1.test: filter-map: three lists: '(1 2 3) '(1 2 3) '(1 . x)
PASS: srfi-1.test: filter-map: three lists: (1 2 3) (4 5 6) (7 8 9)
PASS: srfi-1.test: filter-map: three lists: (#f 2 3) (4 5) (7 8 9)
PASS: srfi-1.test: filter-map: three lists: (#f 2 3) (7 8 9) (4 5)
PASS: srfi-1.test: filter-map: three lists: (4 #f) (1 2 3) (7 8 9)
PASS: srfi-1.test: filter-map: three lists: apply list unchanged
PASS: srfi-1.test: find: (eqv? #f (find odd? (quote ())))
PASS: srfi-1.test: find: (eqv? #f (find odd? (quote (0))))
PASS: srfi-1.test: find: (eqv? #f (find odd? (quote (0 2))))
PASS: srfi-1.test: find: (eqv? 1 (find odd? (quote (1))))
PASS: srfi-1.test: find: (eqv? 1 (find odd? (quote (0 1))))
PASS: srfi-1.test: find: (eqv? 1 (find odd? (quote (0 1 2))))
PASS: srfi-1.test: find: (eqv? 1 (find odd? (quote (2 0 1))))
PASS: srfi-1.test: find: (eqv? 1 (find (lambda (x) (= 1 x)) (quote (2 0 1))))
PASS: srfi-1.test: find-tail: (let ((lst (quote ()))) (eq? #f (find-tail odd? lst)))
PASS: srfi-1.test: find-tail: (let ((lst (quote (0)))) (eq? #f (find-tail odd? lst)))
PASS: srfi-1.test: find-tail: (let ((lst (quote (0 2)))) (eq? #f (find-tail odd? lst)))
PASS: srfi-1.test: find-tail: (let ((lst (quote (1)))) (eq? lst (find-tail odd? lst)))
PASS: srfi-1.test: find-tail: (let ((lst (quote (1 2)))) (eq? lst (find-tail odd? lst)))
PASS: srfi-1.test: find-tail: (let ((lst (quote (2 1)))) (eq? (cdr lst) (find-tail odd? lst)))
PASS: srfi-1.test: find-tail: (let ((lst (quote (2 1 0)))) (eq? (cdr lst) (find-tail odd? lst)))
PASS: srfi-1.test: find-tail: (let ((lst (quote (2 0 1)))) (eq? (cddr lst) (find-tail odd? lst)))
PASS: srfi-1.test: find-tail: (let ((lst (quote (2 0 1)))) (eq? (cddr lst) (find-tail (lambda (x) (= 1 x)) lst)))
PASS: srfi-1.test: fold: no args
PASS: srfi-1.test: fold: one arg
PASS: srfi-1.test: fold: two args
PASS: srfi-1.test: fold: one list: arg order
PASS: srfi-1.test: fold: one list: empty list
PASS: srfi-1.test: fold: one list: proc arg count 0
PASS: srfi-1.test: fold: one list: proc arg count 1
PASS: srfi-1.test: fold: one list: proc arg count 3
PASS: srfi-1.test: fold: one list: improper 1
PASS: srfi-1.test: fold: one list: improper 2
PASS: srfi-1.test: fold: one list: improper 3
PASS: srfi-1.test: fold: one list: (= 3 (fold + 1 (quote (2))))
PASS: srfi-1.test: fold: one list: (= 6 (fold + 1 (quote (2 3))))
PASS: srfi-1.test: fold: one list: (= 10 (fold + 1 (quote (2 3 4))))
PASS: srfi-1.test: fold: two lists: arg order
PASS: srfi-1.test: fold: two lists: empty lists
PASS: srfi-1.test: fold: two lists: proc arg count 2
PASS: srfi-1.test: fold: two lists: proc arg count 4
PASS: srfi-1.test: fold: two lists: improper first 1
PASS: srfi-1.test: fold: two lists: improper first 2
PASS: srfi-1.test: fold: two lists: improper first 3
PASS: srfi-1.test: fold: two lists: improper second 1
PASS: srfi-1.test: fold: two lists: improper second 2
PASS: srfi-1.test: fold: two lists: improper second 3
PASS: srfi-1.test: fold: two lists: (= 6 (fold + 1 (quote (2)) (quote (3))))
PASS: srfi-1.test: fold: two lists: (= 15 (fold + 1 (quote (2 3)) (quote (4 5))))
PASS: srfi-1.test: fold: two lists: (= 28 (fold + 1 (quote (2 3 4)) (quote (5 6 7))))
PASS: srfi-1.test: fold: two lists: stop shortest: (= 13 (fold + 1 (quote (1 2 3)) (quote (4 5))))
PASS: srfi-1.test: fold: two lists: stop shortest: (= 13 (fold + 1 (quote (4 5)) (quote (1 2 3))))
PASS: srfi-1.test: fold: two lists: stop shortest: (= 11 (fold + 1 (quote (3 4)) (quote (1 2 9 9))))
PASS: srfi-1.test: fold: two lists: stop shortest: (= 11 (fold + 1 (quote (1 2 9 9)) (quote (3 4))))
PASS: srfi-1.test: fold: two lists: apply list unchanged
PASS: srfi-1.test: fold: three lists: arg order
PASS: srfi-1.test: fold: three lists: empty lists
PASS: srfi-1.test: fold: three lists: proc arg count 3
PASS: srfi-1.test: fold: three lists: proc arg count 5
PASS: srfi-1.test: fold: three lists: improper first 1
PASS: srfi-1.test: fold: three lists: improper first 2
PASS: srfi-1.test: fold: three lists: improper first 3
PASS: srfi-1.test: fold: three lists: improper second 1
PASS: srfi-1.test: fold: three lists: improper second 2
PASS: srfi-1.test: fold: three lists: improper second 3
PASS: srfi-1.test: fold: three lists: improper third 1
PASS: srfi-1.test: fold: three lists: improper third 2
PASS: srfi-1.test: fold: three lists: improper third 3
PASS: srfi-1.test: fold: three lists: (= 10 (fold + 1 (quote (2)) (quote (3)) (quote (4))))
PASS: srfi-1.test: fold: three lists: (= 28 (fold + 1 (quote (2 5)) (quote (3 6)) (quote (4 7))))
PASS: srfi-1.test: fold: three lists: (= 55 (fold + 1 (quote (2 5 8)) (quote (3 6 9)) (quote (4 7 10))))
PASS: srfi-1.test: fold: three lists: stop shortest: (= 28 (fold + 1 (quote (2 5 9)) (quote (3 6)) (quote (4 7))))
PASS: srfi-1.test: fold: three lists: stop shortest: (= 28 (fold + 1 (quote (2 5)) (quote (3 6 9)) (quote (4 7))))
PASS: srfi-1.test: fold: three lists: stop shortest: (= 28 (fold + 1 (quote (2 5)) (quote (3 6)) (quote (4 7 9))))
PASS: srfi-1.test: fold: three lists: apply list unchanged
PASS: srfi-1.test: fold-right: one list
PASS: srfi-1.test: fold-right: two lists
PASS: srfi-1.test: fold-right: tail-recursive
PASS: srfi-1.test: unfold: basic
PASS: srfi-1.test: unfold: tail-gen
PASS: srfi-1.test: unfold: tail-recursive
PASS: srfi-1.test: length+: too few args
PASS: srfi-1.test: length+: too many args
PASS: srfi-1.test: length+: not a pair
PASS: srfi-1.test: length+: improper list
PASS: srfi-1.test: length+: (= 0 (length+ (quote ())))
PASS: srfi-1.test: length+: (= 1 (length+ (quote (x))))
PASS: srfi-1.test: length+: (= 2 (length+ (quote (x y))))
PASS: srfi-1.test: length+: (= 3 (length+ (quote (x y z))))
PASS: srfi-1.test: length+: (not (length+ (circular-list 1)))
PASS: srfi-1.test: length+: (not (length+ (circular-list 1 2)))
PASS: srfi-1.test: length+: (not (length+ (circular-list 1 2 3)))
PASS: srfi-1.test: last: empty
PASS: srfi-1.test: last: one elem
PASS: srfi-1.test: last: two elems
PASS: srfi-1.test: last: three elems
PASS: srfi-1.test: last: four elems
PASS: srfi-1.test: list=: no lists
PASS: srfi-1.test: list=: one list: empty
PASS: srfi-1.test: list=: one list: one elem
PASS: srfi-1.test: list=: one list: two elems
PASS: srfi-1.test: list=: two lists: empty / empty
PASS: srfi-1.test: list=: two lists: one / empty
PASS: srfi-1.test: list=: two lists: empty / one
PASS: srfi-1.test: list=: two lists: one / one same
PASS: srfi-1.test: list=: two lists: one / one diff
PASS: srfi-1.test: list=: two lists: called arg order
PASS: srfi-1.test: list=: three lists: empty / empty / empty
PASS: srfi-1.test: list=: three lists: one / empty / empty
PASS: srfi-1.test: list=: three lists: one / one / empty
PASS: srfi-1.test: list=: three lists: one / diff / empty
PASS: srfi-1.test: list=: three lists: one / one / one
PASS: srfi-1.test: list=: three lists: two / two / diff
PASS: srfi-1.test: list=: three lists: two / two / two
PASS: srfi-1.test: list=: three lists: called arg order
PASS: srfi-1.test: list-copy: (equal? (quote ()) (list-copy (quote ())))
PASS: srfi-1.test: list-copy: (equal? (quote (1 2)) (list-copy (quote (1 2))))
PASS: srfi-1.test: list-copy: (equal? (quote (1 2 3)) (list-copy (quote (1 2 3))))
PASS: srfi-1.test: list-copy: (equal? (quote (1 2 3 4)) (list-copy (quote (1 2 3 4))))
PASS: srfi-1.test: list-copy: (equal? (quote (1 2 3 4 5)) (list-copy (quote (1 2 3 4 5))))
PASS: srfi-1.test: list-copy: (equal? 1 (list-copy 1))
PASS: srfi-1.test: list-copy: (equal? (quote (1 . 2)) (list-copy (quote (1 . 2))))
PASS: srfi-1.test: list-copy: (equal? (quote (1 2 . 3)) (list-copy (quote (1 2 . 3))))
PASS: srfi-1.test: list-copy: (equal? (quote (1 2 3 . 4)) (list-copy (quote (1 2 3 . 4))))
PASS: srfi-1.test: list-copy: (equal? (quote (1 2 3 4 . 5)) (list-copy (quote (1 2 3 4 . 5))))
PASS: srfi-1.test: list-index: no args
PASS: srfi-1.test: list-index: one arg
PASS: srfi-1.test: list-index: one list: empty list
PASS: srfi-1.test: list-index: one list: pred arg count 0
PASS: srfi-1.test: list-index: one list: pred arg count 2
PASS: srfi-1.test: list-index: one list: improper 1
PASS: srfi-1.test: list-index: one list: improper 2
PASS: srfi-1.test: list-index: one list: improper 3
PASS: srfi-1.test: list-index: one list: (eqv? #f (list-index symbol? (quote (1))))
PASS: srfi-1.test: list-index: one list: (eqv? 0 (list-index symbol? (quote (x))))
PASS: srfi-1.test: list-index: one list: (eqv? #f (list-index symbol? (quote (1 2))))
PASS: srfi-1.test: list-index: one list: (eqv? 0 (list-index symbol? (quote (x 1))))
PASS: srfi-1.test: list-index: one list: (eqv? 1 (list-index symbol? (quote (1 x))))
PASS: srfi-1.test: list-index: one list: (eqv? #f (list-index symbol? (quote (1 2 3))))
PASS: srfi-1.test: list-index: one list: (eqv? 0 (list-index symbol? (quote (x 1 2))))
PASS: srfi-1.test: list-index: one list: (eqv? 1 (list-index symbol? (quote (1 x 2))))
PASS: srfi-1.test: list-index: one list: (eqv? 2 (list-index symbol? (quote (1 2 x))))
PASS: srfi-1.test: list-index: two lists: arg order
PASS: srfi-1.test: list-index: two lists: empty lists
PASS: srfi-1.test: list-index: two lists: pred arg count 0
PASS: srfi-1.test: list-index: two lists: pred arg count 1
PASS: srfi-1.test: list-index: two lists: pred arg count 3
PASS: srfi-1.test: list-index: two lists: improper first 1
PASS: srfi-1.test: list-index: two lists: improper first 2
PASS: srfi-1.test: list-index: two lists: improper first 3
PASS: srfi-1.test: list-index: two lists: improper second 1
PASS: srfi-1.test: list-index: two lists: improper second 2
PASS: srfi-1.test: list-index: two lists: improper second 3
PASS: srfi-1.test: list-index: two lists: (eqv? #f (list-index sym2 (quote (1)) (quote (2))))
PASS: srfi-1.test: list-index: two lists: (eqv? 0 (list-index sym2 (quote (1)) (quote (x))))
PASS: srfi-1.test: list-index: two lists: (eqv? #f (list-index sym2 (quote (1 2)) (quote (3 4))))
PASS: srfi-1.test: list-index: two lists: (eqv? 0 (list-index sym2 (quote (1 2)) (quote (x 3))))
PASS: srfi-1.test: list-index: two lists: (eqv? 1 (list-index sym2 (quote (1 2)) (quote (3 x))))
PASS: srfi-1.test: list-index: two lists: (eqv? #f (list-index sym2 (quote (1 2 3)) (quote (3 4 5))))
PASS: srfi-1.test: list-index: two lists: (eqv? 0 (list-index sym2 (quote (1 2 3)) (quote (x 3 4))))
PASS: srfi-1.test: list-index: two lists: (eqv? 1 (list-index sym2 (quote (1 2 3)) (quote (3 x 4))))
PASS: srfi-1.test: list-index: two lists: (eqv? 2 (list-index sym2 (quote (1 2 3)) (quote (3 4 x))))
PASS: srfi-1.test: list-index: two lists: stop shortest: (eqv? #f (list-index sym1 (quote (1 2 x)) (quote (4 5))))
PASS: srfi-1.test: list-index: two lists: stop shortest: (eqv? #f (list-index sym2 (quote (4 5)) (quote (1 2 x))))
PASS: srfi-1.test: list-index: two lists: stop shortest: (eqv? #f (list-index sym1 (quote (3 4)) (quote (1 2 x y))))
PASS: srfi-1.test: list-index: two lists: stop shortest: (eqv? #f (list-index sym2 (quote (1 2 x y)) (quote (3 4))))
PASS: srfi-1.test: list-index: three lists: arg order
PASS: srfi-1.test: list-index: three lists: empty lists
PASS: srfi-1.test: list-index: three lists: pred arg count 0
PASS: srfi-1.test: list-index: three lists: pred arg count 2
PASS: srfi-1.test: list-index: three lists: pred arg count 4
PASS: srfi-1.test: list-index: three lists: improper first 1
PASS: srfi-1.test: list-index: three lists: improper first 2
PASS: srfi-1.test: list-index: three lists: improper first 3
PASS: srfi-1.test: list-index: three lists: improper second 1
PASS: srfi-1.test: list-index: three lists: improper second 2
PASS: srfi-1.test: list-index: three lists: improper second 3
PASS: srfi-1.test: list-index: three lists: improper third 1
PASS: srfi-1.test: list-index: three lists: improper third 2
PASS: srfi-1.test: list-index: three lists: improper third 3
PASS: srfi-1.test: list-index: three lists: (eqv? #f (list-index sym3 (quote (#f)) (quote (#f)) (quote (#f))))
PASS: srfi-1.test: list-index: three lists: (eqv? 0 (list-index sym3 (quote (#f)) (quote (#f)) (quote (x))))
PASS: srfi-1.test: list-index: three lists: (eqv? #f (list-index sym3 (quote (#f #f)) (quote (#f #f)) (quote (#f #f))))
PASS: srfi-1.test: list-index: three lists: (eqv? 0 (list-index sym3 (quote (#f #f)) (quote (#f #f)) (quote (x #f))))
PASS: srfi-1.test: list-index: three lists: (eqv? 1 (list-index sym3 (quote (#f #f)) (quote (#f #f)) (quote (#f x))))
PASS: srfi-1.test: list-index: three lists: (eqv? #f (list-index sym3 (quote (#f #f #f)) (quote (#f #f #f)) (quote (#f #f #f))))
PASS: srfi-1.test: list-index: three lists: (eqv? 0 (list-index sym3 (quote (#f #f #f)) (quote (#f #f #f)) (quote (x #f #f))))
PASS: srfi-1.test: list-index: three lists: (eqv? 1 (list-index sym3 (quote (#f #f #f)) (quote (#f #f #f)) (quote (#f x #f))))
PASS: srfi-1.test: list-index: three lists: (eqv? 2 (list-index sym3 (quote (#f #f #f)) (quote (#f #f #f)) (quote (#f #f x))))
PASS: srfi-1.test: list-index: three lists: stop shortest: (eqv? #f (list-index sym2 (quote ()) (quote (x x x)) (quote (x x))))
PASS: srfi-1.test: list-index: three lists: stop shortest: (eqv? #f (list-index sym1 (quote (x x x)) (quote ()) (quote (x x))))
PASS: srfi-1.test: list-index: three lists: stop shortest: (eqv? #f (list-index sym2 (quote (x x x)) (quote (x x)) (quote ())))
PASS: srfi-1.test: list-index: three lists: stop shortest: (eqv? #f (list-index sym2 (quote (#t)) (quote (#t x x)) (quote (#t x))))
PASS: srfi-1.test: list-index: three lists: stop shortest: (eqv? #f (list-index sym1 (quote (#t x x)) (quote (#t)) (quote (#t x))))
PASS: srfi-1.test: list-index: three lists: stop shortest: (eqv? #f (list-index sym1 (quote (#t x x)) (quote (#t x)) (quote (#t))))
PASS: srfi-1.test: list-index: three lists: apply list unchanged
PASS: srfi-1.test: list-tabulate: -1
PASS: srfi-1.test: list-tabulate: 0
PASS: srfi-1.test: list-tabulate: 1
PASS: srfi-1.test: list-tabulate: 2
PASS: srfi-1.test: list-tabulate: 3
PASS: srfi-1.test: list-tabulate: 4
PASS: srfi-1.test: list-tabulate: string ref proc
PASS: srfi-1.test: lset=: no args
PASS: srfi-1.test: lset=: one arg: ()
PASS: srfi-1.test: lset=: one arg: (1)
PASS: srfi-1.test: lset=: one arg: (1 2)
PASS: srfi-1.test: lset=: two args: () ()
PASS: srfi-1.test: lset=: two args: (1) (1)
PASS: srfi-1.test: lset=: two args: (1) (2)
PASS: srfi-1.test: lset=: two args: (1) (1 2)
PASS: srfi-1.test: lset=: two args: (1 2) (2 1)
PASS: srfi-1.test: lset=: two args: called arg order
PASS: srfi-1.test: lset=: three args: () () ()
PASS: srfi-1.test: lset=: three args: (1) (1) (1)
PASS: srfi-1.test: lset=: three args: (1) (1) (2)
PASS: srfi-1.test: lset=: three args: (1) (1) (1 2)
PASS: srfi-1.test: lset=: three args: (1 2 3) (3 2 1) (1 3 2)
PASS: srfi-1.test: lset=: three args: called arg order
PASS: srfi-1.test: lset-adjoin: case-insensitive =: ("x") "X"
PASS: srfi-1.test: lset-adjoin: called arg order
PASS: srfi-1.test: lset-adjoin: (equal? (quote ()) (lset-adjoin = (quote ())))
PASS: srfi-1.test: lset-adjoin: (equal? (quote (1)) (lset-adjoin = (quote ()) 1))
PASS: srfi-1.test: lset-adjoin: (equal? (quote (1)) (lset-adjoin = (quote ()) 1 1))
PASS: srfi-1.test: lset-adjoin: (equal? (quote (2 1)) (lset-adjoin = (quote ()) 1 2))
PASS: srfi-1.test: lset-adjoin: (equal? (quote (3 1 2)) (lset-adjoin = (quote (1 2)) 1 2 3 2 1))
PASS: srfi-1.test: lset-adjoin: apply list unchanged
PASS: srfi-1.test: lset-adjoin: (1 1) 1 1
PASS: srfi-1.test: lset-adjoin: (2) 1 1
PASS: srfi-1.test: lset-difference: called arg order
PASS: srfi-1.test: lset-difference!: proc - num
PASS: srfi-1.test: lset-difference!: proc - list
PASS: srfi-1.test: lset-difference!: called arg order
PASS: srfi-1.test: lset-difference!: (equal? (quote ()) (lset-difference! = (quote ())))
PASS: srfi-1.test: lset-difference!: (equal? (quote (1)) (lset-difference! = (list 1)))
PASS: srfi-1.test: lset-difference!: (equal? (quote (1 2)) (lset-difference! = (list 1 2)))
PASS: srfi-1.test: lset-difference!: (equal? (quote ()) (lset-difference! = (list) (quote (3))))
PASS: srfi-1.test: lset-difference!: (equal? (quote ()) (lset-difference! = (list 3) (quote (3))))
PASS: srfi-1.test: lset-difference!: (equal? (quote (1)) (lset-difference! = (list 1 3) (quote (3))))
PASS: srfi-1.test: lset-difference!: (equal? (quote (1)) (lset-difference! = (list 3 1) (quote (3))))
PASS: srfi-1.test: lset-difference!: (equal? (quote (1)) (lset-difference! = (list 1 3 3) (quote (3))))
PASS: srfi-1.test: lset-difference!: (equal? (quote (1)) (lset-difference! = (list 3 1 3) (quote (3))))
PASS: srfi-1.test: lset-difference!: (equal? (quote (1)) (lset-difference! = (list 3 3 1) (quote (3))))
PASS: srfi-1.test: lset-difference!: (equal? (quote (1)) (lset-difference! = (list 1 2 3) (quote (2 3))))
PASS: srfi-1.test: lset-difference!: (equal? (quote (1)) (lset-difference! = (list 1 2 3) (quote (3 2))))
PASS: srfi-1.test: lset-difference!: (equal? (quote (1)) (lset-difference! = (list 1 2 3) (quote (3)) (quote (2))))
PASS: srfi-1.test: lset-difference!: (equal? (quote (1)) (lset-difference! = (list 1 2 3) (quote (2)) (quote (3))))
PASS: srfi-1.test: lset-difference!: (equal? (quote (1)) (lset-difference! = (list 1 2 3) (quote (2)) (quote (2 3))))
PASS: srfi-1.test: lset-difference!: (equal? (quote (1)) (lset-difference! = (list 1 2 3) (quote (2)) (quote (3 2))))
PASS: srfi-1.test: lset-difference!: (equal? (quote (1 2)) (lset-difference! = (list 1 2 3) (quote (3)) (quote (3))))
PASS: srfi-1.test: lset-difference!: (equal? (quote (1 2)) (lset-difference! = (list 1 3 2) (quote (3)) (quote (3))))
PASS: srfi-1.test: lset-difference!: (equal? (quote (1 2)) (lset-difference! = (list 3 1 2) (quote (3)) (quote (3))))
PASS: srfi-1.test: lset-difference!: (equal? (quote (1 2 3)) (lset-difference! = (list 1 2 3 4) (quote (4))))
PASS: srfi-1.test: lset-difference!: (equal? (quote (1 2 3)) (lset-difference! = (list 1 2 4 3) (quote (4))))
PASS: srfi-1.test: lset-difference!: (equal? (quote (1 2 3)) (lset-difference! = (list 1 4 2 3) (quote (4))))
PASS: srfi-1.test: lset-difference!: (equal? (quote (1 2 3)) (lset-difference! = (list 4 1 2 3) (quote (4))))
PASS: srfi-1.test: lset-difference!: (equal? (quote (1 2)) (lset-difference! = (list 1 2 3 4) (quote (4)) (quote (3))))
PASS: srfi-1.test: lset-difference!: (equal? (quote (1 2)) (lset-difference! = (list 1 3 2 4) (quote (4)) (quote (3))))
PASS: srfi-1.test: lset-difference!: (equal? (quote (1 2)) (lset-difference! = (list 3 1 2 4) (quote (4)) (quote (3))))
PASS: srfi-1.test: lset-difference!: (equal? (quote (1 2)) (lset-difference! = (list 1 3 4 2) (quote (4)) (quote (3))))
PASS: srfi-1.test: lset-difference!: (equal? (quote (1 2)) (lset-difference! = (list 3 1 4 2) (quote (4)) (quote (3))))
PASS: srfi-1.test: lset-difference!: (equal? (quote (1 2)) (lset-difference! = (list 3 4 1 2) (quote (4)) (quote (3))))
PASS: srfi-1.test: lset-diff+intersection: called arg order
PASS: srfi-1.test: lset-diff+intersection: called arg order
PASS: srfi-1.test: lset-intersection: called arg order
PASS: srfi-1.test: lset-intersection: called arg order
PASS: srfi-1.test: lset-union: no args
PASS: srfi-1.test: lset-union: one arg
PASS: srfi-1.test: lset-union: '() '()
PASS: srfi-1.test: lset-union: '() '(1 2 3)
PASS: srfi-1.test: lset-union: '(1 2 3) '()
PASS: srfi-1.test: lset-union: '(1 2 3) '(4 3 5)
PASS: srfi-1.test: lset-union: '(1 2 3) '(4) '(3 5))
PASS: srfi-1.test: lset-union: called arg order
PASS: srfi-1.test: member: no args
PASS: srfi-1.test: member: one arg
PASS: srfi-1.test: member: 1 (1 2 3)
PASS: srfi-1.test: member: 2 (1 2 3)
PASS: srfi-1.test: member: 3 (1 2 3)
PASS: srfi-1.test: member: 4 (1 2 3)
PASS: srfi-1.test: member: called arg order
PASS: srfi-1.test: ninth: () -1
PASS: srfi-1.test: ninth: (eq? (quote i) (ninth (quote (a b c d e f g h i))))
PASS: srfi-1.test: ninth: (eq? (quote i) (ninth (quote (a b c d e f g h i j))))
PASS: srfi-1.test: not-pair?: inum
PASS: srfi-1.test: not-pair?: pair
PASS: srfi-1.test: not-pair?: symbol
PASS: srfi-1.test: take: '() 0
PASS: srfi-1.test: take: '(a) 0
PASS: srfi-1.test: take: '(a b) 0
PASS: srfi-1.test: take: '(a b c) 0
PASS: srfi-1.test: take: '(a) 1
PASS: srfi-1.test: take: '(a b) 1
PASS: srfi-1.test: take: '(a b c) 1
PASS: srfi-1.test: take: '(a b) 2
PASS: srfi-1.test: take: '(a b c) 2
PASS: srfi-1.test: take: circular '(a) 0
PASS: srfi-1.test: take: circular '(a) 1
PASS: srfi-1.test: take: circular '(a) 2
PASS: srfi-1.test: take: circular '(a b) 5
PASS: srfi-1.test: take: '(a . b) 1
PASS: srfi-1.test: take: '(a b . c) 1
PASS: srfi-1.test: take: '(a b . c) 2
PASS: srfi-1.test: take-while: (equal? (quote ()) (take-while odd? (quote ())))
PASS: srfi-1.test: take-while: (equal? (quote (1)) (take-while odd? (quote (1))))
PASS: srfi-1.test: take-while: (equal? (quote (1 3)) (take-while odd? (quote (1 3))))
PASS: srfi-1.test: take-while: (equal? (quote (1 3 5)) (take-while odd? (quote (1 3 5))))
PASS: srfi-1.test: take-while: (equal? (quote ()) (take-while odd? (quote (2))))
PASS: srfi-1.test: take-while: (equal? (quote (1)) (take-while odd? (quote (1 2))))
PASS: srfi-1.test: take-while: (equal? (quote (1 3)) (take-while odd? (quote (1 3 4))))
PASS: srfi-1.test: take-while: (equal? (quote ()) (take-while odd? (quote (2 1))))
PASS: srfi-1.test: take-while: (equal? (quote (1)) (take-while odd? (quote (1 4 3))))
PASS: srfi-1.test: take-while: (equal? (quote ()) (take-while odd? (quote (4 1 3))))
PASS: srfi-1.test: take-while!: (equal? (quote ()) (take-while! odd? (quote ())))
PASS: srfi-1.test: take-while!: (equal? (quote (1)) (take-while! odd? (list 1)))
PASS: srfi-1.test: take-while!: (equal? (quote (1 3)) (take-while! odd? (list 1 3)))
PASS: srfi-1.test: take-while!: (equal? (quote (1 3 5)) (take-while! odd? (list 1 3 5)))
PASS: srfi-1.test: take-while!: (equal? (quote ()) (take-while! odd? (list 2)))
PASS: srfi-1.test: take-while!: (equal? (quote (1)) (take-while! odd? (list 1 2)))
PASS: srfi-1.test: take-while!: (equal? (quote (1 3)) (take-while! odd? (list 1 3 4)))
PASS: srfi-1.test: take-while!: (equal? (quote ()) (take-while! odd? (list 2 1)))
PASS: srfi-1.test: take-while!: (equal? (quote (1)) (take-while! odd? (list 1 4 3)))
PASS: srfi-1.test: take-while!: (equal? (quote ()) (take-while! odd? (list 4 1 3)))
PASS: srfi-1.test: partition: with dropped tail
PASS: srfi-1.test: partition: with kept tail
PASS: srfi-1.test: partition: with everything dropped
PASS: srfi-1.test: partition: with everything kept
PASS: srfi-1.test: partition: with empty list
PASS: srfi-1.test: partition: with reasonably long list
PASS: srfi-1.test: partition: with improper list
PASS: srfi-1.test: partition!: with dropped tail
PASS: srfi-1.test: partition!: with kept tail
PASS: srfi-1.test: partition!: with everything dropped
PASS: srfi-1.test: partition!: with everything kept
PASS: srfi-1.test: partition!: with empty list
PASS: srfi-1.test: partition!: with reasonably long list
PASS: srfi-1.test: partition!: with improper list
PASS: srfi-1.test: reduce: empty
PASS: srfi-1.test: reduce: one elem
PASS: srfi-1.test: reduce: two elems
PASS: srfi-1.test: reduce: three elems
PASS: srfi-1.test: reduce: four elems
PASS: srfi-1.test: reduce-right: empty
PASS: srfi-1.test: reduce-right: one elem
PASS: srfi-1.test: reduce-right: two elems
PASS: srfi-1.test: reduce-right: three elems
PASS: srfi-1.test: reduce-right: four elems
PASS: srfi-1.test: remove: (equal? (quote ()) (remove odd? (quote ())))
PASS: srfi-1.test: remove: (equal? (quote ()) (remove odd? (quote (1))))
PASS: srfi-1.test: remove: (equal? (quote (2)) (remove odd? (quote (2))))
PASS: srfi-1.test: remove: (equal? (quote ()) (remove odd? (quote (1 3))))
PASS: srfi-1.test: remove: (equal? (quote (2)) (remove odd? (quote (2 3))))
PASS: srfi-1.test: remove: (equal? (quote (2)) (remove odd? (quote (1 2))))
PASS: srfi-1.test: remove: (equal? (quote (2 4)) (remove odd? (quote (2 4))))
PASS: srfi-1.test: remove: (equal? (quote ()) (remove odd? (quote (1 3 5))))
PASS: srfi-1.test: remove: (equal? (quote (2)) (remove odd? (quote (2 3 5))))
PASS: srfi-1.test: remove: (equal? (quote (2)) (remove odd? (quote (1 2 5))))
PASS: srfi-1.test: remove: (equal? (quote (2 4)) (remove odd? (quote (2 4 5))))
PASS: srfi-1.test: remove: (equal? (quote (6)) (remove odd? (quote (1 3 6))))
PASS: srfi-1.test: remove: (equal? (quote (2 6)) (remove odd? (quote (2 3 6))))
PASS: srfi-1.test: remove: (equal? (quote (2 6)) (remove odd? (quote (1 2 6))))
PASS: srfi-1.test: remove: (equal? (quote (2 4 6)) (remove odd? (quote (2 4 6))))
PASS: srfi-1.test: remove!: (equal? (quote ()) (remove! odd? (quote ())))
PASS: srfi-1.test: remove!: (equal? (quote ()) (remove! odd? (list 1)))
PASS: srfi-1.test: remove!: (equal? (quote (2)) (remove! odd? (list 2)))
PASS: srfi-1.test: remove!: (equal? (quote ()) (remove! odd? (list 1 3)))
PASS: srfi-1.test: remove!: (equal? (quote (2)) (remove! odd? (list 2 3)))
PASS: srfi-1.test: remove!: (equal? (quote (2)) (remove! odd? (list 1 2)))
PASS: srfi-1.test: remove!: (equal? (quote (2 4)) (remove! odd? (list 2 4)))
PASS: srfi-1.test: remove!: (equal? (quote ()) (remove! odd? (list 1 3 5)))
PASS: srfi-1.test: remove!: (equal? (quote (2)) (remove! odd? (list 2 3 5)))
PASS: srfi-1.test: remove!: (equal? (quote (2)) (remove! odd? (list 1 2 5)))
PASS: srfi-1.test: remove!: (equal? (quote (2 4)) (remove! odd? (list 2 4 5)))
PASS: srfi-1.test: remove!: (equal? (quote (6)) (remove! odd? (list 1 3 6)))
PASS: srfi-1.test: remove!: (equal? (quote (2 6)) (remove! odd? (list 2 3 6)))
PASS: srfi-1.test: remove!: (equal? (quote (2 6)) (remove! odd? (list 1 2 6)))
PASS: srfi-1.test: remove!: (equal? (quote (2 4 6)) (remove! odd? (list 2 4 6)))
PASS: srfi-1.test: seventh: () -1
PASS: srfi-1.test: seventh: (eq? (quote g) (seventh (quote (a b c d e f g))))
PASS: srfi-1.test: seventh: (eq? (quote g) (seventh (quote (a b c d e f g h))))
PASS: srfi-1.test: sixth: () -1
PASS: srfi-1.test: sixth: (eq? (quote f) (sixth (quote (a b c d e f))))
PASS: srfi-1.test: sixth: (eq? (quote f) (sixth (quote (a b c d e f g))))
PASS: srfi-1.test: split-at: () -1
PASS: srfi-1.test: split-at: (equal-values? (quote (() ())) (lambda () (split-at (quote ()) 0)))
PASS: srfi-1.test: split-at: () 1
PASS: srfi-1.test: split-at: (1) -1
PASS: srfi-1.test: split-at: (equal-values? (quote (() (1))) (lambda () (split-at (quote (1)) 0)))
PASS: srfi-1.test: split-at: (equal-values? (quote ((1) ())) (lambda () (split-at (quote (1)) 1)))
PASS: srfi-1.test: split-at: (1) 2
PASS: srfi-1.test: split-at: (4 5) -1
PASS: srfi-1.test: split-at: (equal-values? (quote (() (4 5))) (lambda () (split-at (quote (4 5)) 0)))
PASS: srfi-1.test: split-at: (equal-values? (quote ((4) (5))) (lambda () (split-at (quote (4 5)) 1)))
PASS: srfi-1.test: split-at: (equal-values? (quote ((4 5) ())) (lambda () (split-at (quote (4 5)) 2)))
PASS: srfi-1.test: split-at: (4 5) 3
PASS: srfi-1.test: split-at: (4 5 6) -1
PASS: srfi-1.test: split-at: (equal-values? (quote (() (4 5 6))) (lambda () (split-at (quote (4 5 6)) 0)))
PASS: srfi-1.test: split-at: (equal-values? (quote ((4) (5 6))) (lambda () (split-at (quote (4 5 6)) 1)))
PASS: srfi-1.test: split-at: (equal-values? (quote ((4 5) (6))) (lambda () (split-at (quote (4 5 6)) 2)))
PASS: srfi-1.test: split-at: (equal-values? (quote ((4 5 6) ())) (lambda () (split-at (quote (4 5 6)) 3)))
PASS: srfi-1.test: split-at: (4 5 6) 4
PASS: srfi-1.test: split-at!: () -1
PASS: srfi-1.test: split-at!: (equal-values? (quote (() ())) (lambda () (split-at! (quote ()) 0)))
PASS: srfi-1.test: split-at!: () 1
PASS: srfi-1.test: split-at!: (1) -1
PASS: srfi-1.test: split-at!: (equal-values? (quote (() (1))) (lambda () (split-at! (list 1) 0)))
PASS: srfi-1.test: split-at!: (equal-values? (quote ((1) ())) (lambda () (split-at! (list 1) 1)))
PASS: srfi-1.test: split-at!: (1) 2
PASS: srfi-1.test: split-at!: (4 5) -1
PASS: srfi-1.test: split-at!: (equal-values? (quote (() (4 5))) (lambda () (split-at! (list 4 5) 0)))
PASS: srfi-1.test: split-at!: (equal-values? (quote ((4) (5))) (lambda () (split-at! (list 4 5) 1)))
PASS: srfi-1.test: split-at!: (equal-values? (quote ((4 5) ())) (lambda () (split-at! (list 4 5) 2)))
PASS: srfi-1.test: split-at!: (4 5) 3
PASS: srfi-1.test: split-at!: (4 5 6) -1
PASS: srfi-1.test: split-at!: (equal-values? (quote (() (4 5 6))) (lambda () (split-at! (list 4 5 6) 0)))
PASS: srfi-1.test: split-at!: (equal-values? (quote ((4) (5 6))) (lambda () (split-at! (list 4 5 6) 1)))
PASS: srfi-1.test: split-at!: (equal-values? (quote ((4 5) (6))) (lambda () (split-at! (list 4 5 6) 2)))
PASS: srfi-1.test: split-at!: (equal-values? (quote ((4 5 6) ())) (lambda () (split-at! (list 4 5 6) 3)))
PASS: srfi-1.test: split-at!: (4 5 6) 4
PASS: srfi-1.test: span: empty
PASS: srfi-1.test: span: y
PASS: srfi-1.test: span: n
PASS: srfi-1.test: span: yy
PASS: srfi-1.test: span: ny
PASS: srfi-1.test: span: yn
PASS: srfi-1.test: span: nn
PASS: srfi-1.test: span: yyy
PASS: srfi-1.test: span: nyy
PASS: srfi-1.test: span: yny
PASS: srfi-1.test: span: nny
PASS: srfi-1.test: span: yyn
PASS: srfi-1.test: span: nyn
PASS: srfi-1.test: span: ynn
PASS: srfi-1.test: span: nnn
PASS: srfi-1.test: span!: empty
PASS: srfi-1.test: span!: y
PASS: srfi-1.test: span!: n
PASS: srfi-1.test: span!: yy
PASS: srfi-1.test: span!: ny
PASS: srfi-1.test: span!: yn
PASS: srfi-1.test: span!: nn
PASS: srfi-1.test: span!: yyy
PASS: srfi-1.test: span!: nyy
PASS: srfi-1.test: span!: yny
PASS: srfi-1.test: span!: nny
PASS: srfi-1.test: span!: yyn
PASS: srfi-1.test: span!: nyn
PASS: srfi-1.test: span!: ynn
PASS: srfi-1.test: span!: nnn
PASS: srfi-1.test: take!: () -1
PASS: srfi-1.test: take!: (equal? (quote ()) (take! (quote ()) 0))
PASS: srfi-1.test: take!: () 1
PASS: srfi-1.test: take!: (1) -1
PASS: srfi-1.test: take!: (equal? (quote ()) (take! (quote (1)) 0))
PASS: srfi-1.test: take!: (equal? (quote (1)) (take! (quote (1)) 1))
PASS: srfi-1.test: take!: (1) 2
PASS: srfi-1.test: take!: (4 5) -1
PASS: srfi-1.test: take!: (equal? (quote ()) (take! (quote (4 5)) 0))
PASS: srfi-1.test: take!: (equal? (quote (4)) (take! (quote (4 5)) 1))
PASS: srfi-1.test: take!: (equal? (quote (4 5)) (take! (quote (4 5)) 2))
PASS: srfi-1.test: take!: (4 5) 3
PASS: srfi-1.test: take!: (4 5 6) -1
PASS: srfi-1.test: take!: (equal? (quote ()) (take! (quote (4 5 6)) 0))
PASS: srfi-1.test: take!: (equal? (quote (4)) (take! (quote (4 5 6)) 1))
PASS: srfi-1.test: take!: (equal? (quote (4 5)) (take! (quote (4 5 6)) 2))
PASS: srfi-1.test: take!: (equal? (quote (4 5 6)) (take! (quote (4 5 6)) 3))
PASS: srfi-1.test: take!: (4 5 6) 4
PASS: srfi-1.test: take-right: () -1
PASS: srfi-1.test: take-right: (equal? (quote ()) (take-right (quote ()) 0))
PASS: srfi-1.test: take-right: () 1
PASS: srfi-1.test: take-right: (1) -1
PASS: srfi-1.test: take-right: (equal? (quote ()) (take-right (quote (1)) 0))
PASS: srfi-1.test: take-right: (equal? (quote (1)) (take-right (quote (1)) 1))
PASS: srfi-1.test: take-right: (1) 2
PASS: srfi-1.test: take-right: (4 5) -1
PASS: srfi-1.test: take-right: (equal? (quote ()) (take-right (quote (4 5)) 0))
PASS: srfi-1.test: take-right: (equal? (quote (5)) (take-right (quote (4 5)) 1))
PASS: srfi-1.test: take-right: (equal? (quote (4 5)) (take-right (quote (4 5)) 2))
PASS: srfi-1.test: take-right: (4 5) 3
PASS: srfi-1.test: take-right: (4 5 6) -1
PASS: srfi-1.test: take-right: (equal? (quote ()) (take-right (quote (4 5 6)) 0))
PASS: srfi-1.test: take-right: (equal? (quote (6)) (take-right (quote (4 5 6)) 1))
PASS: srfi-1.test: take-right: (equal? (quote (5 6)) (take-right (quote (4 5 6)) 2))
PASS: srfi-1.test: take-right: (equal? (quote (4 5 6)) (take-right (quote (4 5 6)) 3))
PASS: srfi-1.test: take-right: (4 5 6) 4
PASS: srfi-1.test: take-right: (a b . c) 0
PASS: srfi-1.test: take-right: (a b . c) 1
PASS: srfi-1.test: tenth: () -1
PASS: srfi-1.test: tenth: (eq? (quote j) (tenth (quote (a b c d e f g h i j))))
PASS: srfi-1.test: tenth: (eq? (quote j) (tenth (quote (a b c d e f g h i j k))))
PASS: srfi-1.test: xcons: (equal? (quote (y . x)) (xcons (quote x) (quote y)))
PASS: srfi-10.test: hash-comma read extension: basic feature
PASS: srfi-105.test: no-curly-infix: (equal? (quote (#{\x7b;f}# (x) + g (y) + #{h\x7b;z\x7d;}# + (a) #{\x7d;}#)) (quasiquote ((unquote (string->symbol {f)) (x) + g (y) + (unquote (string->symbol h{z})) + (a) (unquote (string->symbol })))))
PASS: srfi-105.test: curly-infix: (equal? (quote (<= n 5)) (quote (<= n 5)))
PASS: srfi-105.test: curly-infix: (equal? (quote (+ x 1)) (quote (+ x 1)))
PASS: srfi-105.test: curly-infix: (equal? (quote (+ a b c)) (quote (+ a b c)))
PASS: srfi-105.test: curly-infix: (equal? (quote ((unquote op) x y z)) (quote ((unquote op) x y z)))
PASS: srfi-105.test: curly-infix: (equal? (quote (eqv? x (quasiquote a))) (quote (eqv? x (quasiquote a))))
PASS: srfi-105.test: curly-infix: (equal? (quote (eq? (quote a) b)) (quote (eq? (quote a) b)))
PASS: srfi-105.test: curly-infix: (equal? (quote (+ n-1 n-2)) (quote (+ n-1 n-2)))
PASS: srfi-105.test: curly-infix: (equal? (quote (* a (+ b c))) (quote (* a (+ b c))))
PASS: srfi-105.test: curly-infix: (equal? (quote (+ a (- b c))) (quote (+ a (- b c))))
PASS: srfi-105.test: curly-infix: (equal? (quote (- (+ a b) c)) (quote (- (+ a b) c)))
PASS: srfi-105.test: curly-infix: (equal? (quote (and (> a 0) (>= b 1))) (quote (and (> a 0) (>= b 1))))
PASS: srfi-105.test: curly-infix: (equal? (quote ()) (quote ()))
PASS: srfi-105.test: curly-infix: (equal? (quote 5) (quote 5))
PASS: srfi-105.test: curly-infix: (equal? (quote (- x)) (quote (- x)))
PASS: srfi-105.test: curly-infix: (equal? (quote (>= (length x) 6)) (quote (>= (length x) 6)))
PASS: srfi-105.test: curly-infix: (equal? (quote (+ (f x) (g y) (h z))) (quote (+ (f x) (g y) (h z))))
PASS: srfi-105.test: curly-infix: (equal? (quote (+ (f a b) (g h))) (quote (+ (f a b) (g h))))
PASS: srfi-105.test: curly-infix: (equal? (quote (+ (f a b) (g h))) (quote (+ (f a b) (g h))))
PASS: srfi-105.test: curly-infix: (equal? (quote (quote (+ a (f b) x))) (quote (quote (+ a (f b) x))))
PASS: srfi-105.test: curly-infix: (equal? (quote (/ (- a) b)) (quote (/ (- a) b)))
PASS: srfi-105.test: curly-infix: (equal? (quote (/ (- a) b)) (quote (/ (- a) b)))
PASS: srfi-105.test: curly-infix: (equal? (quote (cos q)) (quote (cos q)))
PASS: srfi-105.test: curly-infix: (equal? (quote (e)) (quote (e)))
PASS: srfi-105.test: curly-infix: (equal? (quote (pi)) (quote (pi)))
PASS: srfi-105.test: curly-infix: (equal? (quote (quote (f x))) (quote (quote (f x))))
PASS: srfi-105.test: curly-infix: (equal? (quote (f (g (h x)))) (quote (f (g (h x)))))
PASS: srfi-105.test: curly-infix: (equal? (quote #(1 2 (f a) 4)) (quote #(1 2 (f a) 4)))
PASS: srfi-105.test: curly-infix: (equal? (quote (f (h x))) (quote (f (h x))))
PASS: srfi-105.test: curly-infix: (equal? (quote (f (h x))) (quote (f (h x))))
PASS: srfi-105.test: curly-infix: (equal? (quote (f (h x))) (quote (f (h x))))
PASS: srfi-105.test: curly-infix: (equal? (quote (f #(g (h x)))) (quote (f #(g (h x)))))
PASS: srfi-105.test: curly-infix: (equal? (quote (f (quote (g (h x))))) (quote (f (quote (g (h x))))))
PASS: srfi-105.test: curly-infix: (equal? (quote (f (quasiquote (g (h x))))) (quote (f (quasiquote (g (h x))))))
PASS: srfi-105.test: curly-infix: (equal? (quote (f (syntax (g (h x))))) (quote (f (syntax (g (h x))))))
PASS: srfi-105.test: curly-infix: (equal? (quote (f #2((g) ((h x))))) (quote (f #2((g) ((h x))))))
PASS: srfi-105.test: curly-infix: (equal? (quote (map - ns)) (quote (map - ns)))
PASS: srfi-105.test: curly-infix: (equal? (quote (map - ns)) (quote (map - ns)))
PASS: srfi-105.test: curly-infix: (equal? (quote (* n (factorial (- n 1)))) (quote (* n (factorial (- n 1)))))
PASS: srfi-105.test: curly-infix: (equal? (quote (* 2 (sin (- x)))) (quote (* 2 (sin (- x)))))
PASS: srfi-105.test: curly-infix: (equal? (quote ($nfx$ 3 + 4 +)) (quote ($nfx$ 3 + 4 +)))
PASS: srfi-105.test: curly-infix: (equal? (quote ($nfx$ 3 + 4 + 5 +)) (quote ($nfx$ 3 + 4 + 5 +)))
PASS: srfi-105.test: curly-infix: (equal? (quote ($nfx$ a . z)) (quote ($nfx$ a . z)))
PASS: srfi-105.test: curly-infix: (equal? (quote ($nfx$ a + b - c)) (quote ($nfx$ a + b - c)))
PASS: srfi-105.test: curly-infix: (equal? (quote (read . options)) (quote (read . options)))
PASS: srfi-105.test: curly-infix: (equal? (quote ((a x) y)) (quote ((a x) y)))
PASS: srfi-105.test: curly-infix: (equal? (quote ($bracket-apply$ x a)) (quote ($bracket-apply$ x a)))
PASS: srfi-105.test: curly-infix: (equal? (quote ($bracket-apply$ y a b)) (quote ($bracket-apply$ y a b)))
PASS: srfi-105.test: curly-infix: (equal? (quote (f (g x))) (quote (f (g x))))
PASS: srfi-105.test: curly-infix: (equal? (quote (f (g x) (h x))) (quote (f (g x) (h x))))
PASS: srfi-105.test: curly-infix: (equal? (quote ()) (quote ()))
PASS: srfi-105.test: curly-infix: (equal? (quote e) (quote e))
PASS: srfi-105.test: curly-infix: (equal? (quote (e1 e2)) (quote (e1 e2)))
PASS: srfi-105.test: curly-infix: (equal? (quote ($nfx$ a . t)) (quote ($nfx$ a . t)))
PASS: srfi-105.test: curly-infix: (equal? (quote ($nfx$ a b . t)) (quote ($nfx$ a b . t)))
PASS: srfi-105.test: curly-infix: (equal? (quote ($nfx$ a b c . t)) (quote ($nfx$ a b c . t)))
PASS: srfi-105.test: curly-infix: (equal? (quote ($nfx$ a b c d . t)) (quote ($nfx$ a b c d . t)))
PASS: srfi-105.test: curly-infix: (equal? (quote ($nfx$ a + b +)) (quote ($nfx$ a + b +)))
PASS: srfi-105.test: curly-infix: (equal? (quote ($nfx$ a + b + c +)) (quote ($nfx$ a + b + c +)))
PASS: srfi-105.test: curly-infix: (equal? (quote ($nfx$ q + r * s)) (quote ($nfx$ q + r * s)))
PASS: srfi-105.test: curly-infix: (equal? (quote (e)) (quote (e)))
PASS: srfi-105.test: curly-infix: (equal? (quote (e)) (quote (e)))
PASS: srfi-105.test: curly-infix: (equal? (quote (e 1)) (quote (e 1)))
PASS: srfi-105.test: curly-infix: (equal? (quote (e 1)) (quote (e 1)))
PASS: srfi-105.test: curly-infix: (equal? (quote (e 1 2)) (quote (e 1 2)))
PASS: srfi-105.test: curly-infix: (equal? (quote (e (1 2))) (quote (e (1 2))))
PASS: srfi-105.test: curly-infix: (equal? (quote (f (- n 1))) (quote (f (- n 1))))
PASS: srfi-105.test: curly-infix: (equal? (quote ((f (- n 1)) x)) (quote ((f (- n 1)) x)))
PASS: srfi-105.test: curly-infix: (equal? (quote ((f (- n 1)) (- y 1))) (quote ((f (- n 1)) (- y 1))))
PASS: srfi-105.test: curly-infix: (equal? (quote ($bracket-apply$ (f (- x)) y)) (quote ($bracket-apply$ (f (- x)) y)))
PASS: srfi-105.test: curly-infix: (equal? (quote (g (- x))) (quote (g (- x))))
PASS: srfi-105.test: curly-infix: (equal? (quote e) (quote e))
PASS: srfi-105.test: curly-infix: (equal? (quote ($bracket-apply$ e)) (quote ($bracket-apply$ e)))
PASS: srfi-105.test: curly-infix: (equal? (quote ($bracket-apply$ e 1 2)) (quote ($bracket-apply$ e 1 2)))
PASS: srfi-105.test: curly-infix: (equal? (quote ($bracket-apply$ e 1 . 2)) (quote ($bracket-apply$ e 1 . 2)))
PASS: srfi-105.test: curly-infix: no positions: simple curly-infix list
PASS: srfi-105.test: curly-infix: no positions: mixed curly-infix list
PASS: srfi-105.test: curly-infix: no positions: singleton curly-infix list
PASS: srfi-105.test: curly-infix: no positions: neoteric expression
PASS: srfi-105.test: curly-infix: positions: simple curly-infix list
PASS: srfi-105.test: curly-infix: positions: mixed curly-infix list
UNRESOLVED: srfi-105.test: curly-infix: positions: singleton curly-infix list
UNRESOLVED: srfi-105.test: curly-infix: positions: neoteric expression
PASS: srfi-105.test: curly-infix: (equal? (quote (a (x) (y))) (quote (a (x) (y))))
PASS: srfi-105.test: curly-infix: (equal? (quote (x (a))) (quote (x (a))))
PASS: srfi-105.test: curly-infix: (equal? (quote (y (a b))) (quote (y (a b))))
PASS: srfi-105.test: curly-infix: (equal? (quote (a f (- n 1))) (quote (a f (- n 1))))
PASS: srfi-105.test: curly-infix: (equal? (quote (a f (- n 1) (x))) (quote (a f (- n 1) (x))))
PASS: srfi-105.test: curly-infix: (equal? (quote (a f (- n 1) (x))) (quote (a f (- n 1) (x))))
PASS: srfi-105.test: curly-infix: (equal? (quote (a f (- n 1) (- y 1))) (quote (a f (- n 1) (- y 1))))
PASS: srfi-105.test: curly-infix: (equal? (quote ()) (quote ()))
PASS: srfi-105.test: curly-infix: (equal? (quote (a)) (quote (a)))
PASS: srfi-105.test: curly-infix: (equal? (quote (a b)) (quote (a b)))
PASS: srfi-105.test: curly-infix: (equal? (quote (a . b)) (quote (a . b)))
PASS: srfi-105.test: curly-infix: (equal? (quote ()) (quote ()))
PASS: srfi-105.test: curly-infix: (equal? (quote (a)) (quote (a)))
PASS: srfi-105.test: curly-infix: (equal? (quote (a b)) (quote (a b)))
PASS: srfi-105.test: curly-infix: (equal? (quote (a . b)) (quote (a . b)))
PASS: srfi-105.test: curly-infix-and-bracket-lists: (equal? (quote ($bracket-apply$ e)) (quote ($bracket-apply$ e)))
PASS: srfi-105.test: curly-infix-and-bracket-lists: (equal? (quote ($bracket-apply$ e 1 2)) (quote ($bracket-apply$ e 1 2)))
PASS: srfi-105.test: curly-infix-and-bracket-lists: (equal? (quote ($bracket-apply$ e 1 . 2)) (quote ($bracket-apply$ e 1 . 2)))
PASS: srfi-105.test: curly-infix-and-bracket-lists: (equal? (quote ($bracket-list$)) (quote ($bracket-list$)))
PASS: srfi-105.test: curly-infix-and-bracket-lists: (equal? (quote ($bracket-list$ a)) (quote ($bracket-list$ a)))
PASS: srfi-105.test: curly-infix-and-bracket-lists: (equal? (quote ($bracket-list$ a b)) (quote ($bracket-list$ a b)))
PASS: srfi-105.test: curly-infix-and-bracket-lists: (equal? (quote ($bracket-list$ a . b)) (quote ($bracket-list$ a . b)))
PASS: srfi-105.test: curly-infix-and-bracket-lists: (equal? (quote ($bracket-list$)) (quote ($bracket-list$)))
PASS: srfi-105.test: curly-infix-and-bracket-lists: (equal? (quote ($bracket-list$ a)) (quote ($bracket-list$ a)))
PASS: srfi-105.test: curly-infix-and-bracket-lists: (equal? (quote ($bracket-list$ a b)) (quote ($bracket-list$ a b)))
PASS: srfi-105.test: curly-infix-and-bracket-lists: (equal? (quote ($bracket-list$ a . b)) (quote ($bracket-list$ a . b)))
PASS: srfi-11.test: let-values: no exprs: no values
PASS: srfi-11.test: let-values: one expr: no values
PASS: srfi-11.test: let-values: one expr: one value
PASS: srfi-11.test: let-values: one expr: one value as rest
PASS: srfi-11.test: let-values: one expr: two values
PASS: srfi-11.test: let-values: two exprs: no values each
PASS: srfi-11.test: let-values: two exprs: one value / no values
PASS: srfi-11.test: let-values: two exprs: one value each
PASS: srfi-11.test: let-values: two exprs: first binding invisible to second expr
PASS: srfi-11.test: let-values: two exprs: first binding with rest invisible to second expr
PASS: srfi-11.test: let*-values: no exprs: no values
PASS: srfi-11.test: let*-values: one expr: no values
PASS: srfi-11.test: let*-values: one expr: one value
PASS: srfi-11.test: let*-values: one expr: one value as rest
PASS: srfi-11.test: let*-values: one expr: two values
PASS: srfi-11.test: let*-values: two exprs: no values each
PASS: srfi-11.test: let*-values: two exprs: one value / no values
PASS: srfi-11.test: let*-values: two exprs: one value each
PASS: srfi-11.test: let*-values: two exprs: first binding visible to second expr
PASS: srfi-111.test: srfi-111: box and unbox
PASS: srfi-111.test: srfi-111: box?
PASS: srfi-111.test: srfi-111: set-box!
PASS: srfi-111.test: srfi-111: eq? on boxes
PASS: srfi-111.test: srfi-111: eqv? on boxes
PASS: srfi-111.test: srfi-111: equal? on boxes
PASS: srfi-13.test: string-any: null string
PASS: srfi-13.test: string-any: start index == end index
PASS: srfi-13.test: string-any: bad char_pred: integer
PASS: srfi-13.test: string-any: bad char_pred: string
PASS: srfi-13.test: string-any: char: no match
PASS: srfi-13.test: string-any: char: one match
PASS: srfi-13.test: string-any: char: one match: BMP
PASS: srfi-13.test: string-any: char: one match: SMP
PASS: srfi-13.test: string-any: char: more than one match
PASS: srfi-13.test: string-any: char: no match, start index
PASS: srfi-13.test: string-any: char: one match, start index
PASS: srfi-13.test: string-any: char: more than one match, start index
PASS: srfi-13.test: string-any: char: no match, start and end index
PASS: srfi-13.test: string-any: char: one match, start and end index
PASS: srfi-13.test: string-any: char: more than one match, start and end index
PASS: srfi-13.test: string-any: charset: no match
PASS: srfi-13.test: string-any: charset: one match
PASS: srfi-13.test: string-any: charset: more than one match
PASS: srfi-13.test: string-any: charset: no match, start index
PASS: srfi-13.test: string-any: charset: one match, start index
PASS: srfi-13.test: string-any: charset: more than one match, start index
PASS: srfi-13.test: string-any: charset: no match, start and end index
PASS: srfi-13.test: string-any: charset: one match, start and end index
PASS: srfi-13.test: string-any: charset: more than one match, start and end index
PASS: srfi-13.test: string-any: pred: no match
PASS: srfi-13.test: string-any: pred: one match
PASS: srfi-13.test: string-any: pred: more than one match
PASS: srfi-13.test: string-any: pred: no match, start index
PASS: srfi-13.test: string-any: pred: one match, start index
PASS: srfi-13.test: string-any: pred: more than one match, start index
PASS: srfi-13.test: string-any: pred: no match, start and end index
PASS: srfi-13.test: string-any: pred: one match, start and end index
PASS: srfi-13.test: string-any: pred: more than one match, start and end index
PASS: srfi-13.test: string-titlecase: all-lower
PASS: srfi-13.test: string-titlecase: all-upper
PASS: srfi-13.test: string-titlecase: two-words
PASS: srfi-13.test: string-titlecase: titlecase-characters
PASS: srfi-13.test: string-append/shared: no args
PASS: srfi-13.test: string-append/shared: one arg: empty
PASS: srfi-13.test: string-append/shared: one arg: non-empty
PASS: srfi-13.test: string-append/shared: two args: (string=?  (string-append/shared  ))
PASS: srfi-13.test: string-append/shared: two args: (string=? xyz (string-append/shared xyz ))
PASS: srfi-13.test: string-append/shared: two args: (string=? xyz (string-append/shared  xyz))
PASS: srfi-13.test: string-append/shared: two args: (string=? abcxyz (string-append/shared abc xyz))
PASS: srfi-13.test: string-append/shared: two args: (string=? abcĀā (string-append/shared abc Āā))
PASS: srfi-13.test: string-append/shared: three args: (string=?  (string-append/shared   ))
PASS: srfi-13.test: string-append/shared: three args: (string=? xy (string-append/shared xy  ))
PASS: srfi-13.test: string-append/shared: three args: (string=? xy (string-append/shared  xy ))
PASS: srfi-13.test: string-append/shared: three args: (string=? abxy (string-append/shared ab xy ))
PASS: srfi-13.test: string-append/shared: three args: (string=? ab (string-append/shared   ab))
PASS: srfi-13.test: string-append/shared: three args: (string=? xyab (string-append/shared xy  ab))
PASS: srfi-13.test: string-append/shared: three args: (string=? xyab (string-append/shared  xy ab))
PASS: srfi-13.test: string-append/shared: three args: (string=? ghxyab (string-append/shared gh xy ab))
PASS: srfi-13.test: string-append/shared: four args: (string=?  (string-append/shared    ))
PASS: srfi-13.test: string-append/shared: four args: (string=? xy (string-append/shared xy   ))
PASS: srfi-13.test: string-append/shared: four args: (string=? xy (string-append/shared  xy  ))
PASS: srfi-13.test: string-append/shared: four args: (string=? xy (string-append/shared   xy ))
PASS: srfi-13.test: string-append/shared: four args: (string=? xy (string-append/shared    xy))
PASS: srfi-13.test: string-append/shared: four args: (string=? abxy (string-append/shared ab xy  ))
PASS: srfi-13.test: string-append/shared: four args: (string=? abxy (string-append/shared ab  xy ))
PASS: srfi-13.test: string-append/shared: four args: (string=? abxy (string-append/shared ab   xy))
PASS: srfi-13.test: string-append/shared: four args: (string=? abxy (string-append/shared  ab  xy))
PASS: srfi-13.test: string-append/shared: four args: (string=? abxy (string-append/shared   ab xy))
PASS: srfi-13.test: string-concatenate: inum
PASS: srfi-13.test: string-concatenate: symbol
PASS: srfi-13.test: string-concatenate: improper 1
PASS: srfi-13.test: string-concatenate: (equal? abc (string-concatenate (quote (a b c))))
PASS: srfi-13.test: string-concatenate: concatenate BMP
PASS: srfi-13.test: string-compare: same as char<?
PASS: srfi-13.test: string-compare-ci: same as char-ci<?
PASS: srfi-13.test: string-concatenate/shared: inum
PASS: srfi-13.test: string-concatenate/shared: symbol
PASS: srfi-13.test: string-concatenate/shared: improper 1
PASS: srfi-13.test: string-concatenate/shared: (equal? abc (string-concatenate/shared (quote (a b c))))
PASS: srfi-13.test: string-concatenate/shared: BMP
PASS: srfi-13.test: string-every: null string
PASS: srfi-13.test: string-every: start index == end index
PASS: srfi-13.test: string-every: bad char_pred: integer
PASS: srfi-13.test: string-every: bad char_pred: string
PASS: srfi-13.test: string-every: char: empty string
PASS: srfi-13.test: string-every: char: empty substring
PASS: srfi-13.test: string-every: char: no match at all
PASS: srfi-13.test: string-every: char: not all match
PASS: srfi-13.test: string-every: char: all match
PASS: srfi-13.test: string-every: char: all match BMP
PASS: srfi-13.test: string-every: char: no match at all, start index
PASS: srfi-13.test: string-every: char: not all match, start index
PASS: srfi-13.test: string-every: char: all match, start index
PASS: srfi-13.test: string-every: char: no match at all, start and end index
PASS: srfi-13.test: string-every: char: not all match, start and end index
PASS: srfi-13.test: string-every: char: all match, start and end index
PASS: srfi-13.test: string-every: charset: empty string
PASS: srfi-13.test: string-every: charset: empty substring
PASS: srfi-13.test: string-every: charset: no match at all
PASS: srfi-13.test: string-every: charset: not all match
PASS: srfi-13.test: string-every: charset: all match
PASS: srfi-13.test: string-every: charset: no match at all, start index
PASS: srfi-13.test: string-every: charset: not all match, start index
PASS: srfi-13.test: string-every: charset: all match, start index
PASS: srfi-13.test: string-every: charset: no match at all, start and end index
PASS: srfi-13.test: string-every: charset: not all match, start and end index
PASS: srfi-13.test: string-every: charset: all match, start and end index
PASS: srfi-13.test: string-every: pred: empty string
PASS: srfi-13.test: string-every: pred: empty substring
PASS: srfi-13.test: string-every: pred: no match at all
PASS: srfi-13.test: string-every: pred: not all match
PASS: srfi-13.test: string-every: pred: all match
PASS: srfi-13.test: string-every: pred: no match at all, start index
PASS: srfi-13.test: string-every: pred: not all match, start index
PASS: srfi-13.test: string-every: pred: all match, start index
PASS: srfi-13.test: string-every: pred: no match at all, start and end index
PASS: srfi-13.test: string-every: pred: not all match, start and end index
PASS: srfi-13.test: string-every: pred: all match, start and end index
PASS: srfi-13.test: string-tabulate: bad proc: integer
PASS: srfi-13.test: string-tabulate: bad proc: string
PASS: srfi-13.test: string-tabulate: static fill-char
PASS: srfi-13.test: string-tabulate: variable fill-char
PASS: srfi-13.test: string->list: empty
PASS: srfi-13.test: string->list: nonempty
PASS: srfi-13.test: string->list: empty, start index
PASS: srfi-13.test: string->list: nonempty, start index
PASS: srfi-13.test: string->list: nonempty, start index, BMP
PASS: srfi-13.test: reverse-list->string: empty
PASS: srfi-13.test: reverse-list->string: nonempty
PASS: srfi-13.test: reverse-list->string: nonempty, BMP
PASS: srfi-13.test: string-join: empty list, no delimiter, implicit infix, empty 1
PASS: srfi-13.test: string-join: empty string, no delimiter, implicit infix, empty 2
PASS: srfi-13.test: string-join: non-empty, no delimiter, implicit infix
PASS: srfi-13.test: string-join: empty list, implicit infix, empty 1
PASS: srfi-13.test: string-join: empty string, implicit infix, empty 2
PASS: srfi-13.test: string-join: non-empty, implicit infix
PASS: srfi-13.test: string-join: non-empty, implicit infix
PASS: srfi-13.test: string-join: two strings, implicit infix
PASS: srfi-13.test: string-join: empty, explicit infix
PASS: srfi-13.test: string-join: empty list, explicit infix
PASS: srfi-13.test: string-join: non-empty, explicit infix
PASS: srfi-13.test: string-join: two strings, explicit infix
PASS: srfi-13.test: string-join: two strings, explicit infix, BMP
PASS: srfi-13.test: string-join: empty list, strict infix
PASS: srfi-13.test: string-join: empty, strict infix
PASS: srfi-13.test: string-join: non-empty, strict infix
PASS: srfi-13.test: string-join: two strings, strict infix
PASS: srfi-13.test: string-join: empty list, prefix
PASS: srfi-13.test: string-join: empty, prefix
PASS: srfi-13.test: string-join: non-empty, prefix
PASS: srfi-13.test: string-join: two strings, prefix
PASS: srfi-13.test: string-join: empty list, suffix
PASS: srfi-13.test: string-join: empty, suffix
PASS: srfi-13.test: string-join: non-empty, suffix
PASS: srfi-13.test: string-join: two strings, suffix
PASS: srfi-13.test: string-copy: empty string
PASS: srfi-13.test: string-copy: full string
PASS: srfi-13.test: string-copy: full string, BMP
PASS: srfi-13.test: string-copy: start index
PASS: srfi-13.test: string-copy: start index
PASS: srfi-13.test: string-copy: start and end index
PASS: srfi-13.test: substring/shared: empty string
PASS: srfi-13.test: substring/shared: non-empty string, not eq?
PASS: srfi-13.test: substring/shared: shared copy of non-empty string is eq?
PASS: srfi-13.test: string-copy!: non-empty string
PASS: srfi-13.test: string-copy!: overlapping src and dest, moving right
PASS: srfi-13.test: string-copy!: overlapping src and dest, moving left
PASS: srfi-13.test: string-take: empty string
PASS: srfi-13.test: string-take: non-empty string
PASS: srfi-13.test: string-take: non-empty string BMP
PASS: srfi-13.test: string-take: full string
PASS: srfi-13.test: string-take-right: empty string
PASS: srfi-13.test: string-take-right: non-empty string
PASS: srfi-13.test: string-take-right: non-empty string
PASS: srfi-13.test: string-take-right: full string
PASS: srfi-13.test: string-drop: empty string
PASS: srfi-13.test: string-drop: non-empty string
PASS: srfi-13.test: string-drop: non-empty string BMP
PASS: srfi-13.test: string-drop: full string
PASS: srfi-13.test: string-drop-right: empty string
PASS: srfi-13.test: string-drop-right: non-empty string
PASS: srfi-13.test: string-drop-right: non-empty string BMP
PASS: srfi-13.test: string-drop-right: full string
PASS: srfi-13.test: string-pad: empty string, zero pad
PASS: srfi-13.test: string-pad: empty string, zero pad, pad char
PASS: srfi-13.test: string-pad: empty pad string, 2 pad 
PASS: srfi-13.test: string-pad: empty pad string, 2 pad, pad char
PASS: srfi-13.test: string-pad: empty pad string, 2 pad, pad char, start index
PASS: srfi-13.test: string-pad: empty pad string, 2 pad, pad char, start and end index
PASS: srfi-13.test: string-pad: freestyle 1
PASS: srfi-13.test: string-pad: freestyle 2
PASS: srfi-13.test: string-pad-right: empty string, zero pad
PASS: srfi-13.test: string-pad-right: empty string, zero pad, pad char
PASS: srfi-13.test: string-pad-right: empty pad string, 2 pad 
PASS: srfi-13.test: string-pad-right: empty pad string, 2 pad, pad char
PASS: srfi-13.test: string-pad-right: empty pad string, 2 pad, pad char, start index
PASS: srfi-13.test: string-pad-right: empty pad string, 2 pad, pad char, start and end index
PASS: srfi-13.test: string-pad-right: freestyle 1
PASS: srfi-13.test: string-pad-right: freestyle 2
PASS: srfi-13.test: string-trim: bad char_pred: integer
PASS: srfi-13.test: string-trim: bad char_pred: string
PASS: srfi-13.test: string-trim: empty string
PASS: srfi-13.test: string-trim: no char/pred
PASS: srfi-13.test: string-trim: start index, pred
PASS: srfi-13.test: string-trim: start and end index, pred
PASS: srfi-13.test: string-trim: start index, char
PASS: srfi-13.test: string-trim: start and end index, char
PASS: srfi-13.test: string-trim: start index, charset
PASS: srfi-13.test: string-trim: start and end index, charset
PASS: srfi-13.test: string-trim-right: bad char_pred: integer
PASS: srfi-13.test: string-trim-right: bad char_pred: string
PASS: srfi-13.test: string-trim-right: empty string
PASS: srfi-13.test: string-trim-right: no char/pred
PASS: srfi-13.test: string-trim-right: start index, pred
PASS: srfi-13.test: string-trim-right: start and end index, pred
PASS: srfi-13.test: string-trim-right: start index, char
PASS: srfi-13.test: string-trim-right: start and end index, char
PASS: srfi-13.test: string-trim-right: start index, charset
PASS: srfi-13.test: string-trim-right: start and end index, charset
PASS: srfi-13.test: string-trim-both: bad char_pred: integer
PASS: srfi-13.test: string-trim-both: bad char_pred: string
PASS: srfi-13.test: string-trim-both: empty string
PASS: srfi-13.test: string-trim-both: no char/pred
PASS: srfi-13.test: string-trim-both: start index, pred
PASS: srfi-13.test: string-trim-both: start and end index, pred
PASS: srfi-13.test: string-trim-both: start index, char
PASS: srfi-13.test: string-trim-both: start and end index, char
PASS: srfi-13.test: string-trim-both: start index, charset
PASS: srfi-13.test: string-trim-both: start and end index, charset
PASS: srfi-13.test: string-fill!: empty string, no indices
PASS: srfi-13.test: string-fill!: empty string, start index
PASS: srfi-13.test: string-fill!: empty string, start and end index
PASS: srfi-13.test: string-fill!: no indices
PASS: srfi-13.test: string-fill!: start index
PASS: srfi-13.test: string-fill!: start and end index
PASS: srfi-13.test: string-prefix-length: empty prefix
PASS: srfi-13.test: string-prefix-length: non-empty prefix - match
PASS: srfi-13.test: string-prefix-length: non-empty prefix - no match
PASS: srfi-13.test: string-prefix-length-ci: empty prefix
PASS: srfi-13.test: string-prefix-length-ci: non-empty prefix - match
PASS: srfi-13.test: string-prefix-length-ci: non-empty prefix - no match
PASS: srfi-13.test: string-suffix-length: empty suffix
PASS: srfi-13.test: string-suffix-length: non-empty suffix - match
PASS: srfi-13.test: string-suffix-length: non-empty suffix - no match
PASS: srfi-13.test: string-suffix-length-ci: empty suffix
PASS: srfi-13.test: string-suffix-length-ci: non-empty suffix - match
PASS: srfi-13.test: string-suffix-length-ci: non-empty suffix - no match
PASS: srfi-13.test: string-prefix?: empty prefix
PASS: srfi-13.test: string-prefix?: non-empty prefix - match
PASS: srfi-13.test: string-prefix?: non-empty prefix - no match
PASS: srfi-13.test: string-prefix-ci?: empty prefix
PASS: srfi-13.test: string-prefix-ci?: non-empty prefix - match
PASS: srfi-13.test: string-prefix-ci?: non-empty prefix - no match
PASS: srfi-13.test: string-suffix?: empty suffix
PASS: srfi-13.test: string-suffix?: non-empty suffix - match
PASS: srfi-13.test: string-suffix?: non-empty suffix - no match
PASS: srfi-13.test: string-suffix-ci?: empty suffix
PASS: srfi-13.test: string-suffix-ci?: non-empty suffix - match
PASS: srfi-13.test: string-suffix-ci?: non-empty suffix - no match
PASS: srfi-13.test: string-index: bad char_pred: integer
PASS: srfi-13.test: string-index: bad char_pred: string
PASS: srfi-13.test: string-index: empty string - char
PASS: srfi-13.test: string-index: non-empty - char - match
PASS: srfi-13.test: string-index: non-empty - char - no match
PASS: srfi-13.test: string-index: empty string - char - start index
PASS: srfi-13.test: string-index: non-empty - char - match - start index
PASS: srfi-13.test: string-index: non-empty - char - no match - start index
PASS: srfi-13.test: string-index: empty string - char - start and end index
PASS: srfi-13.test: string-index: non-empty - char - match - start and end index
PASS: srfi-13.test: string-index: non-empty - char - no match - start and end index
PASS: srfi-13.test: string-index: empty string - charset
PASS: srfi-13.test: string-index: non-empty - charset - match
PASS: srfi-13.test: string-index: non-empty - charset - no match
PASS: srfi-13.test: string-index: empty string - charset - start index
PASS: srfi-13.test: string-index: non-empty - charset - match - start index
PASS: srfi-13.test: string-index: non-empty - charset - no match - start index
PASS: srfi-13.test: string-index: empty string - charset - start and end index
PASS: srfi-13.test: string-index: non-empty - charset - match - start and end index
PASS: srfi-13.test: string-index: non-empty - charset - no match - start and end index
PASS: srfi-13.test: string-index: empty string - pred
PASS: srfi-13.test: string-index: non-empty - pred - match
PASS: srfi-13.test: string-index: non-empty - pred - no match
PASS: srfi-13.test: string-index: empty string - pred - start index
PASS: srfi-13.test: string-index: non-empty - pred - match - start index
PASS: srfi-13.test: string-index: non-empty - pred - no match - start index
PASS: srfi-13.test: string-index: empty string - pred - start and end index
PASS: srfi-13.test: string-index: non-empty - pred - match - start and end index
PASS: srfi-13.test: string-index: non-empty - pred - no match - start and end index
PASS: srfi-13.test: string-index: 8-bit char in string
PASS: srfi-13.test: string-index-right: bad char_pred: integer
PASS: srfi-13.test: string-index-right: bad char_pred: string
PASS: srfi-13.test: string-index-right: empty string - char
PASS: srfi-13.test: string-index-right: non-empty - char - match
PASS: srfi-13.test: string-index-right: non-empty - char - no match
PASS: srfi-13.test: string-index-right: empty string - char - start index-right
PASS: srfi-13.test: string-index-right: non-empty - char - match - start index
PASS: srfi-13.test: string-index-right: non-empty - char - no match - start index
PASS: srfi-13.test: string-index-right: empty string - char - start and end index
PASS: srfi-13.test: string-index-right: non-empty - char - match - start and end index
PASS: srfi-13.test: string-index-right: non-empty - char - no match - start and end index
PASS: srfi-13.test: string-index-right: empty string - charset
PASS: srfi-13.test: string-index-right: non-empty - charset - match
PASS: srfi-13.test: string-index-right: non-empty - charset - no match
PASS: srfi-13.test: string-index-right: empty string - charset - start index
PASS: srfi-13.test: string-index-right: non-empty - charset - match - start index
PASS: srfi-13.test: string-index-right: non-empty - charset - no match - start index
PASS: srfi-13.test: string-index-right: empty string - charset - start and end index
PASS: srfi-13.test: string-index-right: non-empty - charset - match - start and end index
PASS: srfi-13.test: string-index-right: non-empty - charset - no match - start and end index
PASS: srfi-13.test: string-index-right: empty string - pred
PASS: srfi-13.test: string-index-right: non-empty - pred - match
PASS: srfi-13.test: string-index-right: non-empty - pred - no match
PASS: srfi-13.test: string-index-right: empty string - pred - start index
PASS: srfi-13.test: string-index-right: non-empty - pred - match - start index
PASS: srfi-13.test: string-index-right: non-empty - pred - no match - start index
PASS: srfi-13.test: string-index-right: empty string - pred - start and end index
PASS: srfi-13.test: string-index-right: non-empty - pred - match - start and end index
PASS: srfi-13.test: string-index-right: non-empty - pred - no match - start and end index
PASS: srfi-13.test: string-skip: bad char_pred: integer
PASS: srfi-13.test: string-skip: bad char_pred: string
PASS: srfi-13.test: string-skip: empty string - char
PASS: srfi-13.test: string-skip: non-empty - char - match
PASS: srfi-13.test: string-skip: non-empty - char - no match
PASS: srfi-13.test: string-skip: empty string - char - start index
PASS: srfi-13.test: string-skip: non-empty - char - match - start index
PASS: srfi-13.test: string-skip: non-empty - char - no match - start index
PASS: srfi-13.test: string-skip: empty string - char - start and end index
PASS: srfi-13.test: string-skip: non-empty - char - match - start and end index
PASS: srfi-13.test: string-skip: non-empty - char - no match - start and end index
PASS: srfi-13.test: string-skip: empty string - charset
PASS: srfi-13.test: string-skip: non-empty - charset - match
PASS: srfi-13.test: string-skip: non-empty - charset - no match
PASS: srfi-13.test: string-skip: empty string - charset - start index
PASS: srfi-13.test: string-skip: non-empty - charset - match - start index
PASS: srfi-13.test: string-skip: non-empty - charset - no match - start index
PASS: srfi-13.test: string-skip: empty string - charset - start and end index
PASS: srfi-13.test: string-skip: non-empty - charset - match - start and end index
PASS: srfi-13.test: string-skip: non-empty - charset - no match - start and end index
PASS: srfi-13.test: string-skip: empty string - pred
PASS: srfi-13.test: string-skip: non-empty - pred - match
PASS: srfi-13.test: string-skip: non-empty - pred - no match
PASS: srfi-13.test: string-skip: empty string - pred - start index
PASS: srfi-13.test: string-skip: non-empty - pred - match - start index
PASS: srfi-13.test: string-skip: non-empty - pred - no match - start index
PASS: srfi-13.test: string-skip: empty string - pred - start and end index
PASS: srfi-13.test: string-skip: non-empty - pred - match - start and end index
PASS: srfi-13.test: string-skip: non-empty - pred - no match - start and end index
PASS: srfi-13.test: string-skip-right: bad char_pred: integer
PASS: srfi-13.test: string-skip-right: bad char_pred: string
PASS: srfi-13.test: string-skip-right: empty string - char
PASS: srfi-13.test: string-skip-right: non-empty - char - match
PASS: srfi-13.test: string-skip-right: non-empty - char - no match
PASS: srfi-13.test: string-skip-right: empty string - char - start index-right
PASS: srfi-13.test: string-skip-right: non-empty - char - match - start index
PASS: srfi-13.test: string-skip-right: non-empty - char - no match - start index
PASS: srfi-13.test: string-skip-right: empty string - char - start and end index
PASS: srfi-13.test: string-skip-right: non-empty - char - match - start and end index
PASS: srfi-13.test: string-skip-right: non-empty - char - no match - start and end index
PASS: srfi-13.test: string-skip-right: empty string - charset
PASS: srfi-13.test: string-skip-right: non-empty - charset - match
PASS: srfi-13.test: string-skip-right: non-empty - charset - no match
PASS: srfi-13.test: string-skip-right: empty string - charset - start index
PASS: srfi-13.test: string-skip-right: non-empty - charset - match - start index
PASS: srfi-13.test: string-skip-right: non-empty - charset - no match - start index
PASS: srfi-13.test: string-skip-right: empty string - charset - start and end index
PASS: srfi-13.test: string-skip-right: non-empty - charset - match - start and end index
PASS: srfi-13.test: string-skip-right: non-empty - charset - no match - start and end index
PASS: srfi-13.test: string-skip-right: empty string - pred
PASS: srfi-13.test: string-skip-right: non-empty - pred - match
PASS: srfi-13.test: string-skip-right: non-empty - pred - no match
PASS: srfi-13.test: string-skip-right: empty string - pred - start index
PASS: srfi-13.test: string-skip-right: non-empty - pred - match - start index
PASS: srfi-13.test: string-skip-right: non-empty - pred - no match - start index
PASS: srfi-13.test: string-skip-right: empty string - pred - start and end index
PASS: srfi-13.test: string-skip-right: non-empty - pred - match - start and end index
PASS: srfi-13.test: string-skip-right: non-empty - pred - no match - start and end index
PASS: srfi-13.test: string-count: bad char_pred: integer
PASS: srfi-13.test: string-count: bad char_pred: string
PASS: srfi-13.test: string-count: char: (eqv? 0 (string-count  a))
PASS: srfi-13.test: string-count: char: (eqv? 0 (string-count - a))
PASS: srfi-13.test: string-count: char: (eqv? 1 (string-count a a))
PASS: srfi-13.test: string-count: char: (eqv? 0 (string-count -- a))
PASS: srfi-13.test: string-count: char: (eqv? 1 (string-count a- a))
PASS: srfi-13.test: string-count: char: (eqv? 1 (string-count -a a))
PASS: srfi-13.test: string-count: char: (eqv? 2 (string-count aa a))
PASS: srfi-13.test: string-count: char: (eqv? 0 (string-count --- a))
PASS: srfi-13.test: string-count: char: (eqv? 1 (string-count -a- a))
PASS: srfi-13.test: string-count: char: (eqv? 1 (string-count a-- a))
PASS: srfi-13.test: string-count: char: (eqv? 2 (string-count aa- a))
PASS: srfi-13.test: string-count: char: (eqv? 2 (string-count a-a a))
PASS: srfi-13.test: string-count: char: (eqv? 3 (string-count aaa a))
PASS: srfi-13.test: string-count: char: (eqv? 1 (string-count --a a))
PASS: srfi-13.test: string-count: char: (eqv? 2 (string-count -aa a))
PASS: srfi-13.test: string-count: charset: (eqv? 0 (string-count  char-set:letter))
PASS: srfi-13.test: string-count: charset: (eqv? 0 (string-count - char-set:letter))
PASS: srfi-13.test: string-count: charset: (eqv? 1 (string-count a char-set:letter))
PASS: srfi-13.test: string-count: charset: (eqv? 0 (string-count -- char-set:letter))
PASS: srfi-13.test: string-count: charset: (eqv? 1 (string-count a- char-set:letter))
PASS: srfi-13.test: string-count: charset: (eqv? 1 (string-count -a char-set:letter))
PASS: srfi-13.test: string-count: charset: (eqv? 2 (string-count aa char-set:letter))
PASS: srfi-13.test: string-count: charset: (eqv? 0 (string-count --- char-set:letter))
PASS: srfi-13.test: string-count: charset: (eqv? 1 (string-count -a- char-set:letter))
PASS: srfi-13.test: string-count: charset: (eqv? 1 (string-count a-- char-set:letter))
PASS: srfi-13.test: string-count: charset: (eqv? 2 (string-count aa- char-set:letter))
PASS: srfi-13.test: string-count: charset: (eqv? 2 (string-count a-a char-set:letter))
PASS: srfi-13.test: string-count: charset: (eqv? 3 (string-count aaa char-set:letter))
PASS: srfi-13.test: string-count: charset: (eqv? 1 (string-count --a char-set:letter))
PASS: srfi-13.test: string-count: charset: (eqv? 2 (string-count -aa char-set:letter))
PASS: srfi-13.test: string-count: proc: (eqv? 0 (string-count  char-alphabetic?))
PASS: srfi-13.test: string-count: proc: (eqv? 0 (string-count - char-alphabetic?))
PASS: srfi-13.test: string-count: proc: (eqv? 1 (string-count a char-alphabetic?))
PASS: srfi-13.test: string-count: proc: (eqv? 0 (string-count -- char-alphabetic?))
PASS: srfi-13.test: string-count: proc: (eqv? 1 (string-count a- char-alphabetic?))
PASS: srfi-13.test: string-count: proc: (eqv? 1 (string-count -a char-alphabetic?))
PASS: srfi-13.test: string-count: proc: (eqv? 2 (string-count aa char-alphabetic?))
PASS: srfi-13.test: string-count: proc: (eqv? 0 (string-count --- char-alphabetic?))
PASS: srfi-13.test: string-count: proc: (eqv? 1 (string-count -a- char-alphabetic?))
PASS: srfi-13.test: string-count: proc: (eqv? 1 (string-count a-- char-alphabetic?))
PASS: srfi-13.test: string-count: proc: (eqv? 2 (string-count aa- char-alphabetic?))
PASS: srfi-13.test: string-count: proc: (eqv? 2 (string-count a-a char-alphabetic?))
PASS: srfi-13.test: string-count: proc: (eqv? 3 (string-count aaa char-alphabetic?))
PASS: srfi-13.test: string-count: proc: (eqv? 1 (string-count --a char-alphabetic?))
PASS: srfi-13.test: string-count: proc: (eqv? 2 (string-count -aa char-alphabetic?))
PASS: srfi-13.test: string-replace: empty string(s), no indices
PASS: srfi-13.test: string-replace: empty string(s), 1 index
PASS: srfi-13.test: string-replace: empty string(s), 2 indices
PASS: srfi-13.test: string-replace: empty string(s), 3 indices
PASS: srfi-13.test: string-replace: empty string(s), 4 indices
PASS: srfi-13.test: string-replace: no indices
PASS: srfi-13.test: string-replace: one index
PASS: srfi-13.test: string-replace: two indices
PASS: srfi-13.test: string-replace: three indices
PASS: srfi-13.test: string-replace: four indices
PASS: srfi-13.test: string-tokenize: empty string, no char/pred
PASS: srfi-13.test: string-tokenize: empty string, charset
PASS: srfi-13.test: string-tokenize: no char/pred
PASS: srfi-13.test: string-tokenize: charset
PASS: srfi-13.test: string-tokenize: charset, start index
PASS: srfi-13.test: string-tokenize: charset, start and end index
PASS: srfi-13.test: string-filter: bad char_pred: integer
PASS: srfi-13.test: string-filter: empty string, char
PASS: srfi-13.test: string-filter: empty string, charset
PASS: srfi-13.test: string-filter: empty string, pred
PASS: srfi-13.test: string-filter: char
PASS: srfi-13.test: string-filter: charset
PASS: srfi-13.test: string-filter: pred
PASS: srfi-13.test: string-filter: char, start index
PASS: srfi-13.test: string-filter: charset, start index
PASS: srfi-13.test: string-filter: pred, start index
PASS: srfi-13.test: string-filter: char, start and end index
PASS: srfi-13.test: string-filter: charset, start and end index
PASS: srfi-13.test: string-filter: pred, start and end index
PASS: srfi-13.test: string-filter: char: (equal? x (string-filter x x))
PASS: srfi-13.test: string-filter: char: (equal? xx (string-filter x xx))
PASS: srfi-13.test: string-filter: char: (equal? xx (string-filter x xyx))
PASS: srfi-13.test: string-filter: char: (equal? x (string-filter x xyyy))
PASS: srfi-13.test: string-filter: char: (equal? x (string-filter x yyyx))
PASS: srfi-13.test: string-filter: char: (equal? xx (string-filter x xxx 1))
PASS: srfi-13.test: string-filter: char: (equal? xx (string-filter x xxx 0 2))
PASS: srfi-13.test: string-filter: char: (equal? x (string-filter x xyx 1))
PASS: srfi-13.test: string-filter: char: (equal? x (string-filter x yxx 0 2))
PASS: srfi-13.test: string-filter: char: (string=?  (string-filter x .))
PASS: srfi-13.test: string-filter: char: (string=?  (string-filter x ..))
PASS: srfi-13.test: string-filter: char: (string=?  (string-filter x ...))
PASS: srfi-13.test: string-filter: char: (string=? x (string-filter x .x))
PASS: srfi-13.test: string-filter: char: (string=? x (string-filter x ..x))
PASS: srfi-13.test: string-filter: char: (string=? x (string-filter x ...x))
PASS: srfi-13.test: string-filter: char: (string=? x (string-filter x x.))
PASS: srfi-13.test: string-filter: char: (string=? x (string-filter x x..))
PASS: srfi-13.test: string-filter: char: (string=? x (string-filter x x...))
PASS: srfi-13.test: string-filter: char: (string=? x (string-filter x ...x...))
PASS: srfi-13.test: string-filter: charset: (equal? x (string-filter charset x))
PASS: srfi-13.test: string-filter: charset: (equal? xx (string-filter charset xx))
PASS: srfi-13.test: string-filter: charset: (equal? xy (string-filter charset xy))
PASS: srfi-13.test: string-filter: charset: (equal? x (string-filter charset xaaa))
PASS: srfi-13.test: string-filter: charset: (equal? y (string-filter charset aaay))
PASS: srfi-13.test: string-filter: charset: (equal? yx (string-filter charset xyx 1))
PASS: srfi-13.test: string-filter: charset: (equal? xy (string-filter charset xyx 0 2))
PASS: srfi-13.test: string-filter: charset: (equal? x (string-filter charset xax 1))
PASS: srfi-13.test: string-filter: charset: (equal? x (string-filter charset axx 0 2))
PASS: srfi-13.test: string-filter: charset: (string=?  (string-filter char-set:letter .))
PASS: srfi-13.test: string-filter: charset: (string=?  (string-filter char-set:letter ..))
PASS: srfi-13.test: string-filter: charset: (string=?  (string-filter char-set:letter ...))
PASS: srfi-13.test: string-filter: charset: (string=? x (string-filter char-set:letter .x))
PASS: srfi-13.test: string-filter: charset: (string=? x (string-filter char-set:letter ..x))
PASS: srfi-13.test: string-filter: charset: (string=? x (string-filter char-set:letter ...x))
PASS: srfi-13.test: string-filter: charset: (string=? x (string-filter char-set:letter x.))
PASS: srfi-13.test: string-filter: charset: (string=? x (string-filter char-set:letter x..))
PASS: srfi-13.test: string-filter: charset: (string=? x (string-filter char-set:letter x...))
PASS: srfi-13.test: string-filter: charset: (string=? x (string-filter char-set:letter ...x...))
PASS: srfi-13.test: string-delete: bad char_pred: integer
PASS: srfi-13.test: string-delete: empty string, char
PASS: srfi-13.test: string-delete: empty string, charset
PASS: srfi-13.test: string-delete: empty string, pred
PASS: srfi-13.test: string-delete: char
PASS: srfi-13.test: string-delete: charset
PASS: srfi-13.test: string-delete: pred
PASS: srfi-13.test: string-delete: char, start index
PASS: srfi-13.test: string-delete: charset, start index
PASS: srfi-13.test: string-delete: pred, start index
PASS: srfi-13.test: string-delete: char, start and end index
PASS: srfi-13.test: string-delete: charset, start and end index
PASS: srfi-13.test: string-delete: pred, start and end index
PASS: srfi-13.test: string-delete: (string=?  (string-delete . .))
PASS: srfi-13.test: string-delete: (string=?  (string-delete . ..))
PASS: srfi-13.test: string-delete: (string=?  (string-delete . ...))
PASS: srfi-13.test: string-delete: (string=? x (string-delete . .x))
PASS: srfi-13.test: string-delete: (string=? x (string-delete . ..x))
PASS: srfi-13.test: string-delete: (string=? x (string-delete . ...x))
PASS: srfi-13.test: string-delete: (string=? x (string-delete . x.))
PASS: srfi-13.test: string-delete: (string=? x (string-delete . x..))
PASS: srfi-13.test: string-delete: (string=? x (string-delete . x...))
PASS: srfi-13.test: string-delete: (string=? x (string-delete . ...x...))
PASS: srfi-13.test: string-delete: (string=?  (string-delete char-set:punctuation .))
PASS: srfi-13.test: string-delete: (string=?  (string-delete char-set:punctuation ..))
PASS: srfi-13.test: string-delete: (string=?  (string-delete char-set:punctuation ...))
PASS: srfi-13.test: string-delete: (string=? x (string-delete char-set:punctuation .x))
PASS: srfi-13.test: string-delete: (string=? x (string-delete char-set:punctuation ..x))
PASS: srfi-13.test: string-delete: (string=? x (string-delete char-set:punctuation ...x))
PASS: srfi-13.test: string-delete: (string=? x (string-delete char-set:punctuation x.))
PASS: srfi-13.test: string-delete: (string=? x (string-delete char-set:punctuation x..))
PASS: srfi-13.test: string-delete: (string=? x (string-delete char-set:punctuation x...))
PASS: srfi-13.test: string-delete: (string=? x (string-delete char-set:punctuation ...x...))
PASS: srfi-13.test: string-map: bad proc: integer
PASS: srfi-13.test: string-map: bad proc: string
PASS: srfi-13.test: string-map: constant
PASS: srfi-13.test: string-map: identity
PASS: srfi-13.test: string-map: upcase
PASS: srfi-13.test: string-map!: bad proc: integer
PASS: srfi-13.test: string-map!: bad proc: string
PASS: srfi-13.test: string-map!: constant
PASS: srfi-13.test: string-map!: identity
PASS: srfi-13.test: string-map!: upcase
PASS: srfi-13.test: string-for-each: bad proc: integer
PASS: srfi-13.test: string-for-each: bad proc: string
PASS: srfi-13.test: string-for-each: copy
PASS: srfi-13.test: string-for-each-index: bad proc: integer
PASS: srfi-13.test: string-for-each-index: bad proc: string
PASS: srfi-13.test: string-for-each-index: index
PASS: srfi-14.test: char set contents: empty set
PASS: srfi-14.test: char set contents: single char
PASS: srfi-14.test: char set contents: contiguous chars
PASS: srfi-14.test: char set contents: discontiguous chars
PASS: srfi-14.test: char set additition: empty + x
PASS: srfi-14.test: char set additition: x + y
PASS: srfi-14.test: char set additition: x + w
PASS: srfi-14.test: char set additition: x + z
PASS: srfi-14.test: char set additition: x + v
PASS: srfi-14.test: char set additition: uv + w
PASS: srfi-14.test: char set additition: uv + t
PASS: srfi-14.test: char set additition: uv + x
PASS: srfi-14.test: char set additition: uv + s
PASS: srfi-14.test: char set additition: uvx + w
PASS: srfi-14.test: char set additition: uvx + y
PASS: srfi-14.test: char set additition: uvxy + w
PASS: srfi-14.test: char set union: null U abc
PASS: srfi-14.test: char set union: ab U ab
PASS: srfi-14.test: char set union: ab U bc
PASS: srfi-14.test: char set union: ab U cd
PASS: srfi-14.test: char set union: ab U de
PASS: srfi-14.test: char set union: abc U bcd
PASS: srfi-14.test: char set union: abdf U abcdefg
PASS: srfi-14.test: char set union: abef U cd
PASS: srfi-14.test: char set union: abgh U cd
PASS: srfi-14.test: char set union: bc U ab
PASS: srfi-14.test: char set union: cd U ab
PASS: srfi-14.test: char set union: de U ab
PASS: srfi-14.test: char set union: cd U abc
PASS: srfi-14.test: char set union: cd U abcd
PASS: srfi-14.test: char set union: cde U abcdef
PASS: srfi-14.test: char set xor: null - xy
PASS: srfi-14.test: char set xor: x - x
PASS: srfi-14.test: char set xor: xy - x
PASS: srfi-14.test: char set xor: xy - y
PASS: srfi-14.test: char set xor: wxy - w
PASS: srfi-14.test: char set xor: wxy - x
PASS: srfi-14.test: char set xor: wxy - y
PASS: srfi-14.test: char set xor: uvxy - u
PASS: srfi-14.test: char set xor: uvxy - v
PASS: srfi-14.test: char set xor: uvxy - x
PASS: srfi-14.test: char set xor: uvxy - y
PASS: srfi-14.test: char set xor: uwy - u
PASS: srfi-14.test: char set xor: uwy - w
PASS: srfi-14.test: char set xor: uwy - y
PASS: srfi-14.test: char set xor: uvwy - v
PASS: srfi-14.test: char-set?: success on empty set
PASS: srfi-14.test: char-set?: success on non-empty set
PASS: srfi-14.test: char-set?: failure on empty set
PASS: srfi-14.test: char-set=: success, no arg
PASS: srfi-14.test: char-set=: success, one arg
PASS: srfi-14.test: char-set=: success, two args
PASS: srfi-14.test: char-set=: failure, first empty
PASS: srfi-14.test: char-set=: failure, second empty
PASS: srfi-14.test: char-set=: success, more args
PASS: srfi-14.test: char-set=: failure, same length, different elements
PASS: srfi-14.test: char-set<=: success, no arg
PASS: srfi-14.test: char-set<=: success, one arg
PASS: srfi-14.test: char-set<=: success, two args
PASS: srfi-14.test: char-set<=: success, first empty
PASS: srfi-14.test: char-set<=: failure, second empty
PASS: srfi-14.test: char-set<=: success, more args, equal
PASS: srfi-14.test: char-set<=: success, more args, not equal
PASS: srfi-14.test: char-set-hash: empty set, bound
PASS: srfi-14.test: char-set-hash: empty set, no bound
PASS: srfi-14.test: char-set-hash: full set, bound
PASS: srfi-14.test: char-set-hash: full set, no bound
PASS: srfi-14.test: char-set-hash: other set, bound
PASS: srfi-14.test: char-set-hash: other set, no bound
PASS: srfi-14.test: char-set cursor: invalid character cursor
PASS: srfi-14.test: char-set cursor: success
PASS: srfi-14.test: char-set cursor: end of set fails
PASS: srfi-14.test: char-set cursor: end of set succeeds, empty set
PASS: srfi-14.test: char-set cursor: end of set succeeds, non-empty set
PASS: srfi-14.test: char-set-fold: count members
PASS: srfi-14.test: char-set-fold: copy set
PASS: srfi-14.test: char-set-unfold: create char set
PASS: srfi-14.test: char-set-unfold: create char set (base set)
PASS: srfi-14.test: char-set-unfold!: create char set
PASS: srfi-14.test: char-set-unfold!: create char set
PASS: srfi-14.test: char-set-for-each: copy char set
PASS: srfi-14.test: char-set-map: upper case char set 1
PASS: srfi-14.test: char-set-map: upper case char set 2
PASS: srfi-14.test: string->char-set: some char set
PASS: srfi-14.test: char-set->string: some char set
PASS: srfi-14.test: list->char-set: list->char-set
PASS: srfi-14.test: list->char-set: list->char-set!
PASS: srfi-14.test: string->char-set: string->char-set
PASS: srfi-14.test: string->char-set: string->char-set cs
PASS: srfi-14.test: string->char-set: string->char-set!
PASS: srfi-14.test: char-set-filter: filter w/o base
PASS: srfi-14.test: char-set-filter: filter w/ base
PASS: srfi-14.test: char-set-filter: filter!
PASS: srfi-14.test: char-set-intersection: empty
PASS: srfi-14.test: char-set-intersection: identical, one element
PASS: srfi-14.test: char-set-intersection: identical, two elements
PASS: srfi-14.test: char-set-intersection: identical, two elements
PASS: srfi-14.test: char-set-intersection: one vs null
PASS: srfi-14.test: char-set-intersection: null vs one
PASS: srfi-14.test: char-set-intersection: no elements shared
PASS: srfi-14.test: char-set-intersection: one elements shared
PASS: srfi-14.test: char-set-complement: complement of null
PASS: srfi-14.test: char-set-complement: complement of null (2)
PASS: srfi-14.test: char-set-complement: complement of #\0
PASS: srfi-14.test: char-set-complement: complement of U+10FFFF
PASS: srfi-14.test: char-set-complement: complement of 'FOO'
PASS: srfi-14.test: char-set-complement: complement of #\a #\b U+010300
PASS: srfi-14.test: ucs-range->char-set: char-set
PASS: srfi-14.test: ucs-range->char-set: char-set w/ base
PASS: srfi-14.test: ucs-range->char-set: char-set!
PASS: srfi-14.test: char-set-count: null
PASS: srfi-14.test: char-set-count: count
PASS: srfi-14.test: char-set-contains?: #\a not in null
PASS: srfi-14.test: char-set-contains?: #\a is in 'abc'
PASS: srfi-14.test: any / every: char-set-every #t
PASS: srfi-14.test: any / every: char-set-every #f
PASS: srfi-14.test: any / every: char-set-any #t
PASS: srfi-14.test: any / every: char-set-any #f
PASS: srfi-14.test: char-set-delete: abc - a
PASS: srfi-14.test: char-set-delete: abc - d
PASS: srfi-14.test: char-set-delete: delete! abc - a
PASS: srfi-14.test: char-set-difference: not different
PASS: srfi-14.test: char-set-difference: completely different
PASS: srfi-14.test: char-set-difference: partially different
PASS: srfi-14.test: standard char sets (ASCII): char-set:lower-case
PASS: srfi-14.test: standard char sets (ASCII): char-set:upper-case
PASS: srfi-14.test: standard char sets (ASCII): char-set:title-case
PASS: srfi-14.test: standard char sets (ASCII): char-set:letter
PASS: srfi-14.test: standard char sets (ASCII): char-set:digit
PASS: srfi-14.test: standard char sets (ASCII): char-set:hex-digit
PASS: srfi-14.test: standard char sets (ASCII): char-set:letter+digit
PASS: srfi-14.test: standard char sets (ASCII): char-set:punctuation
PASS: srfi-14.test: standard char sets (ASCII): char-set:symbol
PASS: srfi-14.test: standard char sets (ASCII): char-set:graphic
PASS: srfi-14.test: standard char sets (ASCII): char-set:whitespace
PASS: srfi-14.test: standard char sets (ASCII): char-set:printing
PASS: srfi-14.test: standard char sets (ASCII): char-set:ASCII
PASS: srfi-14.test: standard char sets (ASCII): char-set:iso-control
PASS: srfi-14.test: Latin-1 (8-bit charset): char-set:lower-case
PASS: srfi-14.test: Latin-1 (8-bit charset): char-set:upper-case
PASS: srfi-14.test: Latin-1 (8-bit charset): char-set:title-case
PASS: srfi-14.test: Latin-1 (8-bit charset): char-set:letter
PASS: srfi-14.test: Latin-1 (8-bit charset): char-set:digit
PASS: srfi-14.test: Latin-1 (8-bit charset): char-set:hex-digit
PASS: srfi-14.test: Latin-1 (8-bit charset): char-set:letter+digit
PASS: srfi-14.test: Latin-1 (8-bit charset): char-set:punctuation
PASS: srfi-14.test: Latin-1 (8-bit charset): char-set:symbol
PASS: srfi-14.test: Latin-1 (8-bit charset): char-set:graphic
PASS: srfi-14.test: Latin-1 (8-bit charset): char-set:whitespace
PASS: srfi-14.test: Latin-1 (8-bit charset): char-set:printing
PASS: srfi-14.test: Latin-1 (8-bit charset): char-set:iso-control
PASS: srfi-17.test: cond-expand srfi-17
UNSUPPORTED: srfi-17.test: car: procedure-name
PASS: srfi-17.test: car: set! (car x)
PASS: srfi-17.test: set!: target is not procedure with setter: (set! (symbol->string 'x) 1)
PASS: srfi-17.test: set!: target is not procedure with setter: (set! '#f 1)
PASS: srfi-17.test: set!: target uses macro: (set! (@@ ...) 1)
PASS: srfi-17.test: set!: target uses macro: (set! 'x 1)
PASS: srfi-17.test: setter: set! (setter x)
PASS: srfi-17.test: setter: car
PASS: srfi-171.test: transducers: tmap
PASS: srfi-171.test: transducers: tfilter
PASS: srfi-171.test: transducers: tfilter+tmap
PASS: srfi-171.test: transducers: tfilter-map
PASS: srfi-171.test: transducers: tremove
PASS: srfi-171.test: transducers: treplace with alist
PASS: srfi-171.test: transducers: treplace with replace-function
PASS: srfi-171.test: transducers: treplace with guile hash-table
PASS: srfi-171.test: transducers: treplace with srfi-69 hash-table
PASS: srfi-171.test: transducers: treplace with rnrs hash-table
PASS: srfi-171.test: transducers: ttake
PASS: srfi-171.test: transducers: tdrop
PASS: srfi-171.test: transducers: tdrop-while
PASS: srfi-171.test: transducers: ttake-while
PASS: srfi-171.test: transducers: tconcatenate
PASS: srfi-171.test: transducers: tappend-map
PASS: srfi-171.test: transducers: tdelete-neighbor-duplicates
PASS: srfi-171.test: transducers: tdelete-neighbor-duplicates with equality predicate
PASS: srfi-171.test: transducers: tdelete-duplicates
PASS: srfi-171.test: transducers: tdelete-duplicates with predicate
PASS: srfi-171.test: transducers: tflatten
PASS: srfi-171.test: transducers: tpartition
PASS: srfi-171.test: transducers: tsegment
PASS: srfi-171.test: transducers: tadd-between
PASS: srfi-171.test: transducers: tenumerate
PASS: srfi-171.test: transducers: tbatch
PASS: srfi-171.test: transducers: tfold
PASS: srfi-171.test: x-transduce: list-transduce
PASS: srfi-171.test: x-transduce: list-transduce with identity
PASS: srfi-171.test: x-transduce: vector-transduce
PASS: srfi-171.test: x-transduce: vector-transduce with identity
PASS: srfi-171.test: x-transduce: port-transduce
PASS: srfi-171.test: x-transduce: port-transduce with identity
PASS: srfi-171.test: x-transduce: string-transduce
PASS: srfi-171.test: x-transduce: string-transduce with identity
PASS: srfi-171.test: x-transduce: generator-transduce
PASS: srfi-171.test: x-transduce: generator-transduce with identity
PASS: srfi-171.test: x-transduce: bytevector-u8-transduce
PASS: srfi-171.test: x-transduce: bytevector-u8-transduce with identity
PASS: srfi-18.test: current-thread: current-thread eq current-thread
PASS: srfi-18.test: thread?: current-thread is thread
PASS: srfi-18.test: thread?: foo not thread
PASS: srfi-18.test: make-thread: make-thread creates new thread
PASS: srfi-18.test: thread-name: make-thread with name binds name
PASS: srfi-18.test: thread-name: make-thread without name does not bind name
PASS: srfi-18.test: thread-specific: thread-specific is initially #f
PASS: srfi-18.test: thread-specific: thread-specific-set! can set value
PASS: srfi-18.test: thread-start!: thread activates only after start
PASS: srfi-18.test: thread-yield!: thread yield suceeds
PASS: srfi-18.test: thread-sleep!: thread sleep with time
PASS: srfi-18.test: thread-sleep!: thread sleep with number
PASS: srfi-18.test: thread-sleep!: thread sleeps fractions of a second
PASS: srfi-18.test: thread-sleep!: thread does not sleep on past time
PASS: srfi-18.test: thread-terminate!: termination destroys non-started thread
PASS: srfi-18.test: thread-terminate!: termination destroys started thread
PASS: srfi-18.test: thread-join!: join receives result of thread
PASS: srfi-18.test: thread-join!: join receives timeout val if timeout expires
PASS: srfi-18.test: thread-join!: join throws exception on timeout without timeout val
PASS: srfi-18.test: thread-join!: join waits on timeout
PASS: srfi-18.test: mutex?: make-mutex creates mutex
PASS: srfi-18.test: mutex?: symbol not mutex
PASS: srfi-18.test: mutex-name: make-mutex with name binds name
PASS: srfi-18.test: mutex-name: make-mutex without name does not bind name
PASS: srfi-18.test: mutex-specific: mutex-specific is initially #f
PASS: srfi-18.test: mutex-specific: mutex-specific-set! can set value
PASS: srfi-18.test: mutex-state: mutex state is initially not-abandoned
PASS: srfi-18.test: mutex-state: mutex state of locked, owned mutex is owner thread
PASS: srfi-18.test: mutex-state: mutex state of locked, unowned mutex is not-owned
PASS: srfi-18.test: mutex-state: mutex state of unlocked, abandoned mutex is abandoned
PASS: srfi-18.test: mutex-lock!: mutex-lock! returns true on successful lock
PASS: srfi-18.test: mutex-lock!: mutex-lock! returns false on timeout
PASS: srfi-18.test: mutex-lock!: mutex-lock! returns true when lock obtained within timeout
PASS: srfi-18.test: mutex-lock!: can lock mutex for non-current thread
PASS: srfi-18.test: mutex-lock!: locking abandoned mutex throws exception
PASS: srfi-18.test: mutex-lock!: sleeping threads notified of abandonment
PASS: srfi-18.test: mutex-unlock!: unlock changes mutex state
PASS: srfi-18.test: mutex-unlock!: can unlock from any thread
PASS: srfi-18.test: mutex-unlock!: recursive lock waits
PASS: srfi-18.test: mutex-unlock!: recursive lock unblocked by second thread
PASS: srfi-18.test: mutex-unlock!: mutex unlock is true when condition is signalled
PASS: srfi-18.test: mutex-unlock!: mutex unlock is false when condition times out
PASS: srfi-18.test: condition-variable?: make-condition-variable creates condition variable
PASS: srfi-18.test: condition-variable?: symbol not condition variable
PASS: srfi-18.test: condition-variable-name: make-condition-variable with name binds name
PASS: srfi-18.test: condition-variable-name: make-condition-variable without name does not bind name
PASS: srfi-18.test: condition-variable-specific: condition-variable-specific is initially #f
PASS: srfi-18.test: condition-variable-specific: condition-variable-specific-set! can set value
PASS: srfi-18.test: condition-variable-signal!: condition-variable-signal! wakes up single thread
PASS: srfi-18.test: condition-variable-broadcast!: condition-variable-broadcast! wakes up multiple threads
PASS: srfi-18.test: time?: current-time is time
PASS: srfi-18.test: time?: number is not time
PASS: srfi-18.test: time?: symbol not time
PASS: srfi-18.test: time->seconds: time->seconds makes time into rational
PASS: srfi-18.test: time->seconds: time->seconds is reversible
PASS: srfi-18.test: seconds->time: seconds->time makes rational into time
PASS: srfi-18.test: seconds->time: seconds->time is reversible
PASS: srfi-18.test: current-exception-handler: current handler returned at top level
PASS: srfi-18.test: current-exception-handler: specified handler set under with-exception-handler
PASS: srfi-18.test: current-exception-handler: multiple levels of handler nesting
PASS: srfi-18.test: current-exception-handler: exception handler installation is thread-safe
PASS: srfi-18.test: uncaught-exception-reason: initial handler captures top level exception
PASS: srfi-18.test: uncaught-exception-reason: initial handler captures non-SRFI-18 throw
PASS: srfi-19.test: SRFI date/time library: date-zone-offset is defined
PASS: srfi-19.test: SRFI date/time library: add-duration is defined
PASS: srfi-19.test: SRFI date/time library: (current-time time-tai) works
PASS: srfi-19.test: SRFI date/time library: (current-time time-process) works
PASS: srfi-19.test: SRFI date/time library: time-utc->time-tai and time-tai->time-utc work and are inverses of each other
PASS: srfi-19.test: SRFI date/time library: time-utc->time-monotonic and time-monotonic->time-utc work and are inverses of each other
PASS: srfi-19.test: SRFI date/time library: time-tai->time-monotonic and time-monotonic->time-tai work and are inverses of each other
PASS: srfi-19.test: SRFI date/time library: string->date works
PASS: srfi-19.test: SRFI date/time library: #<procedure time-utc->date (time #:optional tz-offset)> works
PASS: srfi-19.test: SRFI date/time library: #<procedure time-tai->date (time . tz-offset)> works
PASS: srfi-19.test: SRFI date/time library: #<procedure time-monotonic->date (time . tz-offset)> works
PASS: srfi-19.test: SRFI date/time library: Fractional nanoseconds are handled
PASS: srfi-19.test: SRFI date/time library: #<procedure date->time-utc (date)> makes integer seconds
PASS: srfi-19.test: SRFI date/time library: #<procedure date->time-tai (d)> makes integer seconds
PASS: srfi-19.test: SRFI date/time library: #<procedure date->time-monotonic (d)> makes integer seconds
PASS: srfi-19.test: SRFI date/time library: date->time-utc is the inverse of time-utc->date
PASS: srfi-19.test: SRFI date/time library: #<procedure time-utc->date (time #:optional tz-offset)> respects local DST if no TZ-OFFSET given
PASS: srfi-19.test: SRFI date/time library: #<procedure time-tai->date (time . tz-offset)> respects local DST if no TZ-OFFSET given
PASS: srfi-19.test: SRFI date/time library: #<procedure time-monotonic->date (time . tz-offset)> respects local DST if no TZ-OFFSET given
PASS: srfi-19.test: SRFI date/time library: #<procedure julian-day->date (jdn . tz-offset)> respects local DST if no TZ-OFFSET given
PASS: srfi-19.test: SRFI date/time library: #<procedure modified-julian-day->date (jdn . tz-offset)> respects local DST if no TZ-OFFSET given
PASS: srfi-19.test: SRFI date/time library: `date->julian-day' honors timezone
PASS: srfi-19.test: SRFI date/time library: string->date respects local DST if no time zone is read
PASS: srfi-19.test: SRFI date/time library: string->date understands days and months
PASS: srfi-19.test: SRFI date/time library: string->date works on Sunday
PASS: srfi-19.test: SRFI date/time library: string->date understands nanoseconds (1)
PASS: srfi-19.test: SRFI date/time library: string->date understands nanoseconds (2)
PASS: srfi-19.test: SRFI date/time library: date->string pads small nanoseconds values correctly
PASS: srfi-19.test: SRFI date/time library: date->string ~f without leading zeroes
PASS: srfi-19.test: SRFI date/time library: date->string ~f proper fractional part
PASS: srfi-19.test: SRFI date/time library: #<procedure time<=? (t1 t2)> works
PASS: srfi-19.test: SRFI date/time library: #<procedure time<? (t1 t2)> works
PASS: srfi-19.test: SRFI date/time library: #<procedure time=? (t1 t2)> works
PASS: srfi-19.test: SRFI date/time library: #<procedure time>=? (t1 t2)> works
PASS: srfi-19.test: SRFI date/time library: #<procedure time>? (t1 t2)> works
PASS: srfi-19.test: SRFI date/time library: #<procedure add-duration (t duration)> works
PASS: srfi-19.test: SRFI date/time library: #<procedure subtract-duration (time1 duration)> works
PASS: srfi-19.test: SRFI date/time library: nanosecond normalization: small positive duration
PASS: srfi-19.test: SRFI date/time library: nanosecond normalization: small negative duration
PASS: srfi-19.test: SRFI date/time library: date->time-tai: 31dec98 23:59:59
PASS: srfi-19.test: SRFI date/time library: date->time-tai: 31dec98 23:59:60
PASS: srfi-19.test: SRFI date/time library: date->time-tai: 1jan99 0:00:00
PASS: srfi-19.test: SRFI date/time library: date->time-tai: 31dec05 23:59:59
PASS: srfi-19.test: SRFI date/time library: date->time-tai: 31dec05 23:59:60
PASS: srfi-19.test: SRFI date/time library: date->time-tai: 1jan06 0:00:00
PASS: srfi-19.test: SRFI date/time library: date->time-monotonic: 31dec98 23:59:59
PASS: srfi-19.test: SRFI date/time library: date->time-monotonic: 31dec98 23:59:60
PASS: srfi-19.test: SRFI date/time library: date->time-monotonic: 1jan99 0:00:00
PASS: srfi-19.test: SRFI date/time library: date->time-monotonic: 31dec05 23:59:59
PASS: srfi-19.test: SRFI date/time library: date->time-monotonic: 31dec05 23:59:60
PASS: srfi-19.test: SRFI date/time library: date->time-monotonic: 1jan06 0:00:00
PASS: srfi-19.test: SRFI date/time library: julian-day->date: 0002-07-29T12:00:00Z
PASS: srfi-19.test: SRFI date/time library: julian-day->date: 0024-06-23T12:00:00Z
PASS: srfi-19.test: SRFI date/time library: julian-day->date: 2000-01-01T00:00:00Z
PASS: srfi-19.test: SRFI date/time library: julian-day->date: 9999-12-31T12:00:00Z
PASS: srfi-19.test: SRFI date/time library: julian-day->date: +10000-01-01T12:00:00Z
PASS: srfi-19.test: SRFI date/time library: julian-day->date: negative julian days
PASS: srfi-19.test: SRFI date/time library: julian-day->date: negative year numbers
PASS: srfi-19.test: SRFI date/time library: time-utc->date: 2012-07-01T00:59:59+0100
PASS: srfi-19.test: SRFI date/time library: time-utc->date: 2012-07-01T01:00:00+0100
PASS: srfi-19.test: SRFI date/time library: time-utc->date: 2012-07-01T01:00:01+0100
PASS: srfi-19.test: SRFI date/time library: time-tai->date: 2012-07-01T00:59:59+0100
PASS: srfi-19.test: SRFI date/time library: time-tai->date: 2012-07-01T00:59:60+0100
PASS: srfi-19.test: SRFI date/time library: time-tai->date: 2012-07-01T01:00:00+0100
PASS: srfi-19.test: SRFI date/time library: time-tai->date: 2012-07-01T01:00:01+0100
PASS: srfi-19.test: SRFI date/time library: time-monotonic->date: 2012-07-01T00:59:59+0100
PASS: srfi-19.test: SRFI date/time library: time-monotonic->date: 2012-07-01T00:59:60+0100
PASS: srfi-19.test: SRFI date/time library: time-monotonic->date: 2012-07-01T01:00:00+0100
PASS: srfi-19.test: SRFI date/time library: time-monotonic->date: 2012-07-01T01:00:01+0100
PASS: srfi-19.test: SRFI date/time library: time-tai->julian-day: 2012-07-01T00:59:59+0100
PASS: srfi-19.test: SRFI date/time library: time-tai->julian-day: 2012-07-01T00:59:60+0100
PASS: srfi-19.test: SRFI date/time library: time-tai->julian-day: 2012-07-01T01:00:00+0100
PASS: srfi-19.test: SRFI date/time library: time-tai->julian-day: 2012-07-01T01:00:01+0100
PASS: srfi-19.test: SRFI date/time library: time-monotonic->julian-day: 2012-07-01T00:59:59+0100
PASS: srfi-19.test: SRFI date/time library: time-monotonic->julian-day: 2012-07-01T00:59:60+0100
PASS: srfi-19.test: SRFI date/time library: time-monotonic->julian-day: 2012-07-01T01:00:00+0100
PASS: srfi-19.test: SRFI date/time library: time-monotonic->julian-day: 2012-07-01T01:00:01+0100
PASS: srfi-19.test: SRFI date/time library: date-week-number: (= 0 (date-week-number (make-date 0 0 0 0 1 1 1984 0) 0))
PASS: srfi-19.test: SRFI date/time library: date-week-number: (= 0 (date-week-number (make-date 0 0 0 0 7 1 1984 0) 0))
PASS: srfi-19.test: SRFI date/time library: date-week-number: (= 1 (date-week-number (make-date 0 0 0 0 8 1 1984 0) 0))
PASS: srfi-2.test: (and-let* () 1)
PASS: srfi-2.test: (and-let* () 1 2)
PASS: srfi-2.test: (and-let* ())
PASS: srfi-2.test: (let ((x #f)) (and-let* (x)))
PASS: srfi-2.test: (let ((x 1)) (and-let* (x)))
PASS: srfi-2.test: (and-let* ((x #f)))
PASS: srfi-2.test: (and-let* ((x 1)))
PASS: srfi-2.test: bad clause
PASS: srfi-2.test: (and-let* ((#f) (x 1)))
PASS: srfi-2.test: bad clause
PASS: srfi-2.test: (and-let* ((2) (x 1)))
PASS: srfi-2.test: (and-let* ((x 1) (2)))
PASS: srfi-2.test: (let ((x #f)) (and-let* (x) x))
PASS: srfi-2.test: (let ((x )) (and-let* (x) x))
PASS: srfi-2.test: (let ((x )) (and-let* (x)))
PASS: srfi-2.test: (let ((x 1)) (and-let* (x) (+ x 1)))
PASS: srfi-2.test: (let ((x #f)) (and-let* (x) (+ x 1)))
PASS: srfi-2.test: (let ((x 1)) (and-let* (((positive? x))) (+ x 1)))
PASS: srfi-2.test: (let ((x 1)) (and-let* (((positive? x)))))
PASS: srfi-2.test: (let ((x 0)) (and-let* (((positive? x))) (+ x 1)))
PASS: srfi-2.test: (let ((x 1)) (and-let* (((positive? x)) (x (+ x 1))) (+ x 1)))
PASS: srfi-2.test: (let ((x 1)) (and-let* (((positive? x)) (x (+ x 1)) (x (+ x 1))) (+ x 1)))
PASS: srfi-2.test: (let ((x 1)) (and-let* (x ((positive? x))) (+ x 1)))
PASS: srfi-2.test: (let ((x 1)) (and-let* (((begin x)) ((positive? x))) (+ x 1)))
PASS: srfi-2.test: (let ((x 0)) (and-let* (x ((positive? x))) (+ x 1)))
PASS: srfi-2.test: (let ((x #f)) (and-let* (x ((positive? x))) (+ x 1)))
PASS: srfi-2.test: (let ((x #f)) (and-let* (((begin x)) ((positive? x))) (+ x 1)))
PASS: srfi-2.test: (let ((x 1)) (and-let* (x (y (- x 1)) ((positive? y))) (/ x y)))
PASS: srfi-2.test: (let ((x 0)) (and-let* (x (y (- x 1)) ((positive? y))) (/ x y)))
PASS: srfi-2.test: (let ((x #f)) (and-let* (x (y (- x 1)) ((positive? y))) (/ x y)))
PASS: srfi-2.test: (let ((x 3)) (and-let* (x (y (- x 1)) ((positive? y))) (/ x y)))
PASS: srfi-26.test: SRFI-26: cut/cute
PASS: srfi-26.test: SRFI-26: cut/cute
PASS: srfi-26.test: SRFI-26: cut/cute
PASS: srfi-26.test: SRFI-26: cut/cute
PASS: srfi-26.test: SRFI-26: cut/cute
PASS: srfi-26.test: SRFI-26: cut/cute
PASS: srfi-26.test: SRFI-26: cut/cute
PASS: srfi-26.test: SRFI-26: cut/cute
PASS: srfi-26.test: SRFI-26: cut/cute
PASS: srfi-26.test: SRFI-26: cut/cute
PASS: srfi-26.test: SRFI-26: cut/cute
PASS: srfi-26.test: SRFI-26: cut/cute
PASS: srfi-26.test: SRFI-26: cut/cute
PASS: srfi-26.test: SRFI-26: cut/cute
PASS: srfi-26.test: SRFI-26: cut/cute
PASS: srfi-26.test: SRFI-26: cut/cute
PASS: srfi-26.test: SRFI-26: cut/cute
PASS: srfi-26.test: SRFI-26: cut/cute
PASS: srfi-26.test: SRFI-26: cut/cute
PASS: srfi-26.test: SRFI-26: cut/cute
PASS: srfi-26.test: SRFI-26: cut/cute
PASS: srfi-26.test: SRFI-26: cut/cute
PASS: srfi-26.test: SRFI-26: cut/cute
PASS: srfi-26.test: SRFI-26: cut/cute
PASS: srfi-26.test: SRFI-26: cut/cute
PASS: srfi-27.test: large integers: in range
PASS: srfi-27.test: reals: in range
PASS: srfi-27.test: get/set state: state1
PASS: srfi-27.test: get/set state: state2
PASS: srfi-31.test: rec special form: bogus variable
PASS: srfi-31.test: rec special form: rec expressions
PASS: srfi-31.test: rec special form: rec functions
PASS: srfi-34.test: SRFI 34: cond-expand
PASS: srfi-34.test: SRFI 34: example 1
PASS: srfi-34.test: SRFI 34: example 2
PASS: srfi-34.test: SRFI 34: example 3
PASS: srfi-34.test: SRFI 34: example 4
PASS: srfi-34.test: SRFI 34: example 5
PASS: srfi-34.test: SRFI 34: example 6
PASS: srfi-34.test: SRFI 34: example 7
PASS: srfi-34.test: SRFI 34: example 8
PASS: srfi-34.test: SRFI 34: example 9
PASS: srfi-34.test: SRFI 34: `with-exception-handler' invokes HANDLER in THUNK's dynamic env.
PASS: srfi-35.test: cond-expand: srfi-35
PASS: srfi-35.test: condition types: &condition
PASS: srfi-35.test: condition types: make-condition-type
PASS: srfi-35.test: condition types: struct-vtable-name
PASS: srfi-35.test: conditions: &condition
PASS: srfi-35.test: conditions: simple condition
PASS: srfi-35.test: conditions: simple condition with inheritance
PASS: srfi-35.test: conditions: condition-ref
PASS: srfi-35.test: conditions: condition-ref with inheritance
PASS: srfi-35.test: conditions: extract-condition
PASS: srfi-35.test: compound conditions: condition-has-type?
PASS: srfi-35.test: compound conditions: condition-ref
PASS: srfi-35.test: compound conditions: condition-ref with same-named fields
PASS: srfi-35.test: compound conditions: extract-condition
PASS: srfi-35.test: compound conditions: extract-condition with same-named fields
PASS: srfi-35.test: syntax: define-condition-type
PASS: srfi-35.test: syntax: condition
PASS: srfi-35.test: syntax: condition with missing fields
PASS: srfi-35.test: syntax: compound condition
PASS: srfi-35.test: examples: v1
PASS: srfi-35.test: examples: (c? v1)
PASS: srfi-35.test: examples: (c1? v1)
PASS: srfi-35.test: examples: (not (c2? v1))
PASS: srfi-35.test: examples: (c-x v1)
PASS: srfi-35.test: examples: (c1-a v1)
PASS: srfi-35.test: examples: v2
PASS: srfi-35.test: examples: (c? v2)
PASS: srfi-35.test: examples: (c2? v2)
PASS: srfi-35.test: examples: (not (c1? v2))
PASS: srfi-35.test: examples: (c-x v2)
PASS: srfi-35.test: examples: (c2-b v2)
PASS: srfi-35.test: examples: v3
PASS: srfi-35.test: examples: (c? v3)
PASS: srfi-35.test: examples: (c1? v3)
PASS: srfi-35.test: examples: (c2? v3)
PASS: srfi-35.test: examples: (c-x v3)
PASS: srfi-35.test: examples: (c1-a v3)
PASS: srfi-35.test: examples: (c2-b v3)
PASS: srfi-35.test: examples: v4
PASS: srfi-35.test: examples: (c? v4)
PASS: srfi-35.test: examples: (c1? v4)
PASS: srfi-35.test: examples: (c2? v4)
PASS: srfi-35.test: examples: (c-x v4)
PASS: srfi-35.test: examples: (c1-a v4)
PASS: srfi-35.test: examples: (c2-b v4)
PASS: srfi-35.test: examples: v5
PASS: srfi-35.test: examples: (c? v5)
PASS: srfi-35.test: examples: (c1? v5)
PASS: srfi-35.test: examples: (c2? v5)
PASS: srfi-35.test: examples: (c-x v5)
PASS: srfi-35.test: examples: (c1-a v5)
PASS: srfi-35.test: examples: (c2-b v5)
PASS: srfi-37.test: SRFI-37: empty calls with count-modified seeds
PASS: srfi-37.test: SRFI-37: short opt params
PASS: srfi-37.test: SRFI-37: single unrecognized long-opt
PASS: srfi-37.test: SRFI-37: long req'd/optional
PASS: srfi-37.test: SRFI-37: short options absorb special markers in the next arg
PASS: srfi-37.test: SRFI-37: short options without arguments
PASS: srfi-37.test: SRFI-37: short option with optional argument omitted
PASS: srfi-37.test: SRFI-37: short option with optional argument provided
PASS: srfi-38.test: pairs: writing
PASS: srfi-38.test: pairs: roundtrip
PASS: srfi-38.test: bytevectors: roundtrip
PASS: srfi-38.test: mixed: roundtrip
PASS: srfi-39.test: SRFI-39: test 1
PASS: srfi-39.test: SRFI-39: test 2
PASS: srfi-39.test: SRFI-39: test 3
PASS: srfi-39.test: SRFI-39: test 4
PASS: srfi-39.test: SRFI-39: test 5
PASS: srfi-39.test: SRFI-39: SRFI-34
PASS: srfi-39.test: current-input-port: new value
PASS: srfi-39.test: current-input-port: set value
PASS: srfi-39.test: current-input-port: old restored
PASS: srfi-39.test: current-input-port: throw exit
PASS: srfi-39.test: current-input-port: call/cc re-enter
PASS: srfi-39.test: current-input-port: original unchanged
PASS: srfi-39.test: current-output-port: new value
PASS: srfi-39.test: current-output-port: set value
PASS: srfi-39.test: current-output-port: old restored
PASS: srfi-39.test: current-output-port: throw exit
PASS: srfi-39.test: current-output-port: call/cc re-enter
PASS: srfi-39.test: current-output-port: original unchanged
PASS: srfi-39.test: current-error-port: new value
PASS: srfi-39.test: current-error-port: set value
PASS: srfi-39.test: current-error-port: old restored
PASS: srfi-39.test: current-error-port: throw exit
PASS: srfi-39.test: current-error-port: call/cc re-enter
PASS: srfi-39.test: current-error-port: original unchanged
PASS: srfi-4.test: u8 vectors: u8vector? success
PASS: srfi-4.test: u8 vectors: u8vector? failure
PASS: srfi-4.test: u8 vectors: u8vector-length success 1
PASS: srfi-4.test: u8 vectors: u8vector-length success 2
PASS: srfi-4.test: u8 vectors: u8vector-length failure
PASS: srfi-4.test: u8 vectors: u8vector-ref
PASS: srfi-4.test: u8 vectors: u8vector-set!/ref
PASS: srfi-4.test: u8 vectors: u8vector->list/list->u8vector
PASS: srfi-4.test: u8 vectors: u8vector->list/array->list
PASS: srfi-4.test: u8 vectors: make-u8vector
PASS: srfi-4.test: s8 vectors: s8vector? success
PASS: srfi-4.test: s8 vectors: s8vector? failure
PASS: srfi-4.test: s8 vectors: s8vector-length success 1
PASS: srfi-4.test: s8 vectors: s8vector-length success 2
PASS: srfi-4.test: s8 vectors: s8vector-length failure
PASS: srfi-4.test: s8 vectors: s8vector-ref
PASS: srfi-4.test: s8 vectors: s8vector-set!/ref
PASS: srfi-4.test: s8 vectors: s8vector->list/list->s8vector
PASS: srfi-4.test: s8 vectors: s8vector->list/array->list
PASS: srfi-4.test: s8 vectors: make-s8vector
PASS: srfi-4.test: u16 vectors: u16vector? success
PASS: srfi-4.test: u16 vectors: u16vector? failure
PASS: srfi-4.test: u16 vectors: u16vector-length success 1
PASS: srfi-4.test: u16 vectors: u16vector-length success 2
PASS: srfi-4.test: u16 vectors: u16vector-length failure
PASS: srfi-4.test: u16 vectors: u16vector-ref
PASS: srfi-4.test: u16 vectors: u16vector-set!/ref
PASS: srfi-4.test: u16 vectors: u16vector->list/list->u16vector
PASS: srfi-4.test: u16 vectors: u16vector->list/array->list
PASS: srfi-4.test: u16 vectors: make-u16vector
PASS: srfi-4.test: s16 vectors: s16vector? success
PASS: srfi-4.test: s16 vectors: s16vector? failure
PASS: srfi-4.test: s16 vectors: s16vector-length success 1
PASS: srfi-4.test: s16 vectors: s16vector-length success 2
PASS: srfi-4.test: s16 vectors: s16vector-length failure
PASS: srfi-4.test: s16 vectors: s16vector-ref
PASS: srfi-4.test: s16 vectors: s16vector-set!/ref
PASS: srfi-4.test: s16 vectors: s16vector->list/list->s16vector
PASS: srfi-4.test: s16 vectors: s16vector->list/array->list
PASS: srfi-4.test: s16 vectors: make-s16vector
PASS: srfi-4.test: u32 vectors: u32vector? success
PASS: srfi-4.test: u32 vectors: u32vector? failure
PASS: srfi-4.test: u32 vectors: u32vector-length success 1
PASS: srfi-4.test: u32 vectors: u32vector-length success 2
PASS: srfi-4.test: u32 vectors: u32vector-length failure
PASS: srfi-4.test: u32 vectors: u32vector-ref
PASS: srfi-4.test: u32 vectors: u32vector-set!/ref
PASS: srfi-4.test: u32 vectors: u32vector->list/list->u32vector
PASS: srfi-4.test: u32 vectors: u32vector->list/array->list
PASS: srfi-4.test: u32 vectors: make-u32vector
PASS: srfi-4.test: s32 vectors: s32vector? success
PASS: srfi-4.test: s32 vectors: s32vector? failure
PASS: srfi-4.test: s32 vectors: s32vector-length success 1
PASS: srfi-4.test: s32 vectors: s32vector-length success 2
PASS: srfi-4.test: s32 vectors: s32vector-length failure
PASS: srfi-4.test: s32 vectors: s32vector-ref
PASS: srfi-4.test: s32 vectors: s32vector-set!/ref
PASS: srfi-4.test: s32 vectors: s32vector->list/list->s32vector
PASS: srfi-4.test: s32 vectors: s32vector->list/array->list
PASS: srfi-4.test: s32 vectors: make-s32vector
PASS: srfi-4.test: u64 vectors: u64vector? success
PASS: srfi-4.test: u64 vectors: u64vector? failure
PASS: srfi-4.test: u64 vectors: u64vector-length success 1
PASS: srfi-4.test: u64 vectors: u64vector-length success 2
PASS: srfi-4.test: u64 vectors: u64vector-length failure
PASS: srfi-4.test: u64 vectors: u64vector-ref
PASS: srfi-4.test: u64 vectors: u64vector-set!/ref
PASS: srfi-4.test: u64 vectors: u64vector->list/list->u64vector
PASS: srfi-4.test: u64 vectors: u64vector->list/array->list
PASS: srfi-4.test: u64 vectors: make-u64vector
PASS: srfi-4.test: s64 vectors: s64vector? success
PASS: srfi-4.test: s64 vectors: s64vector? failure
PASS: srfi-4.test: s64 vectors: s64vector-length success 1
PASS: srfi-4.test: s64 vectors: s64vector-length success 2
PASS: srfi-4.test: s64 vectors: s64vector-length failure
PASS: srfi-4.test: s64 vectors: s64vector-ref
PASS: srfi-4.test: s64 vectors: s64vector-set!/ref
PASS: srfi-4.test: s64 vectors: s64vector->list/list->s64vector
PASS: srfi-4.test: s64 vectors: s64vector->list/array->list
PASS: srfi-4.test: s64 vectors: make-s64vector
PASS: srfi-4.test: f32 vectors: f32vector? success
PASS: srfi-4.test: f32 vectors: f32vector? failure
PASS: srfi-4.test: f32 vectors: f32vector-length success 1
PASS: srfi-4.test: f32 vectors: f32vector-length success 2
PASS: srfi-4.test: f32 vectors: f32vector-length failure
PASS: srfi-4.test: f32 vectors: f32vector-ref
PASS: srfi-4.test: f32 vectors: f32vector-set!/ref
PASS: srfi-4.test: f32 vectors: f32vector->list/list->f32vector
PASS: srfi-4.test: f32 vectors: f32vector->list/array->list
PASS: srfi-4.test: f32 vectors: make-f32vector
PASS: srfi-4.test: f32 vectors: +inf.0, -inf.0, +nan.0 in f32vector
PASS: srfi-4.test: f64 vectors: f64vector? success
PASS: srfi-4.test: f64 vectors: f64vector? failure
PASS: srfi-4.test: f64 vectors: f64vector-length success 1
PASS: srfi-4.test: f64 vectors: f64vector-length success 2
PASS: srfi-4.test: f64 vectors: f64vector-length failure
PASS: srfi-4.test: f64 vectors: f64vector-ref
PASS: srfi-4.test: f64 vectors: f64vector-set!/ref
PASS: srfi-4.test: f64 vectors: f64vector->list/list->f64vector
PASS: srfi-4.test: f64 vectors: f64vector->list/array->list
PASS: srfi-4.test: f64 vectors: make-f64vector
PASS: srfi-4.test: f64 vectors: +inf.0, -inf.0, +nan.0 in f64vector
PASS: srfi-4.test: c32 vectors: c32vector? success
PASS: srfi-4.test: c32 vectors: c32vector? failure
PASS: srfi-4.test: c32 vectors: c32vector-length success 1
PASS: srfi-4.test: c32 vectors: c32vector-length success 2
PASS: srfi-4.test: c32 vectors: c32vector-length failure
PASS: srfi-4.test: c32 vectors: c32vector-ref
PASS: srfi-4.test: c32 vectors: c32vector-set!/ref
PASS: srfi-4.test: c32 vectors: c32vector->list/list->c32vector
PASS: srfi-4.test: c32 vectors: c32vector->list/array->list
PASS: srfi-4.test: c32 vectors: make-c32vector
PASS: srfi-4.test: c32 vectors: +inf.0, -inf.0, +nan.0 in c32vector
PASS: srfi-4.test: c32 vectors: array-ref
PASS: srfi-4.test: c32 vectors: array-set!
PASS: srfi-4.test: c32 vectors: array-ref, out-of-range
PASS: srfi-4.test: c32 vectors: array-set!, out-of-range
PASS: srfi-4.test: c64 vectors: c64vector? success
PASS: srfi-4.test: c64 vectors: c64vector? failure
PASS: srfi-4.test: c64 vectors: c64vector-length success 1
PASS: srfi-4.test: c64 vectors: c64vector-length success 2
PASS: srfi-4.test: c64 vectors: c64vector-length failure
PASS: srfi-4.test: c64 vectors: c64vector-ref
PASS: srfi-4.test: c64 vectors: c64vector-set!/ref
PASS: srfi-4.test: c64 vectors: c64vector->list/list->c64vector
PASS: srfi-4.test: c64 vectors: c64vector->list/array->list
PASS: srfi-4.test: c64 vectors: make-c64vector
PASS: srfi-4.test: c64 vectors: +inf.0, -inf.0, +nan.0 in c64vector
PASS: srfi-4.test: c64 vectors: array-ref
PASS: srfi-4.test: c64 vectors: array-set!
PASS: srfi-4.test: c64 vectors: array-ref, out-of-range
PASS: srfi-4.test: c64 vectors: array-set!, out-of-range
PASS: srfi-4.test: accessing uniform vectors of different types: u32vector-length of u16vector
PASS: srfi-4.test: accessing uniform vectors of different types: u32vector-length of u8vector
PASS: srfi-4.test: accessing uniform vectors of different types: u8vector-length of u16vector
PASS: srfi-4.test: accessing uniform vectors of different types: u8vector-length of u32vector
PASS: srfi-4.test: accessing uniform vectors of different types: u32vector-set! of u16vector
PASS: srfi-4.test: accessing uniform vectors of different types: u16vector-set! of u32vector
PASS: srfi-41.test: stream-null: is a stream
PASS: srfi-41.test: stream-null: is a null stream
PASS: srfi-41.test: stream-null: is not a stream pair
PASS: srfi-41.test: stream-cons: is a stream
PASS: srfi-41.test: stream-cons: is not a null stream
PASS: srfi-41.test: stream-cons: is a stream pair
PASS: srfi-41.test: stream?: is true for null stream
PASS: srfi-41.test: stream?: is true for stream pair
PASS: srfi-41.test: stream?: is false for non-stream
PASS: srfi-41.test: stream-null?: is true for null stream
PASS: srfi-41.test: stream-null?: is false for stream pair
PASS: srfi-41.test: stream-null?: is false for non-stream
PASS: srfi-41.test: stream-pair?: is false for null stream
PASS: srfi-41.test: stream-pair?: is true for stream pair
PASS: srfi-41.test: stream-pair?: is false for non-stream
PASS: srfi-41.test: stream-car: throws for non-stream
PASS: srfi-41.test: stream-car: throws for null stream
PASS: srfi-41.test: stream-car: returns first of stream
PASS: srfi-41.test: stream-cdr: throws for non-stream
PASS: srfi-41.test: stream-cdr: throws for null stream
PASS: srfi-41.test: stream-cdr: returns rest of stream
PASS: srfi-41.test: stream-lambda: returns correct result
PASS: srfi-41.test: define-stream: returns correct result
PASS: srfi-41.test: list->stream: throws for non-list
PASS: srfi-41.test: list->stream: returns empty stream for empty list
PASS: srfi-41.test: list->stream: returns stream with same content as given list
PASS: srfi-41.test: port->stream: throws for non-input-port
PASS: srfi-41.test: port->stream: reads input string correctly
PASS: srfi-41.test: stream: with empty stream
PASS: srfi-41.test: stream: with one-element stream
PASS: srfi-41.test: stream: with three-element stream
PASS: srfi-41.test: stream->list: throws for non-stream
PASS: srfi-41.test: stream->list: throws for non-integer count
PASS: srfi-41.test: stream->list: throws for negative count
PASS: srfi-41.test: stream->list: returns empty list for empty stream
PASS: srfi-41.test: stream->list: without count
PASS: srfi-41.test: stream->list: with count longer than stream
PASS: srfi-41.test: stream->list: with count shorter than stream
PASS: srfi-41.test: stream-append: throws for non-stream
PASS: srfi-41.test: stream-append: with one stream
PASS: srfi-41.test: stream-append: with two streams
PASS: srfi-41.test: stream-append: with three streams
PASS: srfi-41.test: stream-append: append with null is noop
PASS: srfi-41.test: stream-append: prepend with null is noop
PASS: srfi-41.test: stream-concat: throws for non-stream
PASS: srfi-41.test: stream-concat: with one stream
PASS: srfi-41.test: stream-concat: with two streams
PASS: srfi-41.test: stream-constant: circular stream of 1 has >100 elements
PASS: srfi-41.test: stream-constant: circular stream of 2 has >100 elements
PASS: srfi-41.test: stream-constant: circular stream of 3 repeats after 3
PASS: srfi-41.test: stream-constant: circular stream of 1 repeats at 1
PASS: srfi-41.test: stream-constant: circular stream of 2 repeats at 2
PASS: srfi-41.test: stream-constant: circular stream of 3 repeats at 3
PASS: srfi-41.test: stream-drop: throws for non-integer count
PASS: srfi-41.test: stream-drop: throws for negative count
PASS: srfi-41.test: stream-drop: throws for non-stream
PASS: srfi-41.test: stream-drop: returns null when given null
PASS: srfi-41.test: stream-drop: returns same stream when count is zero
PASS: srfi-41.test: stream-drop: returns dropped-by-one stream when count is one
PASS: srfi-41.test: stream-drop: returns null if count is longer than stream
PASS: srfi-41.test: stream-drop-while: throws for invalid predicate
PASS: srfi-41.test: stream-drop-while: throws for non-stream
PASS: srfi-41.test: stream-drop-while: returns null when given null
PASS: srfi-41.test: stream-drop-while: returns dropped stream when first element matches
PASS: srfi-41.test: stream-drop-while: returns whole stream when first element doesn't match
PASS: srfi-41.test: stream-drop-while: returns empty stream if all elements match
PASS: srfi-41.test: stream-drop-while: return whole stream if no elements match
PASS: srfi-41.test: stream-filter: throws for invalid predicate
PASS: srfi-41.test: stream-filter: throws for non-stream
PASS: srfi-41.test: stream-filter: returns null when given null
PASS: srfi-41.test: stream-filter: filters out even numbers
PASS: srfi-41.test: stream-filter: filters out odd numbers
PASS: srfi-41.test: stream-filter: returns all elements if predicate matches all
PASS: srfi-41.test: stream-filter: returns null if predicate matches none
PASS: srfi-41.test: stream-filter: all elements of an odd-filtered stream are odd
PASS: srfi-41.test: stream-filter: no elements of an odd-filtered stream are even
PASS: srfi-41.test: stream-fold: throws for invalid function
PASS: srfi-41.test: stream-fold: throws for non-stream
PASS: srfi-41.test: stream-fold: returns the correct result
PASS: srfi-41.test: stream-for-each: throws for invalid function
PASS: srfi-41.test: stream-for-each: throws if given no streams
PASS: srfi-41.test: stream-for-each: throws for non-stream
PASS: srfi-41.test: stream-for-each: function is called for stream elements
PASS: srfi-41.test: stream-from: throws for non-numeric start
PASS: srfi-41.test: stream-from: throws for non-numeric step
PASS: srfi-41.test: stream-from: works for default values
PASS: srfi-41.test: stream-from: works for non-default start and step
PASS: srfi-41.test: stream-from: works for negative step
PASS: srfi-41.test: stream-iterate: throws for invalid function
PASS: srfi-41.test: stream-iterate: returns correct iterated stream with 1+
PASS: srfi-41.test: stream-iterate: returns correct iterated stream with exact-integer-sqrt
PASS: srfi-41.test: stream-length: throws for non-stream
PASS: srfi-41.test: stream-length: returns 0 for empty stream
PASS: srfi-41.test: stream-length: returns correct stream length
PASS: srfi-41.test: stream-let: returns correct result
PASS: srfi-41.test: stream-map: throws for invalid function
PASS: srfi-41.test: stream-map: throws if given no streams
PASS: srfi-41.test: stream-map: throws for non-stream
PASS: srfi-41.test: stream-map: works for one stream
PASS: srfi-41.test: stream-map: works for two streams
PASS: srfi-41.test: stream-map: returns finite stream for finite first stream
PASS: srfi-41.test: stream-map: returns finite stream for finite last stream
PASS: srfi-41.test: stream-map: works for three streams
PASS: srfi-41.test: stream-match: throws for non-stream
PASS: srfi-41.test: stream-match: throws when no pattern matches
PASS: srfi-41.test: stream-match: matches empty stream correctly
PASS: srfi-41.test: stream-match: matches non-empty stream correctly
PASS: srfi-41.test: stream-match: matches stream of one element
PASS: srfi-41.test: stream-match: matches wildcard
PASS: srfi-41.test: stream-match: matches stream of three elements
PASS: srfi-41.test: stream-match: matches first element with wildcard rest
PASS: srfi-41.test: stream-match: matches first two elements with wildcard rest
PASS: srfi-41.test: stream-match: rest variable matches as stream
PASS: srfi-41.test: stream-match: rest variable can match whole stream
PASS: srfi-41.test: stream-match: successful guard match
PASS: srfi-41.test: stream-match: unsuccessful guard match
PASS: srfi-41.test: stream-match: unsuccessful guard match with two variables
PASS: srfi-41.test: stream-match: successful guard match with two variables
PASS: srfi-41.test: stream-of: all 3 clause types work
PASS: srfi-41.test: stream-of: using two streams creates cartesian product
PASS: srfi-41.test: stream-of: using no clauses returns just the expression
PASS: srfi-41.test: stream-range: throws for non-numeric start
PASS: srfi-41.test: stream-range: throws for non-numeric end
PASS: srfi-41.test: stream-range: throws for non-numeric step
PASS: srfi-41.test: stream-range: returns increasing range if start < end
PASS: srfi-41.test: stream-range: returns decreasing range if start > end
PASS: srfi-41.test: stream-range: returns increasing range of step 2
PASS: srfi-41.test: stream-range: returns decreasing range of step 2
PASS: srfi-41.test: stream-range: returns empty range if start is past end value
PASS: srfi-41.test: stream-ref: throws for non-stream
PASS: srfi-41.test: stream-ref: throws for non-integer index
PASS: srfi-41.test: stream-ref: throws for negative index
PASS: srfi-41.test: stream-ref: throws if index goes past end of stream
PASS: srfi-41.test: stream-ref: returns first element when index = 0
PASS: srfi-41.test: stream-ref: returns second element when index = 1
PASS: srfi-41.test: stream-ref: returns third element when index = 2
PASS: srfi-41.test: stream-reverse: throws for non-stream
PASS: srfi-41.test: stream-reverse: returns null when given null
PASS: srfi-41.test: stream-reverse: returns (3 2 1) for (1 2 3)
PASS: srfi-41.test: stream-scan: throws for invalid function
PASS: srfi-41.test: stream-scan: throws for non-stream
PASS: srfi-41.test: stream-scan: returns the correct result
PASS: srfi-41.test: stream-take: throws for non-stream
PASS: srfi-41.test: stream-take: throws for non-integer index
PASS: srfi-41.test: stream-take: throws for negative index
PASS: srfi-41.test: stream-take: returns null for empty stream
PASS: srfi-41.test: stream-take: using 0 index returns null for empty stream
PASS: srfi-41.test: stream-take: using 0 index returns null for non-empty stream
PASS: srfi-41.test: stream-take: returns first 2 elements of stream
PASS: srfi-41.test: stream-take: returns whole stream when index is same as length
PASS: srfi-41.test: stream-take: returns whole stream when index exceeds length
PASS: srfi-41.test: stream-take-while: throws for non-stream
PASS: srfi-41.test: stream-take-while: throws for invalid predicate
PASS: srfi-41.test: stream-take-while: returns stream up to first non-matching item
PASS: srfi-41.test: stream-take-while: returns empty stream if first item doesn't match
PASS: srfi-41.test: stream-take-while: returns whole stream if every item matches
PASS: srfi-41.test: stream-take-while: return empty stream if no item matches
PASS: srfi-41.test: stream-unfold: throws for invalid mapper
PASS: srfi-41.test: stream-unfold: throws for invalid predicate
PASS: srfi-41.test: stream-unfold: throws for invalid generator
PASS: srfi-41.test: stream-unfold: returns the correct result
PASS: srfi-41.test: stream-unfolds: returns the correct result
PASS: srfi-41.test: stream-unfolds: handles returns of multiple elements correctly
PASS: srfi-41.test: stream-unfolds: returns first stream correctly
PASS: srfi-41.test: stream-unfolds: returns second stream correctly
PASS: srfi-41.test: stream-zip: throws if given no streams
PASS: srfi-41.test: stream-zip: throws for non-stream
PASS: srfi-41.test: stream-zip: throws if any argument is non-stream
PASS: srfi-41.test: stream-zip: returns null when given null as any argument
PASS: srfi-41.test: stream-zip: returns single-element lists when given one stream
PASS: srfi-41.test: stream-zip: returns double-element lists when given two streams
PASS: srfi-41.test: stream-zip: returns finite stream if at least one given stream is
PASS: srfi-41.test: stream-zip: returns triple-element lists when given three streams
PASS: srfi-41.test: other tests: returns biggest prime under 1000
PASS: srfi-41.test: other tests: quicksort returns same result as insertion sort
PASS: srfi-41.test: other tests: merge sort returns same result as insertion sort
PASS: srfi-41.test: other tests: returns 1000th Hamming number
PASS: srfi-42.test: (my-equal? (let ((x 0)) (do-ec (set! x (+ x 1))) x) 1)
PASS: srfi-42.test: (my-equal? (let ((x 0)) (do-ec (:range i 10) (set! x (+ x 1))) x) 10)
PASS: srfi-42.test: (my-equal? (let ((x 0)) (do-ec (:range n 10) (:range k n) (set! x (+ x 1))) x) 45)
PASS: srfi-42.test: (my-equal? (list-ec 1) (quote (1)))
PASS: srfi-42.test: (my-equal? (list-ec (:range i 4) i) (quote (0 1 2 3)))
PASS: srfi-42.test: (my-equal? (list-ec (:range n 3) (:range k (+ n 1)) (list n k)) (quote ((0 0) (1 0) (1 1) (2 0) (2 1) (2 2))))
PASS: srfi-42.test: (my-equal? (list-ec (:range n 5) (if (even? n)) (:range k (+ n 1)) (list n k)) (quote ((0 0) (2 0) (2 1) (2 2) (4 0) (4 1) (4 2) (4 3) (4 4))))
PASS: srfi-42.test: (my-equal? (list-ec (:range n 5) (not (even? n)) (:range k (+ n 1)) (list n k)) (quote ((1 0) (1 1) (3 0) (3 1) (3 2) (3 3))))
PASS: srfi-42.test: (my-equal? (list-ec (:range n 5) (and (even? n) (> n 2)) (:range k (+ n 1)) (list n k)) (quote ((4 0) (4 1) (4 2) (4 3) (4 4))))
PASS: srfi-42.test: (my-equal? (list-ec (:range n 5) (or (even? n) (> n 3)) (:range k (+ n 1)) (list n k)) (quote ((0 0) (2 0) (2 1) (2 2) (4 0) (4 1) (4 2) (4 3) (4 4))))
PASS: srfi-42.test: (my-equal? (let ((x 0)) (list-ec (:range n 10) (begin (set! x (+ x 1))) n) x) 10)
PASS: srfi-42.test: (my-equal? (list-ec (nested (:range n 3) (:range k n)) k) (quote (0 0 1)))
PASS: srfi-42.test: (my-equal? (append-ec (quote (a b))) (quote (a b)))
PASS: srfi-42.test: (my-equal? (append-ec (:range i 0) (quote (a b))) (quote ()))
PASS: srfi-42.test: (my-equal? (append-ec (:range i 1) (quote (a b))) (quote (a b)))
PASS: srfi-42.test: (my-equal? (append-ec (:range i 2) (quote (a b))) (quote (a b a b)))
PASS: srfi-42.test: (my-equal? (string-ec a) (string a))
PASS: srfi-42.test: (my-equal? (string-ec (:range i 0) a) )
PASS: srfi-42.test: (my-equal? (string-ec (:range i 1) a) a)
PASS: srfi-42.test: (my-equal? (string-ec (:range i 2) a) aa)
PASS: srfi-42.test: (my-equal? (string-append-ec ab) ab)
PASS: srfi-42.test: (my-equal? (string-append-ec (:range i 0) ab) )
PASS: srfi-42.test: (my-equal? (string-append-ec (:range i 1) ab) ab)
PASS: srfi-42.test: (my-equal? (string-append-ec (:range i 2) ab) abab)
PASS: srfi-42.test: (my-equal? (vector-ec 1) (vector 1))
PASS: srfi-42.test: (my-equal? (vector-ec (:range i 0) i) (vector))
PASS: srfi-42.test: (my-equal? (vector-ec (:range i 1) i) (vector 0))
PASS: srfi-42.test: (my-equal? (vector-ec (:range i 2) i) (vector 0 1))
PASS: srfi-42.test: (my-equal? (vector-of-length-ec 1 1) (vector 1))
PASS: srfi-42.test: (my-equal? (vector-of-length-ec 0 (:range i 0) i) (vector))
PASS: srfi-42.test: (my-equal? (vector-of-length-ec 1 (:range i 1) i) (vector 0))
PASS: srfi-42.test: (my-equal? (vector-of-length-ec 2 (:range i 2) i) (vector 0 1))
PASS: srfi-42.test: (my-equal? (sum-ec 1) 1)
PASS: srfi-42.test: (my-equal? (sum-ec (:range i 0) i) 0)
PASS: srfi-42.test: (my-equal? (sum-ec (:range i 1) i) 0)
PASS: srfi-42.test: (my-equal? (sum-ec (:range i 2) i) 1)
PASS: srfi-42.test: (my-equal? (sum-ec (:range i 3) i) 3)
PASS: srfi-42.test: (my-equal? (product-ec 1) 1)
PASS: srfi-42.test: (my-equal? (product-ec (:range i 1 0) i) 1)
PASS: srfi-42.test: (my-equal? (product-ec (:range i 1 1) i) 1)
PASS: srfi-42.test: (my-equal? (product-ec (:range i 1 2) i) 1)
PASS: srfi-42.test: (my-equal? (product-ec (:range i 1 3) i) 2)
PASS: srfi-42.test: (my-equal? (product-ec (:range i 1 4) i) 6)
PASS: srfi-42.test: (my-equal? (min-ec 1) 1)
PASS: srfi-42.test: (my-equal? (min-ec (:range i 1) i) 0)
PASS: srfi-42.test: (my-equal? (min-ec (:range i 2) i) 0)
PASS: srfi-42.test: (my-equal? (max-ec 1) 1)
PASS: srfi-42.test: (my-equal? (max-ec (:range i 1) i) 0)
PASS: srfi-42.test: (my-equal? (max-ec (:range i 2) i) 1)
PASS: srfi-42.test: (my-equal? (first-ec #f 1) 1)
PASS: srfi-42.test: (my-equal? (first-ec #f (:range i 0) i) #f)
PASS: srfi-42.test: (my-equal? (first-ec #f (:range i 1) i) 0)
PASS: srfi-42.test: (my-equal? (first-ec #f (:range i 2) i) 0)
PASS: srfi-42.test: (my-equal? (let ((last-i -1)) (first-ec #f (:range i 10) (begin (set! last-i i)) i) last-i) 0)
PASS: srfi-42.test: (my-equal? (last-ec #f 1) 1)
PASS: srfi-42.test: (my-equal? (last-ec #f (:range i 0) i) #f)
PASS: srfi-42.test: (my-equal? (last-ec #f (:range i 1) i) 0)
PASS: srfi-42.test: (my-equal? (last-ec #f (:range i 2) i) 1)
PASS: srfi-42.test: (my-equal? (any?-ec #f) #f)
PASS: srfi-42.test: (my-equal? (any?-ec #t) #t)
PASS: srfi-42.test: (my-equal? (any?-ec (:range i 2 2) (even? i)) #f)
PASS: srfi-42.test: (my-equal? (any?-ec (:range i 2 3) (even? i)) #t)
PASS: srfi-42.test: (my-equal? (every?-ec #f) #f)
PASS: srfi-42.test: (my-equal? (every?-ec #t) #t)
PASS: srfi-42.test: (my-equal? (every?-ec (:range i 2 2) (even? i)) #t)
PASS: srfi-42.test: (my-equal? (every?-ec (:range i 2 3) (even? i)) #t)
PASS: srfi-42.test: (my-equal? (every?-ec (:range i 2 4) (even? i)) #f)
PASS: srfi-42.test: (my-equal? (let ((sum-sqr (lambda (x result) (+ result (* x x))))) (fold-ec 0 (:range i 10) i sum-sqr)) 285)
PASS: srfi-42.test: (my-equal? (let ((minus-1 (lambda (x) (- x 1))) (sum-sqr (lambda (x result) (+ result (* x x))))) (fold3-ec (error wrong) (:range i 10) i minus-1 sum-sqr)) 284)
PASS: srfi-42.test: (my-equal? (fold3-ec (quote infinity) (:range i 0) i min min) (quote infinity))
PASS: srfi-42.test: (my-equal? (list-ec (:list x (quote ())) x) (quote ()))
PASS: srfi-42.test: (my-equal? (list-ec (:list x (quote (1))) x) (quote (1)))
PASS: srfi-42.test: (my-equal? (list-ec (:list x (quote (1 2 3))) x) (quote (1 2 3)))
PASS: srfi-42.test: (my-equal? (list-ec (:list x (quote (1)) (quote (2))) x) (quote (1 2)))
PASS: srfi-42.test: (my-equal? (list-ec (:list x (quote (1)) (quote (2)) (quote (3))) x) (quote (1 2 3)))
PASS: srfi-42.test: (my-equal? (list-ec (:string c ) c) (quote ()))
PASS: srfi-42.test: (my-equal? (list-ec (:string c 1) c) (quote (1)))
PASS: srfi-42.test: (my-equal? (list-ec (:string c 123) c) (quote (1 2 3)))
PASS: srfi-42.test: (my-equal? (list-ec (:string c 1 2) c) (quote (1 2)))
PASS: srfi-42.test: (my-equal? (list-ec (:string c 1 2 3) c) (quote (1 2 3)))
PASS: srfi-42.test: (my-equal? (list-ec (:vector x (vector)) x) (quote ()))
PASS: srfi-42.test: (my-equal? (list-ec (:vector x (vector 1)) x) (quote (1)))
PASS: srfi-42.test: (my-equal? (list-ec (:vector x (vector 1 2 3)) x) (quote (1 2 3)))
PASS: srfi-42.test: (my-equal? (list-ec (:vector x (vector 1) (vector 2)) x) (quote (1 2)))
PASS: srfi-42.test: (my-equal? (list-ec (:vector x (vector 1) (vector 2) (vector 3)) x) (quote (1 2 3)))
PASS: srfi-42.test: (my-equal? (list-ec (:range x -2) x) (quote ()))
PASS: srfi-42.test: (my-equal? (list-ec (:range x -1) x) (quote ()))
PASS: srfi-42.test: (my-equal? (list-ec (:range x 0) x) (quote ()))
PASS: srfi-42.test: (my-equal? (list-ec (:range x 1) x) (quote (0)))
PASS: srfi-42.test: (my-equal? (list-ec (:range x 2) x) (quote (0 1)))
PASS: srfi-42.test: (my-equal? (list-ec (:range x 0 3) x) (quote (0 1 2)))
PASS: srfi-42.test: (my-equal? (list-ec (:range x 1 3) x) (quote (1 2)))
PASS: srfi-42.test: (my-equal? (list-ec (:range x -2 -1) x) (quote (-2)))
PASS: srfi-42.test: (my-equal? (list-ec (:range x -2 -2) x) (quote ()))
PASS: srfi-42.test: (my-equal? (list-ec (:range x 1 5 2) x) (quote (1 3)))
PASS: srfi-42.test: (my-equal? (list-ec (:range x 1 6 2) x) (quote (1 3 5)))
PASS: srfi-42.test: (my-equal? (list-ec (:range x 5 1 -2) x) (quote (5 3)))
PASS: srfi-42.test: (my-equal? (list-ec (:range x 6 1 -2) x) (quote (6 4 2)))
PASS: srfi-42.test: (my-equal? (list-ec (:real-range x 0.0 3.0) x) (quote (0.0 1.0 2.0)))
PASS: srfi-42.test: (my-equal? (list-ec (:real-range x 0 3.0) x) (quote (0.0 1.0 2.0)))
PASS: srfi-42.test: (my-equal? (list-ec (:real-range x 0 3 1.0) x) (quote (0.0 1.0 2.0)))
PASS: srfi-42.test: (my-equal? (string-ec (:char-range c a z) c) abcdefghijklmnopqrstuvwxyz)
PASS: srfi-42.test: (my-equal? (begin (let ((f (my-open-output-file tmp1))) (do-ec (:range n 10) (begin (write n f) (newline f))) (close-output-port f)) (my-call-with-input-file tmp1 (lambda (port) (list-ec (:port x port read) x)))) (list-ec (:range n 10) n))
PASS: srfi-42.test: (my-equal? (begin (let ((f (my-open-output-file tmp1))) (do-ec (:range n 10) (begin (write n f) (newline f))) (close-output-port f)) (my-call-with-input-file tmp1 (lambda (port) (list-ec (:port x port) x)))) (list-ec (:range n 10) n))
PASS: srfi-42.test: (my-equal? (list-ec (:do ((i 0)) (< i 4) ((+ i 1))) i) (quote (0 1 2 3)))
PASS: srfi-42.test: (my-equal? (list-ec (:do (let ((x (quote x)))) ((i 0)) (< i 4) (let ((j (- 10 i)))) #t ((+ i 1))) j) (quote (10 9 8 7)))
PASS: srfi-42.test: (my-equal? (list-ec (:let x 1) x) (quote (1)))
PASS: srfi-42.test: (my-equal? (list-ec (:let x 1) (:let y (+ x 1)) y) (quote (2)))
PASS: srfi-42.test: (my-equal? (list-ec (:let x 1) (:let x (+ x 1)) x) (quote (2)))
PASS: srfi-42.test: (my-equal? (list-ec (:parallel (:range i 1 10) (:list x (quote (a b c)))) (list i x)) (quote ((1 a) (2 b) (3 c))))
PASS: srfi-42.test: (my-equal? (list-ec (:while (:range i 1 10) (< i 5)) i) (quote (1 2 3 4)))
PASS: srfi-42.test: (my-equal? (list-ec (:until (:range i 1 10) (>= i 5)) i) (quote (1 2 3 4 5)))
PASS: srfi-42.test: (my-equal? (list-ec (:while (:list i (quote (1 2 3 4 5 6 7 8 9))) (< i 5)) i) (quote (1 2 3 4)))
PASS: srfi-42.test: (my-equal? (list-ec (:until (:list i (quote (1 2 3 4 5 6 7 8 9))) (>= i 5)) i) (quote (1 2 3 4 5)))
PASS: srfi-42.test: (my-equal? (list-ec (:while (:vector x (index i) (quote #(1 2 3 4 5))) (< x 10)) x) (quote (1 2 3 4 5)))
PASS: srfi-42.test: (my-equal? (list-ec (:while (:parallel (:range i 1 10) (:list j (quote (1 2 3 4 5 6 7 8 9)))) (< i 5)) (list i j)) (quote ((1 1) (2 2) (3 3) (4 4))))
PASS: srfi-42.test: (my-equal? (list-ec (:until (:parallel (:range i 1 10) (:list j (quote (1 2 3 4 5 6 7 8 9)))) (>= i 5)) (list i j)) (quote ((1 1) (2 2) (3 3) (4 4) (5 5))))
PASS: srfi-42.test: (my-equal? (let ((n 0)) (do-ec (:while (:range i 1 10) (begin (set! n (+ n 1)) (< i 5))) (if #f #f)) n) 5)
PASS: srfi-42.test: (my-equal? (let ((n 0)) (do-ec (:until (:range i 1 10) (begin (set! n (+ n 1)) (>= i 5))) (if #f #f)) n) 5)
PASS: srfi-42.test: (my-equal? (let ((n 0)) (do-ec (:while (:parallel (:range i 1 10) (:do () (begin (set! n (+ n 1)) #t) ())) (< i 5)) (if #f #f)) n) 5)
PASS: srfi-42.test: (my-equal? (let ((n 0)) (do-ec (:until (:parallel (:range i 1 10) (:do () (begin (set! n (+ n 1)) #t) ())) (>= i 5)) (if #f #f)) n) 5)
PASS: srfi-42.test: (my-equal? (list-ec (: c (quote (a b))) c) (quote (a b)))
PASS: srfi-42.test: (my-equal? (list-ec (: c (quote (a b)) (quote (c d))) c) (quote (a b c d)))
PASS: srfi-42.test: (my-equal? (list-ec (: c ab) c) (quote (a b)))
PASS: srfi-42.test: (my-equal? (list-ec (: c ab cd) c) (quote (a b c d)))
PASS: srfi-42.test: (my-equal? (list-ec (: c (vector (quote a) (quote b))) c) (quote (a b)))
PASS: srfi-42.test: (my-equal? (list-ec (: c (vector (quote a) (quote b)) (vector (quote c))) c) (quote (a b c)))
PASS: srfi-42.test: (my-equal? (list-ec (: i 0) i) (quote ()))
PASS: srfi-42.test: (my-equal? (list-ec (: i 1) i) (quote (0)))
PASS: srfi-42.test: (my-equal? (list-ec (: i 10) i) (quote (0 1 2 3 4 5 6 7 8 9)))
PASS: srfi-42.test: (my-equal? (list-ec (: i 1 2) i) (quote (1)))
PASS: srfi-42.test: (my-equal? (list-ec (: i 1 2 3) i) (quote (1)))
PASS: srfi-42.test: (my-equal? (list-ec (: i 1 9 3) i) (quote (1 4 7)))
PASS: srfi-42.test: (my-equal? (list-ec (: i 0.0 1.0 0.2) i) (quote (0.0 0.2 0.4 0.6 0.8)))
PASS: srfi-42.test: (my-equal? (list-ec (: c a c) c) (quote (a b c)))
PASS: srfi-42.test: (my-equal? (begin (let ((f (my-open-output-file tmp1))) (do-ec (:range n 10) (begin (write n f) (newline f))) (close-output-port f)) (my-call-with-input-file tmp1 (lambda (port) (list-ec (: x port read) x)))) (list-ec (:range n 10) n))
PASS: srfi-42.test: (my-equal? (begin (let ((f (my-open-output-file tmp1))) (do-ec (:range n 10) (begin (write n f) (newline f))) (close-output-port f)) (my-call-with-input-file tmp1 (lambda (port) (list-ec (: x port) x)))) (list-ec (:range n 10) n))
PASS: srfi-42.test: (my-equal? (list-ec (:list c (index i) (quote (a b))) (list c i)) (quote ((a 0) (b 1))))
PASS: srfi-42.test: (my-equal? (list-ec (:string c (index i) a) (list c i)) (quote ((a 0))))
PASS: srfi-42.test: (my-equal? (list-ec (:vector c (index i) (vector (quote a))) (list c i)) (quote ((a 0))))
PASS: srfi-42.test: (my-equal? (list-ec (:range i (index j) 0 -3 -1) (list i j)) (quote ((0 0) (-1 1) (-2 2))))
PASS: srfi-42.test: (my-equal? (list-ec (:real-range i (index j) 0 1 0.2) (list i j)) (quote ((0.0 0) (0.2 1) (0.4 2) (0.6 3) (0.8 4))))
PASS: srfi-42.test: (my-equal? (list-ec (:char-range c (index i) a c) (list c i)) (quote ((a 0) (b 1) (c 2))))
PASS: srfi-42.test: (my-equal? (list-ec (: x (index i) (quote (a b c d))) (list x i)) (quote ((a 0) (b 1) (c 2) (d 3))))
PASS: srfi-42.test: (my-equal? (begin (let ((f (my-open-output-file tmp1))) (do-ec (:range n 10) (begin (write n f) (newline f))) (close-output-port f)) (my-call-with-input-file tmp1 (lambda (port) (list-ec (: x (index i) port) (list x i))))) (quote ((0 0) (1 1) (2 2) (3 3) (4 4) (5 5) (6 6) (7 7) (8 8) (9 9))))
PASS: srfi-42.test: (my-equal? (list-ec (: i 5) (* i i)) (quote (0 1 4 9 16)))
PASS: srfi-42.test: (my-equal? (list-ec (: n 1 4) (: i n) (list n i)) (quote ((1 0) (2 0) (2 1) (3 0) (3 1) (3 2))))
PASS: srfi-42.test: (my-equal? (list-ec (: x (index i) abc) (list x i)) (quote ((a 0) (b 1) (c 2))))
PASS: srfi-42.test: (my-equal? (list-ec (:string c (index i) a b) (cons c i)) (quote ((a . 0) (b . 1))))
PASS: srfi-42.test: (my-equal? (list-ec (:range x 5) (:range x x) x) (quote (0 0 1 0 1 2 0 1 2 3)))
PASS: srfi-42.test: (my-equal? (list-ec (:list x (quote (2 23 (4)))) (: y x) y) (quote (0 1 2 3 4)))
PASS: srfi-42.test: (my-equal? (list-ec (:parallel (:integers x) (:do ((i 10)) (< x i) ((- i 1)))) (list x i)) (quote ((0 10) (1 9) (2 8) (3 7) (4 6))))
PASS: srfi-42.test: (my-equal? (factorial 0) 1)
PASS: srfi-42.test: (my-equal? (factorial 1) 1)
PASS: srfi-42.test: (my-equal? (factorial 3) 6)
PASS: srfi-42.test: (my-equal? (factorial 5) 120)
PASS: srfi-42.test: (my-equal? (eratosthenes 50) (quote (2 3 5 7 11 13 17 19 23 29 31 37 41 43 47)))
PASS: srfi-42.test: (my-equal? (length (eratosthenes 100000)) 9592)
PASS: srfi-42.test: (my-equal? (pythagoras 15) (quote ((3 4 5) (5 12 13) (6 8 10) (9 12 15))))
PASS: srfi-42.test: (my-equal? (length (pythagoras 200)) 127)
PASS: srfi-42.test: (my-equal? (qsort (quote (1 5 4 2 4 5 3 2 1 3))) (quote (1 1 2 2 3 3 4 4 5 5)))
PASS: srfi-42.test: (my-equal? (pi-BBP 5) (/ 40413742330349316707 12864093722915635200))
PASS: srfi-42.test: (my-equal? (begin (let ((f (my-open-output-file tmp1))) (do-ec (:range n 10) (begin (write n f) (newline f))) (close-output-port f)) (read-lines tmp1)) (list-ec (:char-range c 0 9) (string c 
)))
PASS: srfi-43.test: make-vector: simple, no init
PASS: srfi-43.test: make-vector: empty
PASS: srfi-43.test: make-vector: negative length
PASS: srfi-43.test: make-vector: simple with init
PASS: srfi-43.test: make-vector: empty with init
PASS: srfi-43.test: make-vector: negative length
PASS: srfi-43.test: vector: no args
PASS: srfi-43.test: vector: simple
PASS: srfi-43.test: vector-unfold: no seeds
PASS: srfi-43.test: vector-unfold: no seeds, zero len
PASS: srfi-43.test: vector-unfold: no seeds, negative len
PASS: srfi-43.test: vector-unfold: 1 seed
PASS: srfi-43.test: vector-unfold: 1 seed, zero len
PASS: srfi-43.test: vector-unfold: 1 seed, negative len
PASS: srfi-43.test: vector-unfold: 2 seeds
PASS: srfi-43.test: vector-unfold: 2 seeds, zero len
PASS: srfi-43.test: vector-unfold: 2 seeds, negative len
PASS: srfi-43.test: vector-unfold: 3 seeds
PASS: srfi-43.test: vector-unfold: 3 seeds, zero len
PASS: srfi-43.test: vector-unfold: 3 seeds, negative len
PASS: srfi-43.test: vector-unfold-right: no seeds, zero len
PASS: srfi-43.test: vector-unfold-right: no seeds, negative len
PASS: srfi-43.test: vector-unfold-right: 1 seed
PASS: srfi-43.test: vector-unfold-right: 1 seed, zero len
PASS: srfi-43.test: vector-unfold-right: 1 seed, negative len
PASS: srfi-43.test: vector-unfold-right: 1 seed, reverse vector
PASS: srfi-43.test: vector-unfold-right: 2 seeds
PASS: srfi-43.test: vector-unfold-right: 2 seeds, zero len
PASS: srfi-43.test: vector-unfold-right: 2 seeds, negative len
PASS: srfi-43.test: vector-unfold-right: 3 seeds
PASS: srfi-43.test: vector-unfold-right: 3 seeds, zero len
PASS: srfi-43.test: vector-unfold-right: 3 seeds, negative len
PASS: srfi-43.test: vector-copy: 1 arg
PASS: srfi-43.test: vector-copy: 2 args
PASS: srfi-43.test: vector-copy: 3 args
PASS: srfi-43.test: vector-copy: 4 args
PASS: srfi-43.test: vector-copy: 3 args, empty range
PASS: srfi-43.test: vector-copy: 3 args, invalid range
PASS: srfi-43.test: vector-reverse-copy: 1 arg
PASS: srfi-43.test: vector-reverse-copy: 2 args
PASS: srfi-43.test: vector-reverse-copy: 3 args
PASS: srfi-43.test: vector-reverse-copy: 3 args, empty result
PASS: srfi-43.test: vector-reverse-copy: 2 args, invalid range
PASS: srfi-43.test: vector-append: no args
PASS: srfi-43.test: vector-append: 1 arg
PASS: srfi-43.test: vector-append: 2 args
PASS: srfi-43.test: vector-append: 3 args
PASS: srfi-43.test: vector-append: 3 args with empty vector
PASS: srfi-43.test: vector-append: 3 args with non-vectors
PASS: srfi-43.test: vector-concatenate: 2 vectors
PASS: srfi-43.test: vector-concatenate: no vectors
PASS: srfi-43.test: vector-concatenate: non-vector in list
PASS: srfi-43.test: vector?: empty vector
PASS: srfi-43.test: vector?: simple
PASS: srfi-43.test: vector?: list
PASS: srfi-43.test: vector?: symbol
PASS: srfi-43.test: vector-empty?: empty vector
PASS: srfi-43.test: vector-empty?: singleton vector
PASS: srfi-43.test: vector-empty?: non-vector
PASS: srfi-43.test: vector=: 2 equal vectors
PASS: srfi-43.test: vector=: 3 equal vectors
PASS: srfi-43.test: vector=: 2 empty vectors
PASS: srfi-43.test: vector=: no vectors
PASS: srfi-43.test: vector=: 1 vector
PASS: srfi-43.test: vector=: 2 unequal vectors of equal length
PASS: srfi-43.test: vector=: 3 unequal vectors of equal length
PASS: srfi-43.test: vector=: 2 vectors of unequal length
PASS: srfi-43.test: vector=: 3 vectors of unequal length
PASS: srfi-43.test: vector=: 2 vectors: empty, non-empty
PASS: srfi-43.test: vector=: 2 vectors: non-empty, empty
PASS: srfi-43.test: vector=: 2 equal vectors, elt= is equal?
PASS: srfi-43.test: vector=: 2 equal vectors, elt= is =
PASS: srfi-43.test: vector=: vector and list
PASS: srfi-43.test: vector=: non-procedure
PASS: srfi-43.test: vector-ref: simple 0
PASS: srfi-43.test: vector-ref: simple 1
PASS: srfi-43.test: vector-ref: simple 2
PASS: srfi-43.test: vector-ref: negative index
PASS: srfi-43.test: vector-ref: index beyond end
PASS: srfi-43.test: vector-ref: empty vector
PASS: srfi-43.test: vector-ref: non-vector
PASS: srfi-43.test: vector-ref: inexact index
PASS: srfi-43.test: vector-length: empty vector
PASS: srfi-43.test: vector-length: simple
PASS: srfi-43.test: vector-length: non-vector
PASS: srfi-43.test: vector-fold: 1 vector
PASS: srfi-43.test: vector-fold: 1 empty vector
PASS: srfi-43.test: vector-fold: 1 vector, use index
PASS: srfi-43.test: vector-fold: 2 vectors, unequal lengths
PASS: srfi-43.test: vector-fold: 3 vectors, unequal lengths
PASS: srfi-43.test: vector-fold: 5 args, non-vector
PASS: srfi-43.test: vector-fold: non-procedure
PASS: srfi-43.test: vector-fold-right: 1 vector
PASS: srfi-43.test: vector-fold-right: 2 vectors, unequal lengths
PASS: srfi-43.test: vector-fold-right: 3 vectors, unequal lengths
PASS: srfi-43.test: vector-fold-right: 5 args, non-vector
PASS: srfi-43.test: vector-fold-right: non-procedure
PASS: srfi-43.test: vector-map: 1 vector
PASS: srfi-43.test: vector-map: 1 empty vector
PASS: srfi-43.test: vector-map: 2 vectors, unequal lengths
PASS: srfi-43.test: vector-map: 3 vectors, unequal lengths
PASS: srfi-43.test: vector-map: 4 args, non-vector
PASS: srfi-43.test: vector-map: 3 args, non-vector
PASS: srfi-43.test: vector-map: non-procedure
PASS: srfi-43.test: vector-map!: 1 vector
PASS: srfi-43.test: vector-map!: 1 empty vector
PASS: srfi-43.test: vector-map!: 2 vectors, unequal lengths
PASS: srfi-43.test: vector-map!: 3 vectors, unequal lengths
PASS: srfi-43.test: vector-map!: non-vector
PASS: srfi-43.test: vector-map!: non-procedure
PASS: srfi-43.test: vector-for-each: 1 vector
PASS: srfi-43.test: vector-for-each: 1 empty vector
PASS: srfi-43.test: vector-for-each: 2 vectors, unequal lengths
PASS: srfi-43.test: vector-for-each: 3 vectors, unequal lengths
PASS: srfi-43.test: vector-for-each: non-vector
PASS: srfi-43.test: vector-for-each: non-procedure
PASS: srfi-43.test: vector-count: 1 vector
PASS: srfi-43.test: vector-count: 1 empty vector
PASS: srfi-43.test: vector-count: 2 vectors, unequal lengths
PASS: srfi-43.test: vector-count: 3 vectors, unequal lengths
PASS: srfi-43.test: vector-count: non-vector
PASS: srfi-43.test: vector-count: non-procedure
PASS: srfi-43.test: vector-index: 1 vector
PASS: srfi-43.test: vector-index: 2 vectors, unequal lengths, success
PASS: srfi-43.test: vector-index: 2 vectors, unequal lengths, failure
PASS: srfi-43.test: vector-index: non-procedure
PASS: srfi-43.test: vector-index: 3 args, non-vector
PASS: srfi-43.test: vector-index: 4 args, non-vector
PASS: srfi-43.test: vector-index: 3 vectors, unequal lengths, success
PASS: srfi-43.test: vector-index: 3 vectors, unequal lengths, failure
PASS: srfi-43.test: vector-index: empty vector
PASS: srfi-43.test: vector-index-right: 1 vector
PASS: srfi-43.test: vector-index-right: 2 vectors, unequal lengths, success
PASS: srfi-43.test: vector-index-right: 2 vectors, unequal lengths, failure
PASS: srfi-43.test: vector-index-right: non-procedure
PASS: srfi-43.test: vector-index-right: 3 args, non-vector
PASS: srfi-43.test: vector-index-right: 4 args, non-vector
PASS: srfi-43.test: vector-index-right: 3 vectors, unequal lengths, success
PASS: srfi-43.test: vector-index-right: 3 vectors, unequal lengths, failure
PASS: srfi-43.test: vector-index-right: empty vector
PASS: srfi-43.test: vector-skip: 1 vector
PASS: srfi-43.test: vector-skip: 2 vectors, unequal lengths, success
PASS: srfi-43.test: vector-skip: 2 vectors, unequal lengths, failure
PASS: srfi-43.test: vector-skip: non-procedure
PASS: srfi-43.test: vector-skip: 3 args, non-vector
PASS: srfi-43.test: vector-skip: 4 args, non-vector
PASS: srfi-43.test: vector-skip: 3 vectors, unequal lengths, success
PASS: srfi-43.test: vector-skip: 3 vectors, unequal lengths, failure
PASS: srfi-43.test: vector-skip: empty vector
PASS: srfi-43.test: vector-skip-right: 1 vector
PASS: srfi-43.test: vector-skip-right: 2 vectors, unequal lengths, success
PASS: srfi-43.test: vector-skip-right: 2 vectors, unequal lengths, failure
PASS: srfi-43.test: vector-skip-right: non-procedure
PASS: srfi-43.test: vector-skip-right: 3 args, non-vector
PASS: srfi-43.test: vector-skip-right: 4 args, non-vector
PASS: srfi-43.test: vector-skip-right: 3 vectors, unequal lengths, success
PASS: srfi-43.test: vector-skip-right: 3 vectors, unequal lengths, failure
PASS: srfi-43.test: vector-skip-right: empty vector
PASS: srfi-43.test: vector-binary-search: success
PASS: srfi-43.test: vector-binary-search: failure
PASS: srfi-43.test: vector-binary-search: singleton vector, success
PASS: srfi-43.test: vector-binary-search: empty vector
PASS: srfi-43.test: vector-binary-search: first element
PASS: srfi-43.test: vector-binary-search: specify range, success
PASS: srfi-43.test: vector-binary-search: specify range, failure
PASS: srfi-43.test: vector-any: 1 vector, success
PASS: srfi-43.test: vector-any: 1 vector, failure
PASS: srfi-43.test: vector-any: 1 vector, left-to-right
PASS: srfi-43.test: vector-any: 1 vector, left-to-right
PASS: srfi-43.test: vector-any: 1 empty vector
PASS: srfi-43.test: vector-any: 2 vectors, unequal lengths, success
PASS: srfi-43.test: vector-any: 2 vectors, unequal lengths, failure
PASS: srfi-43.test: vector-any: 3 vectors, unequal lengths, success
PASS: srfi-43.test: vector-any: 3 vectors, unequal lengths, failure
PASS: srfi-43.test: vector-every: 1 vector, failure
PASS: srfi-43.test: vector-every: 1 vector, success
PASS: srfi-43.test: vector-every: 1 vector, left-to-right, failure
PASS: srfi-43.test: vector-every: 1 empty vector
PASS: srfi-43.test: vector-every: 2 vectors, unequal lengths, left-to-right, failure
PASS: srfi-43.test: vector-every: 2 vectors, unequal lengths, left-to-right, success
PASS: srfi-43.test: vector-every: 3 vectors, unequal lengths, left-to-right, failure
PASS: srfi-43.test: vector-every: 3 vectors, unequal lengths, left-to-right, success
PASS: srfi-43.test: vector-set!: simple
PASS: srfi-43.test: vector-set!: index beyond end
PASS: srfi-43.test: vector-set!: negative index
PASS: srfi-43.test: vector-set!: empty vector
PASS: srfi-43.test: vector-swap!: simple
PASS: srfi-43.test: vector-swap!: same index
PASS: srfi-43.test: vector-swap!: index beyond end
PASS: srfi-43.test: vector-swap!: negative index
PASS: srfi-43.test: vector-swap!: empty vector
PASS: srfi-43.test: vector-fill!: 2 args
PASS: srfi-43.test: vector-fill!: 3 args
PASS: srfi-43.test: vector-fill!: 4 args
PASS: srfi-43.test: vector-fill!: 4 args, entire vector
PASS: srfi-43.test: vector-fill!: 4 args, empty range
PASS: srfi-43.test: vector-fill!: index beyond end
PASS: srfi-43.test: vector-fill!: invalid range
PASS: srfi-43.test: vector-fill!: negative index
PASS: srfi-43.test: vector-reverse!: 1 arg
PASS: srfi-43.test: vector-reverse!: 2 args
PASS: srfi-43.test: vector-reverse!: 3 args
PASS: srfi-43.test: vector-reverse!: 3 args, empty range
PASS: srfi-43.test: vector-reverse!: 3 args, singleton range
PASS: srfi-43.test: vector-reverse!: empty vector
PASS: srfi-43.test: vector-reverse!: index beyond end
PASS: srfi-43.test: vector-reverse!: invalid range
PASS: srfi-43.test: vector-reverse!: negative index
PASS: srfi-43.test: vector-copy!: 3 args, 0 tstart
PASS: srfi-43.test: vector-copy!: 3 args, 2 tstart
PASS: srfi-43.test: vector-copy!: 4 args
PASS: srfi-43.test: vector-copy!: 5 args
PASS: srfi-43.test: vector-copy!: 5 args, empty range
PASS: srfi-43.test: vector-copy!: overlapping source/target, moving right
PASS: srfi-43.test: vector-copy!: overlapping source/target, moving left
PASS: srfi-43.test: vector-copy!: overlapping source/target, not moving
PASS: srfi-43.test: vector-copy!: tstart beyond end
PASS: srfi-43.test: vector-copy!: would overwrite target end
PASS: srfi-43.test: vector-copy!: would overwrite target end
PASS: srfi-43.test: vector-reverse-copy!: 3 args, 0 tstart
PASS: srfi-43.test: vector-reverse-copy!: 3 args, 2 tstart
PASS: srfi-43.test: vector-reverse-copy!: 4 args
PASS: srfi-43.test: vector-reverse-copy!: 5 args
PASS: srfi-43.test: vector-reverse-copy!: 5 args, empty range
PASS: srfi-43.test: vector-reverse-copy!: 3 args, overlapping source/target
PASS: srfi-43.test: vector-reverse-copy!: 5 args, overlapping source/target
PASS: srfi-43.test: vector-reverse-copy!: 3 args, would overwrite target end
PASS: srfi-43.test: vector-reverse-copy!: 3 args, negative tstart
PASS: srfi-43.test: vector-reverse-copy!: 3 args, would overwrite target end
PASS: srfi-43.test: vector-reverse-copy!: 5 args, send beyond end
PASS: srfi-43.test: vector-reverse-copy!: 5 args, negative sstart
PASS: srfi-43.test: vector-reverse-copy!: 5 args, invalid source range
PASS: srfi-43.test: vector->list: 1 arg
PASS: srfi-43.test: vector->list: 2 args
PASS: srfi-43.test: vector->list: 3 args
PASS: srfi-43.test: vector->list: 3 args, empty range
PASS: srfi-43.test: vector->list: 1 arg, empty vector
PASS: srfi-43.test: vector->list: index beyond end
PASS: srfi-43.test: vector->list: negative index
PASS: srfi-43.test: vector->list: invalid range
PASS: srfi-43.test: reverse-vector->list: 1 arg
PASS: srfi-43.test: reverse-vector->list: 2 args
PASS: srfi-43.test: reverse-vector->list: 3 args
PASS: srfi-43.test: reverse-vector->list: 3 args, empty range
PASS: srfi-43.test: reverse-vector->list: 1 arg, empty vector
PASS: srfi-43.test: reverse-vector->list: index beyond end
PASS: srfi-43.test: reverse-vector->list: negative index
PASS: srfi-43.test: reverse-vector->list: invalid range
PASS: srfi-43.test: list->vector: 1 arg
PASS: srfi-43.test: list->vector: 1 empty list
PASS: srfi-43.test: list->vector: 2 args
PASS: srfi-43.test: list->vector: 3 args
PASS: srfi-43.test: list->vector: 3 args, empty range
PASS: srfi-43.test: list->vector: index beyond end
PASS: srfi-43.test: list->vector: negative index
PASS: srfi-43.test: list->vector: invalid range
PASS: srfi-43.test: reverse-list->vector: 1 arg
PASS: srfi-43.test: reverse-list->vector: 1 empty list
PASS: srfi-43.test: reverse-list->vector: 2 args
PASS: srfi-43.test: reverse-list->vector: 3 args
PASS: srfi-43.test: reverse-list->vector: 3 args, empty range
PASS: srfi-43.test: reverse-list->vector: index beyond end
PASS: srfi-43.test: reverse-list->vector: negative index
PASS: srfi-43.test: reverse-list->vector: invalid range
PASS: srfi-45.test: (equal? 1 (force s))
PASS: srfi-45.test: (equal? 1 (force s))
PASS: srfi-45.test: (equal? hello output)
PASS: srfi-45.test: (equal? 4 (+ (force s) (force s)))
PASS: srfi-45.test: (equal? bonjour output)
PASS: srfi-45.test: (equal? 1 (force t))
PASS: srfi-45.test: (equal? 1 (force r))
PASS: srfi-45.test: (equal? hi output)
PASS: srfi-45.test: (equal? 1 (car (force (stream-drop s 4))))
PASS: srfi-45.test: (equal? 1 (car (force (stream-drop s 4))))
PASS: srfi-45.test: (equal? hohohohoho output)
PASS: srfi-45.test: (equal? 6 (force p))
PASS: srfi-45.test: (equal? 6 (force p))
PASS: srfi-45.test: (equal? (quote second) (force f))
PASS: srfi-45.test: (equal? 5 (get-count))
PASS: srfi-45.test: (equal? 0 (force p))
PASS: srfi-45.test: (equal? 10 (get-count))
PASS: srfi-45.test: (equal? 0 (force (stream-ref (stream-filter zero? (from 0)) 0)))
PASS: srfi-45.test: (equal? 21 (force (times3 7)))
PASS: srfi-45.test: promise? predicate
PASS: srfi-6.test: open-input-string: eof on empty
PASS: srfi-6.test: open-input-string: read-char
PASS: srfi-6.test: open-input-string: read-char, Unicode
PASS: srfi-6.test: open-input-string: unread-char: one char
PASS: srfi-6.test: open-input-string: unread-char: after eof
PASS: srfi-6.test: open-input-string: unread-char: order
PASS: srfi-6.test: open-output-string: empty
PASS: srfi-6.test: open-output-string: xyz
PASS: srfi-6.test: open-output-string: λ
PASS: srfi-6.test: open-output-string: seek
PASS: srfi-60.test: cond-expand srfi-60
PASS: srfi-60.test: logand: (eqv? 6 (logand 14 6))
PASS: srfi-60.test: bitwise-and: (eqv? 6 (bitwise-and 14 6))
PASS: srfi-60.test: logior: (eqv? 14 (logior 10 12))
PASS: srfi-60.test: bitwise-ior: (eqv? 14 (bitwise-ior 10 12))
PASS: srfi-60.test: logxor: (eqv? 6 (logxor 10 12))
PASS: srfi-60.test: bitwise-xor: (eqv? 6 (bitwise-xor 10 12))
PASS: srfi-60.test: lognot: (eqv? -1 (lognot 0))
PASS: srfi-60.test: lognot: (eqv? 0 (lognot -1))
PASS: srfi-60.test: bitwise-not: (eqv? -1 (bitwise-not 0))
PASS: srfi-60.test: bitwise-not: (eqv? 0 (bitwise-not -1))
PASS: srfi-60.test: bitwise-if: (eqv? 9 (bitwise-if 3 1 8))
PASS: srfi-60.test: bitwise-if: (eqv? 0 (bitwise-if 3 8 1))
PASS: srfi-60.test: bitwise-merge: (eqv? 9 (bitwise-merge 3 1 8))
PASS: srfi-60.test: bitwise-merge: (eqv? 0 (bitwise-merge 3 8 1))
PASS: srfi-60.test: logtest: (eq? #t (logtest 3 6))
PASS: srfi-60.test: logtest: (eq? #f (logtest 3 12))
PASS: srfi-60.test: any-bits-set?: (eq? #t (any-bits-set? 3 6))
PASS: srfi-60.test: any-bits-set?: (eq? #f (any-bits-set? 3 12))
PASS: srfi-60.test: logcount: (eqv? 2 (logcount 12))
PASS: srfi-60.test: bit-count: (eqv? 2 (bit-count 12))
PASS: srfi-60.test: integer-length: (eqv? 0 (integer-length 0))
PASS: srfi-60.test: integer-length: (eqv? 8 (integer-length 128))
PASS: srfi-60.test: integer-length: (eqv? 8 (integer-length 255))
PASS: srfi-60.test: integer-length: (eqv? 9 (integer-length 256))
PASS: srfi-60.test: log2-binary-factors: (eqv? -1 (log2-binary-factors 0))
PASS: srfi-60.test: log2-binary-factors: (eqv? 0 (log2-binary-factors 1))
PASS: srfi-60.test: log2-binary-factors: (eqv? 0 (log2-binary-factors 3))
PASS: srfi-60.test: log2-binary-factors: (eqv? 2 (log2-binary-factors 4))
PASS: srfi-60.test: log2-binary-factors: (eqv? 1 (log2-binary-factors 6))
PASS: srfi-60.test: log2-binary-factors: (eqv? 0 (log2-binary-factors -1))
PASS: srfi-60.test: log2-binary-factors: (eqv? 1 (log2-binary-factors -2))
PASS: srfi-60.test: log2-binary-factors: (eqv? 0 (log2-binary-factors -3))
PASS: srfi-60.test: log2-binary-factors: (eqv? 2 (log2-binary-factors -4))
PASS: srfi-60.test: log2-binary-factors: (eqv? 128 (log2-binary-factors 340282366920938463463374607431768211456))
PASS: srfi-60.test: first-set-bit: (eqv? -1 (first-set-bit 0))
PASS: srfi-60.test: first-set-bit: (eqv? 0 (first-set-bit 1))
PASS: srfi-60.test: first-set-bit: (eqv? 0 (first-set-bit 3))
PASS: srfi-60.test: first-set-bit: (eqv? 2 (first-set-bit 4))
PASS: srfi-60.test: first-set-bit: (eqv? 1 (first-set-bit 6))
PASS: srfi-60.test: first-set-bit: (eqv? 0 (first-set-bit -1))
PASS: srfi-60.test: first-set-bit: (eqv? 1 (first-set-bit -2))
PASS: srfi-60.test: first-set-bit: (eqv? 0 (first-set-bit -3))
PASS: srfi-60.test: first-set-bit: (eqv? 2 (first-set-bit -4))
PASS: srfi-60.test: logbit?: (eq? #t (logbit? 0 1))
PASS: srfi-60.test: logbit?: (eq? #f (logbit? 1 1))
PASS: srfi-60.test: logbit?: (eq? #f (logbit? 1 8))
PASS: srfi-60.test: logbit?: (eq? #t (logbit? 1000 -1))
PASS: srfi-60.test: bit-set?: (eq? #t (bit-set? 0 1))
PASS: srfi-60.test: bit-set?: (eq? #f (bit-set? 1 1))
PASS: srfi-60.test: bit-set?: (eq? #f (bit-set? 1 8))
PASS: srfi-60.test: bit-set?: (eq? #t (bit-set? 1000 -1))
PASS: srfi-60.test: copy-bit: (eqv? 0 (copy-bit 0 0 #f))
PASS: srfi-60.test: copy-bit: (eqv? 0 (copy-bit 30 0 #f))
PASS: srfi-60.test: copy-bit: (eqv? 0 (copy-bit 31 0 #f))
PASS: srfi-60.test: copy-bit: (eqv? 0 (copy-bit 62 0 #f))
PASS: srfi-60.test: copy-bit: (eqv? 0 (copy-bit 63 0 #f))
PASS: srfi-60.test: copy-bit: (eqv? 0 (copy-bit 128 0 #f))
PASS: srfi-60.test: copy-bit: (eqv? -1 (copy-bit 0 -1 #t))
PASS: srfi-60.test: copy-bit: (eqv? -1 (copy-bit 30 -1 #t))
PASS: srfi-60.test: copy-bit: (eqv? -1 (copy-bit 31 -1 #t))
PASS: srfi-60.test: copy-bit: (eqv? -1 (copy-bit 62 -1 #t))
PASS: srfi-60.test: copy-bit: (eqv? -1 (copy-bit 63 -1 #t))
PASS: srfi-60.test: copy-bit: (eqv? -1 (copy-bit 128 -1 #t))
PASS: srfi-60.test: copy-bit: (eqv? 1 (copy-bit 0 0 #t))
PASS: srfi-60.test: copy-bit: (eqv? 262 (copy-bit 8 6 #t))
PASS: srfi-60.test: copy-bit: (eqv? 6 (copy-bit 8 6 #f))
PASS: srfi-60.test: copy-bit: (eqv? -2 (copy-bit 0 -1 #f))
PASS: srfi-60.test: copy-bit: bignum becomes inum
PASS: srfi-60.test: copy-bit: (eqv? 340282366920938463463374607431768211456 (copy-bit 128 340282366920938463463374607431768211456 #t))
PASS: srfi-60.test: copy-bit: (eqv? 340282366920938463463374607431768211456 (copy-bit 64 340282366920938463463374607431768211456 #f))
PASS: srfi-60.test: copy-bit: (eqv? -340282366920938463463374607431768211456 (copy-bit 64 -340282366920938463463374607431768211456 #f))
PASS: srfi-60.test: copy-bit: (eqv? -340282366920938463463374607431768211456 (copy-bit 256 -340282366920938463463374607431768211456 #t))
PASS: srfi-60.test: bit-field: (eqv? 0 (bit-field 6 0 1))
PASS: srfi-60.test: bit-field: (eqv? 3 (bit-field 6 1 3))
PASS: srfi-60.test: bit-field: (eqv? 1 (bit-field 6 2 999))
PASS: srfi-60.test: bit-field: (eqv? 1 (bit-field 340282366920938463463374607431768211456 128 129))
PASS: srfi-60.test: copy-bit-field: (eqv? 7 (copy-bit-field 6 1 0 1))
PASS: srfi-60.test: copy-bit-field: (eqv? 6 (copy-bit-field 6 1 1 2))
PASS: srfi-60.test: copy-bit-field: (eqv? 2 (copy-bit-field 6 1 1 3))
PASS: srfi-60.test: ash: (eqv? 2 (ash 1 1))
PASS: srfi-60.test: ash: (eqv? 0 (ash 1 -1))
PASS: srfi-60.test: arithmetic-shift: (eqv? 2 (arithmetic-shift 1 1))
PASS: srfi-60.test: arithmetic-shift: (eqv? 0 (arithmetic-shift 1 -1))
PASS: srfi-60.test: rotate-bit-field: (rotate-bit-field 6 1 1 2)
PASS: srfi-60.test: rotate-bit-field: (rotate-bit-field (lognot 6) 1 1 2)
PASS: srfi-60.test: rotate-bit-field: (rotate-bit-field 6 1 2 4)
PASS: srfi-60.test: rotate-bit-field: (rotate-bit-field (lognot 6) 1 2 4)
PASS: srfi-60.test: rotate-bit-field: (rotate-bit-field 7 -1 1 4)
PASS: srfi-60.test: rotate-bit-field: (rotate-bit-field (lognot 7) -1 1 4)
PASS: srfi-60.test: rotate-bit-field: (rotate-bit-field 0 128 0 256)
PASS: srfi-60.test: rotate-bit-field: (rotate-bit-field (lognot 0) 128 0 256)
PASS: srfi-60.test: rotate-bit-field: (rotate-bit-field 1 128 1 256)
PASS: srfi-60.test: rotate-bit-field: (rotate-bit-field (lognot 1) 128 1 256)
PASS: srfi-60.test: rotate-bit-field: (rotate-bit-field 340282366920938463463374607431768211456 128 0 64)
PASS: srfi-60.test: rotate-bit-field: (rotate-bit-field (lognot 340282366920938463463374607431768211456) 128 0 64)
PASS: srfi-60.test: rotate-bit-field: (rotate-bit-field 340282366920938463463374607431768211457 3 0 64)
PASS: srfi-60.test: rotate-bit-field: (rotate-bit-field (lognot 340282366920938463463374607431768211457) 3 0 64)
PASS: srfi-60.test: rotate-bit-field: (rotate-bit-field 340282366920938463463374607431768211457 -3 0 64)
PASS: srfi-60.test: rotate-bit-field: (rotate-bit-field (lognot 340282366920938463463374607431768211457) -3 0 64)
PASS: srfi-60.test: rotate-bit-field: (rotate-bit-field 6 0 0 10)
PASS: srfi-60.test: rotate-bit-field: (rotate-bit-field (lognot 6) 0 0 10)
PASS: srfi-60.test: rotate-bit-field: (rotate-bit-field 6 0 0 256)
PASS: srfi-60.test: rotate-bit-field: (rotate-bit-field (lognot 6) 0 0 256)
PASS: srfi-60.test: rotate-bit-field: (rotate-bit-field 6 1 1 1)
PASS: srfi-60.test: rotate-bit-field: (rotate-bit-field (lognot 6) 1 1 1)
PASS: srfi-60.test: rotate-bit-field: (rotate-bit-field 439606389 -26 5 28)
PASS: srfi-60.test: rotate-bit-field: (rotate-bit-field (lognot 439606389) -26 5 28)
PASS: srfi-60.test: rotate-bit-field: (rotate-bit-field 439606389 28 2 28)
PASS: srfi-60.test: rotate-bit-field: (rotate-bit-field (lognot 439606389) 28 2 28)
PASS: srfi-60.test: rotate-bit-field: (rotate-bit-field 439606389 -3 5 29)
PASS: srfi-60.test: rotate-bit-field: (rotate-bit-field (lognot 439606389) -3 5 29)
PASS: srfi-60.test: rotate-bit-field: (rotate-bit-field 439606389 28 2 29)
PASS: srfi-60.test: rotate-bit-field: (rotate-bit-field (lognot 439606389) 28 2 29)
PASS: srfi-60.test: rotate-bit-field: (rotate-bit-field 439606389 48 5 30)
PASS: srfi-60.test: rotate-bit-field: (rotate-bit-field (lognot 439606389) 48 5 30)
PASS: srfi-60.test: rotate-bit-field: (rotate-bit-field 439606389 85 2 30)
PASS: srfi-60.test: rotate-bit-field: (rotate-bit-field (lognot 439606389) 85 2 30)
PASS: srfi-60.test: rotate-bit-field: (rotate-bit-field 879212777 83 2 30)
PASS: srfi-60.test: rotate-bit-field: (rotate-bit-field (lognot 879212777) 83 2 30)
PASS: srfi-60.test: rotate-bit-field: (rotate-bit-field 1849224516894842299 -3 5 60)
PASS: srfi-60.test: rotate-bit-field: (rotate-bit-field (lognot 1849224516894842299) -3 5 60)
PASS: srfi-60.test: rotate-bit-field: (rotate-bit-field 1849224516894842299 62 0 60)
PASS: srfi-60.test: rotate-bit-field: (rotate-bit-field (lognot 1849224516894842299) 62 0 60)
PASS: srfi-60.test: rotate-bit-field: (rotate-bit-field 1849224516894842299 53 5 61)
PASS: srfi-60.test: rotate-bit-field: (rotate-bit-field (lognot 1849224516894842299) 53 5 61)
PASS: srfi-60.test: rotate-bit-field: (rotate-bit-field 1849224516894842299 62 0 61)
PASS: srfi-60.test: rotate-bit-field: (rotate-bit-field (lognot 1849224516894842299) 62 0 61)
PASS: srfi-60.test: rotate-bit-field: (rotate-bit-field 1849224516894842299 53 7 62)
PASS: srfi-60.test: rotate-bit-field: (rotate-bit-field (lognot 1849224516894842299) 53 7 62)
PASS: srfi-60.test: rotate-bit-field: (rotate-bit-field 1849224516894842299 -2 7 62)
PASS: srfi-60.test: rotate-bit-field: (rotate-bit-field (lognot 1849224516894842299) -2 7 62)
PASS: srfi-60.test: rotate-bit-field: (rotate-bit-field 3921070643044251451 2 7 62)
PASS: srfi-60.test: rotate-bit-field: (rotate-bit-field (lognot 3921070643044251451) 2 7 62)
PASS: srfi-60.test: rotate-bit-field: bignum becomes inum
PASS: srfi-60.test: reverse-bit-field: (eqv? 6 (reverse-bit-field 6 1 3))
PASS: srfi-60.test: reverse-bit-field: (eqv? 12 (reverse-bit-field 6 1 4))
PASS: srfi-60.test: reverse-bit-field: (eqv? 2147483648 (reverse-bit-field 1 0 32))
PASS: srfi-60.test: reverse-bit-field: (eqv? 1073741824 (reverse-bit-field 1 0 31))
PASS: srfi-60.test: reverse-bit-field: (eqv? 536870912 (reverse-bit-field 1 0 30))
PASS: srfi-60.test: reverse-bit-field: (eqv? (logior (ash -1 32) 4227858431) (reverse-bit-field -2 0 27))
PASS: srfi-60.test: reverse-bit-field: (eqv? (logior (ash -1 32) 4160749567) (reverse-bit-field -2 0 28))
PASS: srfi-60.test: reverse-bit-field: (eqv? (logior (ash -1 32) 4026531839) (reverse-bit-field -2 0 29))
PASS: srfi-60.test: reverse-bit-field: (eqv? (logior (ash -1 32) 3758096383) (reverse-bit-field -2 0 30))
PASS: srfi-60.test: reverse-bit-field: (eqv? (logior (ash -1 32) 3221225471) (reverse-bit-field -2 0 31))
PASS: srfi-60.test: reverse-bit-field: (eqv? (logior (ash -1 32) 2147483647) (reverse-bit-field -2 0 32))
PASS: srfi-60.test: reverse-bit-field: bignum becomes inum
PASS: srfi-60.test: integer->list: (equal? (quote (#t #t #f)) (integer->list 6))
PASS: srfi-60.test: integer->list: (equal? (quote (#f #t #t #f)) (integer->list 6 4))
PASS: srfi-60.test: integer->list: (equal? (quote (#t #f)) (integer->list 6 2))
PASS: srfi-60.test: integer->list: zeros above top of positive inum
PASS: srfi-60.test: integer->list: ones above top of negative inum
PASS: srfi-60.test: integer->list: (equal? (quote (#t #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f)) (integer->list 340282366920938463463374607431768211456))
PASS: srfi-60.test: list->integer: (eqv? 6 (list->integer (quote (#t #t #f))))
PASS: srfi-60.test: list->integer: (eqv? 6 (list->integer (quote (#f #t #t #f))))
PASS: srfi-60.test: list->integer: (eqv? 2 (list->integer (quote (#t #f))))
PASS: srfi-60.test: list->integer: leading #f's
PASS: srfi-60.test: list->integer: (eqv? 340282366920938463463374607431768211456 (list->integer (quote (#t #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f #f))))
PASS: srfi-60.test: list->integer: (eqv? 67108863 (list->integer (quote (#t #t #t #t #t #t #t #t #t #t #t #t #t #t #t #t #t #t #t #t #t #t #t #t #t #t))))
PASS: srfi-60.test: list->integer: (eqv? 134217727 (list->integer (quote (#t #t #t #t #t #t #t #t #t #t #t #t #t #t #t #t #t #t #t #t #t #t #t #t #t #t #t))))
PASS: srfi-60.test: list->integer: (eqv? 268435455 (list->integer (quote (#t #t #t #t #t #t #t #t #t #t #t #t #t #t #t #t #t #t #t #t #t #t #t #t #t #t #t #t))))
PASS: srfi-60.test: list->integer: (eqv? 536870911 (list->integer (quote (#t #t #t #t #t #t #t #t #t #t #t #t #t #t #t #t #t #t #t #t #t #t #t #t #t #t #t #t #t))))
PASS: srfi-60.test: list->integer: (eqv? 1073741823 (list->integer (quote (#t #t #t #t #t #t #t #t #t #t #t #t #t #t #t #t #t #t #t #t #t #t #t #t #t #t #t #t #t #t))))
PASS: srfi-60.test: list->integer: (eqv? 2147483647 (list->integer (quote (#t #t #t #t #t #t #t #t #t #t #t #t #t #t #t #t #t #t #t #t #t #t #t #t #t #t #t #t #t #t #t))))
PASS: srfi-60.test: list->integer: (eqv? 4294967295 (list->integer (quote (#t #t #t #t #t #t #t #t #t #t #t #t #t #t #t #t #t #t #t #t #t #t #t #t #t #t #t #t #t #t #t #t))))
PASS: srfi-60.test: list->integer: (eqv? 8589934591 (list->integer (quote (#t #t #t #t #t #t #t #t #t #t #t #t #t #t #t #t #t #t #t #t #t #t #t #t #t #t #t #t #t #t #t #t #t))))
PASS: srfi-60.test: list->integer: (eqv? 0 (booleans->integer))
PASS: srfi-60.test: list->integer: (eqv? 6 (booleans->integer #t #t #f))
PASS: 1.1.1. Very simple
PASS: 1.1.2. A test with no name
PASS: 1.1.3. Tests can have the same name
PASS: 1.1.4. One way to FAIL is to throw an error
PASS: 1.2.1.  Simple numerical equivalence
PASS: 2.1.1. Baseline test; PASS with no optional args
PASS: 2.1.2. Baseline test; FAIL with no optional args
PASS: 2.1.3. PASS with a test name and error type
PASS: 3.1. test-begin with unspecific test-end
PASS: 3.2. test-begin with name-matching test-end
PASS: 3.3. test-begin with mismatched test-end
PASS: 3.4. test-begin with name and count
PASS: 3.5. test-begin with mismatched count
PASS: 3.6. introspecting on the group path
PASS: 4.1. Normal exit path
PASS: 4.2. Exception exit path
PASS: 5.1.1. match test names
PASS: 5.1.2. but not group names
PASS: 5.2.1. skip the nth one after
PASS: 5.2.2. skip m, starting at n
PASS: 5.3.1. basic disjunction
PASS: 5.3.2. disjunction is commutative
PASS: 5.4.1. basic conjunction
PASS: 5.4.2. conjunction is commutative
PASS: 6.1. Skip by specifier - match-name
PASS: 6.2. Shorthand specifiers
PASS: 6.3.1. Clearing the Specifier Stack
PASS: 6.3.2. Inheriting the Specifier Stack
PASS: 6.4.1. In test-match-all
PASS: 6.4.2. In separate skip-list entries
PASS: 6.4.3.1. Introduced using 'test-begin'
XFAIL: 6.4.3.2. Introduced using 'test-group' - arguments: ((actual-value () () () () () (0 0 0 0 0)) (expected-value () () () () () (0 0 0 0 1)) (result-kind . xfail) (test-name . "6.4.3.2. Introduced using 'test-group'") (source-form test-equal "6.4.3.2. Introduced using 'test-group'" (quote (() () () () () (0 0 0 0 1))) (triv-runner (lambda () (test-begin "a") (test-skip "b") (test-group "b" (test-assert "x" #t)) (test-end "a")))) (source-file . "tests/srfi-64-test.scm") (source-line . 569))
PASS: 6.4.3.3. Non-skipped 'test-group'
PASS: 7.1. Simple example
PASS: 7.2. Expected exception
PASS: 7.3. Unexpectedly PASS
PASS: 8.1.1. automatically restored
PASS: 8.3.2. settable factory
PASS: 8.6.1. Simple (form 1) test-apply
PASS: 8.6.2. Simple (form 2) test-apply
XFAIL: 8.6.3. test-apply with skips - arguments: ((actual-value ("w" "p" "v") () () () ("x" "q" "x") (3 0 0 0 3)) (expected-value ("w" "q" "v") () () () ("x" "p" "x") (3 0 0 0 3)) (result-kind . xfail) (test-name . "8.6.3. test-apply with skips") (source-form test-equal "8.6.3. test-apply with skips" (quote (("w" "q" "v") () () () ("x" "p" "x") (3 0 0 0 3))) (triv-runner (lambda () (test-begin "a") (test-assert "w" #t) (test-skip (test-match-nth 2)) (test-skip (test-match-nth 4)) (test-apply (test-runner-current) (test-match-name "p") (test-match-name "q") (lambda () (test-assert "x" #t) (test-assert "p" #t) (test-assert "q" #t) (test-assert "x" #f) 0)) (test-assert "v" #t)))) (source-file . "tests/srfi-64-test.scm") (source-line . 754))
PASS: 8.8.1. test-runner-aux-value
PASS: #f
PASS: #f
PASS: #f
PASS: #f
PASS: #f
PASS: #f
PASS: #f
PASS: #f
PASS: srfi-67.test: atomic: (every?-ec (:list x (index ix) my-booleans) (:list y (index iy) my-booleans) (result-ok? (boolean-compare x y) (ci ix iy)))
PASS: srfi-67.test: atomic: (every?-ec (:list x (index ix) my-chars) (:list y (index iy) my-chars) (result-ok? (char-compare x y) (ci ix iy)))
PASS: srfi-67.test: atomic: (every?-ec (:list x (index ix) my-chars-ci) (:list y (index iy) my-chars-ci) (result-ok? (char-compare-ci x y) (ci ix iy)))
PASS: srfi-67.test: atomic: (every?-ec (:list x (index ix) my-strings) (:list y (index iy) my-strings) (result-ok? (string-compare x y) (ci ix iy)))
PASS: srfi-67.test: atomic: (every?-ec (:list x (index ix) my-strings-ci) (:list y (index iy) my-strings-ci) (result-ok? (string-compare-ci x y) (ci ix iy)))
PASS: srfi-67.test: atomic: (every?-ec (:list x (index ix) my-symbols) (:list y (index iy) my-symbols) (result-ok? (symbol-compare x y) (ci ix iy)))
PASS: srfi-67.test: atomic: (every?-ec (:list x (index ix) my-integers) (:list y (index iy) my-integers) (result-ok? (integer-compare x y) (ci ix iy)))
PASS: srfi-67.test: atomic: (every?-ec (:list x (index ix) my-rationals) (:list y (index iy) my-rationals) (result-ok? (rational-compare x y) (ci ix iy)))
PASS: srfi-67.test: atomic: (every?-ec (:list x (index ix) my-reals) (:list y (index iy) my-reals) (result-ok? (real-compare x y) (ci ix iy)))
PASS: srfi-67.test: atomic: (every?-ec (:list x (index ix) my-complexes) (:list y (index iy) my-complexes) (result-ok? (complex-compare x y) (ci ix iy)))
PASS: srfi-67.test: atomic: (every?-ec (:list x (index ix) my-complexes) (:list y (index iy) my-complexes) (result-ok? (number-compare x y) (ci ix iy)))
PASS: srfi-67.test: if3: (if3 -1 (quote n) (quote z) (quote p))
PASS: srfi-67.test: if3: (if3 0 (quote n) (quote z) (quote p))
PASS: srfi-67.test: if3: (if3 1 (quote n) (quote z) (quote p))
PASS: srfi-67.test: if3: (let ((x -1)) (if3 (let ((x0 x)) (set! x (+ x 1)) x0) (quote n) (quote z) (quote p)))
PASS: srfi-67.test: if3: (let ((x -1) (y 0)) (if3 (let ((x0 x)) (set! x (+ x 1)) x0) (begin (set! y (+ y 1)) y) (begin (set! y (+ y 10)) y) (begin (set! y (+ y 100)) y)))
PASS: srfi-67.test: if3: (let ((x 0) (y 0)) (if3 (let ((x0 x)) (set! x (+ x 1)) x0) (begin (set! y (+ y 1)) y) (begin (set! y (+ y 10)) y) (begin (set! y (+ y 100)) y)))
PASS: srfi-67.test: if3: (let ((x 1) (y 0)) (if3 (let ((x0 x)) (set! x (+ x 1)) x0) (begin (set! y (+ y 1)) y) (begin (set! y (+ y 10)) y) (begin (set! y (+ y 100)) y)))
PASS: srfi-67.test: ifs: (if=? -1 (quote yes) (quote no))
PASS: srfi-67.test: ifs: (if=? 0 (quote yes) (quote no))
PASS: srfi-67.test: ifs: (if=? 1 (quote yes) (quote no))
PASS: srfi-67.test: ifs: (let ((x #f)) (if=? -1 (set! x #t)) x)
PASS: srfi-67.test: ifs: (let ((x #f)) (if=? 0 (set! x #t)) x)
PASS: srfi-67.test: ifs: (let ((x #f)) (if=? 1 (set! x #t)) x)
PASS: srfi-67.test: ifs: (let ((n 0)) (if=? (begin (set! n (+ n 1)) -1) #t #f) n)
PASS: srfi-67.test: ifs: (let ((n 0)) (if=? (begin (set! n (+ n 1)) 0) #t #f) n)
PASS: srfi-67.test: ifs: (let ((n 0)) (if=? (begin (set! n (+ n 1)) 1) #t #f) n)
PASS: srfi-67.test: ifs: (let ((n 0)) (if=? (begin (set! n (+ n 1)) -1) #t) n)
PASS: srfi-67.test: ifs: (let ((n 0)) (if=? (begin (set! n (+ n 1)) 0) #t) n)
PASS: srfi-67.test: ifs: (let ((n 0)) (if=? (begin (set! n (+ n 1)) 1) #t) n)
PASS: srfi-67.test: ifs: (if<? -1 (quote yes) (quote no))
PASS: srfi-67.test: ifs: (if<? 0 (quote yes) (quote no))
PASS: srfi-67.test: ifs: (if<? 1 (quote yes) (quote no))
PASS: srfi-67.test: ifs: (let ((x #f)) (if<? -1 (set! x #t)) x)
PASS: srfi-67.test: ifs: (let ((x #f)) (if<? 0 (set! x #t)) x)
PASS: srfi-67.test: ifs: (let ((x #f)) (if<? 1 (set! x #t)) x)
PASS: srfi-67.test: ifs: (let ((n 0)) (if<? (begin (set! n (+ n 1)) -1) #t #f) n)
PASS: srfi-67.test: ifs: (let ((n 0)) (if<? (begin (set! n (+ n 1)) 0) #t #f) n)
PASS: srfi-67.test: ifs: (let ((n 0)) (if<? (begin (set! n (+ n 1)) 1) #t #f) n)
PASS: srfi-67.test: ifs: (let ((n 0)) (if<? (begin (set! n (+ n 1)) -1) #t) n)
PASS: srfi-67.test: ifs: (let ((n 0)) (if<? (begin (set! n (+ n 1)) 0) #t) n)
PASS: srfi-67.test: ifs: (let ((n 0)) (if<? (begin (set! n (+ n 1)) 1) #t) n)
PASS: srfi-67.test: ifs: (if>? -1 (quote yes) (quote no))
PASS: srfi-67.test: ifs: (if>? 0 (quote yes) (quote no))
PASS: srfi-67.test: ifs: (if>? 1 (quote yes) (quote no))
PASS: srfi-67.test: ifs: (let ((x #f)) (if>? -1 (set! x #t)) x)
PASS: srfi-67.test: ifs: (let ((x #f)) (if>? 0 (set! x #t)) x)
PASS: srfi-67.test: ifs: (let ((x #f)) (if>? 1 (set! x #t)) x)
PASS: srfi-67.test: ifs: (let ((n 0)) (if>? (begin (set! n (+ n 1)) -1) #t #f) n)
PASS: srfi-67.test: ifs: (let ((n 0)) (if>? (begin (set! n (+ n 1)) 0) #t #f) n)
PASS: srfi-67.test: ifs: (let ((n 0)) (if>? (begin (set! n (+ n 1)) 1) #t #f) n)
PASS: srfi-67.test: ifs: (let ((n 0)) (if>? (begin (set! n (+ n 1)) -1) #t) n)
PASS: srfi-67.test: ifs: (let ((n 0)) (if>? (begin (set! n (+ n 1)) 0) #t) n)
PASS: srfi-67.test: ifs: (let ((n 0)) (if>? (begin (set! n (+ n 1)) 1) #t) n)
PASS: srfi-67.test: ifs: (if<=? -1 (quote yes) (quote no))
PASS: srfi-67.test: ifs: (if<=? 0 (quote yes) (quote no))
PASS: srfi-67.test: ifs: (if<=? 1 (quote yes) (quote no))
PASS: srfi-67.test: ifs: (let ((x #f)) (if<=? -1 (set! x #t)) x)
PASS: srfi-67.test: ifs: (let ((x #f)) (if<=? 0 (set! x #t)) x)
PASS: srfi-67.test: ifs: (let ((x #f)) (if<=? 1 (set! x #t)) x)
PASS: srfi-67.test: ifs: (let ((n 0)) (if<=? (begin (set! n (+ n 1)) -1) #t #f) n)
PASS: srfi-67.test: ifs: (let ((n 0)) (if<=? (begin (set! n (+ n 1)) 0) #t #f) n)
PASS: srfi-67.test: ifs: (let ((n 0)) (if<=? (begin (set! n (+ n 1)) 1) #t #f) n)
PASS: srfi-67.test: ifs: (let ((n 0)) (if<=? (begin (set! n (+ n 1)) -1) #t) n)
PASS: srfi-67.test: ifs: (let ((n 0)) (if<=? (begin (set! n (+ n 1)) 0) #t) n)
PASS: srfi-67.test: ifs: (let ((n 0)) (if<=? (begin (set! n (+ n 1)) 1) #t) n)
PASS: srfi-67.test: ifs: (if>=? -1 (quote yes) (quote no))
PASS: srfi-67.test: ifs: (if>=? 0 (quote yes) (quote no))
PASS: srfi-67.test: ifs: (if>=? 1 (quote yes) (quote no))
PASS: srfi-67.test: ifs: (let ((x #f)) (if>=? -1 (set! x #t)) x)
PASS: srfi-67.test: ifs: (let ((x #f)) (if>=? 0 (set! x #t)) x)
PASS: srfi-67.test: ifs: (let ((x #f)) (if>=? 1 (set! x #t)) x)
PASS: srfi-67.test: ifs: (let ((n 0)) (if>=? (begin (set! n (+ n 1)) -1) #t #f) n)
PASS: srfi-67.test: ifs: (let ((n 0)) (if>=? (begin (set! n (+ n 1)) 0) #t #f) n)
PASS: srfi-67.test: ifs: (let ((n 0)) (if>=? (begin (set! n (+ n 1)) 1) #t #f) n)
PASS: srfi-67.test: ifs: (let ((n 0)) (if>=? (begin (set! n (+ n 1)) -1) #t) n)
PASS: srfi-67.test: ifs: (let ((n 0)) (if>=? (begin (set! n (+ n 1)) 0) #t) n)
PASS: srfi-67.test: ifs: (let ((n 0)) (if>=? (begin (set! n (+ n 1)) 1) #t) n)
PASS: srfi-67.test: ifs: (if-not=? -1 (quote yes) (quote no))
PASS: srfi-67.test: ifs: (if-not=? 0 (quote yes) (quote no))
PASS: srfi-67.test: ifs: (if-not=? 1 (quote yes) (quote no))
PASS: srfi-67.test: ifs: (let ((x #f)) (if-not=? -1 (set! x #t)) x)
PASS: srfi-67.test: ifs: (let ((x #f)) (if-not=? 0 (set! x #t)) x)
PASS: srfi-67.test: ifs: (let ((x #f)) (if-not=? 1 (set! x #t)) x)
PASS: srfi-67.test: ifs: (let ((n 0)) (if-not=? (begin (set! n (+ n 1)) -1) #t #f) n)
PASS: srfi-67.test: ifs: (let ((n 0)) (if-not=? (begin (set! n (+ n 1)) 0) #t #f) n)
PASS: srfi-67.test: ifs: (let ((n 0)) (if-not=? (begin (set! n (+ n 1)) 1) #t #f) n)
PASS: srfi-67.test: ifs: (let ((n 0)) (if-not=? (begin (set! n (+ n 1)) -1) #t) n)
PASS: srfi-67.test: ifs: (let ((n 0)) (if-not=? (begin (set! n (+ n 1)) 0) #t) n)
PASS: srfi-67.test: ifs: (let ((n 0)) (if-not=? (begin (set! n (+ n 1)) 1) #t) n)
PASS: srfi-67.test: predicates-form-compare: (=? ci 0 0)
PASS: srfi-67.test: predicates-form-compare: (=? ci 0 1)
PASS: srfi-67.test: predicates-form-compare: (=? ci 1 0)
PASS: srfi-67.test: predicates-form-compare: (=? 0 0)
PASS: srfi-67.test: predicates-form-compare: (=? 0 1)
PASS: srfi-67.test: predicates-form-compare: (=? 1 0)
PASS: srfi-67.test: predicates-form-compare: ((=? ci) 0 0)
PASS: srfi-67.test: predicates-form-compare: ((=? ci) 0 1)
PASS: srfi-67.test: predicates-form-compare: ((=? ci) 1 0)
PASS: srfi-67.test: predicates-form-compare: ((=?) 0 0)
PASS: srfi-67.test: predicates-form-compare: ((=?) 0 1)
PASS: srfi-67.test: predicates-form-compare: ((=?) 1 0)
PASS: srfi-67.test: predicates-form-compare: (<? ci 0 0)
PASS: srfi-67.test: predicates-form-compare: (<? ci 0 1)
PASS: srfi-67.test: predicates-form-compare: (<? ci 1 0)
PASS: srfi-67.test: predicates-form-compare: (<? 0 0)
PASS: srfi-67.test: predicates-form-compare: (<? 0 1)
PASS: srfi-67.test: predicates-form-compare: (<? 1 0)
PASS: srfi-67.test: predicates-form-compare: ((<? ci) 0 0)
PASS: srfi-67.test: predicates-form-compare: ((<? ci) 0 1)
PASS: srfi-67.test: predicates-form-compare: ((<? ci) 1 0)
PASS: srfi-67.test: predicates-form-compare: ((<?) 0 0)
PASS: srfi-67.test: predicates-form-compare: ((<?) 0 1)
PASS: srfi-67.test: predicates-form-compare: ((<?) 1 0)
PASS: srfi-67.test: predicates-form-compare: (>? ci 0 0)
PASS: srfi-67.test: predicates-form-compare: (>? ci 0 1)
PASS: srfi-67.test: predicates-form-compare: (>? ci 1 0)
PASS: srfi-67.test: predicates-form-compare: (>? 0 0)
PASS: srfi-67.test: predicates-form-compare: (>? 0 1)
PASS: srfi-67.test: predicates-form-compare: (>? 1 0)
PASS: srfi-67.test: predicates-form-compare: ((>? ci) 0 0)
PASS: srfi-67.test: predicates-form-compare: ((>? ci) 0 1)
PASS: srfi-67.test: predicates-form-compare: ((>? ci) 1 0)
PASS: srfi-67.test: predicates-form-compare: ((>?) 0 0)
PASS: srfi-67.test: predicates-form-compare: ((>?) 0 1)
PASS: srfi-67.test: predicates-form-compare: ((>?) 1 0)
PASS: srfi-67.test: predicates-form-compare: (<=? ci 0 0)
PASS: srfi-67.test: predicates-form-compare: (<=? ci 0 1)
PASS: srfi-67.test: predicates-form-compare: (<=? ci 1 0)
PASS: srfi-67.test: predicates-form-compare: (<=? 0 0)
PASS: srfi-67.test: predicates-form-compare: (<=? 0 1)
PASS: srfi-67.test: predicates-form-compare: (<=? 1 0)
PASS: srfi-67.test: predicates-form-compare: ((<=? ci) 0 0)
PASS: srfi-67.test: predicates-form-compare: ((<=? ci) 0 1)
PASS: srfi-67.test: predicates-form-compare: ((<=? ci) 1 0)
PASS: srfi-67.test: predicates-form-compare: ((<=?) 0 0)
PASS: srfi-67.test: predicates-form-compare: ((<=?) 0 1)
PASS: srfi-67.test: predicates-form-compare: ((<=?) 1 0)
PASS: srfi-67.test: predicates-form-compare: (>=? ci 0 0)
PASS: srfi-67.test: predicates-form-compare: (>=? ci 0 1)
PASS: srfi-67.test: predicates-form-compare: (>=? ci 1 0)
PASS: srfi-67.test: predicates-form-compare: (>=? 0 0)
PASS: srfi-67.test: predicates-form-compare: (>=? 0 1)
PASS: srfi-67.test: predicates-form-compare: (>=? 1 0)
PASS: srfi-67.test: predicates-form-compare: ((>=? ci) 0 0)
PASS: srfi-67.test: predicates-form-compare: ((>=? ci) 0 1)
PASS: srfi-67.test: predicates-form-compare: ((>=? ci) 1 0)
PASS: srfi-67.test: predicates-form-compare: ((>=?) 0 0)
PASS: srfi-67.test: predicates-form-compare: ((>=?) 0 1)
PASS: srfi-67.test: predicates-form-compare: ((>=?) 1 0)
PASS: srfi-67.test: predicates-form-compare: (not=? ci 0 0)
PASS: srfi-67.test: predicates-form-compare: (not=? ci 0 1)
PASS: srfi-67.test: predicates-form-compare: (not=? ci 1 0)
PASS: srfi-67.test: predicates-form-compare: (not=? 0 0)
PASS: srfi-67.test: predicates-form-compare: (not=? 0 1)
PASS: srfi-67.test: predicates-form-compare: (not=? 1 0)
PASS: srfi-67.test: predicates-form-compare: ((not=? ci) 0 0)
PASS: srfi-67.test: predicates-form-compare: ((not=? ci) 0 1)
PASS: srfi-67.test: predicates-form-compare: ((not=? ci) 1 0)
PASS: srfi-67.test: predicates-form-compare: ((not=?) 0 0)
PASS: srfi-67.test: predicates-form-compare: ((not=?) 0 1)
PASS: srfi-67.test: predicates-form-compare: ((not=?) 1 0)
PASS: srfi-67.test: predicates-form-compare: (</<? ci 0 0 0)
PASS: srfi-67.test: predicates-form-compare: (</<? ci 0 0 1)
PASS: srfi-67.test: predicates-form-compare: (</<? ci 0 1 0)
PASS: srfi-67.test: predicates-form-compare: (</<? ci 1 0 0)
PASS: srfi-67.test: predicates-form-compare: (</<? ci 1 1 0)
PASS: srfi-67.test: predicates-form-compare: (</<? ci 1 0 1)
PASS: srfi-67.test: predicates-form-compare: (</<? ci 0 1 1)
PASS: srfi-67.test: predicates-form-compare: (</<? ci 0 1 2)
PASS: srfi-67.test: predicates-form-compare: (</<? ci 0 2 1)
PASS: srfi-67.test: predicates-form-compare: (</<? ci 1 2 0)
PASS: srfi-67.test: predicates-form-compare: (</<? ci 1 0 2)
PASS: srfi-67.test: predicates-form-compare: (</<? ci 2 0 1)
PASS: srfi-67.test: predicates-form-compare: (</<? ci 2 1 0)
PASS: srfi-67.test: predicates-form-compare: (</<? 0 0 0)
PASS: srfi-67.test: predicates-form-compare: (</<? 0 0 1)
PASS: srfi-67.test: predicates-form-compare: (</<? 0 1 0)
PASS: srfi-67.test: predicates-form-compare: (</<? 1 0 0)
PASS: srfi-67.test: predicates-form-compare: (</<? 1 1 0)
PASS: srfi-67.test: predicates-form-compare: (</<? 1 0 1)
PASS: srfi-67.test: predicates-form-compare: (</<? 0 1 1)
PASS: srfi-67.test: predicates-form-compare: (</<? 0 1 2)
PASS: srfi-67.test: predicates-form-compare: (</<? 0 2 1)
PASS: srfi-67.test: predicates-form-compare: (</<? 1 2 0)
PASS: srfi-67.test: predicates-form-compare: (</<? 1 0 2)
PASS: srfi-67.test: predicates-form-compare: (</<? 2 0 1)
PASS: srfi-67.test: predicates-form-compare: (</<? 2 1 0)
PASS: srfi-67.test: predicates-form-compare: ((</<? ci) 0 0 0)
PASS: srfi-67.test: predicates-form-compare: ((</<? ci) 0 0 1)
PASS: srfi-67.test: predicates-form-compare: ((</<? ci) 0 1 0)
PASS: srfi-67.test: predicates-form-compare: ((</<? ci) 1 0 0)
PASS: srfi-67.test: predicates-form-compare: ((</<? ci) 1 1 0)
PASS: srfi-67.test: predicates-form-compare: ((</<? ci) 1 0 1)
PASS: srfi-67.test: predicates-form-compare: ((</<? ci) 0 1 1)
PASS: srfi-67.test: predicates-form-compare: ((</<? ci) 0 1 2)
PASS: srfi-67.test: predicates-form-compare: ((</<? ci) 0 2 1)
PASS: srfi-67.test: predicates-form-compare: ((</<? ci) 1 2 0)
PASS: srfi-67.test: predicates-form-compare: ((</<? ci) 1 0 2)
PASS: srfi-67.test: predicates-form-compare: ((</<? ci) 2 0 1)
PASS: srfi-67.test: predicates-form-compare: ((</<? ci) 2 1 0)
PASS: srfi-67.test: predicates-form-compare: ((</<?) 0 0 0)
PASS: srfi-67.test: predicates-form-compare: ((</<?) 0 0 1)
PASS: srfi-67.test: predicates-form-compare: ((</<?) 0 1 0)
PASS: srfi-67.test: predicates-form-compare: ((</<?) 1 0 0)
PASS: srfi-67.test: predicates-form-compare: ((</<?) 1 1 0)
PASS: srfi-67.test: predicates-form-compare: ((</<?) 1 0 1)
PASS: srfi-67.test: predicates-form-compare: ((</<?) 0 1 1)
PASS: srfi-67.test: predicates-form-compare: ((</<?) 0 1 2)
PASS: srfi-67.test: predicates-form-compare: ((</<?) 0 2 1)
PASS: srfi-67.test: predicates-form-compare: ((</<?) 1 2 0)
PASS: srfi-67.test: predicates-form-compare: ((</<?) 1 0 2)
PASS: srfi-67.test: predicates-form-compare: ((</<?) 2 0 1)
PASS: srfi-67.test: predicates-form-compare: ((</<?) 2 1 0)
PASS: srfi-67.test: predicates-form-compare: (arguments-used (</<? ci 0 1 2))
PASS: srfi-67.test: predicates-form-compare: (arguments-used (</<? ci 0 2 1))
PASS: srfi-67.test: predicates-form-compare: (arguments-used (</<? ci 1 2 0))
PASS: srfi-67.test: predicates-form-compare: (arguments-used (</<? ci 1 0 2))
PASS: srfi-67.test: predicates-form-compare: (arguments-used (</<? ci 2 0 1))
PASS: srfi-67.test: predicates-form-compare: (arguments-used (</<? ci 2 1 0))
PASS: srfi-67.test: predicates-form-compare: (</<=? ci 0 0 0)
PASS: srfi-67.test: predicates-form-compare: (</<=? ci 0 0 1)
PASS: srfi-67.test: predicates-form-compare: (</<=? ci 0 1 0)
PASS: srfi-67.test: predicates-form-compare: (</<=? ci 1 0 0)
PASS: srfi-67.test: predicates-form-compare: (</<=? ci 1 1 0)
PASS: srfi-67.test: predicates-form-compare: (</<=? ci 1 0 1)
PASS: srfi-67.test: predicates-form-compare: (</<=? ci 0 1 1)
PASS: srfi-67.test: predicates-form-compare: (</<=? ci 0 1 2)
PASS: srfi-67.test: predicates-form-compare: (</<=? ci 0 2 1)
PASS: srfi-67.test: predicates-form-compare: (</<=? ci 1 2 0)
PASS: srfi-67.test: predicates-form-compare: (</<=? ci 1 0 2)
PASS: srfi-67.test: predicates-form-compare: (</<=? ci 2 0 1)
PASS: srfi-67.test: predicates-form-compare: (</<=? ci 2 1 0)
PASS: srfi-67.test: predicates-form-compare: (</<=? 0 0 0)
PASS: srfi-67.test: predicates-form-compare: (</<=? 0 0 1)
PASS: srfi-67.test: predicates-form-compare: (</<=? 0 1 0)
PASS: srfi-67.test: predicates-form-compare: (</<=? 1 0 0)
PASS: srfi-67.test: predicates-form-compare: (</<=? 1 1 0)
PASS: srfi-67.test: predicates-form-compare: (</<=? 1 0 1)
PASS: srfi-67.test: predicates-form-compare: (</<=? 0 1 1)
PASS: srfi-67.test: predicates-form-compare: (</<=? 0 1 2)
PASS: srfi-67.test: predicates-form-compare: (</<=? 0 2 1)
PASS: srfi-67.test: predicates-form-compare: (</<=? 1 2 0)
PASS: srfi-67.test: predicates-form-compare: (</<=? 1 0 2)
PASS: srfi-67.test: predicates-form-compare: (</<=? 2 0 1)
PASS: srfi-67.test: predicates-form-compare: (</<=? 2 1 0)
PASS: srfi-67.test: predicates-form-compare: ((</<=? ci) 0 0 0)
PASS: srfi-67.test: predicates-form-compare: ((</<=? ci) 0 0 1)
PASS: srfi-67.test: predicates-form-compare: ((</<=? ci) 0 1 0)
PASS: srfi-67.test: predicates-form-compare: ((</<=? ci) 1 0 0)
PASS: srfi-67.test: predicates-form-compare: ((</<=? ci) 1 1 0)
PASS: srfi-67.test: predicates-form-compare: ((</<=? ci) 1 0 1)
PASS: srfi-67.test: predicates-form-compare: ((</<=? ci) 0 1 1)
PASS: srfi-67.test: predicates-form-compare: ((</<=? ci) 0 1 2)
PASS: srfi-67.test: predicates-form-compare: ((</<=? ci) 0 2 1)
PASS: srfi-67.test: predicates-form-compare: ((</<=? ci) 1 2 0)
PASS: srfi-67.test: predicates-form-compare: ((</<=? ci) 1 0 2)
PASS: srfi-67.test: predicates-form-compare: ((</<=? ci) 2 0 1)
PASS: srfi-67.test: predicates-form-compare: ((</<=? ci) 2 1 0)
PASS: srfi-67.test: predicates-form-compare: ((</<=?) 0 0 0)
PASS: srfi-67.test: predicates-form-compare: ((</<=?) 0 0 1)
PASS: srfi-67.test: predicates-form-compare: ((</<=?) 0 1 0)
PASS: srfi-67.test: predicates-form-compare: ((</<=?) 1 0 0)
PASS: srfi-67.test: predicates-form-compare: ((</<=?) 1 1 0)
PASS: srfi-67.test: predicates-form-compare: ((</<=?) 1 0 1)
PASS: srfi-67.test: predicates-form-compare: ((</<=?) 0 1 1)
PASS: srfi-67.test: predicates-form-compare: ((</<=?) 0 1 2)
PASS: srfi-67.test: predicates-form-compare: ((</<=?) 0 2 1)
PASS: srfi-67.test: predicates-form-compare: ((</<=?) 1 2 0)
PASS: srfi-67.test: predicates-form-compare: ((</<=?) 1 0 2)
PASS: srfi-67.test: predicates-form-compare: ((</<=?) 2 0 1)
PASS: srfi-67.test: predicates-form-compare: ((</<=?) 2 1 0)
PASS: srfi-67.test: predicates-form-compare: (arguments-used (</<=? ci 0 1 2))
PASS: srfi-67.test: predicates-form-compare: (arguments-used (</<=? ci 0 2 1))
PASS: srfi-67.test: predicates-form-compare: (arguments-used (</<=? ci 1 2 0))
PASS: srfi-67.test: predicates-form-compare: (arguments-used (</<=? ci 1 0 2))
PASS: srfi-67.test: predicates-form-compare: (arguments-used (</<=? ci 2 0 1))
PASS: srfi-67.test: predicates-form-compare: (arguments-used (</<=? ci 2 1 0))
PASS: srfi-67.test: predicates-form-compare: (<=/<? ci 0 0 0)
PASS: srfi-67.test: predicates-form-compare: (<=/<? ci 0 0 1)
PASS: srfi-67.test: predicates-form-compare: (<=/<? ci 0 1 0)
PASS: srfi-67.test: predicates-form-compare: (<=/<? ci 1 0 0)
PASS: srfi-67.test: predicates-form-compare: (<=/<? ci 1 1 0)
PASS: srfi-67.test: predicates-form-compare: (<=/<? ci 1 0 1)
PASS: srfi-67.test: predicates-form-compare: (<=/<? ci 0 1 1)
PASS: srfi-67.test: predicates-form-compare: (<=/<? ci 0 1 2)
PASS: srfi-67.test: predicates-form-compare: (<=/<? ci 0 2 1)
PASS: srfi-67.test: predicates-form-compare: (<=/<? ci 1 2 0)
PASS: srfi-67.test: predicates-form-compare: (<=/<? ci 1 0 2)
PASS: srfi-67.test: predicates-form-compare: (<=/<? ci 2 0 1)
PASS: srfi-67.test: predicates-form-compare: (<=/<? ci 2 1 0)
PASS: srfi-67.test: predicates-form-compare: (<=/<? 0 0 0)
PASS: srfi-67.test: predicates-form-compare: (<=/<? 0 0 1)
PASS: srfi-67.test: predicates-form-compare: (<=/<? 0 1 0)
PASS: srfi-67.test: predicates-form-compare: (<=/<? 1 0 0)
PASS: srfi-67.test: predicates-form-compare: (<=/<? 1 1 0)
PASS: srfi-67.test: predicates-form-compare: (<=/<? 1 0 1)
PASS: srfi-67.test: predicates-form-compare: (<=/<? 0 1 1)
PASS: srfi-67.test: predicates-form-compare: (<=/<? 0 1 2)
PASS: srfi-67.test: predicates-form-compare: (<=/<? 0 2 1)
PASS: srfi-67.test: predicates-form-compare: (<=/<? 1 2 0)
PASS: srfi-67.test: predicates-form-compare: (<=/<? 1 0 2)
PASS: srfi-67.test: predicates-form-compare: (<=/<? 2 0 1)
PASS: srfi-67.test: predicates-form-compare: (<=/<? 2 1 0)
PASS: srfi-67.test: predicates-form-compare: ((<=/<? ci) 0 0 0)
PASS: srfi-67.test: predicates-form-compare: ((<=/<? ci) 0 0 1)
PASS: srfi-67.test: predicates-form-compare: ((<=/<? ci) 0 1 0)
PASS: srfi-67.test: predicates-form-compare: ((<=/<? ci) 1 0 0)
PASS: srfi-67.test: predicates-form-compare: ((<=/<? ci) 1 1 0)
PASS: srfi-67.test: predicates-form-compare: ((<=/<? ci) 1 0 1)
PASS: srfi-67.test: predicates-form-compare: ((<=/<? ci) 0 1 1)
PASS: srfi-67.test: predicates-form-compare: ((<=/<? ci) 0 1 2)
PASS: srfi-67.test: predicates-form-compare: ((<=/<? ci) 0 2 1)
PASS: srfi-67.test: predicates-form-compare: ((<=/<? ci) 1 2 0)
PASS: srfi-67.test: predicates-form-compare: ((<=/<? ci) 1 0 2)
PASS: srfi-67.test: predicates-form-compare: ((<=/<? ci) 2 0 1)
PASS: srfi-67.test: predicates-form-compare: ((<=/<? ci) 2 1 0)
PASS: srfi-67.test: predicates-form-compare: ((<=/<?) 0 0 0)
PASS: srfi-67.test: predicates-form-compare: ((<=/<?) 0 0 1)
PASS: srfi-67.test: predicates-form-compare: ((<=/<?) 0 1 0)
PASS: srfi-67.test: predicates-form-compare: ((<=/<?) 1 0 0)
PASS: srfi-67.test: predicates-form-compare: ((<=/<?) 1 1 0)
PASS: srfi-67.test: predicates-form-compare: ((<=/<?) 1 0 1)
PASS: srfi-67.test: predicates-form-compare: ((<=/<?) 0 1 1)
PASS: srfi-67.test: predicates-form-compare: ((<=/<?) 0 1 2)
PASS: srfi-67.test: predicates-form-compare: ((<=/<?) 0 2 1)
PASS: srfi-67.test: predicates-form-compare: ((<=/<?) 1 2 0)
PASS: srfi-67.test: predicates-form-compare: ((<=/<?) 1 0 2)
PASS: srfi-67.test: predicates-form-compare: ((<=/<?) 2 0 1)
PASS: srfi-67.test: predicates-form-compare: ((<=/<?) 2 1 0)
PASS: srfi-67.test: predicates-form-compare: (arguments-used (<=/<? ci 0 1 2))
PASS: srfi-67.test: predicates-form-compare: (arguments-used (<=/<? ci 0 2 1))
PASS: srfi-67.test: predicates-form-compare: (arguments-used (<=/<? ci 1 2 0))
PASS: srfi-67.test: predicates-form-compare: (arguments-used (<=/<? ci 1 0 2))
PASS: srfi-67.test: predicates-form-compare: (arguments-used (<=/<? ci 2 0 1))
PASS: srfi-67.test: predicates-form-compare: (arguments-used (<=/<? ci 2 1 0))
PASS: srfi-67.test: predicates-form-compare: (<=/<=? ci 0 0 0)
PASS: srfi-67.test: predicates-form-compare: (<=/<=? ci 0 0 1)
PASS: srfi-67.test: predicates-form-compare: (<=/<=? ci 0 1 0)
PASS: srfi-67.test: predicates-form-compare: (<=/<=? ci 1 0 0)
PASS: srfi-67.test: predicates-form-compare: (<=/<=? ci 1 1 0)
PASS: srfi-67.test: predicates-form-compare: (<=/<=? ci 1 0 1)
PASS: srfi-67.test: predicates-form-compare: (<=/<=? ci 0 1 1)
PASS: srfi-67.test: predicates-form-compare: (<=/<=? ci 0 1 2)
PASS: srfi-67.test: predicates-form-compare: (<=/<=? ci 0 2 1)
PASS: srfi-67.test: predicates-form-compare: (<=/<=? ci 1 2 0)
PASS: srfi-67.test: predicates-form-compare: (<=/<=? ci 1 0 2)
PASS: srfi-67.test: predicates-form-compare: (<=/<=? ci 2 0 1)
PASS: srfi-67.test: predicates-form-compare: (<=/<=? ci 2 1 0)
PASS: srfi-67.test: predicates-form-compare: (<=/<=? 0 0 0)
PASS: srfi-67.test: predicates-form-compare: (<=/<=? 0 0 1)
PASS: srfi-67.test: predicates-form-compare: (<=/<=? 0 1 0)
PASS: srfi-67.test: predicates-form-compare: (<=/<=? 1 0 0)
PASS: srfi-67.test: predicates-form-compare: (<=/<=? 1 1 0)
PASS: srfi-67.test: predicates-form-compare: (<=/<=? 1 0 1)
PASS: srfi-67.test: predicates-form-compare: (<=/<=? 0 1 1)
PASS: srfi-67.test: predicates-form-compare: (<=/<=? 0 1 2)
PASS: srfi-67.test: predicates-form-compare: (<=/<=? 0 2 1)
PASS: srfi-67.test: predicates-form-compare: (<=/<=? 1 2 0)
PASS: srfi-67.test: predicates-form-compare: (<=/<=? 1 0 2)
PASS: srfi-67.test: predicates-form-compare: (<=/<=? 2 0 1)
PASS: srfi-67.test: predicates-form-compare: (<=/<=? 2 1 0)
PASS: srfi-67.test: predicates-form-compare: ((<=/<=? ci) 0 0 0)
PASS: srfi-67.test: predicates-form-compare: ((<=/<=? ci) 0 0 1)
PASS: srfi-67.test: predicates-form-compare: ((<=/<=? ci) 0 1 0)
PASS: srfi-67.test: predicates-form-compare: ((<=/<=? ci) 1 0 0)
PASS: srfi-67.test: predicates-form-compare: ((<=/<=? ci) 1 1 0)
PASS: srfi-67.test: predicates-form-compare: ((<=/<=? ci) 1 0 1)
PASS: srfi-67.test: predicates-form-compare: ((<=/<=? ci) 0 1 1)
PASS: srfi-67.test: predicates-form-compare: ((<=/<=? ci) 0 1 2)
PASS: srfi-67.test: predicates-form-compare: ((<=/<=? ci) 0 2 1)
PASS: srfi-67.test: predicates-form-compare: ((<=/<=? ci) 1 2 0)
PASS: srfi-67.test: predicates-form-compare: ((<=/<=? ci) 1 0 2)
PASS: srfi-67.test: predicates-form-compare: ((<=/<=? ci) 2 0 1)
PASS: srfi-67.test: predicates-form-compare: ((<=/<=? ci) 2 1 0)
PASS: srfi-67.test: predicates-form-compare: ((<=/<=?) 0 0 0)
PASS: srfi-67.test: predicates-form-compare: ((<=/<=?) 0 0 1)
PASS: srfi-67.test: predicates-form-compare: ((<=/<=?) 0 1 0)
PASS: srfi-67.test: predicates-form-compare: ((<=/<=?) 1 0 0)
PASS: srfi-67.test: predicates-form-compare: ((<=/<=?) 1 1 0)
PASS: srfi-67.test: predicates-form-compare: ((<=/<=?) 1 0 1)
PASS: srfi-67.test: predicates-form-compare: ((<=/<=?) 0 1 1)
PASS: srfi-67.test: predicates-form-compare: ((<=/<=?) 0 1 2)
PASS: srfi-67.test: predicates-form-compare: ((<=/<=?) 0 2 1)
PASS: srfi-67.test: predicates-form-compare: ((<=/<=?) 1 2 0)
PASS: srfi-67.test: predicates-form-compare: ((<=/<=?) 1 0 2)
PASS: srfi-67.test: predicates-form-compare: ((<=/<=?) 2 0 1)
PASS: srfi-67.test: predicates-form-compare: ((<=/<=?) 2 1 0)
PASS: srfi-67.test: predicates-form-compare: (arguments-used (<=/<=? ci 0 1 2))
PASS: srfi-67.test: predicates-form-compare: (arguments-used (<=/<=? ci 0 2 1))
PASS: srfi-67.test: predicates-form-compare: (arguments-used (<=/<=? ci 1 2 0))
PASS: srfi-67.test: predicates-form-compare: (arguments-used (<=/<=? ci 1 0 2))
PASS: srfi-67.test: predicates-form-compare: (arguments-used (<=/<=? ci 2 0 1))
PASS: srfi-67.test: predicates-form-compare: (arguments-used (<=/<=? ci 2 1 0))
PASS: srfi-67.test: predicates-form-compare: (>/>? ci 0 0 0)
PASS: srfi-67.test: predicates-form-compare: (>/>? ci 0 0 1)
PASS: srfi-67.test: predicates-form-compare: (>/>? ci 0 1 0)
PASS: srfi-67.test: predicates-form-compare: (>/>? ci 1 0 0)
PASS: srfi-67.test: predicates-form-compare: (>/>? ci 1 1 0)
PASS: srfi-67.test: predicates-form-compare: (>/>? ci 1 0 1)
PASS: srfi-67.test: predicates-form-compare: (>/>? ci 0 1 1)
PASS: srfi-67.test: predicates-form-compare: (>/>? ci 0 1 2)
PASS: srfi-67.test: predicates-form-compare: (>/>? ci 0 2 1)
PASS: srfi-67.test: predicates-form-compare: (>/>? ci 1 2 0)
PASS: srfi-67.test: predicates-form-compare: (>/>? ci 1 0 2)
PASS: srfi-67.test: predicates-form-compare: (>/>? ci 2 0 1)
PASS: srfi-67.test: predicates-form-compare: (>/>? ci 2 1 0)
PASS: srfi-67.test: predicates-form-compare: (>/>? 0 0 0)
PASS: srfi-67.test: predicates-form-compare: (>/>? 0 0 1)
PASS: srfi-67.test: predicates-form-compare: (>/>? 0 1 0)
PASS: srfi-67.test: predicates-form-compare: (>/>? 1 0 0)
PASS: srfi-67.test: predicates-form-compare: (>/>? 1 1 0)
PASS: srfi-67.test: predicates-form-compare: (>/>? 1 0 1)
PASS: srfi-67.test: predicates-form-compare: (>/>? 0 1 1)
PASS: srfi-67.test: predicates-form-compare: (>/>? 0 1 2)
PASS: srfi-67.test: predicates-form-compare: (>/>? 0 2 1)
PASS: srfi-67.test: predicates-form-compare: (>/>? 1 2 0)
PASS: srfi-67.test: predicates-form-compare: (>/>? 1 0 2)
PASS: srfi-67.test: predicates-form-compare: (>/>? 2 0 1)
PASS: srfi-67.test: predicates-form-compare: (>/>? 2 1 0)
PASS: srfi-67.test: predicates-form-compare: ((>/>? ci) 0 0 0)
PASS: srfi-67.test: predicates-form-compare: ((>/>? ci) 0 0 1)
PASS: srfi-67.test: predicates-form-compare: ((>/>? ci) 0 1 0)
PASS: srfi-67.test: predicates-form-compare: ((>/>? ci) 1 0 0)
PASS: srfi-67.test: predicates-form-compare: ((>/>? ci) 1 1 0)
PASS: srfi-67.test: predicates-form-compare: ((>/>? ci) 1 0 1)
PASS: srfi-67.test: predicates-form-compare: ((>/>? ci) 0 1 1)
PASS: srfi-67.test: predicates-form-compare: ((>/>? ci) 0 1 2)
PASS: srfi-67.test: predicates-form-compare: ((>/>? ci) 0 2 1)
PASS: srfi-67.test: predicates-form-compare: ((>/>? ci) 1 2 0)
PASS: srfi-67.test: predicates-form-compare: ((>/>? ci) 1 0 2)
PASS: srfi-67.test: predicates-form-compare: ((>/>? ci) 2 0 1)
PASS: srfi-67.test: predicates-form-compare: ((>/>? ci) 2 1 0)
PASS: srfi-67.test: predicates-form-compare: ((>/>?) 0 0 0)
PASS: srfi-67.test: predicates-form-compare: ((>/>?) 0 0 1)
PASS: srfi-67.test: predicates-form-compare: ((>/>?) 0 1 0)
PASS: srfi-67.test: predicates-form-compare: ((>/>?) 1 0 0)
PASS: srfi-67.test: predicates-form-compare: ((>/>?) 1 1 0)
PASS: srfi-67.test: predicates-form-compare: ((>/>?) 1 0 1)
PASS: srfi-67.test: predicates-form-compare: ((>/>?) 0 1 1)
PASS: srfi-67.test: predicates-form-compare: ((>/>?) 0 1 2)
PASS: srfi-67.test: predicates-form-compare: ((>/>?) 0 2 1)
PASS: srfi-67.test: predicates-form-compare: ((>/>?) 1 2 0)
PASS: srfi-67.test: predicates-form-compare: ((>/>?) 1 0 2)
PASS: srfi-67.test: predicates-form-compare: ((>/>?) 2 0 1)
PASS: srfi-67.test: predicates-form-compare: ((>/>?) 2 1 0)
PASS: srfi-67.test: predicates-form-compare: (arguments-used (>/>? ci 0 1 2))
PASS: srfi-67.test: predicates-form-compare: (arguments-used (>/>? ci 0 2 1))
PASS: srfi-67.test: predicates-form-compare: (arguments-used (>/>? ci 1 2 0))
PASS: srfi-67.test: predicates-form-compare: (arguments-used (>/>? ci 1 0 2))
PASS: srfi-67.test: predicates-form-compare: (arguments-used (>/>? ci 2 0 1))
PASS: srfi-67.test: predicates-form-compare: (arguments-used (>/>? ci 2 1 0))
PASS: srfi-67.test: predicates-form-compare: (>/>=? ci 0 0 0)
PASS: srfi-67.test: predicates-form-compare: (>/>=? ci 0 0 1)
PASS: srfi-67.test: predicates-form-compare: (>/>=? ci 0 1 0)
PASS: srfi-67.test: predicates-form-compare: (>/>=? ci 1 0 0)
PASS: srfi-67.test: predicates-form-compare: (>/>=? ci 1 1 0)
PASS: srfi-67.test: predicates-form-compare: (>/>=? ci 1 0 1)
PASS: srfi-67.test: predicates-form-compare: (>/>=? ci 0 1 1)
PASS: srfi-67.test: predicates-form-compare: (>/>=? ci 0 1 2)
PASS: srfi-67.test: predicates-form-compare: (>/>=? ci 0 2 1)
PASS: srfi-67.test: predicates-form-compare: (>/>=? ci 1 2 0)
PASS: srfi-67.test: predicates-form-compare: (>/>=? ci 1 0 2)
PASS: srfi-67.test: predicates-form-compare: (>/>=? ci 2 0 1)
PASS: srfi-67.test: predicates-form-compare: (>/>=? ci 2 1 0)
PASS: srfi-67.test: predicates-form-compare: (>/>=? 0 0 0)
PASS: srfi-67.test: predicates-form-compare: (>/>=? 0 0 1)
PASS: srfi-67.test: predicates-form-compare: (>/>=? 0 1 0)
PASS: srfi-67.test: predicates-form-compare: (>/>=? 1 0 0)
PASS: srfi-67.test: predicates-form-compare: (>/>=? 1 1 0)
PASS: srfi-67.test: predicates-form-compare: (>/>=? 1 0 1)
PASS: srfi-67.test: predicates-form-compare: (>/>=? 0 1 1)
PASS: srfi-67.test: predicates-form-compare: (>/>=? 0 1 2)
PASS: srfi-67.test: predicates-form-compare: (>/>=? 0 2 1)
PASS: srfi-67.test: predicates-form-compare: (>/>=? 1 2 0)
PASS: srfi-67.test: predicates-form-compare: (>/>=? 1 0 2)
PASS: srfi-67.test: predicates-form-compare: (>/>=? 2 0 1)
PASS: srfi-67.test: predicates-form-compare: (>/>=? 2 1 0)
PASS: srfi-67.test: predicates-form-compare: ((>/>=? ci) 0 0 0)
PASS: srfi-67.test: predicates-form-compare: ((>/>=? ci) 0 0 1)
PASS: srfi-67.test: predicates-form-compare: ((>/>=? ci) 0 1 0)
PASS: srfi-67.test: predicates-form-compare: ((>/>=? ci) 1 0 0)
PASS: srfi-67.test: predicates-form-compare: ((>/>=? ci) 1 1 0)
PASS: srfi-67.test: predicates-form-compare: ((>/>=? ci) 1 0 1)
PASS: srfi-67.test: predicates-form-compare: ((>/>=? ci) 0 1 1)
PASS: srfi-67.test: predicates-form-compare: ((>/>=? ci) 0 1 2)
PASS: srfi-67.test: predicates-form-compare: ((>/>=? ci) 0 2 1)
PASS: srfi-67.test: predicates-form-compare: ((>/>=? ci) 1 2 0)
PASS: srfi-67.test: predicates-form-compare: ((>/>=? ci) 1 0 2)
PASS: srfi-67.test: predicates-form-compare: ((>/>=? ci) 2 0 1)
PASS: srfi-67.test: predicates-form-compare: ((>/>=? ci) 2 1 0)
PASS: srfi-67.test: predicates-form-compare: ((>/>=?) 0 0 0)
PASS: srfi-67.test: predicates-form-compare: ((>/>=?) 0 0 1)
PASS: srfi-67.test: predicates-form-compare: ((>/>=?) 0 1 0)
PASS: srfi-67.test: predicates-form-compare: ((>/>=?) 1 0 0)
PASS: srfi-67.test: predicates-form-compare: ((>/>=?) 1 1 0)
PASS: srfi-67.test: predicates-form-compare: ((>/>=?) 1 0 1)
PASS: srfi-67.test: predicates-form-compare: ((>/>=?) 0 1 1)
PASS: srfi-67.test: predicates-form-compare: ((>/>=?) 0 1 2)
PASS: srfi-67.test: predicates-form-compare: ((>/>=?) 0 2 1)
PASS: srfi-67.test: predicates-form-compare: ((>/>=?) 1 2 0)
PASS: srfi-67.test: predicates-form-compare: ((>/>=?) 1 0 2)
PASS: srfi-67.test: predicates-form-compare: ((>/>=?) 2 0 1)
PASS: srfi-67.test: predicates-form-compare: ((>/>=?) 2 1 0)
PASS: srfi-67.test: predicates-form-compare: (arguments-used (>/>=? ci 0 1 2))
PASS: srfi-67.test: predicates-form-compare: (arguments-used (>/>=? ci 0 2 1))
PASS: srfi-67.test: predicates-form-compare: (arguments-used (>/>=? ci 1 2 0))
PASS: srfi-67.test: predicates-form-compare: (arguments-used (>/>=? ci 1 0 2))
PASS: srfi-67.test: predicates-form-compare: (arguments-used (>/>=? ci 2 0 1))
PASS: srfi-67.test: predicates-form-compare: (arguments-used (>/>=? ci 2 1 0))
PASS: srfi-67.test: predicates-form-compare: (>=/>? ci 0 0 0)
PASS: srfi-67.test: predicates-form-compare: (>=/>? ci 0 0 1)
PASS: srfi-67.test: predicates-form-compare: (>=/>? ci 0 1 0)
PASS: srfi-67.test: predicates-form-compare: (>=/>? ci 1 0 0)
PASS: srfi-67.test: predicates-form-compare: (>=/>? ci 1 1 0)
PASS: srfi-67.test: predicates-form-compare: (>=/>? ci 1 0 1)
PASS: srfi-67.test: predicates-form-compare: (>=/>? ci 0 1 1)
PASS: srfi-67.test: predicates-form-compare: (>=/>? ci 0 1 2)
PASS: srfi-67.test: predicates-form-compare: (>=/>? ci 0 2 1)
PASS: srfi-67.test: predicates-form-compare: (>=/>? ci 1 2 0)
PASS: srfi-67.test: predicates-form-compare: (>=/>? ci 1 0 2)
PASS: srfi-67.test: predicates-form-compare: (>=/>? ci 2 0 1)
PASS: srfi-67.test: predicates-form-compare: (>=/>? ci 2 1 0)
PASS: srfi-67.test: predicates-form-compare: (>=/>? 0 0 0)
PASS: srfi-67.test: predicates-form-compare: (>=/>? 0 0 1)
PASS: srfi-67.test: predicates-form-compare: (>=/>? 0 1 0)
PASS: srfi-67.test: predicates-form-compare: (>=/>? 1 0 0)
PASS: srfi-67.test: predicates-form-compare: (>=/>? 1 1 0)
PASS: srfi-67.test: predicates-form-compare: (>=/>? 1 0 1)
PASS: srfi-67.test: predicates-form-compare: (>=/>? 0 1 1)
PASS: srfi-67.test: predicates-form-compare: (>=/>? 0 1 2)
PASS: srfi-67.test: predicates-form-compare: (>=/>? 0 2 1)
PASS: srfi-67.test: predicates-form-compare: (>=/>? 1 2 0)
PASS: srfi-67.test: predicates-form-compare: (>=/>? 1 0 2)
PASS: srfi-67.test: predicates-form-compare: (>=/>? 2 0 1)
PASS: srfi-67.test: predicates-form-compare: (>=/>? 2 1 0)
PASS: srfi-67.test: predicates-form-compare: ((>=/>? ci) 0 0 0)
PASS: srfi-67.test: predicates-form-compare: ((>=/>? ci) 0 0 1)
PASS: srfi-67.test: predicates-form-compare: ((>=/>? ci) 0 1 0)
PASS: srfi-67.test: predicates-form-compare: ((>=/>? ci) 1 0 0)
PASS: srfi-67.test: predicates-form-compare: ((>=/>? ci) 1 1 0)
PASS: srfi-67.test: predicates-form-compare: ((>=/>? ci) 1 0 1)
PASS: srfi-67.test: predicates-form-compare: ((>=/>? ci) 0 1 1)
PASS: srfi-67.test: predicates-form-compare: ((>=/>? ci) 0 1 2)
PASS: srfi-67.test: predicates-form-compare: ((>=/>? ci) 0 2 1)
PASS: srfi-67.test: predicates-form-compare: ((>=/>? ci) 1 2 0)
PASS: srfi-67.test: predicates-form-compare: ((>=/>? ci) 1 0 2)
PASS: srfi-67.test: predicates-form-compare: ((>=/>? ci) 2 0 1)
PASS: srfi-67.test: predicates-form-compare: ((>=/>? ci) 2 1 0)
PASS: srfi-67.test: predicates-form-compare: ((>=/>?) 0 0 0)
PASS: srfi-67.test: predicates-form-compare: ((>=/>?) 0 0 1)
PASS: srfi-67.test: predicates-form-compare: ((>=/>?) 0 1 0)
PASS: srfi-67.test: predicates-form-compare: ((>=/>?) 1 0 0)
PASS: srfi-67.test: predicates-form-compare: ((>=/>?) 1 1 0)
PASS: srfi-67.test: predicates-form-compare: ((>=/>?) 1 0 1)
PASS: srfi-67.test: predicates-form-compare: ((>=/>?) 0 1 1)
PASS: srfi-67.test: predicates-form-compare: ((>=/>?) 0 1 2)
PASS: srfi-67.test: predicates-form-compare: ((>=/>?) 0 2 1)
PASS: srfi-67.test: predicates-form-compare: ((>=/>?) 1 2 0)
PASS: srfi-67.test: predicates-form-compare: ((>=/>?) 1 0 2)
PASS: srfi-67.test: predicates-form-compare: ((>=/>?) 2 0 1)
PASS: srfi-67.test: predicates-form-compare: ((>=/>?) 2 1 0)
PASS: srfi-67.test: predicates-form-compare: (arguments-used (>=/>? ci 0 1 2))
PASS: srfi-67.test: predicates-form-compare: (arguments-used (>=/>? ci 0 2 1))
PASS: srfi-67.test: predicates-form-compare: (arguments-used (>=/>? ci 1 2 0))
PASS: srfi-67.test: predicates-form-compare: (arguments-used (>=/>? ci 1 0 2))
PASS: srfi-67.test: predicates-form-compare: (arguments-used (>=/>? ci 2 0 1))
PASS: srfi-67.test: predicates-form-compare: (arguments-used (>=/>? ci 2 1 0))
PASS: srfi-67.test: predicates-form-compare: (>=/>=? ci 0 0 0)
PASS: srfi-67.test: predicates-form-compare: (>=/>=? ci 0 0 1)
PASS: srfi-67.test: predicates-form-compare: (>=/>=? ci 0 1 0)
PASS: srfi-67.test: predicates-form-compare: (>=/>=? ci 1 0 0)
PASS: srfi-67.test: predicates-form-compare: (>=/>=? ci 1 1 0)
PASS: srfi-67.test: predicates-form-compare: (>=/>=? ci 1 0 1)
PASS: srfi-67.test: predicates-form-compare: (>=/>=? ci 0 1 1)
PASS: srfi-67.test: predicates-form-compare: (>=/>=? ci 0 1 2)
PASS: srfi-67.test: predicates-form-compare: (>=/>=? ci 0 2 1)
PASS: srfi-67.test: predicates-form-compare: (>=/>=? ci 1 2 0)
PASS: srfi-67.test: predicates-form-compare: (>=/>=? ci 1 0 2)
PASS: srfi-67.test: predicates-form-compare: (>=/>=? ci 2 0 1)
PASS: srfi-67.test: predicates-form-compare: (>=/>=? ci 2 1 0)
PASS: srfi-67.test: predicates-form-compare: (>=/>=? 0 0 0)
PASS: srfi-67.test: predicates-form-compare: (>=/>=? 0 0 1)
PASS: srfi-67.test: predicates-form-compare: (>=/>=? 0 1 0)
PASS: srfi-67.test: predicates-form-compare: (>=/>=? 1 0 0)
PASS: srfi-67.test: predicates-form-compare: (>=/>=? 1 1 0)
PASS: srfi-67.test: predicates-form-compare: (>=/>=? 1 0 1)
PASS: srfi-67.test: predicates-form-compare: (>=/>=? 0 1 1)
PASS: srfi-67.test: predicates-form-compare: (>=/>=? 0 1 2)
PASS: srfi-67.test: predicates-form-compare: (>=/>=? 0 2 1)
PASS: srfi-67.test: predicates-form-compare: (>=/>=? 1 2 0)
PASS: srfi-67.test: predicates-form-compare: (>=/>=? 1 0 2)
PASS: srfi-67.test: predicates-form-compare: (>=/>=? 2 0 1)
PASS: srfi-67.test: predicates-form-compare: (>=/>=? 2 1 0)
PASS: srfi-67.test: predicates-form-compare: ((>=/>=? ci) 0 0 0)
PASS: srfi-67.test: predicates-form-compare: ((>=/>=? ci) 0 0 1)
PASS: srfi-67.test: predicates-form-compare: ((>=/>=? ci) 0 1 0)
PASS: srfi-67.test: predicates-form-compare: ((>=/>=? ci) 1 0 0)
PASS: srfi-67.test: predicates-form-compare: ((>=/>=? ci) 1 1 0)
PASS: srfi-67.test: predicates-form-compare: ((>=/>=? ci) 1 0 1)
PASS: srfi-67.test: predicates-form-compare: ((>=/>=? ci) 0 1 1)
PASS: srfi-67.test: predicates-form-compare: ((>=/>=? ci) 0 1 2)
PASS: srfi-67.test: predicates-form-compare: ((>=/>=? ci) 0 2 1)
PASS: srfi-67.test: predicates-form-compare: ((>=/>=? ci) 1 2 0)
PASS: srfi-67.test: predicates-form-compare: ((>=/>=? ci) 1 0 2)
PASS: srfi-67.test: predicates-form-compare: ((>=/>=? ci) 2 0 1)
PASS: srfi-67.test: predicates-form-compare: ((>=/>=? ci) 2 1 0)
PASS: srfi-67.test: predicates-form-compare: ((>=/>=?) 0 0 0)
PASS: srfi-67.test: predicates-form-compare: ((>=/>=?) 0 0 1)
PASS: srfi-67.test: predicates-form-compare: ((>=/>=?) 0 1 0)
PASS: srfi-67.test: predicates-form-compare: ((>=/>=?) 1 0 0)
PASS: srfi-67.test: predicates-form-compare: ((>=/>=?) 1 1 0)
PASS: srfi-67.test: predicates-form-compare: ((>=/>=?) 1 0 1)
PASS: srfi-67.test: predicates-form-compare: ((>=/>=?) 0 1 1)
PASS: srfi-67.test: predicates-form-compare: ((>=/>=?) 0 1 2)
PASS: srfi-67.test: predicates-form-compare: ((>=/>=?) 0 2 1)
PASS: srfi-67.test: predicates-form-compare: ((>=/>=?) 1 2 0)
PASS: srfi-67.test: predicates-form-compare: ((>=/>=?) 1 0 2)
PASS: srfi-67.test: predicates-form-compare: ((>=/>=?) 2 0 1)
PASS: srfi-67.test: predicates-form-compare: ((>=/>=?) 2 1 0)
PASS: srfi-67.test: predicates-form-compare: (arguments-used (>=/>=? ci 0 1 2))
PASS: srfi-67.test: predicates-form-compare: (arguments-used (>=/>=? ci 0 2 1))
PASS: srfi-67.test: predicates-form-compare: (arguments-used (>=/>=? ci 1 2 0))
PASS: srfi-67.test: predicates-form-compare: (arguments-used (>=/>=? ci 1 0 2))
PASS: srfi-67.test: predicates-form-compare: (arguments-used (>=/>=? ci 2 0 1))
PASS: srfi-67.test: predicates-form-compare: (arguments-used (>=/>=? ci 2 1 0))
PASS: srfi-67.test: predicates-form-compare: (chain=? ci)
PASS: srfi-67.test: predicates-form-compare: (chain=? ci 0)
PASS: srfi-67.test: predicates-form-compare: (chain=? ci 0 0)
PASS: srfi-67.test: predicates-form-compare: (chain=? ci 0 1)
PASS: srfi-67.test: predicates-form-compare: (chain=? ci 1 0)
PASS: srfi-67.test: predicates-form-compare: (chain=? ci 0 0 0)
PASS: srfi-67.test: predicates-form-compare: (chain=? ci 0 0 1)
PASS: srfi-67.test: predicates-form-compare: (chain=? ci 0 1 0)
PASS: srfi-67.test: predicates-form-compare: (chain=? ci 1 0 0)
PASS: srfi-67.test: predicates-form-compare: (chain=? ci 1 1 0)
PASS: srfi-67.test: predicates-form-compare: (chain=? ci 1 0 1)
PASS: srfi-67.test: predicates-form-compare: (chain=? ci 0 1 1)
PASS: srfi-67.test: predicates-form-compare: (chain=? ci 0 1 2)
PASS: srfi-67.test: predicates-form-compare: (chain=? ci 0 2 1)
PASS: srfi-67.test: predicates-form-compare: (chain=? ci 1 2 0)
PASS: srfi-67.test: predicates-form-compare: (chain=? ci 1 0 2)
PASS: srfi-67.test: predicates-form-compare: (chain=? ci 2 0 1)
PASS: srfi-67.test: predicates-form-compare: (chain=? ci 2 1 0)
PASS: srfi-67.test: predicates-form-compare: (arguments-used (chain=? ci 0))
PASS: srfi-67.test: predicates-form-compare: (arguments-used (chain=? ci 0 1))
PASS: srfi-67.test: predicates-form-compare: (arguments-used (chain=? ci 1 0))
PASS: srfi-67.test: predicates-form-compare: (arguments-used (chain=? ci 0 1 2))
PASS: srfi-67.test: predicates-form-compare: (arguments-used (chain=? ci 0 2 1))
PASS: srfi-67.test: predicates-form-compare: (arguments-used (chain=? ci 1 2 0))
PASS: srfi-67.test: predicates-form-compare: (arguments-used (chain=? ci 1 0 2))
PASS: srfi-67.test: predicates-form-compare: (arguments-used (chain=? ci 2 0 1))
PASS: srfi-67.test: predicates-form-compare: (arguments-used (chain=? ci 2 1 0))
PASS: srfi-67.test: predicates-form-compare: (chain<? ci)
PASS: srfi-67.test: predicates-form-compare: (chain<? ci 0)
PASS: srfi-67.test: predicates-form-compare: (chain<? ci 0 0)
PASS: srfi-67.test: predicates-form-compare: (chain<? ci 0 1)
PASS: srfi-67.test: predicates-form-compare: (chain<? ci 1 0)
PASS: srfi-67.test: predicates-form-compare: (chain<? ci 0 0 0)
PASS: srfi-67.test: predicates-form-compare: (chain<? ci 0 0 1)
PASS: srfi-67.test: predicates-form-compare: (chain<? ci 0 1 0)
PASS: srfi-67.test: predicates-form-compare: (chain<? ci 1 0 0)
PASS: srfi-67.test: predicates-form-compare: (chain<? ci 1 1 0)
PASS: srfi-67.test: predicates-form-compare: (chain<? ci 1 0 1)
PASS: srfi-67.test: predicates-form-compare: (chain<? ci 0 1 1)
PASS: srfi-67.test: predicates-form-compare: (chain<? ci 0 1 2)
PASS: srfi-67.test: predicates-form-compare: (chain<? ci 0 2 1)
PASS: srfi-67.test: predicates-form-compare: (chain<? ci 1 2 0)
PASS: srfi-67.test: predicates-form-compare: (chain<? ci 1 0 2)
PASS: srfi-67.test: predicates-form-compare: (chain<? ci 2 0 1)
PASS: srfi-67.test: predicates-form-compare: (chain<? ci 2 1 0)
PASS: srfi-67.test: predicates-form-compare: (arguments-used (chain<? ci 0))
PASS: srfi-67.test: predicates-form-compare: (arguments-used (chain<? ci 0 1))
PASS: srfi-67.test: predicates-form-compare: (arguments-used (chain<? ci 1 0))
PASS: srfi-67.test: predicates-form-compare: (arguments-used (chain<? ci 0 1 2))
PASS: srfi-67.test: predicates-form-compare: (arguments-used (chain<? ci 0 2 1))
PASS: srfi-67.test: predicates-form-compare: (arguments-used (chain<? ci 1 2 0))
PASS: srfi-67.test: predicates-form-compare: (arguments-used (chain<? ci 1 0 2))
PASS: srfi-67.test: predicates-form-compare: (arguments-used (chain<? ci 2 0 1))
PASS: srfi-67.test: predicates-form-compare: (arguments-used (chain<? ci 2 1 0))
PASS: srfi-67.test: predicates-form-compare: (chain>? ci)
PASS: srfi-67.test: predicates-form-compare: (chain>? ci 0)
PASS: srfi-67.test: predicates-form-compare: (chain>? ci 0 0)
PASS: srfi-67.test: predicates-form-compare: (chain>? ci 0 1)
PASS: srfi-67.test: predicates-form-compare: (chain>? ci 1 0)
PASS: srfi-67.test: predicates-form-compare: (chain>? ci 0 0 0)
PASS: srfi-67.test: predicates-form-compare: (chain>? ci 0 0 1)
PASS: srfi-67.test: predicates-form-compare: (chain>? ci 0 1 0)
PASS: srfi-67.test: predicates-form-compare: (chain>? ci 1 0 0)
PASS: srfi-67.test: predicates-form-compare: (chain>? ci 1 1 0)
PASS: srfi-67.test: predicates-form-compare: (chain>? ci 1 0 1)
PASS: srfi-67.test: predicates-form-compare: (chain>? ci 0 1 1)
PASS: srfi-67.test: predicates-form-compare: (chain>? ci 0 1 2)
PASS: srfi-67.test: predicates-form-compare: (chain>? ci 0 2 1)
PASS: srfi-67.test: predicates-form-compare: (chain>? ci 1 2 0)
PASS: srfi-67.test: predicates-form-compare: (chain>? ci 1 0 2)
PASS: srfi-67.test: predicates-form-compare: (chain>? ci 2 0 1)
PASS: srfi-67.test: predicates-form-compare: (chain>? ci 2 1 0)
PASS: srfi-67.test: predicates-form-compare: (arguments-used (chain>? ci 0))
PASS: srfi-67.test: predicates-form-compare: (arguments-used (chain>? ci 0 1))
PASS: srfi-67.test: predicates-form-compare: (arguments-used (chain>? ci 1 0))
PASS: srfi-67.test: predicates-form-compare: (arguments-used (chain>? ci 0 1 2))
PASS: srfi-67.test: predicates-form-compare: (arguments-used (chain>? ci 0 2 1))
PASS: srfi-67.test: predicates-form-compare: (arguments-used (chain>? ci 1 2 0))
PASS: srfi-67.test: predicates-form-compare: (arguments-used (chain>? ci 1 0 2))
PASS: srfi-67.test: predicates-form-compare: (arguments-used (chain>? ci 2 0 1))
PASS: srfi-67.test: predicates-form-compare: (arguments-used (chain>? ci 2 1 0))
PASS: srfi-67.test: predicates-form-compare: (chain<=? ci)
PASS: srfi-67.test: predicates-form-compare: (chain<=? ci 0)
PASS: srfi-67.test: predicates-form-compare: (chain<=? ci 0 0)
PASS: srfi-67.test: predicates-form-compare: (chain<=? ci 0 1)
PASS: srfi-67.test: predicates-form-compare: (chain<=? ci 1 0)
PASS: srfi-67.test: predicates-form-compare: (chain<=? ci 0 0 0)
PASS: srfi-67.test: predicates-form-compare: (chain<=? ci 0 0 1)
PASS: srfi-67.test: predicates-form-compare: (chain<=? ci 0 1 0)
PASS: srfi-67.test: predicates-form-compare: (chain<=? ci 1 0 0)
PASS: srfi-67.test: predicates-form-compare: (chain<=? ci 1 1 0)
PASS: srfi-67.test: predicates-form-compare: (chain<=? ci 1 0 1)
PASS: srfi-67.test: predicates-form-compare: (chain<=? ci 0 1 1)
PASS: srfi-67.test: predicates-form-compare: (chain<=? ci 0 1 2)
PASS: srfi-67.test: predicates-form-compare: (chain<=? ci 0 2 1)
PASS: srfi-67.test: predicates-form-compare: (chain<=? ci 1 2 0)
PASS: srfi-67.test: predicates-form-compare: (chain<=? ci 1 0 2)
PASS: srfi-67.test: predicates-form-compare: (chain<=? ci 2 0 1)
PASS: srfi-67.test: predicates-form-compare: (chain<=? ci 2 1 0)
PASS: srfi-67.test: predicates-form-compare: (arguments-used (chain<=? ci 0))
PASS: srfi-67.test: predicates-form-compare: (arguments-used (chain<=? ci 0 1))
PASS: srfi-67.test: predicates-form-compare: (arguments-used (chain<=? ci 1 0))
PASS: srfi-67.test: predicates-form-compare: (arguments-used (chain<=? ci 0 1 2))
PASS: srfi-67.test: predicates-form-compare: (arguments-used (chain<=? ci 0 2 1))
PASS: srfi-67.test: predicates-form-compare: (arguments-used (chain<=? ci 1 2 0))
PASS: srfi-67.test: predicates-form-compare: (arguments-used (chain<=? ci 1 0 2))
PASS: srfi-67.test: predicates-form-compare: (arguments-used (chain<=? ci 2 0 1))
PASS: srfi-67.test: predicates-form-compare: (arguments-used (chain<=? ci 2 1 0))
PASS: srfi-67.test: predicates-form-compare: (chain>=? ci)
PASS: srfi-67.test: predicates-form-compare: (chain>=? ci 0)
PASS: srfi-67.test: predicates-form-compare: (chain>=? ci 0 0)
PASS: srfi-67.test: predicates-form-compare: (chain>=? ci 0 1)
PASS: srfi-67.test: predicates-form-compare: (chain>=? ci 1 0)
PASS: srfi-67.test: predicates-form-compare: (chain>=? ci 0 0 0)
PASS: srfi-67.test: predicates-form-compare: (chain>=? ci 0 0 1)
PASS: srfi-67.test: predicates-form-compare: (chain>=? ci 0 1 0)
PASS: srfi-67.test: predicates-form-compare: (chain>=? ci 1 0 0)
PASS: srfi-67.test: predicates-form-compare: (chain>=? ci 1 1 0)
PASS: srfi-67.test: predicates-form-compare: (chain>=? ci 1 0 1)
PASS: srfi-67.test: predicates-form-compare: (chain>=? ci 0 1 1)
PASS: srfi-67.test: predicates-form-compare: (chain>=? ci 0 1 2)
PASS: srfi-67.test: predicates-form-compare: (chain>=? ci 0 2 1)
PASS: srfi-67.test: predicates-form-compare: (chain>=? ci 1 2 0)
PASS: srfi-67.test: predicates-form-compare: (chain>=? ci 1 0 2)
PASS: srfi-67.test: predicates-form-compare: (chain>=? ci 2 0 1)
PASS: srfi-67.test: predicates-form-compare: (chain>=? ci 2 1 0)
PASS: srfi-67.test: predicates-form-compare: (arguments-used (chain>=? ci 0))
PASS: srfi-67.test: predicates-form-compare: (arguments-used (chain>=? ci 0 1))
PASS: srfi-67.test: predicates-form-compare: (arguments-used (chain>=? ci 1 0))
PASS: srfi-67.test: predicates-form-compare: (arguments-used (chain>=? ci 0 1 2))
PASS: srfi-67.test: predicates-form-compare: (arguments-used (chain>=? ci 0 2 1))
PASS: srfi-67.test: predicates-form-compare: (arguments-used (chain>=? ci 1 2 0))
PASS: srfi-67.test: predicates-form-compare: (arguments-used (chain>=? ci 1 0 2))
PASS: srfi-67.test: predicates-form-compare: (arguments-used (chain>=? ci 2 0 1))
PASS: srfi-67.test: predicates-form-compare: (arguments-used (chain>=? ci 2 1 0))
PASS: srfi-67.test: pairwise-not=?: (pairwise-not=? ci)
PASS: srfi-67.test: pairwise-not=?: (pairwise-not=? ci 0)
PASS: srfi-67.test: pairwise-not=?: (pairwise-not=? ci 0 0)
PASS: srfi-67.test: pairwise-not=?: (pairwise-not=? ci 0 1)
PASS: srfi-67.test: pairwise-not=?: (pairwise-not=? ci 1 0)
PASS: srfi-67.test: pairwise-not=?: (pairwise-not=? ci 0 0 0)
PASS: srfi-67.test: pairwise-not=?: (pairwise-not=? ci 0 0 1)
PASS: srfi-67.test: pairwise-not=?: (pairwise-not=? ci 0 1 0)
PASS: srfi-67.test: pairwise-not=?: (pairwise-not=? ci 1 0 0)
PASS: srfi-67.test: pairwise-not=?: (pairwise-not=? ci 1 1 0)
PASS: srfi-67.test: pairwise-not=?: (pairwise-not=? ci 1 0 1)
PASS: srfi-67.test: pairwise-not=?: (pairwise-not=? ci 0 1 1)
PASS: srfi-67.test: pairwise-not=?: (pairwise-not=? ci 0 1 2)
PASS: srfi-67.test: pairwise-not=?: (pairwise-not=? ci 0 2 1)
PASS: srfi-67.test: pairwise-not=?: (pairwise-not=? ci 1 2 0)
PASS: srfi-67.test: pairwise-not=?: (pairwise-not=? ci 1 0 2)
PASS: srfi-67.test: pairwise-not=?: (pairwise-not=? ci 2 0 1)
PASS: srfi-67.test: pairwise-not=?: (pairwise-not=? ci 2 1 0)
PASS: srfi-67.test: pairwise-not=?: (apply pairwise-not=? ci (list-ec (: i 10) i))
PASS: srfi-67.test: pairwise-not=?: (apply pairwise-not=? ci (list-ec (: i 100) i))
PASS: srfi-67.test: pairwise-not=?: (apply pairwise-not=? ci (list-ec (: i 1000) i))
PASS: srfi-67.test: pairwise-not=?: (apply pairwise-not=? ci (list-ec (: i 10 0 -1) i))
PASS: srfi-67.test: pairwise-not=?: (apply pairwise-not=? ci (list-ec (: i 100 0 -1) i))
PASS: srfi-67.test: pairwise-not=?: (apply pairwise-not=? ci (list-ec (: i 1000 0 -1) i))
PASS: srfi-67.test: pairwise-not=?: (apply pairwise-not=? ci (list-ec (: i 97) (modulo (* 5 i) 97)))
PASS: srfi-67.test: pairwise-not=?: (apply pairwise-not=? ci (append (list-ec (: i 0 23) (modulo (* 5 i) 97)) (quote (72)) (list-ec (: i 23 97) (modulo (* 5 i) 97))))
PASS: srfi-67.test: pairwise-not=?: (apply pairwise-not=? ci (append (list-ec (: i 0 75) (modulo (* 5 i) 97)) (quote (72)) (list-ec (: i 75 97) (modulo (* 5 i) 97))))
PASS: srfi-67.test: pairwise-not=?: (arguments-used (pairwise-not=? ci 0))
PASS: srfi-67.test: pairwise-not=?: (arguments-used (pairwise-not=? ci 0 1))
PASS: srfi-67.test: pairwise-not=?: (arguments-used (pairwise-not=? ci 1 0))
PASS: srfi-67.test: pairwise-not=?: (arguments-used (pairwise-not=? ci 0 2 1))
PASS: srfi-67.test: pairwise-not=?: (arguments-used (pairwise-not=? ci 1 2 0))
PASS: srfi-67.test: pairwise-not=?: (arguments-used (pairwise-not=? ci 1 0 2))
PASS: srfi-67.test: pairwise-not=?: (arguments-used (pairwise-not=? ci 2 0 1))
PASS: srfi-67.test: pairwise-not=?: (arguments-used (pairwise-not=? ci 2 1 0))
PASS: srfi-67.test: pairwise-not=?: (arguments-used (pairwise-not=? ci 0 0 0 1 0 0 0 2 0 0 0 3))
PASS: srfi-67.test: pairwise-not=?: (every?-ec (:list input pairwise-not=?:long-sequences) (let ((compares 0)) (apply pairwise-not=? (lambda (x y) (set! compares (+ compares 1)) (ci x y)) input) (< compares (* 100 12 4096))))
PASS: srfi-67.test: pairwise-not=?: (every?-ec (:list input pairwise-not=?:short-sequences) (eq? (apply pairwise-not=? colliding-compare input) (apply naive-pairwise-not=? colliding-compare input)))
PASS: srfi-67.test: pairwise-not=?: (every?-ec (:list input pairwise-not=?:short-sequences) (let ((args (quote ()))) (apply pairwise-not=? (lambda (x y) (set! args (cons x (cons y args))) (colliding-compare x y)) input) (equal? (list->set args) (list->set input))))
PASS: srfi-67.test: min/max: (min-compare ci 0)
PASS: srfi-67.test: min/max: (min-compare ci 0 0)
PASS: srfi-67.test: min/max: (min-compare ci 0 1)
PASS: srfi-67.test: min/max: (min-compare ci 1 0)
PASS: srfi-67.test: min/max: (min-compare ci 0 0 0)
PASS: srfi-67.test: min/max: (min-compare ci 0 0 1)
PASS: srfi-67.test: min/max: (min-compare ci 0 1 0)
PASS: srfi-67.test: min/max: (min-compare ci 1 0 0)
PASS: srfi-67.test: min/max: (min-compare ci 1 1 0)
PASS: srfi-67.test: min/max: (min-compare ci 1 0 1)
PASS: srfi-67.test: min/max: (min-compare ci 0 1 1)
PASS: srfi-67.test: min/max: (min-compare ci 0 1 2)
PASS: srfi-67.test: min/max: (min-compare ci 0 2 1)
PASS: srfi-67.test: min/max: (min-compare ci 1 2 0)
PASS: srfi-67.test: min/max: (min-compare ci 1 0 2)
PASS: srfi-67.test: min/max: (min-compare ci 2 0 1)
PASS: srfi-67.test: min/max: (min-compare ci 2 1 0)
PASS: srfi-67.test: min/max: (max-compare ci 0)
PASS: srfi-67.test: min/max: (max-compare ci 0 0)
PASS: srfi-67.test: min/max: (max-compare ci 0 1)
PASS: srfi-67.test: min/max: (max-compare ci 1 0)
PASS: srfi-67.test: min/max: (max-compare ci 0 0 0)
PASS: srfi-67.test: min/max: (max-compare ci 0 0 1)
PASS: srfi-67.test: min/max: (max-compare ci 0 1 0)
PASS: srfi-67.test: min/max: (max-compare ci 1 0 0)
PASS: srfi-67.test: min/max: (max-compare ci 1 1 0)
PASS: srfi-67.test: min/max: (max-compare ci 1 0 1)
PASS: srfi-67.test: min/max: (max-compare ci 0 1 1)
PASS: srfi-67.test: min/max: (max-compare ci 0 1 2)
PASS: srfi-67.test: min/max: (max-compare ci 0 2 1)
PASS: srfi-67.test: min/max: (max-compare ci 1 2 0)
PASS: srfi-67.test: min/max: (max-compare ci 1 0 2)
PASS: srfi-67.test: min/max: (max-compare ci 2 0 1)
PASS: srfi-67.test: min/max: (max-compare ci 2 1 0)
PASS: srfi-67.test: min/max: (min-compare (pair-compare-car ci) (quote (0 1)) (quote (0 2)) (quote (0 3)))
PASS: srfi-67.test: min/max: (max-compare (pair-compare-car ci) (quote (0 1)) (quote (0 2)) (quote (0 3)))
PASS: srfi-67.test: min/max: (every?-ec (:list input min/max:sequences) (= (apply min-compare ci input) (apply min (apply max input) input)))
PASS: srfi-67.test: min/max: (every?-ec (:list input min/max:sequences) (= (apply max-compare ci input) (apply max (apply min input) input)))
PASS: srfi-67.test: kth-largest: (every?-ec (:list input kth-largest:sequences) (: k (- -2 (length input)) (+ (length input) 2)) (= (apply naive-kth-largest colliding-compare k input) (apply kth-largest colliding-compare k input)))
PASS: srfi-67.test: compare-from-predicates: (every?-ec (:list x (index ix) my-integers) (:list y (index iy) my-integers) (result-ok? ((compare-by< <) x y) (ci ix iy)))
PASS: srfi-67.test: compare-from-predicates: (every?-ec (:list x (index ix) my-integers) (:list y (index iy) my-integers) (result-ok? ((compare-by> >) x y) (ci ix iy)))
PASS: srfi-67.test: compare-from-predicates: (every?-ec (:list x (index ix) my-integers) (:list y (index iy) my-integers) (result-ok? ((compare-by<= <=) x y) (ci ix iy)))
PASS: srfi-67.test: compare-from-predicates: (every?-ec (:list x (index ix) my-integers) (:list y (index iy) my-integers) (result-ok? ((compare-by>= >=) x y) (ci ix iy)))
PASS: srfi-67.test: compare-from-predicates: (every?-ec (:list x (index ix) my-integers) (:list y (index iy) my-integers) (result-ok? ((compare-by=/< = <) x y) (ci ix iy)))
PASS: srfi-67.test: compare-from-predicates: (every?-ec (:list x (index ix) my-integers) (:list y (index iy) my-integers) (result-ok? ((compare-by=/> = >) x y) (ci ix iy)))
PASS: srfi-67.test: compare-from-predicates: (every?-ec (:list x (index ix) my-integers) (:list y (index iy) my-integers) (result-ok? ((lambda (x y) (compare-by< < x y)) x y) (ci ix iy)))
PASS: srfi-67.test: compare-from-predicates: (every?-ec (:list x (index ix) my-integers) (:list y (index iy) my-integers) (result-ok? ((lambda (x y) (compare-by> > x y)) x y) (ci ix iy)))
PASS: srfi-67.test: compare-from-predicates: (every?-ec (:list x (index ix) my-integers) (:list y (index iy) my-integers) (result-ok? ((lambda (x y) (compare-by<= <= x y)) x y) (ci ix iy)))
PASS: srfi-67.test: compare-from-predicates: (every?-ec (:list x (index ix) my-integers) (:list y (index iy) my-integers) (result-ok? ((lambda (x y) (compare-by>= >= x y)) x y) (ci ix iy)))
PASS: srfi-67.test: compare-from-predicates: (every?-ec (:list x (index ix) my-integers) (:list y (index iy) my-integers) (result-ok? ((lambda (x y) (compare-by=/< = < x y)) x y) (ci ix iy)))
PASS: srfi-67.test: compare-from-predicates: (every?-ec (:list x (index ix) my-integers) (:list y (index iy) my-integers) (result-ok? ((lambda (x y) (compare-by=/> = > x y)) x y) (ci ix iy)))
PASS: srfi-67.test: refine-select-cond: (every?-ec (:list x (index ix) (quote (#f))) (:list y (index iy) (quote (#f))) (result-ok? ((lambda (x y) (refine-compare)) x y) (ci ix iy)))
PASS: srfi-67.test: refine-select-cond: (every?-ec (:list x (index ix) my-integers) (:list y (index iy) my-integers) (result-ok? ((lambda (x y) (refine-compare (integer-compare x y))) x y) (ci ix iy)))
PASS: srfi-67.test: refine-select-cond: (every?-ec (:list x (index ix) (quote ((1 . a) (1 . b) (2 . b) (2 . c) (3 . a) (3 . c)))) (:list y (index iy) (quote ((1 . a) (1 . b) (2 . b) (2 . c) (3 . a) (3 . c)))) (result-ok? ((lambda (x y) (refine-compare (integer-compare (car x) (car y)) (symbol-compare (cdr x) (cdr y)))) x y) (ci ix iy)))
PASS: srfi-67.test: refine-select-cond: (every?-ec (:list x (index ix) (quote ((1 a a) (1 b a) (1 b b) (2 b c) (2 c a) (3 a b) (3 c b)))) (:list y (index iy) (quote ((1 a a) (1 b a) (1 b b) (2 b c) (2 c a) (3 a b) (3 c b)))) (result-ok? ((lambda (x y) (refine-compare (integer-compare (car x) (car y)) (symbol-compare (cadr x) (cadr y)) (string-compare (caddr x) (caddr y)))) x y) (ci ix iy)))
PASS: srfi-67.test: refine-select-cond: (every?-ec (:list x (index ix) (quote (#f))) (:list y (index iy) (quote (#f))) (result-ok? ((lambda (x y) (select-compare x y)) x y) (ci ix iy)))
PASS: srfi-67.test: refine-select-cond: (every?-ec (:list x (index ix) my-integers) (:list y (index iy) my-integers) (result-ok? ((lambda (x y) (select-compare x y (integer? (ci x y)))) x y) (ci ix iy)))
PASS: srfi-67.test: refine-select-cond: (every?-ec (:list x (index ix) (quote ((1 . a) (1 . b) (2 . b) (2 . c) (3 . a) (3 . c)))) (:list y (index iy) (quote ((1 . a) (1 . b) (2 . b) (2 . c) (3 . a) (3 . c)))) (result-ok? ((lambda (x y) (select-compare x y (pair? (integer-compare (car x) (car y)) (symbol-compare (cdr x) (cdr y))))) x y) (ci ix iy)))
PASS: srfi-67.test: refine-select-cond: (every?-ec (:list x (index ix) my-integers) (:list y (index iy) my-integers) (result-ok? ((lambda (x y) (select-compare x y (else (integer-compare x y)))) x y) (ci ix iy)))
PASS: srfi-67.test: refine-select-cond: (every?-ec (:list x (index ix) (quote ((1 . a) (1 . b) (2 . b) (2 . c) (3 . a) (3 . c)))) (:list y (index iy) (quote ((1 . a) (1 . b) (2 . b) (2 . c) (3 . a) (3 . c)))) (result-ok? ((lambda (x y) (select-compare x y (else (integer-compare (car x) (car y)) (symbol-compare (cdr x) (cdr y))))) x y) (ci ix iy)))
PASS: srfi-67.test: refine-select-cond: (every?-ec (:list x (index ix) (quote (a b c a b c 1))) (:list y (index iy) (quote (a b c a b c 1))) (result-ok? ((lambda (x y) (select-compare x y (symbol? (symbol-compare x y)) (string? (string-compare x y)))) x y) (ci ix iy)))
PASS: srfi-67.test: refine-select-cond: (every?-ec (:list x (index ix) (quote (a b c a b c))) (:list y (index iy) (quote (a b c a b c))) (result-ok? ((lambda (x y) (select-compare x y (symbol? (symbol-compare x y)) (else (string-compare x y)))) x y) (ci ix iy)))
PASS: srfi-67.test: refine-select-cond: (let ((nx 0) (ny 0) (nt 0)) (select-compare (begin (set! nx (+ nx 1)) 1) (begin (set! ny (+ ny 1)) 2) ((lambda (z) (set! nt (+ nt 1)) #f) 0) ((lambda (z) (set! nt (+ nt 10)) #f) 0) ((lambda (z) (set! nt (+ nt 100)) #f) 0) (else 0)) (list nx ny nt))
PASS: srfi-67.test: refine-select-cond: (every?-ec (:list x (index ix) (quote (#f))) (:list y (index iy) (quote (#f))) (result-ok? ((lambda (x y) (cond-compare)) x y) (ci ix iy)))
PASS: srfi-67.test: refine-select-cond: (every?-ec (:list x (index ix) my-integers) (:list y (index iy) my-integers) (result-ok? ((lambda (x y) (cond-compare (((integer? x) (integer? y)) (integer-compare x y)))) x y) (ci ix iy)))
PASS: srfi-67.test: refine-select-cond: (every?-ec (:list x (index ix) (quote ((1 . a) (1 . b) (2 . b) (2 . c) (3 . a) (3 . c)))) (:list y (index iy) (quote ((1 . a) (1 . b) (2 . b) (2 . c) (3 . a) (3 . c)))) (result-ok? ((lambda (x y) (cond-compare (((pair? x) (pair? y)) (integer-compare (car x) (car y)) (symbol-compare (cdr x) (cdr y))))) x y) (ci ix iy)))
PASS: srfi-67.test: refine-select-cond: (every?-ec (:list x (index ix) my-integers) (:list y (index iy) my-integers) (result-ok? ((lambda (x y) (cond-compare (else (integer-compare x y)))) x y) (ci ix iy)))
PASS: srfi-67.test: refine-select-cond: (every?-ec (:list x (index ix) (quote ((1 . a) (1 . b) (2 . b) (2 . c) (3 . a) (3 . c)))) (:list y (index iy) (quote ((1 . a) (1 . b) (2 . b) (2 . c) (3 . a) (3 . c)))) (result-ok? ((lambda (x y) (cond-compare (else (integer-compare (car x) (car y)) (symbol-compare (cdr x) (cdr y))))) x y) (ci ix iy)))
PASS: srfi-67.test: refine-select-cond: (every?-ec (:list x (index ix) (quote (a b c a b c 1))) (:list y (index iy) (quote (a b c a b c 1))) (result-ok? ((lambda (x y) (cond-compare (((symbol? x) (symbol? y)) (symbol-compare x y)) (((string? x) (string? y)) (string-compare x y)))) x y) (ci ix iy)))
PASS: srfi-67.test: refine-select-cond: (every?-ec (:list x (index ix) (quote (a b c a b c))) (:list y (index iy) (quote (a b c a b c))) (result-ok? ((lambda (x y) (cond-compare (((symbol? x) (symbol? y)) (symbol-compare x y)) (else (string-compare x y)))) x y) (ci ix iy)))
PASS: srfi-67.test: data-structures: (every?-ec (:list x (index ix) (quote ((1 . b) (2 . a) (3 . c)))) (:list y (index iy) (quote ((1 . b) (2 . a) (3 . c)))) (result-ok? ((pair-compare-car ci) x y) (ci ix iy)))
PASS: srfi-67.test: data-structures: (every?-ec (:list x (index ix) (quote ((b . 1) (a . 2) (c . 3)))) (:list y (index iy) (quote ((b . 1) (a . 2) (c . 3)))) (result-ok? ((pair-compare-cdr ci) x y) (ci ix iy)))
PASS: srfi-67.test: data-structures: (every?-ec (:list x (index ix) my-null-or-pairs) (:list y (index iy) my-null-or-pairs) (result-ok? (pair-compare x y) (ci ix iy)))
PASS: srfi-67.test: data-structures: (every?-ec (:list x (index ix) my-null-or-pairs) (:list y (index iy) my-null-or-pairs) (result-ok? ((lambda (x y) (pair-compare ci x y)) x y) (ci ix iy)))
PASS: srfi-67.test: data-structures: (every?-ec (:list x (index ix) (quote ((1 . a) (1 . b) (2 . b) (2 . c) (3 . a)))) (:list y (index iy) (quote ((1 . a) (1 . b) (2 . b) (2 . c) (3 . a)))) (result-ok? ((lambda (x y) (pair-compare ci symbol-compare x y)) x y) (ci ix iy)))
PASS: srfi-67.test: data-structures: (every?-ec (:list x (index ix) my-lists) (:list y (index iy) my-lists) (result-ok? (list-compare x y) (ci ix iy)))
PASS: srfi-67.test: data-structures: (every?-ec (:list x (index ix) my-lists) (:list y (index iy) my-lists) (result-ok? ((lambda (x y) (list-compare ci x y)) x y) (ci ix iy)))
PASS: srfi-67.test: data-structures: (every?-ec (:list x (index ix) (map list->my-list my-lists)) (:list y (index iy) (map list->my-list my-lists)) (result-ok? ((lambda (x y) (list-compare x y my-empty? my-head my-tail)) x y) (ci ix iy)))
PASS: srfi-67.test: data-structures: (every?-ec (:list x (index ix) (map list->my-list my-lists)) (:list y (index iy) (map list->my-list my-lists)) (result-ok? ((lambda (x y) (list-compare ci x y my-empty? my-head my-tail)) x y) (ci ix iy)))
PASS: srfi-67.test: data-structures: (every?-ec (:list x (index ix) my-list-as-vectors) (:list y (index iy) my-list-as-vectors) (result-ok? (list-compare-as-vector x y) (ci ix iy)))
PASS: srfi-67.test: data-structures: (every?-ec (:list x (index ix) my-list-as-vectors) (:list y (index iy) my-list-as-vectors) (result-ok? ((lambda (x y) (list-compare-as-vector ci x y)) x y) (ci ix iy)))
PASS: srfi-67.test: data-structures: (every?-ec (:list x (index ix) (map list->my-list my-list-as-vectors)) (:list y (index iy) (map list->my-list my-list-as-vectors)) (result-ok? ((lambda (x y) (list-compare-as-vector x y my-empty? my-head my-tail)) x y) (ci ix iy)))
PASS: srfi-67.test: data-structures: (every?-ec (:list x (index ix) (map list->my-list my-list-as-vectors)) (:list y (index iy) (map list->my-list my-list-as-vectors)) (result-ok? ((lambda (x y) (list-compare-as-vector ci x y my-empty? my-head my-tail)) x y) (ci ix iy)))
PASS: srfi-67.test: data-structures: (every?-ec (:list x (index ix) my-vectors) (:list y (index iy) my-vectors) (result-ok? (vector-compare x y) (ci ix iy)))
PASS: srfi-67.test: data-structures: (every?-ec (:list x (index ix) my-vectors) (:list y (index iy) my-vectors) (result-ok? ((lambda (x y) (vector-compare ci x y)) x y) (ci ix iy)))
PASS: srfi-67.test: data-structures: (every?-ec (:list x (index ix) (map list->my-list my-list-as-vectors)) (:list y (index iy) (map list->my-list my-list-as-vectors)) (result-ok? ((lambda (x y) (vector-compare x y my-size my-ref)) x y) (ci ix iy)))
PASS: srfi-67.test: data-structures: (every?-ec (:list x (index ix) (map list->my-list my-list-as-vectors)) (:list y (index iy) (map list->my-list my-list-as-vectors)) (result-ok? ((lambda (x y) (vector-compare ci x y my-size my-ref)) x y) (ci ix iy)))
PASS: srfi-67.test: data-structures: (every?-ec (:list x (index ix) my-vector-as-lists) (:list y (index iy) my-vector-as-lists) (result-ok? (vector-compare-as-list x y) (ci ix iy)))
PASS: srfi-67.test: data-structures: (every?-ec (:list x (index ix) my-vector-as-lists) (:list y (index iy) my-vector-as-lists) (result-ok? ((lambda (x y) (vector-compare-as-list ci x y)) x y) (ci ix iy)))
PASS: srfi-67.test: data-structures: (every?-ec (:list x (index ix) (map list->my-list my-lists)) (:list y (index iy) (map list->my-list my-lists)) (result-ok? ((lambda (x y) (vector-compare-as-list x y my-size my-ref)) x y) (ci ix iy)))
PASS: srfi-67.test: data-structures: (every?-ec (:list x (index ix) (map list->my-list my-lists)) (:list y (index iy) (map list->my-list my-lists)) (result-ok? ((lambda (x y) (vector-compare-as-list ci x y my-size my-ref)) x y) (ci ix iy)))
PASS: srfi-67.test: default-compare: (every?-ec (:list x (index ix) my-objects) (:list y (index iy) my-objects) (result-ok? (default-compare x y) (ci ix iy)))
PASS: srfi-67.test: default-compare: (every?-ec (:list x (index ix) my-objects) (:list y (index iy) my-objects) (:let c-coarse (pair-compare x y)) (:let c-fine (default-compare x y)) (or (eqv? c-coarse 0) (eqv? c-fine c-coarse)))
PASS: srfi-67.test: default-compare: (every?-ec (:list x (index ix) my-objects) (:list y (index iy) my-objects) (result-ok? ((debug-compare default-compare) x y) (ci ix iy)))
PASS: srfi-67.test: more-examples: (every?-ec (:list x (index ix) (list (quote ()) (list (quote ())) (list (quote ()) (quote ())) (list (list (quote ()))))) (:list y (index iy) (list (quote ()) (list (quote ())) (list (quote ()) (quote ())) (list (list (quote ()))))) (result-ok? ((letrec ((c (lambda (x y) (cond-compare (((null? x) (null? y)) 0) (else (pair-compare c c x y)))))) c) x y) (ci ix iy)))
PASS: srfi-67.test: more-examples: (every?-ec (:list x (index ix) my-objects) (:list y (index iy) my-objects) (result-ok? ((letrec ((c (lambda (x y) (select-compare x y (null? 0) (pair? (pair-compare c c x y)) (boolean? (boolean-compare x y)) (char? (char-compare x y)) (string? (string-compare x y)) (symbol? (symbol-compare x y)) (number? (number-compare x y)) (vector? (vector-compare c x y)) (else (error unrecognized type in c x y)))))) c) x y) (ci ix iy)))
PASS: srfi-67.test: more-examples: (every?-ec (:list x (index ix) my-objects) (:list y (index iy) my-objects) (result-ok? ((letrec ((c (lambda (x y) (cond-compare (((null? x) (null? y)) 0) (((pair? x) (pair? y)) (pair-compare c c x y)) (((boolean? x) (boolean? y)) (boolean-compare x y)) (((char? x) (char? y)) (char-compare x y)) (((string? x) (string? y)) (string-compare x y)) (((symbol? x) (symbol? y)) (symbol-compare x y)) (((number? x) (number? y)) (number-compare x y)) (((vector? x) (vector? y)) (vector-compare c x y)) (else (error unrecognized type in c x y)))))) c) x y) (ci ix iy)))
PASS: srfi-67.test: more-examples: (every?-ec (:list x (index ix) (quote ( b bb ba a ab aa))) (:list y (index iy) (quote ( b bb ba a ab aa))) (result-ok? ((lambda (x y) (vector-compare-as-list (lambda (x y) (char-compare y x)) x y string-length string-ref)) x y) (ci ix iy)))
PASS: srfi-67.test: more-examples: (>? laugh LOUD)
PASS: srfi-67.test: more-examples: (<? string-compare-ci laugh LOUD)
PASS: srfi-67.test: more-examples: (sort-by-less (quote (1 a b)) (<?))
PASS: srfi-67.test: more-examples: (sort-by-less (quote (1 a b)) (>?))
PASS: srfi-69.test: SRFI-69: small alist<->hash tables round-trip
PASS: srfi-69.test: SRFI-69: string-ci=? tables work by default
PASS: srfi-69.test: SRFI-69: Bad weakness arg to mht signals an error
PASS: srfi-69.test: SRFI-69: empty hash tables are empty
PASS: srfi-69.test: SRFI-69: hash-table-ref uses default
PASS: srfi-69.test: SRFI-69: hash-table-delete! deletes present assocs, ignores others
PASS: srfi-69.test: SRFI-69: alist->hash-table does not require linear stack space
PASS: srfi-69.test: SRFI-69: hash-table-walk ignores return values
PASS: srfi-69.test: SRFI-69: hash-table-update! modifies existing binding
PASS: srfi-69.test: SRFI-69: hash-table-update! creates new binding when appropriate
PASS: srfi-69.test: SRFI-69: can use all arguments, including size
PASS: srfi-71.test: let
PASS: srfi-71.test: let*
PASS: srfi-71.test: letrec
PASS: srfi-71.test: too few values
PASS: srfi-88.test: srfi-88: cond-expand
PASS: srfi-88.test: srfi-88: keyword?
PASS: srfi-88.test: srfi-88: keyword->string
PASS: srfi-88.test: srfi-88: string->keyword
PASS: srfi-88.test: srfi-88: empty keyword
PASS: srfi-9.test: constructor: foo 0 args (inline)
PASS: srfi-9.test: constructor: foo 2 args (inline)
PASS: srfi-9.test: constructor: foo 0 args
PASS: srfi-9.test: constructor: foo 2 args
PASS: srfi-9.test: predicate: pass
PASS: srfi-9.test: predicate: fail wrong record type
PASS: srfi-9.test: predicate: fail number
PASS: srfi-9.test: getter: foo-x
PASS: srfi-9.test: getter: foo-y
PASS: srfi-9.test: getter: foo-x on number
PASS: srfi-9.test: getter: foo-y on number
PASS: srfi-9.test: getter: foo-x on bar
PASS: srfi-9.test: getter: foo-y on bar
PASS: srfi-9.test: setter: set-foo-y!
PASS: srfi-9.test: setter: set-foo-y! on number
PASS: srfi-9.test: setter: set-foo-y! on bar
PASS: srfi-9.test: functional setters: set-field
PASS: srfi-9.test: functional setters: set-field on wrong struct type
PASS: srfi-9.test: functional setters: set-field on number
PASS: srfi-9.test: functional setters: set-field with unknown first getter
PASS: srfi-9.test: functional setters: set-field with unknown second getter
PASS: srfi-9.test: functional setters: set-fields
PASS: srfi-9.test: functional setters: set-fields on wrong struct type
PASS: srfi-9.test: functional setters: set-fields on number
PASS: srfi-9.test: functional setters: set-fields with unknown first getter
PASS: srfi-9.test: functional setters: set-fields with unknown second getter
PASS: srfi-9.test: functional setters: set-fields with duplicate field path
PASS: srfi-9.test: functional setters: set-fields with one path as a prefix of another
PASS: srfi-9.test: side-effecting arguments: predicate
PASS: srfi-9.test: non-toplevel: construction
PASS: srfi-9.test: non-toplevel: functional setters: set-field
PASS: srfi-9.test: non-toplevel: functional setters: set-fieldss 
PASS: srfi-9.test: define-immutable-record-type: get
PASS: srfi-9.test: define-immutable-record-type: get non-inlined
PASS: srfi-9.test: define-immutable-record-type: set
PASS: srfi-9.test: define-immutable-record-type: set non-inlined
PASS: srfi-9.test: define-immutable-record-type: set-field
PASS: srfi-9.test: define-immutable-record-type: set-fields
PASS: srfi-9.test: define-immutable-record-type: non-toplevel: get
PASS: srfi-9.test: define-immutable-record-type: non-toplevel: get non-inlined
PASS: srfi-9.test: define-immutable-record-type: non-toplevel: set
PASS: srfi-9.test: define-immutable-record-type: non-toplevel: set non-inlined
PASS: srfi-9.test: define-immutable-record-type: non-toplevel: set-field
PASS: srfi-9.test: define-immutable-record-type: non-toplevel: set-fields
PASS: srfi-9.test: define-immutable-record-type: non-toplevel: set-fields with unknown first getter
PASS: srfi-9.test: define-immutable-record-type: non-toplevel: set-fields with unknown second getter
PASS: srfi-9.test: define-immutable-record-type: non-toplevel: set-fields with duplicate field path
PASS: srfi-9.test: define-immutable-record-type: non-toplevel: set-fields with one path as a prefix of another
PASS: srfi-9.test: define-immutable-record-type: non-toplevel: incompatible field paths
PASS: srfi-9.test: record type definition error reporting: invalid type name
PASS: srfi-9.test: record type definition error reporting: invalid constructor spec
PASS: srfi-9.test: record type definition error reporting: invalid predicate name
PASS: srfi-9.test: record type definition error reporting: invalid field spec
PASS: srfi-9.test: record type definition error reporting: unknown field in constructor spec
PASS: srfi-9.test: record compatibility: record?
PASS: srfi-9.test: record compatibility: record-constructor
PASS: srfi-98.test: get-environment-variable: get-environment-variable retrieves binding
PASS: srfi-98.test: get-environment-variable: get-environment-variable #f on unbound name
PASS: srfi-98.test: get-environment-variables: get-environment-variables contains binding
PASS: statprof.test: return values
PASS: statprof.test: statistical sample counts within expected range
PASS: statprof.test: accurate call counting
PASS: streams.test: stream-for-each: 1 streams: empty
PASS: streams.test: stream-for-each: 1 streams: 123
PASS: streams.test: stream-for-each: 2 streams: empty empty
PASS: streams.test: stream-for-each: 2 streams: 123 456
PASS: streams.test: stream-for-each: 2 streams: 12 456
PASS: streams.test: stream-for-each: 2 streams: 123 45
PASS: strings.test: string internals: new string starts at 1st char in stringbuf
PASS: strings.test: string internals: length of new string same as stringbuf
PASS: strings.test: string internals: contents of new string same as stringbuf
PASS: strings.test: string internals: writable strings are not read-only
PASS: strings.test: string internals: read-only strings are read-only
PASS: strings.test: string internals: new Latin-1 encoded strings are not shared
PASS: strings.test: string internals: new UCS-4 encoded strings are not shared
UNTESTED: strings.test: string internals: null shared substrings are shared
PASS: strings.test: string internals: ASCII shared substrings are shared
PASS: strings.test: string internals: BMP shared substrings are shared
PASS: strings.test: string internals: null substrings are not shared
PASS: strings.test: string internals: ASCII substrings are not shared
PASS: strings.test: string internals: BMP substrings are not shared
PASS: strings.test: string internals: ASCII substrings immutable before copy-on-write
PASS: strings.test: string internals: BMP substrings immutable before copy-on-write
PASS: strings.test: string internals: ASCII base string still immutable after copy-on-write
PASS: strings.test: string internals: BMP base string still immutable after copy-on-write
PASS: strings.test: string internals: ASCII substrings mutable after shared mutation
PASS: strings.test: string internals: BMP substrings mutable after shared mutation
PASS: strings.test: string internals: encodings: null strings are Latin-1 encoded
PASS: strings.test: string internals: encodings: ASCII strings are Latin-1 encoded
PASS: strings.test: string internals: encodings: Latin-1 strings are Latin-1 encoded
PASS: strings.test: string internals: encodings: BMP strings are UCS-4 encoded
PASS: strings.test: string internals: encodings: SMP strings are UCS-4 encoded
PASS: strings.test: string internals: encodings: null list->string is Latin-1 encoded
PASS: strings.test: string internals: encodings: ASCII list->string is Latin-1 encoded
PASS: strings.test: string internals: encodings: Latin-1 list->string is Latin-1 encoded
PASS: strings.test: string internals: encodings: BMP list->string is UCS-4 encoded
PASS: strings.test: string internals: encodings: SMP list->string is UCS-4 encoded
PASS: strings.test: string internals: encodings: encoding of string not based on escape style
PASS: strings.test: escapes: non-hex char in two-digit hex-escape
PASS: strings.test: escapes: non-hex char in four-digit hex-escape
PASS: strings.test: escapes: non-hex char in six-digit hex-escape
PASS: strings.test: escapes: premature termination of two-digit hex-escape
PASS: strings.test: escapes: premature termination of four-digit hex-escape
PASS: strings.test: escapes: premature termination of six-digit hex-escape
PASS: strings.test: escapes: extra hex digits ignored for two-digit hex escape
PASS: strings.test: escapes: extra hex digits ignored for four-digit hex escape
PASS: strings.test: escapes: extra hex digits ignored for six-digit hex escape
PASS: strings.test: escapes: escaped characters match non-escaped ASCII characters
PASS: strings.test: escapes: R5RS backslash escapes
PASS: strings.test: escapes: R6RS backslash escapes
PASS: strings.test: escapes: Guile extensions backslash escapes
PASS: strings.test: string?: string
PASS: strings.test: string?: symbol
PASS: strings.test: literals: literals are constant
PASS: strings.test: string-null?: null string
PASS: strings.test: string-null?: non-null string
PASS: strings.test: string-null?: respects \0
PASS: strings.test: string-null?: symbol
PASS: strings.test: string=?: respects 1st parameter's string length
PASS: strings.test: string=?: respects 2nd paramter's string length
PASS: strings.test: string=?: wrong argument type: 1st argument symbol
PASS: strings.test: string=?: wrong argument type: 2nd argument symbol
PASS: strings.test: string=?: wrong argument type: 1st argument EOF
PASS: strings.test: string=?: wrong argument type: 2nd argument EOF
PASS: strings.test: string<?: respects string length
PASS: strings.test: string<?: wrong argument type: 1st argument symbol
PASS: strings.test: string<?: wrong argument type: 2nd argument symbol
PASS: strings.test: string<?: same as char<?
PASS: strings.test: string-ci<?: respects string length
PASS: strings.test: string-ci<?: wrong argument type: 1st argument symbol
PASS: strings.test: string-ci<?: wrong argument type: 2nd argument symbol
PASS: strings.test: string-ci<?: same as char-ci<?
PASS: strings.test: string<=?: same as char<=?
PASS: strings.test: string-ci<=?: same as char-ci<=?
PASS: strings.test: string>?: same as char>?
PASS: strings.test: string-ci>?: same as char-ci>?
PASS: strings.test: string>=?: same as char>=?
PASS: strings.test: string-ci>=?: same as char-ci>=?
PASS: strings.test: string-normalize-nfd: canonical decomposition is equal?
PASS: strings.test: string-normalize-nfkd: compatibility decomposition is equal?
PASS: strings.test: string-normalize-nfc: canonical composition is equal?
PASS: strings.test: string-normalize-nfkc: compatibility composition is equal?
PASS: strings.test: string-normalize-{nfd,nfc,nfkd,nfkc} on large strings
PASS: strings.test: string-utf8-length: wrong type argument
PASS: strings.test: string-utf8-length: (string-utf8-length )
PASS: strings.test: string-utf8-length: (string-utf8-length  )
PASS: strings.test: string-utf8-length: (string-utf8-length hello)
PASS: strings.test: string-utf8-length: (string-utf8-length helloλ)
PASS: strings.test: string-utf8-length: (string-utf8-length ሠላም)
PASS: strings.test: string-ref: empty string
PASS: strings.test: string-ref: empty string and non-zero index
PASS: strings.test: string-ref: out of range
PASS: strings.test: string-ref: negative index
PASS: strings.test: string-ref: regular string, ASCII char
PASS: strings.test: string-ref: regular string, hex escaped Latin-1 char
PASS: strings.test: string-ref: regular string, hex escaped BMP char
PASS: strings.test: string-ref: regular string, hex escaped SMP char
PASS: strings.test: string-set!: empty string
PASS: strings.test: string-set!: empty string and non-zero index
PASS: strings.test: string-set!: out of range
PASS: strings.test: string-set!: negative index
PASS: strings.test: string-set!: read-only string
PASS: strings.test: string-set!: regular string, ASCII char
PASS: strings.test: string-set!: regular string, Latin-1 char
PASS: strings.test: string-set!: regular string, BMP char
PASS: strings.test: string-set!: regular string, SMP char
PASS: strings.test: string: convert circular list to string
PASS: strings.test: string-split: char 255
PASS: strings.test: string-split: empty string - char
PASS: strings.test: string-split: non-empty - char - no delimiters
PASS: strings.test: string-split: non-empty - char - delimiters
PASS: strings.test: string-split: non-empty - char - leading delimiters
PASS: strings.test: string-split: non-empty - char - trailing delimiters
PASS: strings.test: string-split: empty string - charset
PASS: strings.test: string-split: non-empty - charset - no delimiters
PASS: strings.test: string-split: non-empty - charset - delimiters
PASS: strings.test: string-split: non-empty - charset - leading delimiters
PASS: strings.test: string-split: non-empty - charset - trailing delimiters
PASS: strings.test: string-split: empty string - pred
PASS: strings.test: string-split: non-empty - pred - no delimiters
PASS: strings.test: string-split: non-empty - pred - delimiters
PASS: strings.test: string-split: non-empty - pred - leading delimiters
PASS: strings.test: string-split: non-empty - pred - trailing delimiters
PASS: strings.test: substring-move!: substring-move! checks start and end correctly
PASS: strings.test: substring/shared: modify indirectly
PASS: strings.test: substring/shared: modify cow indirectly
PASS: strings.test: substring/shared: modify double indirectly
PASS: strings.test: substring/shared: modify cow double indirectly
PASS: strings.test: miscellaneous string functions: string-replace-substring
PASS: structs.test: low-level struct procedures: constructors
PASS: structs.test: low-level struct procedures: vtables
PASS: structs.test: low-level struct procedures: write
PASS: structs.test: low-level struct procedures: struct-set!
PASS: structs.test: low-level struct procedures: struct-ref
PASS: structs.test: low-level struct procedures: struct-set!
PASS: structs.test: low-level struct procedures: struct-ref out-of-range
PASS: structs.test: low-level struct procedures: struct-set! out-of-range
PASS: structs.test: equal?: simple structs
PASS: structs.test: equal?: more complex structs
PASS: structs.test: equal?: not-equal?
PASS: structs.test: hash: simple structs
PASS: structs.test: hash: different structs
PASS: structs.test: hash: different struct types
PASS: structs.test: hash: more complex structs
PASS: structs.test: hash: struct with weird fields
PASS: structs.test: hash: cyclic structs
PASS: structs.test: make-struct: wrong type for `u' field
PASS: structs.test: make-vtable: without printer
PASS: structs.test: make-vtable: with printer
PASS: suspendable-ports.test: %default-port-conversion-strategy: initial value
PASS: suspendable-ports.test: %default-port-conversion-strategy: file port
PASS: suspendable-ports.test: %default-port-conversion-strategy: (set-port-conversion-strategy! #f sym)
PASS: suspendable-ports.test: file: write and read back list of strings
PASS: suspendable-ports.test: file: write and read back characters
PASS: suspendable-ports.test: file: r/w 1
PASS: suspendable-ports.test: file: r/w 2
PASS: suspendable-ports.test: file: r/w 3
PASS: suspendable-ports.test: file: r/w 4
PASS: suspendable-ports.test: file: ub r/w 1
PASS: suspendable-ports.test: file: ub r/w 2
PASS: suspendable-ports.test: file: ub r/w 3
PASS: suspendable-ports.test: file: ub r/w 4
PASS: suspendable-ports.test: file: out tell
PASS: suspendable-ports.test: file: in tell 0
PASS: suspendable-ports.test: file: in tell 1
PASS: suspendable-ports.test: file: in tell 0 after unread
PASS: suspendable-ports.test: file: unread char still there
PASS: suspendable-ports.test: file: in last char
PASS: suspendable-ports.test: file: read back NUL 1
PASS: suspendable-ports.test: file: read back 255
PASS: suspendable-ports.test: file: read back 128
PASS: suspendable-ports.test: file: read back NUL 2
PASS: suspendable-ports.test: file: EOF
PASS: suspendable-ports.test: file: line buffering
PASS: suspendable-ports.test: file: read-line honors port encoding
PASS: suspendable-ports.test: file: binary mode ignores port encoding
PASS: suspendable-ports.test: file: binary mode ignores file coding declaration
PASS: suspendable-ports.test: file: open-file ignores coding declaration by default
PASS: suspendable-ports.test: file: open-input-file with guess-encoding honors coding declaration
PASS: suspendable-ports.test: invalid wide mode string
PASS: suspendable-ports.test: valid wide mode string
PASS: suspendable-ports.test: keyword arguments for file openers: write #:encoding: open-file
PASS: suspendable-ports.test: keyword arguments for file openers: write #:encoding: open-output-file
PASS: suspendable-ports.test: keyword arguments for file openers: write #:encoding: call-with-output-file
PASS: suspendable-ports.test: keyword arguments for file openers: write #:encoding: with-output-to-file
PASS: suspendable-ports.test: keyword arguments for file openers: write #:encoding: with-error-to-file
PASS: suspendable-ports.test: keyword arguments for file openers: write #:binary: open-output-file
PASS: suspendable-ports.test: keyword arguments for file openers: write #:binary: call-with-output-file
PASS: suspendable-ports.test: keyword arguments for file openers: write #:binary: with-output-to-file
PASS: suspendable-ports.test: keyword arguments for file openers: write #:binary: with-error-to-file
PASS: suspendable-ports.test: keyword arguments for file openers: read #:encoding: open-file read #:encoding
PASS: suspendable-ports.test: keyword arguments for file openers: read #:encoding: open-input-file #:encoding
PASS: suspendable-ports.test: keyword arguments for file openers: read #:encoding: call-with-input-file #:encoding
PASS: suspendable-ports.test: keyword arguments for file openers: read #:encoding: with-input-from-file #:encoding
PASS: suspendable-ports.test: keyword arguments for file openers: read #:binary: open-input-file
PASS: suspendable-ports.test: keyword arguments for file openers: read #:binary: call-with-input-file
PASS: suspendable-ports.test: keyword arguments for file openers: read #:binary: with-input-from-file
PASS: suspendable-ports.test: keyword arguments for file openers: #:guess-encoding with coding declaration: open-file
PASS: suspendable-ports.test: keyword arguments for file openers: #:guess-encoding with coding declaration: open-input-file
PASS: suspendable-ports.test: keyword arguments for file openers: #:guess-encoding with coding declaration: call-with-input-file
PASS: suspendable-ports.test: keyword arguments for file openers: #:guess-encoding with coding declaration: with-input-from-file
PASS: suspendable-ports.test: keyword arguments for file openers: #:guess-encoding without coding declaration: open-file
PASS: suspendable-ports.test: keyword arguments for file openers: #:guess-encoding without coding declaration: open-input-file
PASS: suspendable-ports.test: keyword arguments for file openers: #:guess-encoding without coding declaration: call-with-input-file
PASS: suspendable-ports.test: keyword arguments for file openers: #:guess-encoding without coding declaration: with-input-from-file
PASS: suspendable-ports.test: unread-char
PASS: suspendable-ports.test: unread-string
PASS: suspendable-ports.test: unread residue
PASS: suspendable-ports.test: initial revealed count
PASS: suspendable-ports.test: non-revealed port is closed
PASS: suspendable-ports.test: close-port & revealed port
PASS: suspendable-ports.test: revealed port fdes not closed
PASS: suspendable-ports.test: pipe: read
PASS: suspendable-ports.test: pipe: write
PASS: suspendable-ports.test: pipe, fdopen, and line buffering
PASS: suspendable-ports.test: string ports: display text
PASS: suspendable-ports.test: string ports: write/read sexpr
PASS: suspendable-ports.test: string ports: input tell 0
PASS: suspendable-ports.test: string ports: input tell 1
PASS: suspendable-ports.test: string ports: input tell back to 0
PASS: suspendable-ports.test: string ports: input ungetted char
PASS: suspendable-ports.test: string ports: input seek to end
PASS: suspendable-ports.test: string ports: input seek to beginning
PASS: suspendable-ports.test: string ports: input reread first char
PASS: suspendable-ports.test: string ports: output tell 0
PASS: suspendable-ports.test: string ports: output tell end
PASS: suspendable-ports.test: string ports: output seek to beginning
PASS: suspendable-ports.test: string ports: output seek to last char
PASS: suspendable-ports.test: string ports: output check
PASS: suspendable-ports.test: string ports: truncating input string fails
PASS: suspendable-ports.test: string ports: truncating output string
PASS: suspendable-ports.test: string ports: truncating output string before position
PASS: suspendable-ports.test: string ports: truncating output string at position
PASS: suspendable-ports.test: string ports: truncating output string after seek
PASS: suspendable-ports.test: string ports: truncating output string after seek to end
PASS: suspendable-ports.test: string ports: %default-port-encoding is ignored
PASS: suspendable-ports.test: string ports: %default-port-conversion-strategy is honored
PASS: suspendable-ports.test: string ports: suitable encoding [latin-1]
PASS: suspendable-ports.test: string ports: suitable encoding [latin-3]
PASS: suspendable-ports.test: string ports: wrong encoding, error
PASS: suspendable-ports.test: string ports: wrong encoding, substitute
PASS: suspendable-ports.test: string ports: wrong encoding, escape
PASS: suspendable-ports.test: string ports: peek-char
PASS: suspendable-ports.test: string ports: test-decoding-error: (255 65 66 67) "UTF-8" error
PASS: suspendable-ports.test: string ports: test-decoding-error: (255 65 66 67) "UTF-8" error + peek-char
PASS: suspendable-ports.test: string ports: test-decoding-error: (255 65 66 67) "UTF-8" escape
PASS: suspendable-ports.test: string ports: test-decoding-error: (255 65 66 67) "UTF-8" escape + peek-char
PASS: suspendable-ports.test: string ports: test-decoding-error: (255 65 66 67) "UTF-8" substitute
PASS: suspendable-ports.test: string ports: test-decoding-error: (255 65 66 67) "UTF-8" substitute + peek-char
PASS: suspendable-ports.test: string ports: test-decoding-error: (255 206 187 206 188) "UTF-8" error
PASS: suspendable-ports.test: string ports: test-decoding-error: (255 206 187 206 188) "UTF-8" error + peek-char
PASS: suspendable-ports.test: string ports: test-decoding-error: (255 206 187 206 188) "UTF-8" escape
PASS: suspendable-ports.test: string ports: test-decoding-error: (255 206 187 206 188) "UTF-8" escape + peek-char
PASS: suspendable-ports.test: string ports: test-decoding-error: (255 206 187 206 188) "UTF-8" substitute
PASS: suspendable-ports.test: string ports: test-decoding-error: (255 206 187 206 188) "UTF-8" substitute + peek-char
PASS: suspendable-ports.test: string ports: test-decoding-error: (206 187 206) "UTF-8" error
PASS: suspendable-ports.test: string ports: test-decoding-error: (206 187 206) "UTF-8" error + peek-char
PASS: suspendable-ports.test: string ports: test-decoding-error: (206 187 206) "UTF-8" escape
PASS: suspendable-ports.test: string ports: test-decoding-error: (206 187 206) "UTF-8" escape + peek-char
PASS: suspendable-ports.test: string ports: test-decoding-error: (206 187 206) "UTF-8" substitute
PASS: suspendable-ports.test: string ports: test-decoding-error: (206 187 206) "UTF-8" substitute + peek-char
PASS: suspendable-ports.test: string ports: test-decoding-error: (192 128 65) "UTF-8" error
PASS: suspendable-ports.test: string ports: test-decoding-error: (192 128 65) "UTF-8" error + peek-char
PASS: suspendable-ports.test: string ports: test-decoding-error: (192 128 65) "UTF-8" escape
PASS: suspendable-ports.test: string ports: test-decoding-error: (192 128 65) "UTF-8" escape + peek-char
PASS: suspendable-ports.test: string ports: test-decoding-error: (192 128 65) "UTF-8" substitute
PASS: suspendable-ports.test: string ports: test-decoding-error: (192 128 65) "UTF-8" substitute + peek-char
PASS: suspendable-ports.test: string ports: test-decoding-error: (194 65 66) "UTF-8" error
PASS: suspendable-ports.test: string ports: test-decoding-error: (194 65 66) "UTF-8" error + peek-char
PASS: suspendable-ports.test: string ports: test-decoding-error: (194 65 66) "UTF-8" escape
PASS: suspendable-ports.test: string ports: test-decoding-error: (194 65 66) "UTF-8" escape + peek-char
PASS: suspendable-ports.test: string ports: test-decoding-error: (194 65 66) "UTF-8" substitute
PASS: suspendable-ports.test: string ports: test-decoding-error: (194 65 66) "UTF-8" substitute + peek-char
PASS: suspendable-ports.test: string ports: test-decoding-error: (240 128 128 65) "UTF-8" error
PASS: suspendable-ports.test: string ports: test-decoding-error: (240 128 128 65) "UTF-8" error + peek-char
PASS: suspendable-ports.test: string ports: test-decoding-error: (240 128 128 65) "UTF-8" escape
PASS: suspendable-ports.test: string ports: test-decoding-error: (240 128 128 65) "UTF-8" escape + peek-char
PASS: suspendable-ports.test: string ports: test-decoding-error: (240 128 128 65) "UTF-8" substitute
PASS: suspendable-ports.test: string ports: test-decoding-error: (240 128 128 65) "UTF-8" substitute + peek-char
PASS: suspendable-ports.test: string ports: test-decoding-error: (224 160 65 66) "UTF-8" error
PASS: suspendable-ports.test: string ports: test-decoding-error: (224 160 65 66) "UTF-8" error + peek-char
PASS: suspendable-ports.test: string ports: test-decoding-error: (224 160 65 66) "UTF-8" escape
PASS: suspendable-ports.test: string ports: test-decoding-error: (224 160 65 66) "UTF-8" escape + peek-char
PASS: suspendable-ports.test: string ports: test-decoding-error: (224 160 65 66) "UTF-8" substitute
PASS: suspendable-ports.test: string ports: test-decoding-error: (224 160 65 66) "UTF-8" substitute + peek-char
PASS: suspendable-ports.test: string ports: test-decoding-error: (240 136 136 136) "UTF-8" error
PASS: suspendable-ports.test: string ports: test-decoding-error: (240 136 136 136) "UTF-8" error + peek-char
PASS: suspendable-ports.test: string ports: test-decoding-error: (240 136 136 136) "UTF-8" escape
PASS: suspendable-ports.test: string ports: test-decoding-error: (240 136 136 136) "UTF-8" escape + peek-char
PASS: suspendable-ports.test: string ports: test-decoding-error: (240 136 136 136) "UTF-8" substitute
PASS: suspendable-ports.test: string ports: test-decoding-error: (240 136 136 136) "UTF-8" substitute + peek-char
PASS: suspendable-ports.test: call-with-output-string: proc closes port
PASS: suspendable-ports.test: newline: line counter: file: at beginning of input
PASS: suspendable-ports.test: newline: line counter: file: read first character
PASS: suspendable-ports.test: newline: line counter: file: after reading one character
PASS: suspendable-ports.test: newline: line counter: file: read first newline
PASS: suspendable-ports.test: newline: line counter: file: after reading first newline char
PASS: suspendable-ports.test: newline: line counter: file: second line read correctly
PASS: suspendable-ports.test: newline: line counter: file: read-line increments line number
PASS: suspendable-ports.test: newline: line counter: file: read-line returns EOF
PASS: suspendable-ports.test: newline: line counter: file: line count is 5 at EOF
PASS: suspendable-ports.test: newline: line counter: file: column is correct at EOF
PASS: suspendable-ports.test: newline: line counter: pipe: at beginning of input
PASS: suspendable-ports.test: newline: line counter: pipe: read first character
PASS: suspendable-ports.test: newline: line counter: pipe: after reading one character
PASS: suspendable-ports.test: newline: line counter: pipe: read first newline
PASS: suspendable-ports.test: newline: line counter: pipe: after reading first newline char
PASS: suspendable-ports.test: newline: line counter: pipe: second line read correctly
PASS: suspendable-ports.test: newline: line counter: pipe: read-line increments line number
PASS: suspendable-ports.test: newline: line counter: pipe: read-line returns EOF
PASS: suspendable-ports.test: newline: line counter: pipe: line count is 5 at EOF
PASS: suspendable-ports.test: newline: line counter: pipe: column is correct at EOF
PASS: suspendable-ports.test: newline: line counter: string: at beginning of input
PASS: suspendable-ports.test: newline: line counter: string: read first character
PASS: suspendable-ports.test: newline: line counter: string: after reading one character
PASS: suspendable-ports.test: newline: line counter: string: read first newline
PASS: suspendable-ports.test: newline: line counter: string: after reading first newline char
PASS: suspendable-ports.test: newline: line counter: string: second line read correctly
PASS: suspendable-ports.test: newline: line counter: string: read-line increments line number
PASS: suspendable-ports.test: newline: line counter: string: read-line returns EOF
PASS: suspendable-ports.test: newline: line counter: string: line count is 5 at EOF
PASS: suspendable-ports.test: newline: line counter: string: column is correct at EOF
PASS: suspendable-ports.test: no newline: line counter: file: at beginning of input
PASS: suspendable-ports.test: no newline: line counter: file: read first character
PASS: suspendable-ports.test: no newline: line counter: file: after reading one character
PASS: suspendable-ports.test: no newline: line counter: file: read first newline
PASS: suspendable-ports.test: no newline: line counter: file: after reading first newline char
PASS: suspendable-ports.test: no newline: line counter: file: second line read correctly
PASS: suspendable-ports.test: no newline: line counter: file: read-line increments line number
PASS: suspendable-ports.test: no newline: line counter: file: read-line returns EOF
PASS: suspendable-ports.test: no newline: line counter: file: line count is 5 at EOF
PASS: suspendable-ports.test: no newline: line counter: file: column is correct at EOF
PASS: suspendable-ports.test: no newline: line counter: pipe: at beginning of input
PASS: suspendable-ports.test: no newline: line counter: pipe: read first character
PASS: suspendable-ports.test: no newline: line counter: pipe: after reading one character
PASS: suspendable-ports.test: no newline: line counter: pipe: read first newline
PASS: suspendable-ports.test: no newline: line counter: pipe: after reading first newline char
PASS: suspendable-ports.test: no newline: line counter: pipe: second line read correctly
PASS: suspendable-ports.test: no newline: line counter: pipe: read-line increments line number
PASS: suspendable-ports.test: no newline: line counter: pipe: read-line returns EOF
PASS: suspendable-ports.test: no newline: line counter: pipe: line count is 5 at EOF
PASS: suspendable-ports.test: no newline: line counter: pipe: column is correct at EOF
PASS: suspendable-ports.test: no newline: line counter: string: at beginning of input
PASS: suspendable-ports.test: no newline: line counter: string: read first character
PASS: suspendable-ports.test: no newline: line counter: string: after reading one character
PASS: suspendable-ports.test: no newline: line counter: string: read first newline
PASS: suspendable-ports.test: no newline: line counter: string: after reading first newline char
PASS: suspendable-ports.test: no newline: line counter: string: second line read correctly
PASS: suspendable-ports.test: no newline: line counter: string: read-line increments line number
PASS: suspendable-ports.test: no newline: line counter: string: read-line returns EOF
PASS: suspendable-ports.test: no newline: line counter: string: line count is 5 at EOF
PASS: suspendable-ports.test: no newline: line counter: string: column is correct at EOF
PASS: suspendable-ports.test: port-line and port-column for output ports: at beginning of input
PASS: suspendable-ports.test: port-line and port-column for output ports: after writing one character
PASS: suspendable-ports.test: port-line and port-column for output ports: after writing first newline char
PASS: suspendable-ports.test: port-line and port-column for output ports: line count is 5 at end
PASS: suspendable-ports.test: port-line and port-column for output ports: column is correct at end
PASS: suspendable-ports.test: port-column: output: x
PASS: suspendable-ports.test: port-column: output: \a
PASS: suspendable-ports.test: port-column: output: x\a
PASS: suspendable-ports.test: port-column: output: \x08 backspace
PASS: suspendable-ports.test: port-column: output: x\x08 backspace
PASS: suspendable-ports.test: port-column: output: \n
PASS: suspendable-ports.test: port-column: output: x\n
PASS: suspendable-ports.test: port-column: output: \r
PASS: suspendable-ports.test: port-column: output: x\r
PASS: suspendable-ports.test: port-column: output: \t
PASS: suspendable-ports.test: port-column: output: x\t
PASS: suspendable-ports.test: port-column: input: x
PASS: suspendable-ports.test: port-column: input: \a
PASS: suspendable-ports.test: port-column: input: x\a
PASS: suspendable-ports.test: port-column: input: \x08 backspace
PASS: suspendable-ports.test: port-column: input: x\x08 backspace
PASS: suspendable-ports.test: port-column: input: \n
PASS: suspendable-ports.test: port-column: input: x\n
PASS: suspendable-ports.test: port-column: input: \r
PASS: suspendable-ports.test: port-column: input: x\r
PASS: suspendable-ports.test: port-column: input: \t
PASS: suspendable-ports.test: port-column: input: x\t
PASS: suspendable-ports.test: port-line: set most-positive-fixnum/2
PASS: suspendable-ports.test: port-encoding: set-port-encoding!, wrong encoding
PASS: suspendable-ports.test: port-encoding: %default-port-encoding, wrong encoding
PASS: suspendable-ports.test: port-for-each: passing freed cell
PASS: suspendable-ports.test: fdes->port: fdes->ports finds port
PASS: suspendable-ports.test: seek: file port: SEEK_CUR
PASS: suspendable-ports.test: seek: file port: SEEK_SET
PASS: suspendable-ports.test: seek: file port: SEEK_END
PASS: suspendable-ports.test: truncate-file: flonum file
PASS: suspendable-ports.test: truncate-file: frac file
PASS: suspendable-ports.test: truncate-file: filename: flonum length
PASS: suspendable-ports.test: truncate-file: filename: shorten
PASS: suspendable-ports.test: truncate-file: filename: shorten to current pos
PASS: suspendable-ports.test: truncate-file: file descriptor: shorten
PASS: suspendable-ports.test: truncate-file: file descriptor: shorten to current pos
PASS: suspendable-ports.test: truncate-file: file port: shorten
PASS: suspendable-ports.test: truncate-file: file port: shorten to current pos
PASS: suspendable-ports.test: read-delimited!: read-delimited! reads a first line
PASS: suspendable-ports.test: read-delimited!: read-delimited! reads a first line
PASS: suspendable-ports.test: char-ready? returns true on string port
PASS: suspendable-ports.test: char-ready? returns true on string port as default port
PASS: suspendable-ports.test: pending EOF behavior: peek-char does not swallow EOF (soft port)
PASS: suspendable-ports.test: pending EOF behavior: unread clears pending EOF (soft port)
PASS: suspendable-ports.test: pending EOF behavior: unread clears pending EOF (string port)
PASS: suspendable-ports.test: pending EOF behavior: unread clears pending EOF (file port)
PASS: suspendable-ports.test: pending EOF behavior: seek clears pending EOF (string port)
PASS: suspendable-ports.test: pending EOF behavior: seek clears pending EOF (file port)
PASS: suspendable-ports.test: closing current-input-port: read
PASS: suspendable-ports.test: closing current-input-port: read-char
PASS: suspendable-ports.test: closing current-input-port: read-line
PASS: suspendable-ports.test: setvbuf: closed port
PASS: suspendable-ports.test: setvbuf: string port
PASS: suspendable-ports.test: setvbuf: line/column number preserved
PASS: suspendable-ports.test: unget-bytevector
PASS: suspendable-ports.test: unicode byte-order marks (BOMs): BOM not discarded from Latin-1 stream
PASS: suspendable-ports.test: unicode byte-order marks (BOMs): BOM not discarded from Latin-2 stream
PASS: suspendable-ports.test: unicode byte-order marks (BOMs): BOM not discarded from UTF-16BE stream
PASS: suspendable-ports.test: unicode byte-order marks (BOMs): BOM not discarded from UTF-16LE stream
PASS: suspendable-ports.test: unicode byte-order marks (BOMs): BOM not discarded from UTF-32BE stream
PASS: suspendable-ports.test: unicode byte-order marks (BOMs): BOM not discarded from UTF-32LE stream
PASS: suspendable-ports.test: unicode byte-order marks (BOMs): BOM not written to UTF-8 stream
PASS: suspendable-ports.test: unicode byte-order marks (BOMs): BOM not written to UTF-16BE stream
PASS: suspendable-ports.test: unicode byte-order marks (BOMs): BOM not written to UTF-16LE stream
PASS: suspendable-ports.test: unicode byte-order marks (BOMs): BOM not written to UTF-32BE stream
PASS: suspendable-ports.test: unicode byte-order marks (BOMs): BOM not written to UTF-32LE stream
PASS: suspendable-ports.test: unicode byte-order marks (BOMs): Don't read from the port unless user asks to
PASS: suspendable-ports.test: unicode byte-order marks (BOMs): BOM discarded from start of UTF-8 stream
PASS: suspendable-ports.test: unicode byte-order marks (BOMs): BOM discarded from start of UTF-8 stream after seek to 0
PASS: suspendable-ports.test: unicode byte-order marks (BOMs): Only one BOM discarded from start of UTF-8 stream
PASS: suspendable-ports.test: unicode byte-order marks (BOMs): BOM not discarded from UTF-8 stream after seek to > 0
PASS: suspendable-ports.test: unicode byte-order marks (BOMs): BOM not discarded unless at start of UTF-8 stream
PASS: suspendable-ports.test: unicode byte-order marks (BOMs): BOM (BE) written to start of UTF-16 stream
PASS: suspendable-ports.test: unicode byte-order marks (BOMs): BOM (BE) written to UTF-16 stream after set-port-encoding!
PASS: suspendable-ports.test: unicode byte-order marks (BOMs): BOM discarded from start of UTF-16 stream (BE)
PASS: suspendable-ports.test: unicode byte-order marks (BOMs): BOM discarded from start of UTF-16 stream (BE) after seek to 0
PASS: suspendable-ports.test: unicode byte-order marks (BOMs): Only one BOM discarded from start of UTF-16 stream (BE)
PASS: suspendable-ports.test: unicode byte-order marks (BOMs): BOM not discarded from UTF-16 stream (BE) after seek to > 0
PASS: suspendable-ports.test: unicode byte-order marks (BOMs): BOM not discarded unless at start of UTF-16 stream
PASS: suspendable-ports.test: unicode byte-order marks (BOMs): BOM discarded from start of UTF-16 stream (LE)
PASS: suspendable-ports.test: unicode byte-order marks (BOMs): BOM discarded from start of UTF-16 stream (LE) after seek to 0
PASS: suspendable-ports.test: unicode byte-order marks (BOMs): Only one BOM discarded from start of UTF-16 stream (LE)
PASS: suspendable-ports.test: unicode byte-order marks (BOMs): BOM discarded from start of UTF-32 stream (BE)
PASS: suspendable-ports.test: unicode byte-order marks (BOMs): BOM discarded from start of UTF-32 stream (BE) after seek to 0
PASS: suspendable-ports.test: unicode byte-order marks (BOMs): Only one BOM discarded from start of UTF-32 stream (BE)
PASS: suspendable-ports.test: unicode byte-order marks (BOMs): BOM not discarded from UTF-32 stream (BE) after seek to > 0
PASS: suspendable-ports.test: unicode byte-order marks (BOMs): BOM discarded within UTF-16 stream (BE) after set-port-encoding!
PASS: suspendable-ports.test: unicode byte-order marks (BOMs): BOM discarded within UTF-16 stream (LE,BE) after set-port-encoding!
PASS: suspendable-ports.test: unicode byte-order marks (BOMs): BOM discarded within UTF-32 stream (BE) after set-port-encoding!
PASS: suspendable-ports.test: unicode byte-order marks (BOMs): BOM discarded within UTF-32 stream (LE,BE) after set-port-encoding!
PASS: suspendable-ports.test: unicode byte-order marks (BOMs): BOM not discarded unless at start of UTF-32 stream
PASS: suspendable-ports.test: unicode byte-order marks (BOMs): BOM discarded from start of UTF-32 stream (LE)
PASS: suspendable-ports.test: unicode byte-order marks (BOMs): BOM discarded from start of UTF-32 stream (LE) after seek to 0
PASS: suspendable-ports.test: unicode byte-order marks (BOMs): Only one BOM discarded from start of UTF-32 stream (LE)
PASS: suspendable-ports.test: %file-port-name-canonicalization: absolute file name & empty %load-path entry
PASS: suspendable-ports.test: %file-port-name-canonicalization: relative canonicalization with /
PASS: suspendable-ports.test: %file-port-name-canonicalization: relative canonicalization with /dev/..
PASS: suspendable-ports.test: %file-port-name-canonicalization: relative canonicalization from ice-9
PASS: suspendable-ports.test: %file-port-name-canonicalization: relative canonicalization with common prefixes
PASS: suspendable-ports.test: %file-port-name-canonicalization: absolute canonicalization from ice-9
PASS: suspendable-ports.test: file name separators: no backslash separators in Windows file names
PASS: suspendable-ports.test: read-line: one line
PASS: suspendable-ports.test: read-line: two lines, trim
PASS: suspendable-ports.test: read-line: two lines, concat
PASS: suspendable-ports.test: read-line: two lines, peek
PASS: suspendable-ports.test: read-line: two lines, split
PASS: suspendable-ports.test: read-line: two Greek lines, trim
PASS: suspendable-ports.test: read-line: decoding error
PASS: suspendable-ports.test: read-line: decoding error, substitute
PASS: suspendable-ports.test: read-delimited: delimiter hit
PASS: suspendable-ports.test: read-delimited: delimiter hit, split
PASS: suspendable-ports.test: read-delimited: delimiter hit, concat
PASS: suspendable-ports.test: read-delimited: delimiter hit, peek
PASS: suspendable-ports.test: read-delimited: eof
PASS: suspendable-ports.test: read-delimited!: delimiter hit
PASS: suspendable-ports.test: read-delimited!: delimiter hit, start+end
PASS: suspendable-ports.test: read-delimited!: delimiter hit, split
PASS: suspendable-ports.test: read-delimited!: delimiter hit, concat
PASS: suspendable-ports.test: read-delimited!: delimiter hit, peek
PASS: suspendable-ports.test: read-delimited!: string too small
PASS: suspendable-ports.test: read-delimited!: string too small, start+end
PASS: suspendable-ports.test: read-delimited!: string too small, split
PASS: suspendable-ports.test: read-delimited!: eof
PASS: suspendable-ports.test: read-delimited!: eof, split
PASS: suspendable-ports.test: read-string: short string
PASS: suspendable-ports.test: read-string: 100 chars
PASS: suspendable-ports.test: read-string: longer than 100 chars
PASS: suspendable-ports.test: read-string: longer than 100 chars, with limit
PASS: suspendable-ports.test: read-string!: buf smaller
PASS: suspendable-ports.test: read-string!: buf right size
PASS: suspendable-ports.test: read-string!: buf bigger
PASS: suspendable-ports.test: 8.2.5 End-of-File Object: eof-object
PASS: suspendable-ports.test: 8.2.5 End-of-File Object: port-eof?
PASS: suspendable-ports.test: 8.2.8 Binary Input: get-u8
PASS: suspendable-ports.test: 8.2.8 Binary Input: lookahead-u8
PASS: suspendable-ports.test: 8.2.8 Binary Input: lookahead-u8 non-ASCII
PASS: suspendable-ports.test: 8.2.8 Binary Input: lookahead-u8: result is unsigned
PASS: suspendable-ports.test: 8.2.8 Binary Input: get-bytevector-n [short]
PASS: suspendable-ports.test: 8.2.8 Binary Input: get-bytevector-n [long]
PASS: suspendable-ports.test: 8.2.8 Binary Input: get-bytevector-n with closed port
PASS: suspendable-ports.test: 8.2.8 Binary Input: http://bugs.gnu.org/17466
PASS: suspendable-ports.test: 8.2.8 Binary Input: get-bytevector-n! [short]
PASS: suspendable-ports.test: 8.2.8 Binary Input: get-bytevector-n! [long]
PASS: suspendable-ports.test: 8.2.8 Binary Input: get-bytevector-some [simple]
PASS: suspendable-ports.test: 8.2.8 Binary Input: get-bytevector-some! [short]
PASS: suspendable-ports.test: 8.2.8 Binary Input: get-bytevector-some! [long]
PASS: suspendable-ports.test: 8.2.8 Binary Input: get-bytevector-all
PASS: suspendable-ports.test: 8.2.11 Binary Output: put-u8
PASS: suspendable-ports.test: 8.2.11 Binary Output: put-bytevector [2 args]
PASS: suspendable-ports.test: 8.2.11 Binary Output: put-bytevector [3 args]
PASS: suspendable-ports.test: 8.2.11 Binary Output: put-bytevector [4 args]
PASS: suspendable-ports.test: 8.2.11 Binary Output: put-bytevector with closed port
PASS: suspendable-ports.test: 8.2.11 Binary Output: put-bytevector with UTF-16 string port
PASS: suspendable-ports.test: 8.2.11 Binary Output: put-bytevector with wrong-encoding string port
PASS: suspendable-ports.test: 8.2.7 Input Ports: open-file-input-port: opens binary input port with correct contents
PASS: suspendable-ports.test: 8.2.7 Input Ports: open-bytevector-input-port [1 arg]
PASS: suspendable-ports.test: 8.2.7 Input Ports: bytevector-input-port is binary
PASS: suspendable-ports.test: 8.2.7 Input Ports: bytevector-input-port uses ISO-8859-1 (Guile extension)
PASS: suspendable-ports.test: 8.2.7 Input Ports: bytevector-input-port is read-only
PASS: suspendable-ports.test: 8.2.7 Input Ports: bytevector input port supports seeking
PASS: suspendable-ports.test: 8.2.7 Input Ports: bytevector input port can seek to very end
PASS: suspendable-ports.test: 8.2.7 Input Ports: make-custom-binary-input-port [wrong-num-args]
PASS: suspendable-ports.test: 8.2.7 Input Ports: make-custom-binary-input-port
PASS: suspendable-ports.test: 8.2.7 Input Ports: make-custom-binary-input-port uses ISO-8859-1 (Guile extension)
PASS: suspendable-ports.test: 8.2.7 Input Ports: custom binary input port does not support `port-position'
PASS: suspendable-ports.test: 8.2.7 Input Ports: custom binary input port 'read!' returns too much
PASS: suspendable-ports.test: 8.2.7 Input Ports: custom binary input port supports `port-position', not `set-port-position!'
PASS: suspendable-ports.test: 8.2.7 Input Ports: custom binary input port supports `port-position'
PASS: suspendable-ports.test: 8.2.7 Input Ports: custom binary input port position, long offset
PASS: suspendable-ports.test: 8.2.7 Input Ports: custom binary input port buffered partial reads
PASS: suspendable-ports.test: 8.2.7 Input Ports: custom binary input port unbuffered & 'port-position'
PASS: suspendable-ports.test: 8.2.7 Input Ports: custom binary input port unbuffered & 'read!' calls
PASS: suspendable-ports.test: 8.2.7 Input Ports: custom binary input port unbuffered & 'get-string-all'
PASS: suspendable-ports.test: 8.2.7 Input Ports: custom binary input port unbuffered UTF-8 & 'get-string-all'
PASS: suspendable-ports.test: 8.2.7 Input Ports: custom binary input port, unbuffered then buffered
PASS: suspendable-ports.test: 8.2.7 Input Ports: custom binary input port, buffered then unbuffered
PASS: suspendable-ports.test: 8.2.7 Input Ports: custom binary input port `close-proc' is called
PASS: suspendable-ports.test: 8.2.7 Input Ports: standard-input-port is binary
PASS: suspendable-ports.test: 8.2.10 Output ports: open-file-output-port: opens binary output port
PASS: suspendable-ports.test: 8.2.10 Output ports: open-file-output-port: exception: already-exists
PASS: suspendable-ports.test: 8.2.10 Output ports: open-file-output-port: no-fail no-truncate
PASS: suspendable-ports.test: 8.2.10 Output ports: open-file-output-port: no-fail
PASS: suspendable-ports.test: 8.2.10 Output ports: open-file-output-port: buffer-mode none
PASS: suspendable-ports.test: 8.2.10 Output ports: open-file-output-port: buffer-mode line
PASS: suspendable-ports.test: 8.2.10 Output ports: open-file-output-port: buffer-mode block
PASS: suspendable-ports.test: 8.2.10 Output ports: open-file-output-port: exception: does-not-exist
PASS: suspendable-ports.test: 8.2.10 Output ports: open-string-output-port
PASS: suspendable-ports.test: 8.2.10 Output ports: calling string output port truncates port
PASS: suspendable-ports.test: 8.2.10 Output ports: open-bytevector-output-port
PASS: suspendable-ports.test: 8.2.10 Output ports: bytevector-output-port is binary
PASS: suspendable-ports.test: 8.2.10 Output ports: bytevector-output-port uses ISO-8859-1 (Guile extension)
PASS: suspendable-ports.test: 8.2.10 Output ports: open-bytevector-output-port [extract after close]
PASS: suspendable-ports.test: 8.2.10 Output ports: open-bytevector-output-port [put-u8]
PASS: suspendable-ports.test: 8.2.10 Output ports: open-bytevector-output-port [display]
PASS: suspendable-ports.test: 8.2.10 Output ports: bytevector output port supports `port-position'
PASS: suspendable-ports.test: 8.2.10 Output ports: make-custom-binary-output-port
PASS: suspendable-ports.test: 8.2.10 Output ports: make-custom-binary-output-port [partial writes]
PASS: suspendable-ports.test: 8.2.10 Output ports: make-custom-binary-output-port [full writes]
PASS: suspendable-ports.test: 8.2.10 Output ports: custom-binary-output-port uses ISO-8859-1 (Guile extension)
PASS: suspendable-ports.test: 8.2.10 Output ports: standard-output-port is binary
PASS: suspendable-ports.test: 8.2.10 Output ports: standard-error-port is binary
PASS: suspendable-ports.test: 8.2.6  Input and output ports: transcoded-port preserves input mode
PASS: suspendable-ports.test: 8.2.6  Input and output ports: transcoded-port preserves output mode
PASS: suspendable-ports.test: 8.2.6  Input and output ports: transcoded-port preserves input/output mode
PASS: suspendable-ports.test: 8.2.6  Input and output ports: transcoded-port [output]
PASS: suspendable-ports.test: 8.2.6  Input and output ports: transcoded-port [input]
PASS: suspendable-ports.test: 8.2.6  Input and output ports: transcoded-port [input line]
PASS: suspendable-ports.test: 8.2.6  Input and output ports: transcoded-port [error handling mode = raise]
PASS: suspendable-ports.test: 8.2.6  Input and output ports: transcoded-port [error handling mode = replace]
PASS: suspendable-ports.test: 8.2.6  Input and output ports: transcoded-port, output [error handling mode = raise]
PASS: suspendable-ports.test: 8.2.6  Input and output ports: port-transcoder [transcoded port]
PASS: suspendable-ports.test: 8.2.9  Textual input: get-string-n [short]
PASS: suspendable-ports.test: 8.2.9  Textual input: get-string-n [long]
PASS: suspendable-ports.test: 8.2.9  Textual input: get-string-n [eof]
PASS: suspendable-ports.test: 8.2.9  Textual input: get-string-n! [short]
PASS: suspendable-ports.test: 8.2.9  Textual input: read error: get-char
PASS: suspendable-ports.test: 8.2.9  Textual input: read error: lookahead-char
PASS: suspendable-ports.test: 8.2.9  Textual input: read error: get-string-all
PASS: suspendable-ports.test: 8.2.9  Textual input: read error: get-line
PASS: suspendable-ports.test: 8.2.9  Textual input: read error: get-datum
PASS: suspendable-ports.test: 8.2.12 Textual Output: write error: put-char
PASS: suspendable-ports.test: 8.2.12 Textual Output: write error: put-string
PASS: suspendable-ports.test: 8.2.12 Textual Output: write error: put-datum
PASS: suspendable-ports.test: 8.2.12 Textual Output: encoding error: put-char
PASS: suspendable-ports.test: 8.2.12 Textual Output: encoding error: put-string
PASS: suspendable-ports.test: 8.3 Simple I/O: read error: read-char
PASS: suspendable-ports.test: 8.3 Simple I/O: read error: peek-char
PASS: suspendable-ports.test: 8.3 Simple I/O: read error: read
PASS: suspendable-ports.test: 8.3 Simple I/O: write error: display
PASS: suspendable-ports.test: 8.3 Simple I/O: write error: write
PASS: suspendable-ports.test: 8.3 Simple I/O: write error: write-char
PASS: suspendable-ports.test: 8.3 Simple I/O: write error: newline
PASS: suspendable-ports.test: 8.3 Simple I/O: call-with-input-file [port is textual]
PASS: suspendable-ports.test: 8.3 Simple I/O: call-with-input-file [exception: not-found]
PASS: suspendable-ports.test: 8.3 Simple I/O: call-with-output-file [exception: already-exists]
PASS: suspendable-ports.test: 8.2.13 Input/output ports: open-file-input/output-port [output]: opens binary output port
PASS: suspendable-ports.test: 8.2.13 Input/output ports: open-file-input/output-port [output]: exception: already-exists
PASS: suspendable-ports.test: 8.2.13 Input/output ports: open-file-input/output-port [output]: no-fail no-truncate
PASS: suspendable-ports.test: 8.2.13 Input/output ports: open-file-input/output-port [output]: no-fail
PASS: suspendable-ports.test: 8.2.13 Input/output ports: open-file-input/output-port [output]: buffer-mode none
PASS: suspendable-ports.test: 8.2.13 Input/output ports: open-file-input/output-port [output]: buffer-mode line
PASS: suspendable-ports.test: 8.2.13 Input/output ports: open-file-input/output-port [output]: buffer-mode block
PASS: suspendable-ports.test: 8.2.13 Input/output ports: open-file-input/output-port [output]: exception: does-not-exist
PASS: suspendable-ports.test: 8.2.13 Input/output ports: open-file-input/output-port [input]: opens binary input port with correct contents
PASS: suspendable-ports.test: 8.2.13 Input/output ports: make-custom-binary-input/output-port
PASS: suspendable-ports.test: 8.2.13 Input/output ports: make-custom-binary-input/output-port uses ISO-8859-1 (Guile extension) [input]
PASS: suspendable-ports.test: 8.2.13 Input/output ports: custom binary input/output port does not support `port-position'
PASS: suspendable-ports.test: 8.2.13 Input/output ports: custom binary input/output port 'read!' returns too much
PASS: suspendable-ports.test: 8.2.13 Input/output ports: custom binary input/output port supports `port-position', not `set-port-position!'
PASS: suspendable-ports.test: 8.2.13 Input/output ports: custom binary input/output port supports `port-position'
PASS: suspendable-ports.test: 8.2.13 Input/output ports: custom binary input/output port buffered partial reads
PASS: suspendable-ports.test: 8.2.13 Input/output ports: custom binary input/output port unbuffered & 'port-position'
PASS: suspendable-ports.test: 8.2.13 Input/output ports: custom binary input/output port unbuffered & 'read!' calls
PASS: suspendable-ports.test: 8.2.13 Input/output ports: custom binary input/output port unbuffered & 'get-string-all'
PASS: suspendable-ports.test: 8.2.13 Input/output ports: custom binary input/output port unbuffered UTF-8 & 'get-string-all'
PASS: suspendable-ports.test: 8.2.13 Input/output ports: custom binary input/output port, unbuffered then buffered
PASS: suspendable-ports.test: 8.2.13 Input/output ports: custom binary input/output port, buffered then unbuffered
PASS: suspendable-ports.test: 8.2.13 Input/output ports: custom binary input/output port `close-proc' is called
PASS: suspendable-ports.test: 8.2.13 Input/output ports: make-custom-binary-input/output-port [partial writes]
PASS: suspendable-ports.test: 8.2.13 Input/output ports: make-custom-binary-input/output-port [full writes]
PASS: suspendable-ports.test: 8.2.13 Input/output ports: custom-binary-output-port uses ISO-8859-1 (Guile extension) [output]
PASS: suspendable-ports.test: ascii string: to ascii bytevector
PASS: suspendable-ports.test: ascii string: to ascii bytevector (length check)
PASS: suspendable-ports.test: ascii string: from ascii bytevector
PASS: suspendable-ports.test: ascii string: to utf-8 bytevector
PASS: suspendable-ports.test: ascii string: to UTF-8 bytevector (testing encoding case sensitivity)
PASS: suspendable-ports.test: ascii string: from utf-8 bytevector
PASS: suspendable-ports.test: ascii string: to latin1 bytevector
PASS: suspendable-ports.test: ascii string: from latin1 bytevector
PASS: suspendable-ports.test: narrow non-ascii string: to latin1 bytevector
PASS: suspendable-ports.test: narrow non-ascii string: to latin1 bytevector (length check)
PASS: suspendable-ports.test: narrow non-ascii string: from latin1 bytevector
PASS: suspendable-ports.test: narrow non-ascii string: to utf-8 bytevector
PASS: suspendable-ports.test: narrow non-ascii string: from utf-8 bytevector
PASS: suspendable-ports.test: narrow non-ascii string: encode latin1 as ascii
PASS: suspendable-ports.test: narrow non-ascii string: misparse latin1 as utf8
PASS: suspendable-ports.test: narrow non-ascii string: misparse latin1 as utf8 with substitutions
PASS: suspendable-ports.test: narrow non-ascii string: misparse latin1 as ascii
PASS: suspendable-ports.test: wide non-ascii string: to utf-8 bytevector
PASS: suspendable-ports.test: wide non-ascii string: from utf-8 bytevector
PASS: suspendable-ports.test: wide non-ascii string: encode as ascii
PASS: suspendable-ports.test: wide non-ascii string: encode as latin1
PASS: suspendable-ports.test: wide non-ascii string: encode as ascii with substitutions
PASS: sxml.fold.test: test-fold: (atom? (quote foo))
PASS: sxml.fold.test: test-fold: (atom? (quote ()))
PASS: sxml.fold.test: test-fold: (not (atom? (quote (1 2 3))))
PASS: sxml.fold.test: test-fold: foldt identity
PASS: sxml.fold.test: test-fold: fold cons == reverse
PASS: sxml.fold.test: test-fold: foldts identity
PASS: sxml.fold.test: test-fold: foldts* identity
PASS: sxml.fold.test: test-fold: fold-values == fold
PASS: sxml.fold.test: test-fold: foldts*-values == foldts*
PASS: sxml.fold.test: test-fold: foldts* *pre* behaviour
PASS: sxml.fold.test: test-fold: foldts length
PASS: sxml.fold.test: test-fold-layout: fold-layout
PASS: sxml.match.test: basic match of a top-level pattern var
PASS: sxml.match.test: match of simple element contents with pattern vars
PASS: sxml.match.test: match a literal pattern within a element pattern
PASS: sxml.match.test: match an empty element
PASS: sxml.match.test: match a nested element
PASS: sxml.match.test: match a dot-rest pattern within a nested element
PASS: sxml.match.test: match a basic list pattern
PASS: sxml.match.test: match a list pattern with a dot-rest pattern
PASS: sxml.match.test: basic test of a multi-clause sxml-match
PASS: sxml.match.test: basic test of a sxml-match-let
PASS: sxml.match.test: basic test of a sxml-match-let*
PASS: sxml.match.test: match of top-level literal string pattern
PASS: sxml.match.test: match of top-level literal number pattern
PASS: sxml.match.test: test of multi-expression guard in pattern
PASS: sxml.match.test: basic test of multiple action items in match clause
PASS: sxml.match.test: basic test of explicit recursion in match clauses
PASS: sxml.match.test: basic test of anonymous catas
PASS: sxml.match.test: test of named catas
PASS: sxml.match.test: successful test of attribute matching: pat-var in value position
PASS: sxml.match.test: failing test of attribute matching: pat-var in value position
PASS: sxml.match.test: test of attribute matching: literal in value position
PASS: sxml.match.test: test of attribute matching: default-value spec in value position
PASS: sxml.match.test: test of attribute matching: multiple attributes in pattern
PASS: sxml.match.test: basic test of ellipses in pattern; no ellipses in output
PASS: sxml.match.test: test of non-null tail pattern following ellipses
PASS: sxml.match.test: test of catas with ellipses in pattern
PASS: sxml.match.test: simple test of ellipses in pattern and output
PASS: sxml.match.test: test of catas with ellipses in pattern and output
PASS: sxml.match.test: test of nested dots in pattern and output
PASS: sxml.match.test: test successful tail pattern match (after ellipses)
PASS: sxml.match.test: test failing tail pattern match (after ellipses), too few items
PASS: sxml.match.test: test failing tail pattern match (after ellipses), too many items
PASS: sxml.match.test: test failing tail pattern match (after ellipses), wrong items
PASS: sxml.match.test: test of ellipses in output quasiquote
PASS: sxml.match.test: test of ellipses in output quasiquote, with more complex unquote expression
PASS: sxml.match.test: test of a quasiquote expr within the dotted unquote expression
PASS: sxml.match.test: quasiquote tests
PASS: sxml.match.test: quasiquote tests
PASS: sxml.match.test: quasiquote tests
PASS: sxml.match.test: quasiquote tests
PASS: sxml.match.test: quasiquote tests
PASS: sxml.match.test: quasiquote tests
PASS: sxml.match.test: quasiquote tests
PASS: sxml.match.test: quasiquote tests
PASS: sxml.match.test: quasiquote tests
PASS: sxml.match.test: test for shrinking-order list of pattern clauses
PASS: sxml.match.test: test binding of unmatched attributes
PASS: sxml.match.test: test binding all attributes
PASS: sxml.match.test: test multiple value returns
PASS: sxml.simple.test: simple: xml->sxml
PASS: sxml.simple.test: simple: xml->sxml->xml->sxml
PASS: sxml.simple.test: namespaces: (quote (*TOP* (http://example.org/ns1:foo text)))
PASS: sxml.simple.test: namespaces: (quote (*TOP* (ns1:foo text)))
PASS: sxml.simple.test: namespaces: (quote (*TOP* (foo (ns2:baz))))
PASS: sxml.simple.test: namespaces: (quote (*TOP* (foo (ns2:baz))))
PASS: sxml.simple.test: namespaces: namespace undeclared
PASS: sxml.simple.test: whitespace: (quote (*TOP* (foo 
 (bar  Alfie the parrot! ) 
)))
PASS: sxml.simple.test: whitespace: (quote (*TOP* (foo (bar  Alfie the parrot! ))))
PASS: sxml.simple.test: parsed entities: (xml->sxml <foo>&amp;</foo>)
PASS: sxml.simple.test: parsed entities: nbsp undefined
PASS: sxml.simple.test: parsed entities: (xml->sxml <foo>&nbsp;</foo> #:entities (quote ((nbsp .  ))))
PASS: sxml.simple.test: parsed entities: (xml->sxml <foo>&#xA0;</foo>)
PASS: sxml.simple.test: parsed entities: (quote (*TOP* (foo   qux)))
PASS: sxml.simple.test: parsed entities: (quote (foo))
PASS: sxml.simple.test: doctype handlers: (quote (*TOP* (p (i Hello, world!))))
PASS: sxml.ssax.test: (and (eq? (if (string? (quote _)) (string->symbol (quote _)) (quote _)) (call-with-input-string _ ssax:read-NCName)))
PASS: sxml.ssax.test: (and (eq? (if (string? (quote _)) (string->symbol (quote _)) (quote _)) (call-with-input-string _ ssax:read-QName)))
PASS: sxml.ssax.test: (and (eq? (string->symbol _abc_) (call-with-input-string _abc_; ssax:read-NCName)))
PASS: sxml.ssax.test: (and (eq? (string->symbol _abc_) (call-with-input-string _abc_; ssax:read-QName)))
PASS: sxml.ssax.test: (and (eq? (string->symbol _a.b) (call-with-input-string _a.b  ssax:read-QName)))
PASS: sxml.ssax.test: (and (equal? (cons (string->symbol _a.b) (string->symbol d.1-ef-)) (call-with-input-string _a.b:d.1-ef-; ssax:read-QName)))
PASS: sxml.ssax.test: (and (equal? (cons (string->symbol a) (string->symbol b)) (call-with-input-string a:b:c ssax:read-QName)))
PASS: sxml.ssax.test: (and (failed? (call-with-input-string :abc ssax:read-NCName)))
PASS: sxml.ssax.test: (and (failed? (call-with-input-string 1:bc ssax:read-NCName)))
PASS: sxml.ssax.test: (and (eq? (if (string? (quote =)) (string->symbol (quote =)) (quote =)) (name-compare (if (string? (quote ABC)) (string->symbol (quote ABC)) (quote ABC)) (if (string? (quote ABC)) (string->symbol (quote ABC)) (quote ABC)))))
PASS: sxml.ssax.test: (and (eq? (if (string? (quote <)) (string->symbol (quote <)) (quote <)) (name-compare (if (string? (quote ABC)) (string->symbol (quote ABC)) (quote ABC)) (if (string? (quote ABCD)) (string->symbol (quote ABCD)) (quote ABCD)))))
PASS: sxml.ssax.test: (and (eq? (if (string? (quote >)) (string->symbol (quote >)) (quote >)) (name-compare (if (string? (quote XB)) (string->symbol (quote XB)) (quote XB)) (if (string? (quote ABCD)) (string->symbol (quote ABCD)) (quote ABCD)))))
PASS: sxml.ssax.test: (and (eq? (if (string? (quote >)) (string->symbol (quote >)) (quote >)) (name-compare (quasiquote (HTML . PRE)) (if (string? (quote PRE)) (string->symbol (quote PRE)) (quote PRE)))))
PASS: sxml.ssax.test: (and (eq? (if (string? (quote <)) (string->symbol (quote <)) (quote <)) (name-compare (if (string? (quote HTML)) (string->symbol (quote HTML)) (quote HTML)) (quasiquote (HTML . PRE)))))
PASS: sxml.ssax.test: (and (eq? (if (string? (quote =)) (string->symbol (quote =)) (quote =)) (name-compare (quasiquote (HTML . PRE)) (quasiquote (HTML . PRE)))))
PASS: sxml.ssax.test: (and (eq? (if (string? (quote <)) (string->symbol (quote <)) (quote <)) (name-compare (quasiquote (HTML . PRE)) (quasiquote (XML . PRE)))))
PASS: sxml.ssax.test: (and (eq? (if (string? (quote >)) (string->symbol (quote >)) (quote >)) (name-compare (quasiquote (HTML . PRE)) (quasiquote (HTML . P)))))
PASS: sxml.ssax.test: (and (eq? (if (string? (quote <)) (string->symbol (quote <)) (quote <)) (name-compare (quasiquote (HTML . PRE)) ssax:largest-unres-name)))
PASS: sxml.ssax.test: (and (eq? (if (string? (quote <)) (string->symbol (quote <)) (quote <)) (name-compare (quasiquote (ZZZZ . ZZZ)) ssax:largest-unres-name)))
PASS: sxml.ssax.test: (and (eq? (if (string? (quote >)) (string->symbol (quote >)) (quote >)) (name-compare ssax:largest-unres-name (quasiquote (ZZZZ . ZZZ)))))
PASS: sxml.ssax.test: (and (equal? p1 content  (call-with-input-string <?pi1  p1 content ?> (lambda (port) (ssax:read-markup-token port) (ssax:read-pi-body-as-string port)))))
PASS: sxml.ssax.test: (and (equal? pi2? content? ? (call-with-input-string <?pi2 pi2? content? ??> (lambda (port) (ssax:read-markup-token port) (ssax:read-pi-body-as-string port)))))
PASS: sxml.ssax.test: (and (equal? result expected-result))
PASS: sxml.ssax.test: (and (equal? result expected-result))
PASS: sxml.ssax.test: (and (equal? result expected-result))
PASS: sxml.ssax.test: (and (equal? result expected-result))
PASS: sxml.ssax.test: (and (equal? result expected-result))
PASS: sxml.ssax.test: (and (equal? result expected-result))
PASS: sxml.ssax.test: (and (equal? result expected-result))
PASS: sxml.ssax.test: (and (equal? result expected-result))
PASS: sxml.ssax.test: (and (equal? result expected-result))
PASS: sxml.ssax.test: (and (equal? result expected-result))
PASS: sxml.ssax.test: (and (equal? result expected-result))
PASS: sxml.ssax.test: (and (equal? result expected-result))
PASS: sxml.ssax.test: (and (equal? result expected-res))
PASS: sxml.ssax.test: (and (equal? result expected-res))
PASS: sxml.ssax.test: (and (equal? result expected-res))
PASS: sxml.ssax.test: (and (equal? result expected-res))
PASS: sxml.ssax.test: (and (equal? result expected-res))
PASS: sxml.ssax.test: (and (equal? result expected-res))
PASS: sxml.ssax.test: (and (equal? result expected-res))
PASS: sxml.ssax.test: (and (equal? result expected-res))
PASS: sxml.ssax.test: (and (equal? result expected-res))
PASS: sxml.ssax.test: (and (failed? (test %tAbc='&lt;&amp;&gt;&#x0A;'%nNext='12&ent;34' /> (quasiquote ((ent . <&ent1;T;&gt;) (ent1 . &amp;))) (quote ()))))
PASS: sxml.ssax.test: (and (failed? (test %tAbc='&lt;&amp;&gt;&#x0A;'%nNext='12&ent;34' /> (quasiquote ((ent . &lt;&ent;T;&gt;) (ent1 . &amp;))) (quote ()))))
PASS: sxml.ssax.test: (and (failed? (test %tAbc='&lt;&amp;&gt;&#x0A;'%nNext='12&ent;34' /> (quasiquote ((ent . &lt;&ent1;T;&gt;) (ent1 . &ent;))) (quote ()))))
PASS: sxml.ssax.test: (and (equal? result expected-res))
PASS: sxml.ssax.test: (and (equal? result expected-res))
PASS: sxml.ssax.test: (and (equal? result expected-res))
PASS: sxml.ssax.test: (and (failed? (test html:href='ref1' html:href='ref2' (quote ()) (quote ()))))
PASS: sxml.ssax.test: (and (failed? (test html:href='<' html:href='ref2' (quote ()) (quote ()))))
PASS: sxml.ssax.test: (and (failed? (test html:href='ref1' html:href='&ref2;' (quote ()) (quote ()))))
PASS: sxml.ssax.test: (and (equal? (if (string? (quote ABC)) (string->symbol (quote ABC)) (quote ABC)) (ssax:resolve-name port (if (string? (quote ABC)) (string->symbol (quote ABC)) (quote ABC)) namespaces #t)))
PASS: sxml.ssax.test: (and (equal? (quasiquote (DEF . ABC)) (ssax:resolve-name port (if (string? (quote ABC)) (string->symbol (quote ABC)) (quote ABC)) namespaces-def #t)))
PASS: sxml.ssax.test: (and (equal? (if (string? (quote ABC)) (string->symbol (quote ABC)) (quote ABC)) (ssax:resolve-name port (if (string? (quote ABC)) (string->symbol (quote ABC)) (quote ABC)) namespaces-def #f)))
PASS: sxml.ssax.test: (and (equal? (if (string? (quote ABC)) (string->symbol (quote ABC)) (quote ABC)) (ssax:resolve-name port (if (string? (quote ABC)) (string->symbol (quote ABC)) (quote ABC)) namespaces-undef #t)))
PASS: sxml.ssax.test: (and (equal? (quasiquote (UHTML . ABC)) (ssax:resolve-name port (quasiquote (HTML . ABC)) namespaces-def #t)))
PASS: sxml.ssax.test: (and (equal? (quasiquote (UHTML . ABC)) (ssax:resolve-name port (quasiquote (HTML . ABC)) namespaces-def #f)))
PASS: sxml.ssax.test: (and (equal? (quasiquote ((unquote ssax:Prefix-XML) . space)) (ssax:resolve-name port (quasiquote ((unquote (string->symbol xml)) . space)) namespaces-def #f)))
PASS: sxml.ssax.test: (and (failed? (ssax:resolve-name port (quasiquote (XXX . ABC)) namespaces-def #f)))
PASS: sxml.ssax.test: (and (equal? (quasiquote ((unquote (if (string? (quote TAG1)) (string->symbol (quote TAG1)) (quote TAG1))) () (unquote namespaces) ANY)) (test TAG1 #f >)))
PASS: sxml.ssax.test: (and (equal? (quasiquote ((unquote (if (string? (quote TAG1)) (string->symbol (quote TAG1)) (quote TAG1))) () (unquote namespaces) EMPTY-TAG)) (test TAG1 #f />)))
PASS: sxml.ssax.test: (and (equal? (quasiquote ((unquote (if (string? (quote TAG1)) (string->symbol (quote TAG1)) (quote TAG1))) (((unquote (if (string? (quote HREF)) (string->symbol (quote HREF)) (quote HREF))) . a)) (unquote namespaces) EMPTY-TAG)) (test TAG1 #f HREF='a'/>)))
PASS: sxml.ssax.test: (and (equal? (quasiquote (((unquote (if (string? (quote UA)) (string->symbol (quote UA)) (quote UA))) unquote (if (string? (quote TAG1)) (string->symbol (quote TAG1)) (quote TAG1))) (((unquote (if (string? (quote HREF)) (string->symbol (quote HREF)) (quote HREF))) . a)) (unquote (cons (quasiquote (*DEFAULT* (unquote (if (string? (quote UA)) (string->symbol (quote UA)) (quote UA))) unquote urn-a)) namespaces)) ANY)) (test TAG1 #f HREF='a' xmlns='urn:a'>)))
PASS: sxml.ssax.test: (and (equal? (quasiquote ((unquote (if (string? (quote TAG1)) (string->symbol (quote TAG1)) (quote TAG1))) (((unquote (if (string? (quote HREF)) (string->symbol (quote HREF)) (quote HREF))) . a)) (unquote (cons (quasiquote (*DEFAULT* #f . #f)) namespaces)) ANY)) (test TAG1 #f HREF='a' xmlns=''>)))
PASS: sxml.ssax.test: (and (failed? (test UA:TAG1 #f HREF='a' xmlns=''/>)))
PASS: sxml.ssax.test: (and (equal? (quasiquote (((unquote (if (string? (quote UA)) (string->symbol (quote UA)) (quote UA))) unquote (if (string? (quote TAG1)) (string->symbol (quote TAG1)) (quote TAG1))) ((((unquote (if (string? (quote UA)) (string->symbol (quote UA)) (quote UA))) unquote (if (string? (quote HREF)) (string->symbol (quote HREF)) (quote HREF))) . a)) (unquote (cons (quasiquote (*DEFAULT* #f . #f)) namespaces)) ANY)) (test A:TAG1 #f A:HREF='a' xmlns=''>)))
PASS: sxml.ssax.test: (and (equal? (quasiquote (((unquote (if (string? (quote UA)) (string->symbol (quote UA)) (quote UA))) unquote (if (string? (quote TAG1)) (string->symbol (quote TAG1)) (quote TAG1))) ((((unquote (if (string? (quote UA)) (string->symbol (quote UA)) (quote UA))) unquote (if (string? (quote HREF)) (string->symbol (quote HREF)) (quote HREF))) . a)) (unquote (cons (quasiquote (*DEFAULT* (unquote urn-b) unquote urn-b)) namespaces)) ANY)) (test A:TAG1 #f A:HREF='a' xmlns='urn:b'>)))
PASS: sxml.ssax.test: (and (failed? (test B:TAG1 #f A:HREF='a' xmlns:b=''/>)))
PASS: sxml.ssax.test: (and (equal? (quasiquote (((unquote urn-b) unquote (if (string? (quote TAG1)) (string->symbol (quote TAG1)) (quote TAG1))) ((((unquote (if (string? (quote UA)) (string->symbol (quote UA)) (quote UA))) unquote (if (string? (quote HREF)) (string->symbol (quote HREF)) (quote HREF))) . a)) (unquote (cons (quasiquote ((unquote (if (string? (quote B)) (string->symbol (quote B)) (quote B))) (unquote urn-b) unquote urn-b)) namespaces)) ANY)) (test B:TAG1 #f A:HREF='a' xmlns:B='urn:b'>)))
PASS: sxml.ssax.test: (and (equal? (quasiquote (((unquote urn-b) unquote (if (string? (quote TAG1)) (string->symbol (quote TAG1)) (quote TAG1))) ((((unquote (if (string? (quote UA)) (string->symbol (quote UA)) (quote UA))) unquote (if (string? (quote HREF)) (string->symbol (quote HREF)) (quote HREF))) . a) (((unquote urn-b) unquote (if (string? (quote SRC)) (string->symbol (quote SRC)) (quote SRC))) . b)) (unquote (cons (quasiquote ((unquote (if (string? (quote B)) (string->symbol (quote B)) (quote B))) (unquote urn-b) unquote urn-b)) namespaces)) ANY)) (test B:TAG1 #f B:SRC='b' A:HREF='a' xmlns:B='urn:b'>)))
PASS: sxml.ssax.test: (and (equal? (quasiquote (((unquote urn-b) unquote (if (string? (quote TAG1)) (string->symbol (quote TAG1)) (quote TAG1))) ((((unquote (if (string? (quote UA)) (string->symbol (quote UA)) (quote UA))) unquote (if (string? (quote HREF)) (string->symbol (quote HREF)) (quote HREF))) . a) (((unquote urn-b) unquote (if (string? (quote HREF)) (string->symbol (quote HREF)) (quote HREF))) . b)) (unquote (cons (quasiquote ((unquote (if (string? (quote B)) (string->symbol (quote B)) (quote B))) (unquote urn-b) unquote urn-b)) namespaces)) ANY)) (test B:TAG1 #f B:HREF="b" A:HREF='a' xmlns:B='urn:b'>)))
PASS: sxml.ssax.test: (and (failed? (test B:TAG1 #f HREF="b" HREF='a' xmlns:B='urn:a'/>)))
PASS: sxml.ssax.test: (and (failed? (test B:TAG1 #f B:HREF="b" A:HREF='a' xmlns:B='urn:a'/>)))
PASS: sxml.ssax.test: (and (equal? (quasiquote (((unquote (if (string? (quote UA)) (string->symbol (quote UA)) (quote UA))) unquote (if (string? (quote TAG1)) (string->symbol (quote TAG1)) (quote TAG1))) (((unquote (if (string? (quote HREF)) (string->symbol (quote HREF)) (quote HREF))) . a) (((unquote (if (string? (quote UA)) (string->symbol (quote UA)) (quote UA))) unquote (if (string? (quote HREF)) (string->symbol (quote HREF)) (quote HREF))) . b)) (unquote (cons (quasiquote (*DEFAULT* (unquote (if (string? (quote UA)) (string->symbol (quote UA)) (quote UA))) unquote urn-a)) namespaces)) ANY)) (test TAG1 #f A:HREF="b" HREF='a' xmlns='urn:a'>)))
PASS: sxml.ssax.test: (and (equal? (quasiquote ((unquote (if (string? (quote TAG1)) (string->symbol (quote TAG1)) (quote TAG1))) ((((unquote (if (string? (quote UHTML)) (string->symbol (quote UHTML)) (quote UHTML))) unquote (if (string? (quote HREF)) (string->symbol (quote HREF)) (quote HREF))) . a) (((unquote urn-b) unquote (if (string? (quote HREF)) (string->symbol (quote HREF)) (quote HREF))) . b)) (unquote (append (quasiquote (((unquote (if (string? (quote HTML)) (string->symbol (quote HTML)) (quote HTML))) (unquote (if (string? (quote UHTML)) (string->symbol (quote UHTML)) (quote UHTML))) unquote urn-html) ((unquote (if (string? (quote B)) (string->symbol (quote B)) (quote B))) (unquote urn-b) unquote urn-b))) namespaces)) ANY)) (test TAG1 #f B:HREF="b" xmlns:B='urn:b' xmlns:HTML='http://w3c.org/html' HTML:HREF='a' >)))
PASS: sxml.ssax.test: (and (failed? (test TAG1 (quasiquote ((TAG2 ANY ()))) B:HREF='b' xmlns:B='urn:b'>)))
PASS: sxml.ssax.test: (and (failed? (test TAG1 (quasiquote (((unquote (if (string? (quote TAG1)) (string->symbol (quote TAG1)) (quote TAG1))) ANY (((unquote (if (string? (quote HREF1)) (string->symbol (quote HREF1)) (quote HREF1))) CDATA IMPLIED #f))))) B:HREF='b' xmlns:B='urn:b'>)))
PASS: sxml.ssax.test: (and (equal? (quasiquote ((unquote (if (string? (quote TAG1)) (string->symbol (quote TAG1)) (quote TAG1))) (((unquote (if (string? (quote HREF)) (string->symbol (quote HREF)) (quote HREF))) . b)) (unquote namespaces) EMPTY-TAG)) (test TAG1 (quasiquote (((unquote (if (string? (quote TAG1)) (string->symbol (quote TAG1)) (quote TAG1))) PCDATA (((unquote (if (string? (quote HREF)) (string->symbol (quote HREF)) (quote HREF))) CDATA REQUIRED #f))))) HREF='b'/>)))
PASS: sxml.ssax.test: (and (equal? (quasiquote ((unquote (if (string? (quote TAG1)) (string->symbol (quote TAG1)) (quote TAG1))) (((unquote (if (string? (quote HREF)) (string->symbol (quote HREF)) (quote HREF))) . b)) (unquote namespaces) PCDATA)) (test TAG1 (quasiquote (((unquote (if (string? (quote TAG1)) (string->symbol (quote TAG1)) (quote TAG1))) PCDATA (((unquote (if (string? (quote HREF)) (string->symbol (quote HREF)) (quote HREF))) CDATA REQUIRED #f))))) HREF='b'>)))
PASS: sxml.ssax.test: (and (failed? (test TAG1 (quasiquote (((unquote (if (string? (quote TAG1)) (string->symbol (quote TAG1)) (quote TAG1))) PCDATA (((unquote (if (string? (quote HREF)) (string->symbol (quote HREF)) (quote HREF))) CDATA REQUIRED #f))))) >)))
PASS: sxml.ssax.test: (and (failed? (test TAG1 (quasiquote (((unquote (if (string? (quote TAG1)) (string->symbol (quote TAG1)) (quote TAG1))) PCDATA (((unquote (if (string? (quote HREF)) (string->symbol (quote HREF)) (quote HREF))) (c) REQUIRED #f))))) HREF='b'>)))
PASS: sxml.ssax.test: (and (equal? (quasiquote ((unquote (if (string? (quote TAG1)) (string->symbol (quote TAG1)) (quote TAG1))) (((unquote (if (string? (quote HREF)) (string->symbol (quote HREF)) (quote HREF))) . b)) (unquote namespaces) PCDATA)) (test TAG1 (quasiquote (((unquote (if (string? (quote TAG1)) (string->symbol (quote TAG1)) (quote TAG1))) PCDATA (((unquote (if (string? (quote HREF)) (string->symbol (quote HREF)) (quote HREF))) (c b) IMPLIED #f))))) HREF='b'>)))
PASS: sxml.ssax.test: (and (equal? (quasiquote ((unquote (if (string? (quote TAG1)) (string->symbol (quote TAG1)) (quote TAG1))) (((unquote (if (string? (quote HREF)) (string->symbol (quote HREF)) (quote HREF))) . b)) (unquote namespaces) PCDATA)) (test TAG1 (quasiquote (((unquote (if (string? (quote TAG1)) (string->symbol (quote TAG1)) (quote TAG1))) PCDATA (((unquote (if (string? (quote HREF)) (string->symbol (quote HREF)) (quote HREF))) CDATA IMPLIED c))))) HREF='b'>)))
PASS: sxml.ssax.test: (and (failed? (test TAG1 (quasiquote (((unquote (if (string? (quote TAG1)) (string->symbol (quote TAG1)) (quote TAG1))) PCDATA (((unquote (if (string? (quote HREF)) (string->symbol (quote HREF)) (quote HREF))) CDATA FIXED c))))) HREF='b'>)))
PASS: sxml.ssax.test: (and (equal? (quasiquote ((unquote (if (string? (quote TAG1)) (string->symbol (quote TAG1)) (quote TAG1))) (((unquote (if (string? (quote HREF)) (string->symbol (quote HREF)) (quote HREF))) . b)) (unquote namespaces) PCDATA)) (test TAG1 (quasiquote (((unquote (if (string? (quote TAG1)) (string->symbol (quote TAG1)) (quote TAG1))) PCDATA (((unquote (if (string? (quote HREF)) (string->symbol (quote HREF)) (quote HREF))) CDATA FIXED b))))) HREF='b'>)))
PASS: sxml.ssax.test: (and (equal? (quasiquote ((unquote (if (string? (quote TAG1)) (string->symbol (quote TAG1)) (quote TAG1))) (((unquote (if (string? (quote HREF)) (string->symbol (quote HREF)) (quote HREF))) . b)) (unquote namespaces) PCDATA)) (test TAG1 (quasiquote (((unquote (if (string? (quote TAG1)) (string->symbol (quote TAG1)) (quote TAG1))) PCDATA (((unquote (if (string? (quote HREF)) (string->symbol (quote HREF)) (quote HREF))) CDATA FIXED b))))) >)))
PASS: sxml.ssax.test: (and (equal? (quasiquote ((unquote (if (string? (quote TAG1)) (string->symbol (quote TAG1)) (quote TAG1))) (((unquote (if (string? (quote HREF)) (string->symbol (quote HREF)) (quote HREF))) . b)) (unquote namespaces) PCDATA)) (test TAG1 (quasiquote (((unquote (if (string? (quote TAG1)) (string->symbol (quote TAG1)) (quote TAG1))) PCDATA (((unquote (if (string? (quote HREF)) (string->symbol (quote HREF)) (quote HREF))) CDATA IMPLIED b))))) >)))
PASS: sxml.ssax.test: (and (equal? (quasiquote ((unquote (if (string? (quote TAG1)) (string->symbol (quote TAG1)) (quote TAG1))) () (unquote namespaces) PCDATA)) (test TAG1 (quasiquote (((unquote (if (string? (quote TAG1)) (string->symbol (quote TAG1)) (quote TAG1))) PCDATA (((unquote (if (string? (quote HREF)) (string->symbol (quote HREF)) (quote HREF))) CDATA IMPLIED #f))))) >)))
PASS: sxml.ssax.test: (and (failed? (test TAG1 (quasiquote (((unquote (if (string? (quote TAG1)) (string->symbol (quote TAG1)) (quote TAG1))) PCDATA ((((unquote (if (string? (quote A)) (string->symbol (quote A)) (quote A))) unquote (if (string? (quote HREF)) (string->symbol (quote HREF)) (quote HREF))) CDATA IMPLIED c))))) HREF='b'>)))
PASS: sxml.ssax.test: (and (equal? (quasiquote ((unquote (if (string? (quote TAG1)) (string->symbol (quote TAG1)) (quote TAG1))) (((unquote (if (string? (quote HREF)) (string->symbol (quote HREF)) (quote HREF))) . b) (((unquote (if (string? (quote UA)) (string->symbol (quote UA)) (quote UA))) unquote (if (string? (quote HREF)) (string->symbol (quote HREF)) (quote HREF))) . c)) (unquote namespaces) PCDATA)) (test TAG1 (quasiquote (((unquote (if (string? (quote TAG1)) (string->symbol (quote TAG1)) (quote TAG1))) PCDATA (((unquote (if (string? (quote HREF)) (string->symbol (quote HREF)) (quote HREF))) CDATA REQUIRED #f) (((unquote (if (string? (quote A)) (string->symbol (quote A)) (quote A))) unquote (if (string? (quote HREF)) (string->symbol (quote HREF)) (quote HREF))) CDATA IMPLIED c))))) HREF='b'>)))
PASS: sxml.ssax.test: (and (equal? (quasiquote (((unquote (if (string? (quote UA)) (string->symbol (quote UA)) (quote UA))) unquote (if (string? (quote TAG1)) (string->symbol (quote TAG1)) (quote TAG1))) (((unquote (if (string? (quote HREF)) (string->symbol (quote HREF)) (quote HREF))) . b) (((unquote (if (string? (quote UA)) (string->symbol (quote UA)) (quote UA))) unquote (if (string? (quote HREF)) (string->symbol (quote HREF)) (quote HREF))) . c)) (unquote namespaces) PCDATA)) (test A:TAG1 (quasiquote ((((unquote (if (string? (quote A)) (string->symbol (quote A)) (quote A))) unquote (if (string? (quote TAG1)) (string->symbol (quote TAG1)) (quote TAG1))) PCDATA (((unquote (if (string? (quote HREF)) (string->symbol (quote HREF)) (quote HREF))) NMTOKEN REQUIRED #f) (((unquote (if (string? (quote A)) (string->symbol (quote A)) (quote A))) unquote (if (string? (quote HREF)) (string->symbol (quote HREF)) (quote HREF))) CDATA IMPLIED c))))) HREF='b'>)))
PASS: sxml.ssax.test: (and (equal? (quasiquote (((unquote urn-b) unquote (if (string? (quote TAG1)) (string->symbol (quote TAG1)) (quote TAG1))) (((unquote (if (string? (quote HREF)) (string->symbol (quote HREF)) (quote HREF))) . b)) (unquote (cons (quasiquote ((unquote (if (string? (quote B)) (string->symbol (quote B)) (quote B))) (unquote urn-b) unquote urn-b)) namespaces)) PCDATA)) (test B:TAG1 (quasiquote ((((unquote (if (string? (quote B)) (string->symbol (quote B)) (quote B))) unquote (if (string? (quote TAG1)) (string->symbol (quote TAG1)) (quote TAG1))) PCDATA (((unquote (if (string? (quote HREF)) (string->symbol (quote HREF)) (quote HREF))) CDATA REQUIRED #f) (((unquote (if (string? (quote xmlns)) (string->symbol (quote xmlns)) (quote xmlns))) unquote (if (string? (quote B)) (string->symbol (quote B)) (quote B))) CDATA IMPLIED urn:b))))) HREF='b'>)))
PASS: sxml.ssax.test: (and (equal? (quasiquote (((unquote urn-b) unquote (if (string? (quote TAG1)) (string->symbol (quote TAG1)) (quote TAG1))) ((((unquote urn-b) unquote (if (string? (quote HREF)) (string->symbol (quote HREF)) (quote HREF))) . b)) (unquote (cons (quasiquote ((unquote (if (string? (quote B)) (string->symbol (quote B)) (quote B))) (unquote urn-b) unquote urn-b)) namespaces)) PCDATA)) (test B:TAG1 (quasiquote ((((unquote (if (string? (quote B)) (string->symbol (quote B)) (quote B))) unquote (if (string? (quote TAG1)) (string->symbol (quote TAG1)) (quote TAG1))) PCDATA ((((unquote (if (string? (quote B)) (string->symbol (quote B)) (quote B))) unquote (if (string? (quote HREF)) (string->symbol (quote HREF)) (quote HREF))) CDATA REQUIRED #f) (((unquote (if (string? (quote xmlns)) (string->symbol (quote xmlns)) (quote xmlns))) unquote (if (string? (quote B)) (string->symbol (quote B)) (quote B))) CDATA IMPLIED urn:b))))) B:HREF='b'>)))
PASS: sxml.ssax.test: (and (equal? (quasiquote (((unquote urn-b) unquote (if (string? (quote TAG1)) (string->symbol (quote TAG1)) (quote TAG1))) (((unquote (if (string? (quote HREF)) (string->symbol (quote HREF)) (quote HREF))) . b)) (unquote (cons (quasiquote (*DEFAULT* (unquote urn-b) unquote urn-b)) namespaces)) PCDATA)) (test TAG1 (quasiquote (((unquote (if (string? (quote TAG1)) (string->symbol (quote TAG1)) (quote TAG1))) PCDATA (((unquote (if (string? (quote HREF)) (string->symbol (quote HREF)) (quote HREF))) CDATA REQUIRED #f) ((unquote (if (string? (quote xmlns)) (string->symbol (quote xmlns)) (quote xmlns))) CDATA IMPLIED urn:b))))) HREF='b'>)))
PASS: sxml.ssax.test: (and (equal? (quasiquote (((unquote urn-b) unquote (if (string? (quote TAG1)) (string->symbol (quote TAG1)) (quote TAG1))) (((unquote (if (string? (quote HREF)) (string->symbol (quote HREF)) (quote HREF))) . b)) (unquote (cons (quasiquote (*DEFAULT* (unquote urn-b) unquote urn-b)) namespaces)) PCDATA)) (test TAG1 (quasiquote (((unquote (if (string? (quote TAG1)) (string->symbol (quote TAG1)) (quote TAG1))) PCDATA (((unquote (if (string? (quote HREF)) (string->symbol (quote HREF)) (quote HREF))) CDATA REQUIRED #f))))) HREF='b' xmlns='urn:b'>)))
PASS: sxml.ssax.test: (and (equal? (quasiquote (((unquote urn-b) unquote (if (string? (quote TAG1)) (string->symbol (quote TAG1)) (quote TAG1))) ((((unquote urn-b) unquote (if (string? (quote HREF)) (string->symbol (quote HREF)) (quote HREF))) . b)) (unquote (cons (quasiquote ((unquote (if (string? (quote B)) (string->symbol (quote B)) (quote B))) (unquote urn-b) unquote urn-b)) namespaces)) PCDATA)) (test B:TAG1 (quasiquote ((((unquote (if (string? (quote B)) (string->symbol (quote B)) (quote B))) unquote (if (string? (quote TAG1)) (string->symbol (quote TAG1)) (quote TAG1))) PCDATA ((((unquote (if (string? (quote B)) (string->symbol (quote B)) (quote B))) unquote (if (string? (quote HREF)) (string->symbol (quote HREF)) (quote HREF))) CDATA REQUIRED #f))))) B:HREF='b' xmlns:B='urn:b'>)))
PASS: sxml.ssax.test: (and (equal? result (map unesc-string expected-data)) (if (eq? expected-token eof-object) (eof-object? token) (equal? token expected-token)))
PASS: sxml.ssax.test: (and (failed? (test  #f (quote ()) eof-object)))
PASS: sxml.ssax.test: (and (equal? result (map unesc-string expected-data)) (if (eq? expected-token eof-object) (eof-object? token) (equal? token expected-token)))
PASS: sxml.ssax.test: (and (equal? result (map unesc-string expected-data)) (if (eq? expected-token eof-object) (eof-object? token) (equal? token expected-token)))
PASS: sxml.ssax.test: (and (equal? result (map unesc-string expected-data)) (if (eq? expected-token eof-object) (eof-object? token) (equal? token expected-token)))
PASS: sxml.ssax.test: (and (equal? result (map unesc-string expected-data)) (if (eq? expected-token eof-object) (eof-object? token) (equal? token expected-token)))
PASS: sxml.ssax.test: (and (equal? result (map unesc-string expected-data)) (if (eq? expected-token eof-object) (eof-object? token) (equal? token expected-token)))
PASS: sxml.ssax.test: (and (equal? result (map unesc-string expected-data)) (if (eq? expected-token eof-object) (eof-object? token) (equal? token expected-token)))
PASS: sxml.ssax.test: (and (equal? result (map unesc-string expected-data)) (if (eq? expected-token eof-object) (eof-object? token) (equal? token expected-token)))
PASS: sxml.ssax.test: (and (equal? result (map unesc-string expected-data)) (if (eq? expected-token eof-object) (eof-object? token) (equal? token expected-token)))
PASS: sxml.ssax.test: (and (equal? result (map unesc-string expected-data)) (if (eq? expected-token eof-object) (eof-object? token) (equal? token expected-token)))
PASS: sxml.ssax.test: (and (equal? result (map unesc-string expected-data)) (if (eq? expected-token eof-object) (eof-object? token) (equal? token expected-token)))
PASS: sxml.ssax.test: (and (equal? result (map unesc-string expected-data)) (if (eq? expected-token eof-object) (eof-object? token) (equal? token expected-token)))
PASS: sxml.ssax.test: (and (equal? result (map unesc-string expected-data)) (if (eq? expected-token eof-object) (eof-object? token) (equal? token expected-token)))
PASS: sxml.ssax.test: (and (equal? result (map unesc-string expected-data)) (if (eq? expected-token eof-object) (eof-object? token) (equal? token expected-token)))
PASS: sxml.ssax.test: (and (equal? result (map unesc-string expected-data)) (if (eq? expected-token eof-object) (eof-object? token) (equal? token expected-token)))
PASS: sxml.ssax.test: (and (equal? result (map unesc-string expected-data)) (if (eq? expected-token eof-object) (eof-object? token) (equal? token expected-token)))
PASS: sxml.ssax.test: (and (equal? result (map unesc-string expected-data)) (if (eq? expected-token eof-object) (eof-object? token) (equal? token expected-token)))
PASS: sxml.ssax.test: (and (equal? result (map unesc-string expected-data)) (if (eq? expected-token eof-object) (eof-object? token) (equal? token expected-token)))
PASS: sxml.ssax.test: (and (equal? result (map unesc-string expected-data)) (if (eq? expected-token eof-object) (eof-object? token) (equal? token expected-token)))
PASS: sxml.ssax.test: (and (equal? result (map unesc-string expected-data)) (if (eq? expected-token eof-object) (eof-object? token) (equal? token expected-token)))
PASS: sxml.ssax.test: (and (equal? result (map unesc-string expected-data)) (if (eq? expected-token eof-object) (eof-object? token) (equal? token expected-token)))
PASS: sxml.ssax.test: (and (equal? result (map unesc-string expected-data)) (if (eq? expected-token eof-object) (eof-object? token) (equal? token expected-token)))
PASS: sxml.ssax.test: (and (equal? result (map unesc-string expected-data)) (if (eq? expected-token eof-object) (eof-object? token) (equal? token expected-token)))
PASS: sxml.ssax.test: (and (equal? result (map unesc-string expected-data)) (if (eq? expected-token eof-object) (eof-object? token) (equal? token expected-token)))
PASS: sxml.ssax.test: (and (equal? result (map unesc-string expected-data)) (if (eq? expected-token eof-object) (eof-object? token) (equal? token expected-token)))
PASS: sxml.ssax.test: (and (equal? result (map unesc-string expected-data)) (if (eq? expected-token eof-object) (eof-object? token) (equal? token expected-token)))
PASS: sxml.ssax.test: (and (equal? result expected))
PASS: sxml.ssax.test: (and (failed? (test <BR> dummy-doctype-fn (quote ()))))
PASS: sxml.ssax.test: (and (equal? result expected))
PASS: sxml.ssax.test: (and (failed? (test <BR></BB> dummy-doctype-fn (quote ()))))
PASS: sxml.ssax.test: (and (equal? result expected))
PASS: sxml.ssax.test: (and (equal? result expected))
PASS: sxml.ssax.test: (and (equal? result expected))
PASS: sxml.ssax.test: (and (equal? result expected))
PASS: sxml.ssax.test: (and (equal? result expected))
PASS: sxml.ssax.test: (and (equal? result expected))
PASS: sxml.ssax.test: (and (equal? result expected))
PASS: sxml.ssax.test: (and (equal? result expected))
PASS: sxml.ssax.test: (and (equal? elem-gi (quasiquote (unquote (if (string? (quote T)) (string->symbol (quote T)) (quote T))))))
PASS: sxml.ssax.test: (and (equal? result expected))
PASS: sxml.ssax.test: (and (equal? elem-gi (quasiquote (unquote (if (string? (quote T)) (string->symbol (quote T)) (quote T))))))
PASS: sxml.ssax.test: (and (equal? result expected))
PASS: sxml.ssax.test: (and (equal? result expected))
PASS: sxml.ssax.test: (and (equal? result expected))
PASS: sxml.ssax.test: (and (failed? (test <BR>aa</BR> (lambda (elem-gi seed) (values (quasiquote (((unquote (if (string? (quote BR)) (string->symbol (quote BR)) (quote BR))) EMPTY ()))) (quote ()) (quote ()) seed)) (quote ()))))
PASS: sxml.ssax.test: (and (equal? result expected))
PASS: sxml.ssax.test: (and (failed? (test <BR>a<I>a</I></BR> (lambda (elem-gi seed) (values (quasiquote (((unquote (if (string? (quote BR)) (string->symbol (quote BR)) (quote BR))) PCDATA ()))) (quote ()) (quote ()) seed)) (quote ()))))
PASS: sxml.ssax.test: (and (equal? result expected))
PASS: sxml.ssax.test: (and (equal? result expected))
PASS: sxml.ssax.test: (and (equal? result expected))
PASS: sxml.ssax.test: (and (failed? (test <DIV>Example: "&example;" <P/></DIV> (lambda (elem-gi seed) (values #f (quasiquote (((unquote (if (string? (quote quote)) (string->symbol (quote quote)) (quote quote))) . <I>example:) ((unquote (if (string? (quote example)) (string->symbol (quote example)) (quote example))) . <Q>&quote;</I>!</Q>?))) (quote ()) seed)) (quote ()))))
PASS: sxml.ssax.test: (and (equal? result expected))
PASS: sxml.ssax.test: (and (equal? result expected))
PASS: sxml.ssax.test: (and (failed? (test <DIV A:B='A' B='B' xmlns:A='URI1' xmlns='URI1'><A:P xmlns=''><BR/></A:P></DIV> (lambda (elem-gi seed) (values (quasiquote (((unquote (if (string? (quote DIV)) (string->symbol (quote DIV)) (quote DIV))) ANY (((unquote (if (string? (quote B)) (string->symbol (quote B)) (quote B))) CDATA IMPLIED #f) (((unquote (if (string? (quote A)) (string->symbol (quote A)) (quote A))) unquote (if (string? (quote B)) (string->symbol (quote B)) (quote B))) CDATA IMPLIED #f) (((unquote (if (string? (quote C)) (string->symbol (quote C)) (quote C))) unquote (if (string? (quote B)) (string->symbol (quote B)) (quote B))) CDATA IMPLIED xx) (((unquote (if (string? (quote xmlns)) (string->symbol (quote xmlns)) (quote xmlns))) unquote (if (string? (quote C)) (string->symbol (quote C)) (quote C))) CDATA IMPLIED URI1))) (((unquote (if (string? (quote A)) (string->symbol (quote A)) (quote A))) unquote (if (string? (quote P)) (string->symbol (quote P)) (quote P))) ANY ()) ((unquote (if (string? (quote BR)) (string->symbol (quote BR)) (quote BR))) (unquote (if (string? (quote EMPTY)) (string->symbol (quote EMPTY)) (quote EMPTY))) ()))) (quote ()) (quasiquote ((#f (unquote (if (string? (quote UA)) (string->symbol (quote UA)) (quote UA))) unquote (if (string? (quote URI1)) (string->symbol (quote URI1)) (quote URI1))))) seed)) (quote ()))))
PASS: sxml.ssax.test: (and (failed? (test <DIV A:B='A' B='B' xmlns:A='URI1' xmlns='URI1'><A:P xmlns=''><BR/></A:P></DIV> (lambda (elem-gi seed) (values (quasiquote (((unquote (if (string? (quote DIV)) (string->symbol (quote DIV)) (quote DIV))) ANY (((unquote (if (string? (quote B)) (string->symbol (quote B)) (quote B))) CDATA IMPLIED #f) ((unquote (if (string? (quote xmlns)) (string->symbol (quote xmlns)) (quote xmlns))) CDATA IMPLIED URI1) (((unquote (if (string? (quote A)) (string->symbol (quote A)) (quote A))) unquote (if (string? (quote B)) (string->symbol (quote B)) (quote B))) CDATA IMPLIED #f) (((unquote (if (string? (quote C)) (string->symbol (quote C)) (quote C))) unquote (if (string? (quote B)) (string->symbol (quote B)) (quote B))) CDATA IMPLIED xx))) (((unquote (if (string? (quote A)) (string->symbol (quote A)) (quote A))) unquote (if (string? (quote P)) (string->symbol (quote P)) (quote P))) ANY ()) ((unquote (if (string? (quote BR)) (string->symbol (quote BR)) (quote BR))) EMPTY ()))) (quote ()) (quasiquote ((#f (unquote (if (string? (quote UA)) (string->symbol (quote UA)) (quote UA))) unquote (if (string? (quote URI1)) (string->symbol (quote URI1)) (quote URI1))))) seed)) (quote ()))))
PASS: sxml.ssax.test: (and (failed? (test <DIV A:B='A' B='B' xmlns:A='URI1' xmlns='URI1'><A:P xmlns=''><BR/></A:P></DIV> (lambda (elem-gi seed) (values (quasiquote (((unquote (if (string? (quote DIV)) (string->symbol (quote DIV)) (quote DIV))) ANY (((unquote (if (string? (quote B)) (string->symbol (quote B)) (quote B))) CDATA IMPLIED #f) ((unquote (if (string? (quote xmlns)) (string->symbol (quote xmlns)) (quote xmlns))) CDATA FIXED URI2) (((unquote (if (string? (quote A)) (string->symbol (quote A)) (quote A))) unquote (if (string? (quote B)) (string->symbol (quote B)) (quote B))) CDATA IMPLIED #f))) (((unquote (if (string? (quote A)) (string->symbol (quote A)) (quote A))) unquote (if (string? (quote P)) (string->symbol (quote P)) (quote P))) ANY ()) ((unquote (if (string? (quote BR)) (string->symbol (quote BR)) (quote BR))) EMPTY ()))) (quote ()) (quasiquote ((#f (unquote (if (string? (quote UA)) (string->symbol (quote UA)) (quote UA))) unquote (if (string? (quote URI1)) (string->symbol (quote URI1)) (quote URI1))))) seed)) (quote ()))))
PASS: sxml.ssax.test: (and (equal? result expected))
PASS: sxml.ssax.test: (and (equal? result expected))
PASS: sxml.ssax.test: (and (equal_? result expected-res))
PASS: sxml.ssax.test: (and (equal_? result expected-res))
PASS: sxml.ssax.test: (and (equal_? result expected-res))
PASS: sxml.ssax.test: (and (equal_? result expected-res))
PASS: sxml.ssax.test: (and (equal_? result expected-res))
PASS: sxml.ssax.test: (and (equal_? result expected-res))
PASS: sxml.ssax.test: (and (equal_? result expected-res))
PASS: sxml.ssax.test: (and (equal_? result expected-res))
PASS: sxml.ssax.test: (and (equal_? result expected-res))
PASS: sxml.ssax.test: (and (equal_? result expected-res))
PASS: sxml.ssax.test: (and (equal_? result expected-res))
PASS: sxml.ssax.test: (and (equal_? result expected-res))
PASS: sxml.ssax.test: (and (equal_? result expected-res))
PASS: sxml.ssax.test: (and (equal_? result expected-res))
PASS: sxml.ssax.test: (and (equal_? result expected-res))
PASS: sxml.ssax.test: (and (equal_? result expected-res))
PASS: sxml.ssax.test: (and (equal_? result expected-res))
PASS: sxml.ssax.test: (and (equal_? result expected-res))
PASS: sxml.ssax.test: (and (equal_? result expected-res))
PASS: sxml.ssax.test: (and (equal_? result expected-res))
PASS: sxml.ssax.test: (and (equal_? result expected-res))
PASS: sxml.ssax.test: (and (equal_? result expected-res))
PASS: sxml.ssax.test: (and (equal_? result expected-res))
PASS: sxml.ssax.test: (and (equal_? result expected-res))
PASS: sxml.transform.test: (root (n1 (n11) s12 (n13)) (n2 (n21) s22) (n3 (n31 (n311)) s32 (n33 (n331) s332 (n333)) s34))
PASS: sxml.transform.test: (root (n1 (n11) s12 (n13)) s2-new (n2 (n21) s22) (n3 (n31 (n311)) s32 (n33 (n331) s332 (n333)) s34))
PASS: sxml.transform.test: (root (n1 (n11) s12 (n13)) s2-new (n-new s) (n2 (n21) s22) (n3 (n31 (n311)) s32 (n33 (n331) s332 (n333)) s34))
PASS: sxml.transform.test: (root (n1 (n11) s12 (n13)))
PASS: sxml.transform.test: (root)
PASS: sxml.transform.test: (root (n1 (n11) s12 (n13)) (n1* s12*) (n3 (n33 (n331) s332 (n333)) s34))
PASS: sxml.xpath.test: test-all: ((para (@) para) (para (@) second par))
PASS: sxml.xpath.test: test-all: ((para (@) para) (para (@) second par))
PASS: sxml.xpath.test: test-all: ((para (@) para) (br (@)) (para second par))
PASS: sxml.xpath.test: test-all: ((para (@) para) (br (@)) (para second par))
PASS: sxml.xpath.test: test-all: (cdata)
PASS: sxml.xpath.test: test-all: (cdata)
PASS: sxml.xpath.test: test-all: ((@) (para (@) para) (br (@)) cdata (para second par))
PASS: sxml.xpath.test: test-all: ((@) (para (@) para) (br (@)) cdata (para second par))
PASS: sxml.xpath.test: test-all: ((para third para))
PASS: sxml.xpath.test: test-all: ((para third para))
PASS: sxml.xpath.test: test-all: ((name elem))
PASS: sxml.xpath.test: test-all: ((name elem))
PASS: sxml.xpath.test: test-all: ((name elem) (id idz))
PASS: sxml.xpath.test: test-all: ((name elem) (id idz))
PASS: sxml.xpath.test: test-all: ((para (@) para) (para second par) (para (@) third para))
PASS: sxml.xpath.test: test-all: ((para (@) para) (para second par) (para (@) third para))
PASS: sxml.xpath.test: test-all: ()
PASS: sxml.xpath.test: test-all: ((elem (@ (name elem) (id idz)) (para (@) para) (br (@)) cdata (para second par) (div (@ (name aa)) (para (@) third para))))
PASS: sxml.xpath.test: test-all: ((para (@ (name elem) (id idz)) (para (@) para) (br (@)) cdata (para second par) (div (@ (name aa)) (para (@) third para))) (@ (name elem) (id idz)) (para (@) para) (br (@)) cdata (para second par) (div (@ (name aa)) (para (@) third para)) (@) para (@) second par (@ (name aa)) (para (@) third para) (@) third para)
PASS: sxml.xpath.test: test-all: ((para (@ (name elem) (id idz)) (para (@) para) (br (@)) cdata (para second par) (div (@ (name aa)) (para (@) third para))) (@ (name elem) (id idz)) (para (@) para) (br (@)) cdata (para second par) (div (@ (name aa)) (para (@) third para)) (@) para (@) second par (@ (name aa)) (para (@) third para) (@) third para)
PASS: sxml.xpath.test: test-all: ((div (@ (name elem) (id idz)) (para (@) para) (br (@)) cdata (para (@) second par) (div (@ (name aa)) (para (@) third para))) (div (@ (name aa)) (para (@) third para)))
PASS: sxml.xpath.test: test-all: ((para (@) third para) (para fourth para))
PASS: sxml.xpath.test: test-all: ((para (@) third para) (para fourth para))
PASS: sxml.xpath.test: test-all: ((align right) (align center) (align center) (align center))
PASS: sxml.xpath.test: test-all: ((align right) (align center) (align center) (align center))
PASS: sxml.xpath.test: test-all: ((td (@ (align right)) Talks ) (td (@ (align center))  = ) (td (@ (align center))  = ) (td (@ (align center))  = ))
PASS: sxml.xpath.test: test-all: ((td (@ (align right)) Talks ) (td (@ (align center))  = ) (td (@ (align center))  = ) (td (@ (align center))  = ))
PASS: sxml.xpath.test: test-all: ((td (@ (align right)) Talks ) (td (@ (align center))  = ) (td (@ (align center))  = ) (td (@ (align center))  = ))
PASS: sxml.xpath.test: test-all: ((td (@ (align right)) Talks ) (td (@ (align center))  = ) (td (@ (align center))  = ) (td (@ (align center))  = ))
PASS: sxml.xpath.test: test-all: ((td (@ (align right)) Talks ) (td (@ (align center))  = ) (td (@ (align center))  = ) (td (@ (align center))  = ))
PASS: sxml.xpath.test: test-all: ((td (@ (align right)) Talks ))
PASS: sxml.xpath.test: test-all: ((td (@ (align right)) Talks ))
PASS: sxml.xpath.test: test-all: ((para (@) para))
PASS: sxml.xpath.test: test-all: ((para (@) para))
PASS: sxml.xpath.test: test-all: ((para second par))
PASS: sxml.xpath.test: test-all: ((para second par))
PASS: sxml.xpath.test: test-all: ((para (@) para))
PASS: sxml.xpath.test: test-all: ((para (@) para) (para (@) third para))
PASS: sxml.xpath.test: test-all: ((elem (@ (name elem) (id idz)) (para (@) para) (br (@)) cdata (para second par) (div (@ (name aa)) (para (@) third para))))
PASS: sxml.xpath.test: test-all: ((div (@ (name aa)) (para (@) third para)))
PASS: sxml.xpath.test: test-all: ((div (@ (name aa)) (para (@) third para)))
PASS: sxml.xpath.test: test-all: ((name aa))
PASS: sxml.xpath.test: test-all: ((name aa))
PASS: sxml.xpath.test: test-all: ((chapter (@ (id three)) Chap 3 text))
PASS: sxml.xpath.test: test-all: ((chapter (@ (id two)) Chap 2 text))
PASS: sxml.xpath.test: test-all: ((td  data + control))
PASS: sxml.xpath.test: test-all: ((td  data + control))
PASS: sxml.xpath.test: test-all: ((para (@ (type warning)) para 6))
PASS: sxml.xpath.test: test-all: ((para (@ (type warning)) para 6))
PASS: sxml.xpath.test: test-all: ((para (@ (type warning)) para 6))
PASS: sxml.xpath.test: test-all: ((para (@ (type warning)) para 5))
PASS: sxml.xpath.test: test-all: ((para (@ (type warning)) para 5))
PASS: sxml.xpath.test: test-all: ((para (@ (type warning)) para 5))
PASS: sxml.xpath.test: test-all: ((chapter (@ (id one)) Chap 1 text) (chapter (@ (id two)) Chap 2 text) (chapter (@ (id three)) Chap 3 text) (appendix (@ (id A)) App A text))
PASS: sxml.xpath.test: test-all: ((chapter (@ (id one)) Chap 1 text) (chapter (@ (id two)) Chap 2 text) (chapter (@ (id three)) Chap 3 text) (appendix (@ (id A)) App A text))
PASS: sxml.xpath.test: test-all: (Let us go then, you and I, In the room the women come and go)
PASS: sxml.xpath.test: test-all: (Let us go then, you and I, In the room the women come and go)
PASS: symbols.test: symbol internals: length of new symbol same as stringbuf
PASS: symbols.test: symbol internals: contents of new symbol same as stringbuf
PASS: symbols.test: symbol internals: hashes: equal symbols have equal hashes
PASS: symbols.test: symbol internals: hashes: different symbols have different hashes
PASS: symbols.test: symbol internals: encodings: the null symbol is Latin-1 encoded
PASS: symbols.test: symbol internals: encodings: ASCII symbols are Latin-1 encoded
PASS: symbols.test: symbol internals: encodings: Latin-1 symbols are Latin-1 encoded
PASS: symbols.test: symbol internals: encodings: BMP symbols are UCS-4 encoded
PASS: symbols.test: symbol internals: encodings: SMP symbols are UCS-4 encoded
PASS: symbols.test: symbol?: documented?
PASS: symbols.test: symbol?: string
PASS: symbols.test: symbol?: symbol
PASS: symbols.test: BMP symbols: BMP symbol's string
PASS: symbols.test: symbol->string: result is an immutable string
PASS: symbols.test: gensym: documented?
PASS: symbols.test: gensym: produces a symbol
PASS: symbols.test: gensym: produces a fresh symbol
PASS: symbols.test: gensym: accepts a string prefix
PASS: symbols.test: gensym: does not accept a symbol prefix
PASS: symbols.test: gensym: accepts long prefices
PASS: symbols.test: gensym: accepts embedded NULs
PASS: symbols.test: extended read syntax: (equal? #{}# (object->string (string->symbol )))
PASS: symbols.test: extended read syntax: (equal? a (object->string (string->symbol a)))
PASS: symbols.test: extended read syntax: (equal? #{a b}# (object->string (string->symbol a b)))
PASS: symbols.test: extended read syntax: (equal? #{\x7d;}# (object->string (string->symbol })))
PASS: syncase.test: basic syncase macro
PASS: syncase.test: @ works with syncase
PASS: syncase.test: macro using quasisyntax
PASS: syncase.test: with-syntax: definitions allowed in body
PASS: syncase.test: tail patterns: at the outermost level: non-tail invocation
PASS: syncase.test: tail patterns: at the outermost level: tail invocation
PASS: syncase.test: tail patterns: at a nested level: non-tail invocation
PASS: syncase.test: tail patterns: at a nested level: tail invocation
PASS: syncase.test: serializable labels and marks: compiled macro-generating macro works
PASS: syncase.test: changes to expansion environment: expander detects changes to current-module with @@ @@
PASS: syncase.test: macro-generating macro: module hygiene
PASS: syncase.test: _ is a placeholder
PASS: syncase.test: identifier-syntax: global reference
PASS: syncase.test: identifier-syntax: lexical hygienic reference
PASS: syncase.test: identifier-syntax: lexical hygienic reference (bound)
PASS: syncase.test: identifier-syntax: global reference (settable)
PASS: syncase.test: identifier-syntax: lexical hygienic reference (settable)
PASS: syncase.test: identifier-syntax: lexical hygienic reference (bound, settable)
PASS: syncase.test: identifier-syntax: global set!
PASS: syncase.test: identifier-syntax: lexical hygienic set!
PASS: syncase.test: identifier-syntax: lexical hygienic set! (bound)
PASS: syncase.test: top-level expansions: syntax definitions expanded before other expressions
PASS: syncase.test: missing autoloads do not foil psyntax
PASS: syncase.test: syntax-local-binding: syntax-parameters (resolved)
PASS: syncase.test: syntax-local-binding: syntax-parameters (unresolved)
PASS: syncase.test: primitives: primref in default module
PASS: syncase.test: primitives: primcall in default module
PASS: syncase.test: primitives: primcall in (guile)
PASS: syncase.test: primitives: primref in (guile)
PASS: syncase.test: infinite loop bug
PASS: syntax.test: expressions: Bad argument list: syntax-error location
PASS: syntax.test: expressions: Bad argument list: improper argument list of length 1
PASS: syntax.test: expressions: Bad argument list: improper argument list of length 2
PASS: syntax.test: expressions: missing or extra expression: empty parentheses "()"
PASS: syntax.test: quasiquote: unquote: repeated execution
PASS: syntax.test: quasiquote: unquote-splicing: extra arguments
PASS: syntax.test: begin: valid (begin)
PASS: syntax.test: lambda: bad formals: (lambda)
PASS: syntax.test: lambda: bad formals: (lambda . "foo")
PASS: syntax.test: lambda: bad formals: (lambda "foo")
PASS: syntax.test: lambda: bad formals: (lambda "foo" #f)
PASS: syntax.test: lambda: bad formals: (lambda (x 1) 2)
PASS: syntax.test: lambda: bad formals: (lambda (1 x) 2)
PASS: syntax.test: lambda: bad formals: (lambda (x "a") 2)
PASS: syntax.test: lambda: bad formals: (lambda ("a" x) 2)
PASS: syntax.test: lambda: duplicate formals: (lambda (x x) 1)
PASS: syntax.test: lambda: duplicate formals: (lambda (x x x) 1)
PASS: syntax.test: lambda: bad body: (lambda ())
PASS: syntax.test: let: bindings: late binding
PASS: syntax.test: let: bad bindings: (let)
PASS: syntax.test: let: bad bindings: (let 1)
PASS: syntax.test: let: bad bindings: (let (x))
PASS: syntax.test: let: bad bindings: (let ((x)))
PASS: syntax.test: let: bad bindings: (let (x) 1)
PASS: syntax.test: let: bad bindings: (let ((x)) 3)
PASS: syntax.test: let: bad bindings: (let ((x 1) y) x)
PASS: syntax.test: let: bad bindings: (let ((1 2)) 3)
PASS: syntax.test: let: duplicate bindings: (let ((x 1) (x 2)) x)
PASS: syntax.test: let: bad body: (let ())
PASS: syntax.test: let: bad body: (let ((x 1)))
PASS: syntax.test: named let: initializers: evaluated in outer environment
PASS: syntax.test: named let: bad bindings: (let x (y))
PASS: syntax.test: named let: bad body: (let x ())
PASS: syntax.test: named let: bad body: (let x ((y 1)))
PASS: syntax.test: let*: bindings: (let* ((x 1) (x 2)) ...)
PASS: syntax.test: let*: bindings: (let* ((x 1) (x x)) ...)
PASS: syntax.test: let*: bindings: (let ((x 1) (y 2)) (let* () ...))
PASS: syntax.test: let*: bad bindings: (let*)
PASS: syntax.test: let*: bad bindings: (let* 1)
PASS: syntax.test: let*: bad bindings: (let* (x))
PASS: syntax.test: let*: bad bindings: (let* (x) 1)
PASS: syntax.test: let*: bad bindings: (let* ((x)) 3)
PASS: syntax.test: let*: bad bindings: (let* ((x 1) y) x)
PASS: syntax.test: let*: bad bindings: (let* x ())
PASS: syntax.test: let*: bad bindings: (let* x (y))
PASS: syntax.test: let*: bad bindings: (let* ((1 2)) 3)
PASS: syntax.test: let*: bad body: (let* ())
PASS: syntax.test: let*: bad body: (let* ((x 1)))
PASS: syntax.test: letrec: bindings: initial bindings are undefined
PASS: syntax.test: letrec: bad bindings: (letrec)
PASS: syntax.test: letrec: bad bindings: (letrec 1)
PASS: syntax.test: letrec: bad bindings: (letrec (x))
PASS: syntax.test: letrec: bad bindings: (letrec (x) 1)
PASS: syntax.test: letrec: bad bindings: (letrec ((x)) 3)
PASS: syntax.test: letrec: bad bindings: (letrec ((x 1) y) x)
PASS: syntax.test: letrec: bad bindings: (letrec x ())
PASS: syntax.test: letrec: bad bindings: (letrec x (y))
PASS: syntax.test: letrec: bad bindings: (letrec ((1 2)) 3)
PASS: syntax.test: letrec: duplicate bindings: (letrec ((x 1) (x 2)) x)
PASS: syntax.test: letrec: bad body: (letrec ())
PASS: syntax.test: letrec: bad body: (letrec ((x 1)))
PASS: syntax.test: letrec*: bindings: initial bindings are undefined
PASS: syntax.test: letrec*: bad bindings: (letrec*)
PASS: syntax.test: letrec*: bad bindings: (letrec* 1)
PASS: syntax.test: letrec*: bad bindings: (letrec* (x))
PASS: syntax.test: letrec*: bad bindings: (letrec* (x) 1)
PASS: syntax.test: letrec*: bad bindings: (letrec* ((x)) 3)
PASS: syntax.test: letrec*: bad bindings: (letrec* ((x 1) y) x)
PASS: syntax.test: letrec*: bad bindings: (letrec* x ())
PASS: syntax.test: letrec*: bad bindings: (letrec* x (y))
PASS: syntax.test: letrec*: bad bindings: (letrec* ((1 2)) 3)
PASS: syntax.test: letrec*: duplicate bindings: (letrec* ((x 1) (x 2)) x)
PASS: syntax.test: letrec*: bad body: (letrec* ())
PASS: syntax.test: letrec*: bad body: (letrec* ((x 1)))
PASS: syntax.test: letrec*: referencing previous values: (equal? (letrec* ((a (cons (quote foo) (quote bar))) (b a)) b) (quote (foo . bar)))
PASS: syntax.test: letrec*: referencing previous values: (equal? (let () (define a (cons (quote foo) (quote bar))) (define b a) b) (quote (foo . bar)))
PASS: syntax.test: if: missing or extra expressions: (if)
PASS: syntax.test: if: missing or extra expressions: (if 1 2 3 4)
PASS: syntax.test: cond: cond is hygienic: bound 'else is handled correctly
PASS: syntax.test: cond: cond is hygienic: bound '=> is handled correctly: #t => 'ok
PASS: syntax.test: cond: cond is hygienic: bound '=> is handled correctly: else =>
PASS: syntax.test: cond: cond is hygienic: bound '=> is handled correctly: else => identity
PASS: syntax.test: cond: SRFI-61: always available
PASS: syntax.test: cond: SRFI-61: single value consequent
PASS: syntax.test: cond: SRFI-61: single value alternate
PASS: syntax.test: cond: SRFI-61: doesn't affect standard =>
PASS: syntax.test: cond: SRFI-61: multiple values consequent
PASS: syntax.test: cond: SRFI-61: multiple values alternate
PASS: syntax.test: cond: SRFI-61: zero values
PASS: syntax.test: cond: SRFI-61: bound => is handled correctly
PASS: syntax.test: cond: SRFI-61: missing recipient
PASS: syntax.test: cond: SRFI-61: extra recipient
PASS: syntax.test: cond: bad or missing clauses: (cond)
PASS: syntax.test: cond: bad or missing clauses: (cond #t)
PASS: syntax.test: cond: bad or missing clauses: (cond 1)
PASS: syntax.test: cond: bad or missing clauses: (cond 1 2)
PASS: syntax.test: cond: bad or missing clauses: (cond 1 2 3)
PASS: syntax.test: cond: bad or missing clauses: (cond 1 2 3 4)
PASS: syntax.test: cond: bad or missing clauses: (cond ())
PASS: syntax.test: cond: bad or missing clauses: (cond () 1)
PASS: syntax.test: cond: bad or missing clauses: (cond (1) 1)
PASS: syntax.test: cond: bad or missing clauses: (cond (else #f) (#t #t))
PASS: syntax.test: cond: wrong number of arguments: => (lambda (x y) #t)
PASS: syntax.test: case: clause with empty labels list
PASS: syntax.test: case: case handles '=> correctly: (1 2 3) => list
PASS: syntax.test: case: case handles '=> correctly: else => list
PASS: syntax.test: case: case handles '=> correctly: bound '=> is handled correctly: (1) => 'ok
PASS: syntax.test: case: case handles '=> correctly: bound '=> is handled correctly: else =>
PASS: syntax.test: case: case handles '=> correctly: bound '=> is handled correctly: else => list
PASS: syntax.test: case: case handles '=> correctly: missing recipient
PASS: syntax.test: case: case handles '=> correctly: extra recipient
PASS: syntax.test: case: case is hygienic: bound 'else is handled correctly
PASS: syntax.test: case: bad or missing clauses: (case)
PASS: syntax.test: case: bad or missing clauses: (case . "foo")
PASS: syntax.test: case: bad or missing clauses: (case 1)
PASS: syntax.test: case: bad or missing clauses: (case 1 . "foo")
PASS: syntax.test: case: bad or missing clauses: (case 1 "foo")
PASS: syntax.test: case: bad or missing clauses: (case 1 ())
PASS: syntax.test: case: bad or missing clauses: (case 1 ("foo"))
PASS: syntax.test: case: bad or missing clauses: (case 1 ("foo" "bar"))
PASS: syntax.test: case: bad or missing clauses: (case 1 ((2) "bar") . "foo")
PASS: syntax.test: case: bad or missing clauses: (case 1 ((2) "bar") (else))
PASS: syntax.test: case: bad or missing clauses: (case 1 (else #f) . "foo")
PASS: syntax.test: case: bad or missing clauses: (case 1 (else #f) ((1) #t))
PASS: syntax.test: top-level define: redefinition
PASS: syntax.test: top-level define: missing or extra expressions: (define)
PASS: syntax.test: top-level define: module scoping
PASS: syntax.test: top-level define: module scoping, same symbolic name
PASS: syntax.test: top-level define: module scoping, introduced names
PASS: syntax.test: top-level define: module scoping, duplicate introduced name
PASS: syntax.test: internal define: internal defines become letrec
PASS: syntax.test: internal define: binding is created before expression is evaluated
PASS: syntax.test: internal define: internal defines with begin
PASS: syntax.test: internal define: internal defines with empty begin
PASS: syntax.test: internal define: internal defines with macro application
PASS: syntax.test: internal define: empty body
PASS: syntax.test: internal define: body should end with expression
PASS: syntax.test: internal define: mixed definitions and expressions
PASS: syntax.test: internal define: mixed definitions and expressions 2
PASS: syntax.test: top-level define-values: zero values
PASS: syntax.test: top-level define-values: one value
PASS: syntax.test: top-level define-values: two values
PASS: syntax.test: top-level define-values: three values
PASS: syntax.test: top-level define-values: one value with tail
PASS: syntax.test: top-level define-values: two values with tail
PASS: syntax.test: top-level define-values: just tail
PASS: syntax.test: top-level define-values: expected 0 values, got 1
PASS: syntax.test: top-level define-values: expected 1 value, got 0
PASS: syntax.test: top-level define-values: expected 1 value, got 2
PASS: syntax.test: top-level define-values: expected 1 value with tail, got 0
PASS: syntax.test: top-level define-values: expected 2 value with tail, got 1
PASS: syntax.test: top-level define-values: redefinition
PASS: syntax.test: top-level define-values: missing expression: (define-values)
PASS: syntax.test: internal define-values: zero values
PASS: syntax.test: internal define-values: one value
PASS: syntax.test: internal define-values: two values
PASS: syntax.test: internal define-values: three values
PASS: syntax.test: internal define-values: one value with tail
PASS: syntax.test: internal define-values: two values with tail
PASS: syntax.test: internal define-values: just tail
PASS: syntax.test: internal define-values: expected 0 values, got 1
PASS: syntax.test: internal define-values: expected 1 value, got 0
PASS: syntax.test: internal define-values: expected 1 value, got 2
PASS: syntax.test: internal define-values: expected 1 value with tail, got 0
PASS: syntax.test: internal define-values: expected 2 value with tail, got 1
PASS: syntax.test: internal define-values: missing expression: (define-values)
PASS: syntax.test: set!: missing or extra expressions: (set!)
PASS: syntax.test: set!: missing or extra expressions: (set! 1)
PASS: syntax.test: set!: missing or extra expressions: (set! 1 2 3)
PASS: syntax.test: set!: bad variable: (set! "" #t)
PASS: syntax.test: set!: bad variable: (set! 1 #t)
PASS: syntax.test: set!: bad variable: (set! #t #f)
PASS: syntax.test: set!: bad variable: (set! #f #t)
PASS: syntax.test: set!: bad variable: (set! #\space #f)
PASS: syntax.test: quote: missing or extra expression: (quote)
PASS: syntax.test: quote: missing or extra expression: (quote a b)
PASS: syntax.test: while: too few args
PASS: syntax.test: while: empty body: 0
PASS: syntax.test: while: empty body: 1
PASS: syntax.test: while: empty body: 2
PASS: syntax.test: while: empty body: 3
PASS: syntax.test: while: empty body: 4
PASS: syntax.test: while: empty body: 5
PASS: syntax.test: while: initially false
PASS: syntax.test: while: iterations: 0
PASS: syntax.test: while: iterations: 1
PASS: syntax.test: while: iterations: 2
PASS: syntax.test: while: iterations: 3
PASS: syntax.test: while: iterations: 4
PASS: syntax.test: while: iterations: 5
PASS: syntax.test: while: break: normal return
PASS: syntax.test: while: break: no args
PASS: syntax.test: while: break: multiple values
PASS: syntax.test: while: break: from cond: first
PASS: syntax.test: while: break: from cond: 0
PASS: syntax.test: while: break: from cond: 1
PASS: syntax.test: while: break: from cond: 2
PASS: syntax.test: while: break: from cond: 3
PASS: syntax.test: while: break: from cond: 4
PASS: syntax.test: while: break: from cond: 5
PASS: syntax.test: while: break: from body: first
PASS: syntax.test: while: break: from body: 0
PASS: syntax.test: while: break: from body: 1
PASS: syntax.test: while: break: from body: 2
PASS: syntax.test: while: break: from body: 3
PASS: syntax.test: while: break: from body: 4
PASS: syntax.test: while: break: from body: 5
PASS: syntax.test: while: break: from nested
PASS: syntax.test: while: break: from recursive
PASS: syntax.test: while: continue: too many args
PASS: syntax.test: while: continue: from cond: 0
PASS: syntax.test: while: continue: from cond: 1
PASS: syntax.test: while: continue: from cond: 2
PASS: syntax.test: while: continue: from cond: 3
PASS: syntax.test: while: continue: from cond: 4
PASS: syntax.test: while: continue: from cond: 5
PASS: syntax.test: while: continue: from body: 0
PASS: syntax.test: while: continue: from body: 1
PASS: syntax.test: while: continue: from body: 2
PASS: syntax.test: while: continue: from body: 3
PASS: syntax.test: while: continue: from body: 4
PASS: syntax.test: while: continue: from body: 5
PASS: syntax.test: while: continue: from nested
PASS: syntax.test: while: continue: from recursive
PASS: syntax.test: syntax-rules: custom ellipsis within normal ellipsis
PASS: syntax.test: syntax-rules: normal ellipsis within custom ellipsis
PASS: syntax.test: syntax-rules: custom ellipsis is handled hygienically
PASS: syntax.test: syntax-error: outside of macro without args
PASS: syntax.test: syntax-error: outside of macro with args
PASS: syntax.test: syntax-error: within macro
PASS: syntax.test: syntax-case: duplicate pattern variable
PASS: syntax.test: syntax-case: misplaced ellipses: bare ellipsis
PASS: syntax.test: syntax-case: misplaced ellipses: ellipsis singleton
PASS: syntax.test: syntax-case: misplaced ellipses: ellipsis in car
PASS: syntax.test: syntax-case: misplaced ellipses: ellipsis in cdr
PASS: syntax.test: syntax-case: misplaced ellipses: two ellipses in the same list
PASS: syntax.test: syntax-case: misplaced ellipses: three ellipses in the same list
PASS: syntax.test: with-ellipsis: simple
PASS: syntax.test: with-ellipsis: disables normal ellipsis
PASS: syntax.test: with-ellipsis: doesn't affect ellipsis for generated code
PASS: syntax.test: with-ellipsis: propagates into syntax binders
PASS: syntax.test: with-ellipsis: works with local-eval
PASS: syntax.test: syntax objects: interpreted syntax object?
PASS: syntax.test: syntax objects: compiled syntax object?
PASS: syntax.test: syntax objects: interpreted syntax objects are not vectors
PASS: syntax.test: syntax objects: compiled syntax objects are not vectors
PASS: syntax.test: syntax objects: syntax objects comparable with equal? (eval/eval)
PASS: syntax.test: syntax objects: syntax objects comparable with equal? (eval/compile)
PASS: syntax.test: syntax objects: syntax objects hash the same (eval/eval)
PASS: syntax.test: syntax objects: syntax objects hash the same (eval/compile)
PASS: texinfo.docbook.test: test-flatten: (equal? (sdocbook-flatten (quote (refsect1 (refsect2 (para foo))))) (quote ((refsect1) (refsect2) (para foo))))
PASS: texinfo.html.test: (texi-fragment->shtml @itemize
@item foo
@end itemize
)
PASS: texinfo.html.test: (texi-fragment->shtml @acronym{GNU}
)
PASS: texinfo.plain-text.test: stexi->plain-text: one paragraph, default line width
PASS: texinfo.plain-text.test: stexi->plain-text: one paragraph, *line-width* set
PASS: texinfo.plain-text.test: stexi->plain-text: acronym
PASS: texinfo.plain-text.test: stexi->plain-text: recursive acronym
PASS: texinfo.serialize.test: test-serialize: (para)
PASS: texinfo.serialize.test: test-serialize: (para foo)
PASS: texinfo.serialize.test: test-serialize: (var foo)
PASS: texinfo.serialize.test: test-serialize: (*braces* foo)
PASS: texinfo.serialize.test: test-serialize: (value (% (key foo)))
PASS: texinfo.serialize.test: test-serialize: (ref (% (node foo)))
PASS: texinfo.serialize.test: test-serialize: (ref (% (node foo) (name bar)))
PASS: texinfo.serialize.test: test-serialize: (ref (% (node foo) (name bar) (section qux) (info-file xyzzy) (manual zarg)))
PASS: texinfo.serialize.test: test-serialize: (ref (% (section qux) (info-file xyzzy) (node foo) (name bar) (manual zarg)))
PASS: texinfo.serialize.test: test-serialize: (ref (% (node foo) (manual zarg)))
PASS: texinfo.serialize.test: test-serialize: (dots)
PASS: texinfo.serialize.test: test-serialize: (node (% (name foo)))
PASS: texinfo.serialize.test: test-serialize: (node (% (name foo bar)))
PASS: texinfo.serialize.test: test-serialize: (node (% (name foo bar) (next baz)))
PASS: texinfo.serialize.test: test-serialize: (title Foo)
PASS: texinfo.serialize.test: test-serialize: (title Foo is a  (var bar))
PASS: texinfo.serialize.test: test-serialize: (title Foo is a  (var bar)  baz)
PASS: texinfo.serialize.test: test-serialize: (cindex (% (entry Bar baz, foo)))
PASS: texinfo.serialize.test: test-serialize: (iftex (para This is only for tex.) (para Note. Foo.))
PASS: texinfo.serialize.test: test-serialize: (defun (% (name frob)) (para foo?))
PASS: texinfo.serialize.test: test-serialize: (defun (% (name frob) (arguments bar)) (para foo?))
PASS: texinfo.serialize.test: test-serialize: (defun (% (name frob) (arguments bar   baz)) (para foo?))
PASS: texinfo.serialize.test: test-serialize: (defun (% (name frob) (arguments (var bar))) (para foo?))
PASS: texinfo.serialize.test: test-serialize: (defunx (% (name frob) (arguments (var bar))))
PASS: texinfo.serialize.test: test-serialize: (table (% (formatter (var))) (entry (% (heading Foo bar  (code baz))) (para Frobate) (para zzzzz)))
PASS: texinfo.serialize.test: test-serialize: (verbatim foo)
PASS: texinfo.serialize.test: test-serialize: (deffnx (% (name foo) (category bar)))
PASS: texinfo.serialize.test: test-serialize: (deffnx (% (name foo) (category bar) (arguments x   y)))
PASS: texinfo.serialize.test: test-serialize: (deffnx (% (name foo) (category bar) (arguments ( x   (code int) ))))
PASS: texinfo.serialize.test: test-serialize: (deffnx (% (name foo) (category bar baz) (arguments ( x   (code int) ))))
PASS: texinfo.serialize.test: test-serialize: (deffnx (% (name foo) (category (code bar)  baz) (arguments ( x   (code int) ))))
PASS: texinfo.string-utils.test: test-beginning-expansion: (equal?         Hello (expand-tabs 	Hello))
PASS: texinfo.string-utils.test: test-beginning-expansion: (equal?                 Hello (expand-tabs 		Hello))
PASS: texinfo.string-utils.test: test-ending-expansion: (equal? Hello         (expand-tabs Hello	))
PASS: texinfo.string-utils.test: test-ending-expansion: (equal? Hello                 (expand-tabs Hello		))
PASS: texinfo.string-utils.test: test-middle-expansion: (equal? Hello        there (expand-tabs Hello	there))
PASS: texinfo.string-utils.test: test-middle-expansion: (equal? Hello                there (expand-tabs Hello		there))
PASS: texinfo.string-utils.test: test-alternate-tab-size: (equal? Hello   there (expand-tabs Hello	there 3))
PASS: texinfo.string-utils.test: test-alternate-tab-size: (equal? Hello    there (expand-tabs Hello	there 4))
PASS: texinfo.string-utils.test: test-alternate-tab-size: (equal? Hello     there (expand-tabs Hello	there 5))
PASS: texinfo.string-utils.test: test-single-escape-char: (equal? HeElElo (escape-special-chars Hello l E))
PASS: texinfo.string-utils.test: test-multiple-escape-chars: (equal? HEeElElo (escape-special-chars Hello el E))
PASS: texinfo.string-utils.test: collapse-repeated-chars: test-basic-collapse: (equal? H e l l o t h e r e (collapse-repeated-chars test-string))
PASS: texinfo.string-utils.test: collapse-repeated-chars: test-choose-other-char: (equal? H-e-l-l-o-t-h-e-r-e (collapse-repeated-chars (transform-string test-string   -) -))
PASS: texinfo.string-utils.test: collapse-repeated-chars: test-choose-maximum-repeats: (equal? H e  l  l  o  t  h  e  r  e (collapse-repeated-chars test-string   2))
PASS: texinfo.string-utils.test: collapse-repeated-chars: test-choose-maximum-repeats: (equal? H e  l   l   o   t   h   e   r   e (collapse-repeated-chars test-string   3))
PASS: texinfo.string-utils.test: text wrapping: runs-without-exception: (->bool (fill-string test-string))
PASS: texinfo.string-utils.test: text wrapping: runs-without-exception: (->bool (fill-string test-string #:line-width 20))
PASS: texinfo.string-utils.test: text wrapping: runs-without-exception: (->bool (fill-string test-string #:initial-indent  *  #:tab-width 3))
PASS: texinfo.string-utils.test: text wrapping: test-fill-equivalent-to-joined-lines: (equal? (fill-string test-string) (string-join (string->wrapped-lines test-string) 
 (quote infix)))
PASS: texinfo.string-utils.test: text wrapping: test-no-collapse-ws: (equal? (fill-string test-string #:collapse-whitespace? #f) The last language environment specified with  `set-language-environment'.   This
variable should be  set only with M-x customize, which is equivalent to using
the function `set-language-environment'.)
PASS: texinfo.string-utils.test: text wrapping: two spaces after end of sentence: (fill-string This is a sentence. There should be two spaces before.)
PASS: texinfo.string-utils.test: text wrapping: two spaces after end of sentence: (fill-string This is version 2.0...)
PASS: texinfo.string-utils.test: text wrapping: test-no-word-break: (equal? thisisalongword
blah
blah (fill-string thisisalongword blah blah #:line-width 8 #:break-long-words? #f))
PASS: texinfo.test: test-read-verbatim-body: (read-verbatim-body-from-string @end verbatim
)
PASS: texinfo.test: test-read-verbatim-body: @end verbatim needs a newline
PASS: texinfo.test: test-read-verbatim-body: (read-verbatim-body-from-string @@end verbatim
@end verbatim
)
PASS: texinfo.test: test-read-verbatim-body: (read-verbatim-body-from-string @@@@faosfasf adsfas 
 asf @foo{asdf}
@end verbatim
)
PASS: texinfo.test: test-read-verbatim-body: (read-verbatim-body-from-string @end verbatim 
@end verbatim
)
PASS: texinfo.test: test-read-arguments: (read-arguments-from-string str)
PASS: texinfo.test: test-read-arguments: (read-arguments-from-string str)
PASS: texinfo.test: test-read-arguments: (read-arguments-from-string str)
PASS: texinfo.test: test-read-arguments: (read-arguments-from-string str)
PASS: texinfo.test: test-read-arguments: (read-arguments-from-string str)
PASS: texinfo.test: test-read-arguments: (read-arguments-from-string str)
PASS: texinfo.test: test-read-arguments: need a } when reading arguments
PASS: texinfo.test: test-complete-start-command: (test (quote section) foo bar baz bonzerts)
PASS: texinfo.test: test-complete-start-command: (test (quote deffnx) Function foo)
PASS: texinfo.test: test-complete-start-command: @emph missing a start brace
PASS: texinfo.test: test-complete-start-command: (test (quote emph) {foo bar baz bonzerts)
PASS: texinfo.test: test-complete-start-command: (test (quote ref) { foo bar ,,  baz, bonzerts})
PASS: texinfo.test: test-complete-start-command: (test (quote node)  referenced node
)
PASS: texinfo.test: test-read-char-data: result
PASS: texinfo.test: test-read-char-data: token
PASS: texinfo.test: test-read-char-data: result
PASS: texinfo.test: test-read-char-data: token
PASS: texinfo.test: test-read-char-data: eof reading char data
PASS: texinfo.test: test-read-char-data: result
PASS: texinfo.test: test-read-char-data: token
PASS: texinfo.test: test-read-char-data: result
PASS: texinfo.test: test-read-char-data: token
PASS: texinfo.test: test-read-char-data: result
PASS: texinfo.test: test-read-char-data: token
PASS: texinfo.test: test-read-char-data: result
PASS: texinfo.test: test-read-char-data: token
PASS: texinfo.test: test-read-char-data: result
PASS: texinfo.test: test-read-char-data: token
PASS: texinfo.test: test-texinfo->stexinfo: missing @settitle
PASS: texinfo.test: test-texinfo->stexinfo: (call-with-input-string str texi->stexi)
PASS: texinfo.test: test-texinfo->stexinfo: (call-with-input-string str texi->stexi)
PASS: texinfo.test: test-texinfo->stexinfo: (call-with-input-string str texi->stexi)
PASS: texinfo.test: test-texinfo->stexinfo: arg to @dots{}
PASS: texinfo.test: test-texinfo->stexinfo: @code{arg}
PASS: texinfo.test: test-texinfo->stexinfo: @url{arg}
PASS: texinfo.test: test-texinfo->stexinfo: @url{@@}
PASS: texinfo.test: test-texinfo->stexinfo: @url{@var{foo}}
PASS: texinfo.test: test-texinfo->stexinfo: @code{     }
PASS: texinfo.test: test-texinfo->stexinfo: @code{ @code{}    }
PASS: texinfo.test: test-texinfo->stexinfo: @code{  abc    @code{}    }
PASS: texinfo.test: test-texinfo->stexinfo: @code{ arg               }
PASS: texinfo.test: test-texinfo->stexinfo: @w{ arg with  spaces   }
PASS: texinfo.test: test-texinfo->stexinfo: @acronym{GNU}
PASS: texinfo.test: test-texinfo->stexinfo: @acronym{GNU, not unix}
PASS: texinfo.test: test-texinfo->stexinfo: @acronym{GNU, @acronym{GNU}'s Not Unix}
PASS: texinfo.test: test-texinfo->stexinfo: @example
 foo asdf  asd  sadf asd  
@end example

PASS: texinfo.test: test-texinfo->stexinfo: @example
@{
@}
@end example

PASS: texinfo.test: test-texinfo->stexinfo: @quotation
@example
 foo asdf  asd  sadf asd  
@end example
@end quotation

PASS: texinfo.test: test-texinfo->stexinfo: @quotation
@example
 foo asdf  @var{asd}  sadf asd  
@end example
@end quotation

PASS: texinfo.test: test-texinfo->stexinfo: @quotation
@example
 foo asdf  @var{asd}  sadf asd  

not in new para, this is an example
@end example
@end quotation

PASS: texinfo.test: test-texinfo->stexinfo: @titlepage
@quotation
 foo asdf  @var{asd}  sadf asd  

should be in new para
@end quotation
@end titlepage

PASS: texinfo.test: test-texinfo->stexinfo: 
@titlepage

@quotation
 foo asdf  @var{asd}  sadf asd  

should be in new para


@end quotation
@end titlepage

@bye

@foo random crap at the end

PASS: texinfo.test: test-texinfo->stexinfo: 
random notes
@quotation
 foo asdf  @var{asd}  sadf asd  

should be in new para


@end quotation

 hi mom

PASS: texinfo.test: test-texinfo->stexinfo: @enumerate
@item one
@item two
@item three
@end enumerate
PASS: texinfo.test: test-texinfo->stexinfo: @enumerate 44
@item one
@item two
@item three
@end enumerate
PASS: texinfo.test: test-texinfo->stexinfo: bad enumerate formatter
PASS: texinfo.test: test-texinfo->stexinfo: bad itemize formatter
PASS: texinfo.test: test-texinfo->stexinfo: @itemize
@item one
@item two
@item three
@end itemize
PASS: texinfo.test: test-texinfo->stexinfo: @itemize @bullet
@item one
@item two
@item three
@end itemize
PASS: texinfo.test: test-texinfo->stexinfo: @itemize -
@item one
@item two
@item three
@end itemize
PASS: texinfo.test: test-texinfo->stexinfo: @table @code
preliminary text -- should go in a pre-item para
@item one
item one text
@item two
item two text

includes a paragraph
@item three
@end itemize
PASS: texinfo.test: test-texinfo->stexinfo: @chapter @code{foo} bar
text that should be in a para
PASS: texinfo.test: test-texinfo->stexinfo: @deffnx Method foo bar @code{baz}
text that should be in a para
PASS: texinfo.test: test-texinfo->stexinfo: @pxref{Locales, @code{setlocale}}
PASS: texinfo.test: test-texinfo->stexinfo: Like this---e.g.@:, at colon.
PASS: threads.test: parallel: no forms
PASS: threads.test: parallel: 1
PASS: threads.test: parallel: 1 2
PASS: threads.test: parallel: 1 2 3
PASS: threads.test: par-map: simple
PASS: threads.test: par-map: long list
PASS: threads.test: par-for-each: simple
PASS: threads.test: n-par-for-each: 0 in limit 10
PASS: threads.test: n-par-for-each: 6 in limit 10
PASS: threads.test: n-par-for-each: 6 in limit 1
PASS: threads.test: n-par-for-each: 6 in limit 2
PASS: threads.test: n-par-for-each: 6 in limit 3
PASS: threads.test: n-for-each-par-map: asyncs are still working 2
PASS: threads.test: n-for-each-par-map: 0 in limit 10
PASS: threads.test: n-for-each-par-map: 6 in limit 10
PASS: threads.test: n-for-each-par-map: 6 in limit 1
PASS: threads.test: n-for-each-par-map: 6 in limit 2
PASS: threads.test: n-for-each-par-map: 6 in limit 3
PASS: threads.test: lock-mutex: asyncs are still working 3
PASS: threads.test: lock-mutex: timed locking fails if timeout exceeded
PASS: threads.test: lock-mutex: asyncs are still working 6
PASS: threads.test: lock-mutex: timed locking succeeds if mutex unlocked within timeout
PASS: threads.test: lock-mutex: asyncs are still working 7
PASS: threads.test: unlock-mutex: asyncs are still working 5
PASS: threads.test: unlock-mutex: timed unlocking returns #f if timeout exceeded
PASS: threads.test: unlock-mutex: asyncs are still working 4
PASS: threads.test: unlock-mutex: timed unlocking returns #t if condition signaled
PASS: threads.test: join-thread: timed joining fails if timeout exceeded
PASS: threads.test: join-thread: join-thread returns timeoutval on timeout
PASS: threads.test: join-thread: timed joining succeeds if thread exits within timeout
PASS: threads.test: join-thread: asyncs are still working 1
PASS: threads.test: join-thread: don't hang when joined thread terminates in SCM_TICK
PASS: threads.test: cancel-thread: cancel succeeds
PASS: threads.test: cancel-thread: cancel result passed to join
PASS: threads.test: cancel-thread: can cancel self
PASS: threads.test: mutex-ownership: mutex ownership for locked mutex
PASS: threads.test: mutex-ownership: mutex ownership for unlocked mutex
PASS: threads.test: mutex-ownership: mutex with owner not retained (bug #27450)
PASS: threads.test: mutex-lock-levels: unlocked level is 0
PASS: threads.test: mutex-lock-levels: non-recursive lock level is 1
PASS: threads.test: mutex-lock-levels: recursive lock level is >1
PASS: threads.test: mutex-behavior: allow external unlock
PASS: threads.test: mutex-behavior: recursive mutexes
PASS: threads.test: mutex-behavior: abandoned mutexes are dead
PASS: threads.test: nproc: total-processor-count
PASS: threads.test: nproc: current-processor-count
PASS: time.test: gmtime: (in another thread after error 2147483647)
PASS: time.test: gmtime: (in another thread after error 9223372036854775807)
PASS: time.test: gmtime: (in another thread after error -1)
PASS: time.test: gmtime: (in another thread after error -2147483648)
PASS: time.test: gmtime: (in another thread after error -9223372036854775808)
PASS: time.test: internal-time-units-per-second: versus times and sleep
PASS: time.test: localtime: gmtoff of EST+5 at GMT 10:00am on 10 Jan 2000
PASS: time.test: localtime: gmtoff of EST+5 at GMT 3am on 10 Jan 2000
PASS: time.test: localtime: gmtoff of AST-10 at GMT 10pm on 10 Jan 2000
PASS: time.test: localtime: gmtoff of EST+5 at GMT 3am on 1 Jan 2000
PASS: time.test: localtime: gmtoff of AST-10 at GMT 10pm on 31 Dec 2000
PASS: time.test: mktime: gmtoff of EST+5 at 10:00am on 10 Jan 2000
PASS: time.test: mktime: gmtoff of EST+5 at 10:00pm on 10 Jan 2000
PASS: time.test: mktime: gmtoff of AST-10 at 3:00am on 10 Jan 2000
PASS: time.test: mktime: gmtoff of EST+5 at 10:00pm on 31 Dec 2000
PASS: time.test: mktime: gmtoff of AST-10 at 3:00am on 1 Jan 2000
PASS: time.test: strftime: strftime %Z doesn't return garbage
PASS: time.test: strftime: strftime passes wide characters
PASS: time.test: strftime: C99 %z format: GMT
PASS: time.test: strftime: C99 %z format: EST+5
UNRESOLVED: time.test: strftime: C99 %z format: strftime fr_FR.utf8
UNRESOLVED: time.test: strftime: C99 %z format: strftime fr_FR.iso88591
PASS: time.test: strptime: in another thread after error
PASS: time.test: strptime: GNU %s format: gmtoff on GMT
UNRESOLVED: time.test: strptime: GNU %s format: strftime fr_FR.utf8
UNRESOLVED: time.test: strptime: GNU %s format: strftime fr_FR.iso88591
PASS: time.test: strptime: GNU %s format: gmtoff on EST+5
PASS: tree-il.test: primitives: error: primitives-resolved in (primcall error (const "message"))
PASS: tree-il.test: primitives: error: primitives-resolved in (primcall error (const "message") (const 42))
PASS: tree-il.test: primitives: error: https://bugs.gnu.org/39509
PASS: tree-il.test: primitives: error: https://bugs.gnu.org/39509 with argument
PASS: tree-il.test: optimize: https://debbugs.gnu.org/48098
PASS: tree-il.test: tree-il->scheme: (case-lambda ((a) a) ((b c) (list b c)))
PASS: tree-il.test: contification: http://debbugs.gnu.org/9769
PASS: tree-il.test: many args: call with > 256 args
PASS: tree-il.test: many args: tail call with > 256 args
PASS: tree-il.test: tree-il-fold: void
PASS: tree-il.test: tree-il-fold: lambda and application
PASS: tree-il.test: warnings: unknown warning type
PASS: tree-il.test: warnings: unused-variable: quiet
PASS: tree-il.test: warnings: unused-variable: let/unused
PASS: tree-il.test: warnings: unused-variable: shadowed variable
PASS: tree-il.test: warnings: unused-variable: letrec
PASS: tree-il.test: warnings: unused-variable: unused argument
PASS: tree-il.test: warnings: unused-variable: special variable names
PASS: tree-il.test: warnings: unused-toplevel: used after definition
PASS: tree-il.test: warnings: unused-toplevel: used before definition
PASS: tree-il.test: warnings: unused-toplevel: unused but public
PASS: tree-il.test: warnings: unused-toplevel: unused but public (more)
PASS: tree-il.test: warnings: unused-toplevel: unused but define-public
UNRESOLVED: tree-il.test: warnings: unused-toplevel: used by macro
PASS: tree-il.test: warnings: unused-toplevel: unused
PASS: tree-il.test: warnings: unused-toplevel: unused recursive
PASS: tree-il.test: warnings: unused-toplevel: unused mutually recursive
PASS: tree-il.test: warnings: unused-toplevel: special variable names
PASS: tree-il.test: warnings: shadowed-toplevel: quiet
PASS: tree-il.test: warnings: shadowed-toplevel: internal define
PASS: tree-il.test: warnings: shadowed-toplevel: one shadowing definition
PASS: tree-il.test: warnings: shadowed-toplevel: two shadowing definitions
PASS: tree-il.test: warnings: shadowed-toplevel: define-public
PASS: tree-il.test: warnings: shadowed-toplevel: macro
PASS: tree-il.test: warnings: unbound variable: quiet
PASS: tree-il.test: warnings: unbound variable: ref
PASS: tree-il.test: warnings: unbound variable: set!
PASS: tree-il.test: warnings: unbound variable: module-local top-level is visible
PASS: tree-il.test: warnings: unbound variable: module-local top-level is visible after
PASS: tree-il.test: warnings: unbound variable: optional arguments are visible
PASS: tree-il.test: warnings: unbound variable: keyword arguments are visible
PASS: tree-il.test: warnings: unbound variable: GOOPS definitions are visible
PASS: tree-il.test: warnings: re-exported binding
PASS: tree-il.test: warnings: use-before-definition: (begin (define x +) x)
PASS: tree-il.test: warnings: use-before-definition: (begin x (define x +))
PASS: tree-il.test: warnings: use-before-definition: (begin (set! x 1) (define x +))
PASS: tree-il.test: warnings: use-before-definition: (begin (lambda () x) (define x +))
PASS: tree-il.test: warnings: use-before-definition: (begin (if (defined? (quote x)) x) (define x +))
PASS: tree-il.test: warnings: non-idempotent-definition: (begin (define - +) (define y -))
PASS: tree-il.test: warnings: non-idempotent-definition: (begin - (define - +))
PASS: tree-il.test: warnings: non-idempotent-definition: (begin (define y -) (define - +))
PASS: tree-il.test: warnings: non-idempotent-definition: (begin (lambda () -) (define - +))
PASS: tree-il.test: warnings: non-idempotent-definition: (begin (if (defined? (quote -)) -) (define - +))
PASS: tree-il.test: warnings: arity mismatch: quiet
PASS: tree-il.test: warnings: arity mismatch: direct application
PASS: tree-il.test: warnings: arity mismatch: local
PASS: tree-il.test: warnings: arity mismatch: global
PASS: tree-il.test: warnings: arity mismatch: alias to global
PASS: tree-il.test: warnings: arity mismatch: alias to lexical to global
PASS: tree-il.test: warnings: arity mismatch: alias to lexical
PASS: tree-il.test: warnings: arity mismatch: letrec
PASS: tree-il.test: warnings: arity mismatch: case-lambda
PASS: tree-il.test: warnings: arity mismatch: case-lambda with wrong number of arguments
PASS: tree-il.test: warnings: arity mismatch: case-lambda*
PASS: tree-il.test: warnings: arity mismatch: case-lambda* with wrong arguments
PASS: tree-il.test: warnings: arity mismatch: top-level applicable struct
PASS: tree-il.test: warnings: arity mismatch: top-level applicable struct with wrong arguments
PASS: tree-il.test: warnings: arity mismatch: local toplevel-defines
PASS: tree-il.test: warnings: arity mismatch: global toplevel alias
PASS: tree-il.test: warnings: arity mismatch: local toplevel overrides global
PASS: tree-il.test: warnings: arity mismatch: keyword not passed and quiet
PASS: tree-il.test: warnings: arity mismatch: keyword passed and quiet
PASS: tree-il.test: warnings: arity mismatch: keyword passed to global and quiet
PASS: tree-il.test: warnings: arity mismatch: extra keyword
PASS: tree-il.test: warnings: arity mismatch: extra keywords allowed
PASS: tree-il.test: warnings: format: quiet (no args)
PASS: tree-il.test: warnings: format: quiet (1 arg)
PASS: tree-il.test: warnings: format: quiet (2 args)
PASS: tree-il.test: warnings: format: wrong port arg
PASS: tree-il.test: warnings: format: non-literal format string
PASS: tree-il.test: warnings: format: non-literal format string using gettext
PASS: tree-il.test: warnings: format: non-literal format string using gettext as _
PASS: tree-il.test: warnings: format: non-literal format string using gettext as top-level _
PASS: tree-il.test: warnings: format: non-literal format string using gettext as module-ref _
PASS: tree-il.test: warnings: format: non-literal format string using gettext as lexical _
PASS: tree-il.test: warnings: format: non-literal format string using ngettext
PASS: tree-il.test: warnings: format: non-literal format string using ngettext as N_
PASS: tree-il.test: warnings: format: non-literal format string with (define _ gettext)
PASS: tree-il.test: warnings: format: wrong format string
PASS: tree-il.test: warnings: format: wrong number of args
PASS: tree-il.test: warnings: format: ~%, ~~, ~&, ~t, ~_, ~!, ~|, ~/, ~q and ~\n
PASS: tree-il.test: warnings: format: one missing argument
PASS: tree-il.test: warnings: format: one missing argument, gettext
PASS: tree-il.test: warnings: format: two missing arguments
PASS: tree-il.test: warnings: format: one given, one missing argument
PASS: tree-il.test: warnings: format: too many arguments
PASS: tree-il.test: warnings: format: ~h
PASS: tree-il.test: warnings: format: ~:h with locale object
PASS: tree-il.test: warnings: format: ~:h without locale object
PASS: tree-il.test: warnings: format: conditionals: literals
PASS: tree-il.test: warnings: format: conditionals: literals with selector
PASS: tree-il.test: warnings: format: conditionals: escapes (exact count)
PASS: tree-il.test: warnings: format: conditionals: escapes with selector
PASS: tree-il.test: warnings: format: conditionals: escapes, range
PASS: tree-il.test: warnings: format: conditionals: @
PASS: tree-il.test: warnings: format: conditionals: nested
PASS: tree-il.test: warnings: format: conditionals: unterminated
PASS: tree-il.test: warnings: format: conditionals: unexpected ~;
PASS: tree-il.test: warnings: format: conditionals: unexpected ~]
PASS: tree-il.test: warnings: format: ~{...~}
PASS: tree-il.test: warnings: format: ~{...~}, too many args
PASS: tree-il.test: warnings: format: ~@{...~}
PASS: tree-il.test: warnings: format: ~@{...~}, too few args
PASS: tree-il.test: warnings: format: unterminated ~{...~}
PASS: tree-il.test: warnings: format: ~(...~)
PASS: tree-il.test: warnings: format: ~v
PASS: tree-il.test: warnings: format: ~v:@y
PASS: tree-il.test: warnings: format: ~*
PASS: tree-il.test: warnings: format: ~p
PASS: tree-il.test: warnings: format: ~p, too few arguments
PASS: tree-il.test: warnings: format: ~:p
PASS: tree-il.test: warnings: format: ~:@p, too many arguments
PASS: tree-il.test: warnings: format: ~:@p, too few arguments
PASS: tree-il.test: warnings: format: ~?
PASS: tree-il.test: warnings: format: ~^
PASS: tree-il.test: warnings: format: ~^, too few args
PASS: tree-il.test: warnings: format: parameters: +,-,#, and '
PASS: tree-il.test: warnings: format: complex 1
PASS: tree-il.test: warnings: format: complex 2
PASS: tree-il.test: warnings: format: complex 3
PASS: tree-il.test: warnings: format: ice-9 format
PASS: tree-il.test: warnings: format: not format
PASS: tree-il.test: warnings: format: simple-format: good
PASS: tree-il.test: warnings: format: simple-format: wrong number of args
PASS: tree-il.test: warnings: format: simple-format: unsupported
PASS: tree-il.test: warnings: format: simple-format: unsupported, gettext
PASS: tree-il.test: warnings: format: simple-format: unsupported, ngettext
PASS: tree-il.test: warnings: duplicate-case-datum: quiet
PASS: tree-il.test: warnings: duplicate-case-datum: one duplicate
PASS: tree-il.test: warnings: duplicate-case-datum: one duplicate
PASS: tree-il.test: warnings: bad-case-datum: quiet
PASS: tree-il.test: warnings: bad-case-datum: not eqv?
PASS: tree-il.test: warnings: bad-case-datum: one clause element not eqv?
PASS: types.test: clonable objects: #t
PASS: types.test: clonable objects: #f
PASS: types.test: clonable objects: #nil
PASS: types.test: clonable objects: #<unspecified>
PASS: types.test: clonable objects: #<eof>
PASS: types.test: clonable objects: 42
PASS: types.test: clonable objects: 268435456
PASS: types.test: clonable objects: 3.14
PASS: types.test: clonable objects: "narrow string"
PASS: types.test: clonable objects: "wide στρινγ"
PASS: types.test: clonable objects: symbol
PASS: types.test: clonable objects: λ
PASS: types.test: clonable objects: #:keyword
PASS: types.test: clonable objects: #:λ
PASS: types.test: clonable objects: (2 . 3)
PASS: types.test: clonable objects: (0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122)
PASS: types.test: clonable objects: (1 (two ("three")))
PASS: types.test: clonable objects: #(1 2 3)
PASS: types.test: clonable objects: #(foo bar baz)
PASS: types.test: clonable objects: #vu8(255 254 253)
PASS: types.test: clonable objects: #<pointer 0x7b>
PASS: types.test: clonable objects: #<pointer 0xdeadbeef>
PASS: types.test: clonable circular objects: list
PASS: types.test: clonable circular objects: vector
PASS: types.test: opaque objects: #<guardian 4906410 (reachable: 0 unreachable: 0)>
PASS: types.test: opaque objects: #<output: string c01930>
PASS: types.test: opaque objects: #<input: string c01818>
PASS: types.test: opaque objects: #<procedure obj ()>
PASS: types.test: opaque objects: #<variable 697f4f8 value: foo>
PASS: types.test: opaque objects: #w(#t #t #t)
PASS: types.test: opaque objects: #<weak-table 0/31>
PASS: types.test: opaque objects: #<weak-table 0/31>
PASS: types.test: opaque objects: #<weak-table 0/31>
PASS: types.test: opaque objects: #2((1 2 3) (4 5 6))
PASS: types.test: opaque objects: #*00000110
PASS: types.test: opaque objects: 1180591620717411303424
PASS: types.test: opaque objects: #<fluid 699af08>
PASS: types.test: ports: #<input: /dev/null 32>
PASS: types.test: ports: #<output: /dev/null 35>
PASS: types.test: ports: #<input: string 4b09d90>
PASS: types.test: ports: #<output: string 4b09c40>
PASS: types.test: ports: #<input: string 4b09af0>
PASS: types.test: ports: #<output: string 4b099a0>
PASS: types.test: structs: simple struct
PASS: types.test: structs: circular struct
PASS: types.test: structs: printed circular struct
PASS: types.test: structs: printed deep circular struct
PASS: unicode.test: (char->formal-name a)
PASS: unicode.test: (formal-name->char LATIN SMALL LETTER A)
PASS: unicode.test: (char->formal-name  )
PASS: unicode.test: (formal-name->char not a known formal name)
XFAIL: vectors.test: vector-set!: vector constant
PASS: vectors.test: vector->list: simple vector
PASS: vectors.test: vector->list: string vector 1
PASS: vectors.test: vector->list: string-vector 2
PASS: vectors.test: vector->list: shared array
PASS: vectors.test: make-vector: null
PASS: vectors.test: make-vector: fill with num
PASS: vectors.test: make-vector: fill with string
PASS: vectors.test: make-vector: fill with string 2
PASS: vectors.test: vector-move-left!: before start
PASS: vectors.test: vector-move-left!: beginning
PASS: vectors.test: vector-move-left!: middle
PASS: vectors.test: vector-move-left!: overlap -
PASS: vectors.test: vector-move-left!: overlap +
PASS: vectors.test: vector-move-left!: end
PASS: vectors.test: vector-move-left!: whole thing
PASS: vectors.test: vector-move-left!: past end
PASS: vectors.test: vector-move-right!: before start
PASS: vectors.test: vector-move-right!: beginning
PASS: vectors.test: vector-move-right!: middle
PASS: vectors.test: vector-move-right!: overlap -
PASS: vectors.test: vector-move-right!: overlap +
PASS: vectors.test: vector-move-right!: end
PASS: vectors.test: vector-move-right!: whole thing
PASS: vectors.test: vector-move-right!: past end
UNRESOLVED: version.test: version reporting works
PASS: vlist.test: vlist: vlist?
PASS: vlist.test: vlist: vlist-null?
PASS: vlist.test: vlist: vlist-cons
PASS: vlist.test: vlist: vlist-head
PASS: vlist.test: vlist: vlist-tail
PASS: vlist.test: vlist: vlist->list
PASS: vlist.test: vlist: list->vlist
PASS: vlist.test: vlist: vlist-drop
PASS: vlist.test: vlist: vlist-cons2
PASS: vlist.test: vlist: vlist-cons3
PASS: vlist.test: vlist: vlist-map
PASS: vlist.test: vlist: vlist-length
PASS: vlist.test: vlist: vlist-length complex
PASS: vlist.test: vlist: vlist-ref
PASS: vlist.test: vlist: vlist-ref degenerate
PASS: vlist.test: vlist: vlist-filter
PASS: vlist.test: vlist: vlist-delete
PASS: vlist.test: vlist: vlist-take
PASS: vlist.test: vlist: vlist-unfold
PASS: vlist.test: vlist: vlist-append
PASS: vlist.test: vhash: vhash?
PASS: vlist.test: vhash: vhash-assoc vlist-null
PASS: vlist.test: vhash: vhash-assoc simple
PASS: vlist.test: vhash: vhash-assoc regular
PASS: vlist.test: vhash: vhash-assoc tail
PASS: vlist.test: vhash: vhash-assoc degenerate
PASS: vlist.test: vhash: vhash as vlist
PASS: vlist.test: vhash: vhash entry shadowed
PASS: vlist.test: vhash: vlist-filter
PASS: vlist.test: vhash: vhash-delete
PASS: vlist.test: vhash: vhash-delete honors HASH
PASS: vlist.test: vhash: vhash-fold
PASS: vlist.test: vhash: vhash-fold-right
PASS: vlist.test: vhash: alist->vhash
PASS: vlist.test: vhash: vhash-fold*
PASS: vlist.test: vhash: vhash-fold* tail
PASS: vlist.test: vhash: vhash-fold* interleaved
PASS: vlist.test: vhash: vhash-foldq* degenerate
PASS: vm.test: load-thunk-from-memory: wrong byte order
PASS: vm.test: load-thunk-from-memory: wrong OS ABI
PASS: weaks.test: weak-creation: make-weak-vector: normal
PASS: weaks.test: weak-creation: make-weak-vector: bad size
PASS: weaks.test: weak-creation: list->weak-vector: create
PASS: weaks.test: weak-creation: list->weak-vector: bad-args
PASS: weaks.test: weak-creation: make-weak-key-hash-table: create
PASS: weaks.test: weak-creation: make-weak-key-hash-table: bad-args
PASS: weaks.test: weak-creation: make-weak-value-hash-table: create
PASS: weaks.test: weak-creation: make-weak-value-hash-table: bad-args
PASS: weaks.test: weak-creation: make-doubly-weak-hash-table: create
PASS: weaks.test: weak-creation: make-doubly-weak-hash-table: bad-args
PASS: weaks.test: weak-vector: lives
PASS: weaks.test: weak-vector: dies
PASS: weaks.test: weak-hash: lives
PASS: weaks.test: weak-hash: weak-key dies
PASS: weaks.test: weak-hash: weak-value dies
PASS: weaks.test: weak-hash: doubly-weak dies
PASS: weaks.test: weak-hash: hash-set!, weak val, im -> im
PASS: weaks.test: weak-hash: hash-set!, weak val, im -> nim
PASS: weaks.test: weak-hash: hash-set!, weak val, nim -> nim
PASS: weaks.test: weak-hash: hash-set!, weak val, nim -> im
PASS: weaks.test: weak-hash: hash-set!, weak key, returns value
PASS: weaks.test: weak-hash: assoc can do anything
PASS: web-client.test: GET http://www.gnu.org/software/guile/: requests equal
PASS: web-client.test: GET http://www.gnu.org/software/guile/: request bodies equal
PASS: web-client.test: GET http://www.gnu.org/software/guile/: response equal
PASS: web-client.test: GET http://www.gnu.org/software/guile/: response body equal
PASS: web-client.test: HEAD http://www.gnu.org/software/guile/: requests equal
PASS: web-client.test: HEAD http://www.gnu.org/software/guile/: request bodies equal
PASS: web-client.test: HEAD http://www.gnu.org/software/guile/: response equal
PASS: web-client.test: HEAD http://www.gnu.org/software/guile/: response body equal
PASS: web-client.test: POST http://www.apache.org/: requests equal
PASS: web-client.test: POST http://www.apache.org/: request bodies equal
PASS: web-client.test: POST http://www.apache.org/: response equal
PASS: web-client.test: POST http://www.apache.org/: response body equal
PASS: web-client.test: PUT http://www.apache.org/: requests equal
PASS: web-client.test: PUT http://www.apache.org/: request bodies equal
PASS: web-client.test: PUT http://www.apache.org/: response equal
PASS: web-client.test: PUT http://www.apache.org/: response body equal
PASS: web-client.test: DELETE http://www.apache.org/: requests equal
PASS: web-client.test: DELETE http://www.apache.org/: request bodies equal
PASS: web-client.test: DELETE http://www.apache.org/: response equal
PASS: web-client.test: DELETE http://www.apache.org/: response body equal
PASS: web-client.test: OPTIONS http://www.apache.org/: requests equal
PASS: web-client.test: OPTIONS http://www.apache.org/: request bodies equal
PASS: web-client.test: OPTIONS http://www.apache.org/: response equal
PASS: web-client.test: OPTIONS http://www.apache.org/: response body equal
PASS: web-client.test: TRACE http://www.apache.org/: requests equal
PASS: web-client.test: TRACE http://www.apache.org/: request bodies equal
PASS: web-client.test: TRACE http://www.apache.org/: response equal
PASS: web-client.test: TRACE http://www.apache.org/: response body equal
PASS: web-http.test: read-request-line: GET / HTTP/1.1
PASS: web-http.test: read-request-line: GET http://www.w3.org/pub/WWW/TheProject.html HTTP/1.1
PASS: web-http.test: read-request-line: GET /pub/WWW/TheProject.html HTTP/1.1
PASS: web-http.test: read-request-line: HEAD /etc/hosts?foo=bar HTTP/1.1
PASS: web-http.test: write-request-line: GET / HTTP/1.1
PASS: web-http.test: write-request-line: GET /pub/WWW/TheProject.html HTTP/1.1
PASS: web-http.test: write-request-line: GET /?foo HTTP/1.1
PASS: web-http.test: write-request-line: HEAD /etc/hosts?foo=bar HTTP/1.1
PASS: web-http.test: read-response-line: missing CR/LF
PASS: web-http.test: read-response-line: HTTP/1.0 404 Not Found
PASS: web-http.test: read-response-line: HTTP/1.1 200 OK
PASS: web-http.test: read-response-line: HTTP/1.1 302 
PASS: web-http.test: write-response-line: HTTP/1.0 404 Not Found
PASS: web-http.test: write-response-line: HTTP/1.1 200 OK
PASS: web-http.test: general headers: cache-control: "no-transform" -> (no-transform)
PASS: web-http.test: general headers: cache-control: (no-transform) reparse
PASS: web-http.test: general headers: cache-control: "no-transform,foo" -> (no-transform foo)
PASS: web-http.test: general headers: cache-control: (no-transform foo) reparse
PASS: web-http.test: general headers: cache-control: "no-cache" -> (no-cache)
PASS: web-http.test: general headers: cache-control: (no-cache) reparse
PASS: web-http.test: general headers: cache-control: "no-cache=\"Authorization, Date\"" -> ((no-cache authorization date))
PASS: web-http.test: general headers: cache-control: ((no-cache authorization date)) reparse
PASS: web-http.test: general headers: cache-control: "private=\"Foo\"" -> ((private foo))
PASS: web-http.test: general headers: cache-control: ((private foo)) reparse
PASS: web-http.test: general headers: cache-control: "no-cache,max-age=10" -> (no-cache (max-age . 10))
PASS: web-http.test: general headers: cache-control: (no-cache (max-age . 10)) reparse
PASS: web-http.test: general headers: cache-control: "max-stale" -> (max-stale)
PASS: web-http.test: general headers: cache-control: (max-stale) reparse
PASS: web-http.test: general headers: cache-control: "max-stale=10" -> ((max-stale . 10))
PASS: web-http.test: general headers: cache-control: ((max-stale . 10)) reparse
PASS: web-http.test: general headers: "Cache-Control: acme-cache-extension\r\n" round trip
PASS: web-http.test: general headers: "Cache-Control: acme-cache-extension=20\r\n" round trip
PASS: web-http.test: general headers: "Cache-Control: acme-cache-extension=100 quux\r\n" round trip
PASS: web-http.test: general headers: "Cache-Control: acme-cache-extension=\"100, quux\"\r\n" round trip
PASS: web-http.test: general headers: connection: "close" -> (close)
PASS: web-http.test: general headers: connection: (close) reparse
PASS: web-http.test: general headers: connection: "Content-Encoding" -> (content-encoding)
PASS: web-http.test: general headers: connection: (content-encoding) reparse
PASS: web-http.test: general headers: date: "Tue, 15 Nov 1994 08:12:31 GMT" -> #<date nanosecond: 0 second: 31 minute: 12 hour: 8 day: 15 month: 11 year: 1994 zone-offset: 0>
PASS: web-http.test: general headers: date: #<date nanosecond: 0 second: 31 minute: 12 hour: 8 day: 15 month: 11 year: 1994 zone-offset: 0> reparse
PASS: web-http.test: general headers: date: "Tue, 15 Nov 1994 16:12:31 +0800" -> #<date nanosecond: 0 second: 31 minute: 12 hour: 8 day: 15 month: 11 year: 1994 zone-offset: 0>
PASS: web-http.test: general headers: date: #<date nanosecond: 0 second: 31 minute: 12 hour: 8 day: 15 month: 11 year: 1994 zone-offset: 0> reparse
PASS: web-http.test: general headers: date: "Wed, 7 Sep 2011 11:25:00 GMT" -> #<date nanosecond: 0 second: 0 minute: 25 hour: 11 day: 7 month: 9 year: 2011 zone-offset: 0>
PASS: web-http.test: general headers: date: #<date nanosecond: 0 second: 0 minute: 25 hour: 11 day: 7 month: 9 year: 2011 zone-offset: 0> reparse
PASS: web-http.test: general headers: date: "Sun, 06 Nov 1994  8:49:37 GMT" -> #<date nanosecond: 0 second: 37 minute: 49 hour: 8 day: 6 month: 11 year: 1994 zone-offset: 0>
PASS: web-http.test: general headers: date: #<date nanosecond: 0 second: 37 minute: 49 hour: 8 day: 6 month: 11 year: 1994 zone-offset: 0> reparse
PASS: web-http.test: general headers: date: "Sun, 6 Nov 1994  8:49:37 GMT" -> #<date nanosecond: 0 second: 37 minute: 49 hour: 8 day: 6 month: 11 year: 1994 zone-offset: 0>
PASS: web-http.test: general headers: date: #<date nanosecond: 0 second: 37 minute: 49 hour: 8 day: 6 month: 11 year: 1994 zone-offset: 0> reparse
PASS: web-http.test: general headers: date: "Tue, 15 Nov 1994 08:12:31 EST" -> date error
PASS: web-http.test: general headers: date: "Tue, 15 Qux 1994 08:12:31 EST" -> any error
PASS: web-http.test: general headers: pragma: "no-cache" -> (no-cache)
PASS: web-http.test: general headers: pragma: (no-cache) reparse
PASS: web-http.test: general headers: pragma: "no-cache, foo" -> (no-cache foo)
PASS: web-http.test: general headers: pragma: (no-cache foo) reparse
PASS: web-http.test: general headers: trailer: "foo, bar" -> (foo bar)
PASS: web-http.test: general headers: trailer: (foo bar) reparse
PASS: web-http.test: general headers: trailer: "connection, bar" -> (connection bar)
PASS: web-http.test: general headers: trailer: (connection bar) reparse
PASS: web-http.test: general headers: transfer-encoding: "foo, chunked" -> ((foo) (chunked))
PASS: web-http.test: general headers: transfer-encoding: ((foo) (chunked)) reparse
PASS: web-http.test: general headers: upgrade: "qux" -> ("qux")
PASS: web-http.test: general headers: upgrade: ("qux") reparse
PASS: web-http.test: general headers: via: "xyzzy" -> ("xyzzy")
PASS: web-http.test: general headers: via: ("xyzzy") reparse
PASS: web-http.test: general headers: warning: "123 foo \"core breach imminent\"" -> ((123 "foo" "core breach imminent" #f))
PASS: web-http.test: general headers: warning: ((123 "foo" "core breach imminent" #f)) reparse
PASS: web-http.test: general headers: warning: "123 foo \"core breach imminent\" \"Tue, 15 Nov 1994 08:12:31 GMT\"" -> ((123 "foo" "core breach imminent" #<date nanosecond: 0 second: 31 minute: 12 hour: 8 day: 15 month: 11 year: 1994 zone-offset: 0>))
PASS: web-http.test: general headers: warning: ((123 "foo" "core breach imminent" #<date nanosecond: 0 second: 31 minute: 12 hour: 8 day: 15 month: 11 year: 1994 zone-offset: 0>)) reparse
PASS: web-http.test: entity headers: allow: "foo, bar" -> (foo bar)
PASS: web-http.test: entity headers: allow: (foo bar) reparse
PASS: web-http.test: entity headers: content-disposition: "form-data; name=\"file\"; filename=\"q.go\"" -> (form-data (name . "file") (filename . "q.go"))
PASS: web-http.test: entity headers: content-disposition: (form-data (name . "file") (filename . "q.go")) reparse
PASS: web-http.test: entity headers: content-encoding: "qux, baz" -> (qux baz)
PASS: web-http.test: entity headers: content-encoding: (qux baz) reparse
PASS: web-http.test: entity headers: content-language: "qux, baz" -> ("qux" "baz")
PASS: web-http.test: entity headers: content-language: ("qux" "baz") reparse
PASS: web-http.test: entity headers: content-length: "100" -> 100
PASS: web-http.test: entity headers: content-length: 100 reparse
PASS: web-http.test: entity headers: content-length: "0" -> 0
PASS: web-http.test: entity headers: content-length: 0 reparse
PASS: web-http.test: entity headers: content-length: "010" -> 10
PASS: web-http.test: entity headers: content-length: 10 reparse
PASS: web-http.test: entity headers: content-location: "http://foo/" -> #<<uri> scheme: http userinfo: #f host: "foo" port: #f path: "/" query: #f fragment: #f>
PASS: web-http.test: entity headers: content-location: #<<uri> scheme: http userinfo: #f host: "foo" port: #f path: "/" query: #f fragment: #f> reparse
PASS: web-http.test: entity headers: content-location: "//foo/" -> #<<uri> scheme: #f userinfo: #f host: "foo" port: #f path: "/" query: #f fragment: #f>
PASS: web-http.test: entity headers: content-location: #<<uri> scheme: #f userinfo: #f host: "foo" port: #f path: "/" query: #f fragment: #f> reparse
PASS: web-http.test: entity headers: content-location: "/etc/foo" -> #<<uri> scheme: #f userinfo: #f host: #f port: #f path: "/etc/foo" query: #f fragment: #f>
PASS: web-http.test: entity headers: content-location: #<<uri> scheme: #f userinfo: #f host: #f port: #f path: "/etc/foo" query: #f fragment: #f> reparse
PASS: web-http.test: entity headers: content-location: "foo" -> #<<uri> scheme: #f userinfo: #f host: #f port: #f path: "foo" query: #f fragment: #f>
PASS: web-http.test: entity headers: content-location: #<<uri> scheme: #f userinfo: #f host: #f port: #f path: "foo" query: #f fragment: #f> reparse
PASS: web-http.test: entity headers: content-range: "bytes 10-20/*" -> (bytes (10 . 20) *)
PASS: web-http.test: entity headers: content-range: (bytes (10 . 20) *) reparse
PASS: web-http.test: entity headers: content-range: "bytes */*" -> (bytes * *)
PASS: web-http.test: entity headers: content-range: (bytes * *) reparse
PASS: web-http.test: entity headers: content-range: "bytes */30" -> (bytes * 30)
PASS: web-http.test: entity headers: content-range: (bytes * 30) reparse
PASS: web-http.test: entity headers: content-type: "foo/bar" -> (foo/bar)
PASS: web-http.test: entity headers: content-type: (foo/bar) reparse
PASS: web-http.test: entity headers: content-type: "foo/bar; baz=qux" -> (foo/bar (baz . "qux"))
PASS: web-http.test: entity headers: content-type: (foo/bar (baz . "qux")) reparse
PASS: web-http.test: entity headers: expires: "Tue, 15 Nov 1994 08:12:31 GMT" -> #<date nanosecond: 0 second: 31 minute: 12 hour: 8 day: 15 month: 11 year: 1994 zone-offset: 0>
PASS: web-http.test: entity headers: expires: #<date nanosecond: 0 second: 31 minute: 12 hour: 8 day: 15 month: 11 year: 1994 zone-offset: 0> reparse
PASS: web-http.test: entity headers: last-modified: "Tue, 15 Nov 1994 08:12:31 GMT" -> #<date nanosecond: 0 second: 31 minute: 12 hour: 8 day: 15 month: 11 year: 1994 zone-offset: 0>
PASS: web-http.test: entity headers: last-modified: #<date nanosecond: 0 second: 31 minute: 12 hour: 8 day: 15 month: 11 year: 1994 zone-offset: 0> reparse
PASS: web-http.test: request headers: accept: "text/*;q=0.3, text/html;q=0.7, text/html;level=1" -> ((text/* (q . 300)) (text/html (q . 700)) (text/html (level . "1")))
PASS: web-http.test: request headers: accept: ((text/* (q . 300)) (text/html (q . 700)) (text/html (level . "1"))) reparse
PASS: web-http.test: request headers: accept-charset: "iso-8859-5, unicode-1-1;q=0.8" -> ((1000 . "iso-8859-5") (800 . "unicode-1-1"))
PASS: web-http.test: request headers: accept-charset: ((1000 . "iso-8859-5") (800 . "unicode-1-1")) reparse
PASS: web-http.test: request headers: accept-encoding: "gzip;q=1.0, identity; q=0.5, *;q=0" -> ((1000 . "gzip") (500 . "identity") (0 . "*"))
PASS: web-http.test: request headers: accept-encoding: ((1000 . "gzip") (500 . "identity") (0 . "*")) reparse
PASS: web-http.test: request headers: accept-language: "da, en-gb;q=0.8, en;q=0.7" -> ((1000 . "da") (800 . "en-gb") (700 . "en"))
PASS: web-http.test: request headers: accept-language: ((1000 . "da") (800 . "en-gb") (700 . "en")) reparse
PASS: web-http.test: request headers: accept-language: "en-gb;q=.2" -> ((200 . "en-gb"))
PASS: web-http.test: request headers: accept-language: ((200 . "en-gb")) reparse
PASS: web-http.test: request headers: authorization: "Basic foooo" -> (basic . "foooo")
PASS: web-http.test: request headers: authorization: (basic . "foooo") reparse
PASS: web-http.test: request headers: authorization: "Digest foooo" -> (digest foooo)
PASS: web-http.test: request headers: authorization: (digest foooo) reparse
PASS: web-http.test: request headers: authorization: "Digest foo=bar,baz=qux" -> (digest (foo . "bar") (baz . "qux"))
PASS: web-http.test: request headers: authorization: (digest (foo . "bar") (baz . "qux")) reparse
PASS: web-http.test: request headers: "Authorization: basic foooo\r\n" round trip
PASS: web-http.test: request headers: "Authorization: digest foooo\r\n" round trip
PASS: web-http.test: request headers: "Authorization: digest foo=bar, baz=qux\r\n" round trip
PASS: web-http.test: request headers: expect: "100-continue, foo" -> ((#{100-continue}#) (foo))
PASS: web-http.test: request headers: expect: ((#{100-continue}#) (foo)) reparse
PASS: web-http.test: request headers: from: "foo@bar" -> "foo@bar"
PASS: web-http.test: request headers: from: "foo@bar" reparse
PASS: web-http.test: request headers: host: "qux" -> ("qux" . #f)
PASS: web-http.test: request headers: host: ("qux" . #f) reparse
PASS: web-http.test: request headers: host: "qux:80" -> ("qux" . 80)
PASS: web-http.test: request headers: host: ("qux" . 80) reparse
PASS: web-http.test: request headers: host: "[2001:db8::1]" -> ("2001:db8::1" . #f)
PASS: web-http.test: request headers: host: ("2001:db8::1" . #f) reparse
PASS: web-http.test: request headers: host: "[2001:db8::1]:80" -> ("2001:db8::1" . 80)
PASS: web-http.test: request headers: host: ("2001:db8::1" . 80) reparse
PASS: web-http.test: request headers: host: "[::ffff:192.0.2.1]" -> ("::ffff:192.0.2.1" . #f)
PASS: web-http.test: request headers: host: ("::ffff:192.0.2.1" . #f) reparse
PASS: web-http.test: request headers: "Host: [2001:db8::1]\r\n" round trip
PASS: web-http.test: request headers: if-match: "\"xyzzy\", W/\"qux\"" -> (("xyzzy" . #t) ("qux" . #f))
PASS: web-http.test: request headers: if-match: (("xyzzy" . #t) ("qux" . #f)) reparse
PASS: web-http.test: request headers: if-match: "*" -> *
PASS: web-http.test: request headers: if-match: * reparse
PASS: web-http.test: request headers: if-modified-since: "Tue, 15 Nov 1994 08:12:31 GMT" -> #<date nanosecond: 0 second: 31 minute: 12 hour: 8 day: 15 month: 11 year: 1994 zone-offset: 0>
PASS: web-http.test: request headers: if-modified-since: #<date nanosecond: 0 second: 31 minute: 12 hour: 8 day: 15 month: 11 year: 1994 zone-offset: 0> reparse
PASS: web-http.test: request headers: if-none-match: "\"xyzzy\", W/\"qux\"" -> (("xyzzy" . #t) ("qux" . #f))
PASS: web-http.test: request headers: if-none-match: (("xyzzy" . #t) ("qux" . #f)) reparse
PASS: web-http.test: request headers: if-none-match: "xyzzy, W/\"qux\"" -> (("xyzzy" . #t) ("qux" . #f))
PASS: web-http.test: request headers: if-none-match: (("xyzzy" . #t) ("qux" . #f)) reparse
PASS: web-http.test: request headers: if-none-match: "*" -> *
PASS: web-http.test: request headers: if-none-match: * reparse
PASS: web-http.test: request headers: if-range: "\"foo\"" -> ("foo" . #t)
PASS: web-http.test: request headers: if-range: ("foo" . #t) reparse
PASS: web-http.test: request headers: if-range: "Tue, 15 Nov 1994 08:12:31 GMT" -> #<date nanosecond: 0 second: 31 minute: 12 hour: 8 day: 15 month: 11 year: 1994 zone-offset: 0>
PASS: web-http.test: request headers: if-range: #<date nanosecond: 0 second: 31 minute: 12 hour: 8 day: 15 month: 11 year: 1994 zone-offset: 0> reparse
PASS: web-http.test: request headers: if-unmodified-since: "Tue, 15 Nov 1994 08:12:31 GMT" -> #<date nanosecond: 0 second: 31 minute: 12 hour: 8 day: 15 month: 11 year: 1994 zone-offset: 0>
PASS: web-http.test: request headers: if-unmodified-since: #<date nanosecond: 0 second: 31 minute: 12 hour: 8 day: 15 month: 11 year: 1994 zone-offset: 0> reparse
PASS: web-http.test: request headers: max-forwards: "10" -> 10
PASS: web-http.test: request headers: max-forwards: 10 reparse
PASS: web-http.test: request headers: max-forwards: "00" -> 0
PASS: web-http.test: request headers: max-forwards: 0 reparse
PASS: web-http.test: request headers: proxy-authorization: "Basic foooo" -> (basic . "foooo")
PASS: web-http.test: request headers: proxy-authorization: (basic . "foooo") reparse
PASS: web-http.test: request headers: proxy-authorization: "Digest foooo" -> (digest foooo)
PASS: web-http.test: request headers: proxy-authorization: (digest foooo) reparse
PASS: web-http.test: request headers: proxy-authorization: "Digest foo=bar,baz=qux" -> (digest (foo . "bar") (baz . "qux"))
PASS: web-http.test: request headers: proxy-authorization: (digest (foo . "bar") (baz . "qux")) reparse
PASS: web-http.test: request headers: range: "bytes=10-20" -> (bytes (10 . 20))
PASS: web-http.test: request headers: range: (bytes (10 . 20)) reparse
PASS: web-http.test: request headers: range: "bytes=10-" -> (bytes (10 . #f))
PASS: web-http.test: request headers: range: (bytes (10 . #f)) reparse
PASS: web-http.test: request headers: range: "bytes=-20" -> (bytes (#f . 20))
PASS: web-http.test: request headers: range: (bytes (#f . 20)) reparse
PASS: web-http.test: request headers: range: "bytes=-20,-30" -> (bytes (#f . 20) (#f . 30))
PASS: web-http.test: request headers: range: (bytes (#f . 20) (#f . 30)) reparse
PASS: web-http.test: request headers: referer: "http://foo/bar?baz" -> #<<uri> scheme: http userinfo: #f host: "foo" port: #f path: "/bar" query: "baz" fragment: #f>
PASS: web-http.test: request headers: referer: #<<uri> scheme: http userinfo: #f host: "foo" port: #f path: "/bar" query: "baz" fragment: #f> reparse
PASS: web-http.test: request headers: referer: "//foo/bar?baz" -> #<<uri> scheme: #f userinfo: #f host: "foo" port: #f path: "/bar" query: "baz" fragment: #f>
PASS: web-http.test: request headers: referer: #<<uri> scheme: #f userinfo: #f host: "foo" port: #f path: "/bar" query: "baz" fragment: #f> reparse
PASS: web-http.test: request headers: referer: "/etc/foo" -> #<<uri> scheme: #f userinfo: #f host: #f port: #f path: "/etc/foo" query: #f fragment: #f>
PASS: web-http.test: request headers: referer: #<<uri> scheme: #f userinfo: #f host: #f port: #f path: "/etc/foo" query: #f fragment: #f> reparse
PASS: web-http.test: request headers: referer: "foo" -> #<<uri> scheme: #f userinfo: #f host: #f port: #f path: "foo" query: #f fragment: #f>
PASS: web-http.test: request headers: referer: #<<uri> scheme: #f userinfo: #f host: #f port: #f path: "foo" query: #f fragment: #f> reparse
PASS: web-http.test: request headers: te: "trailers" -> ((trailers))
PASS: web-http.test: request headers: te: ((trailers)) reparse
PASS: web-http.test: request headers: te: "trailers,foo" -> ((trailers) (foo))
PASS: web-http.test: request headers: te: ((trailers) (foo)) reparse
PASS: web-http.test: request headers: user-agent: "guile" -> "guile"
PASS: web-http.test: request headers: user-agent: "guile" reparse
PASS: web-http.test: response headers: accept-ranges: "foo,bar" -> (foo bar)
PASS: web-http.test: response headers: accept-ranges: (foo bar) reparse
PASS: web-http.test: response headers: age: "30" -> 30
PASS: web-http.test: response headers: age: 30 reparse
PASS: web-http.test: response headers: etag: "\"foo\"" -> ("foo" . #t)
PASS: web-http.test: response headers: etag: ("foo" . #t) reparse
PASS: web-http.test: response headers: etag: "W/\"foo\"" -> ("foo" . #f)
PASS: web-http.test: response headers: etag: ("foo" . #f) reparse
PASS: web-http.test: response headers: etag: "foo" -> ("foo" . #t)
PASS: web-http.test: response headers: etag: ("foo" . #t) reparse
PASS: web-http.test: response headers: location: "http://other-place" -> #<<uri> scheme: http userinfo: #f host: "other-place" port: #f path: "" query: #f fragment: #f>
PASS: web-http.test: response headers: location: #<<uri> scheme: http userinfo: #f host: "other-place" port: #f path: "" query: #f fragment: #f> reparse
PASS: web-http.test: response headers: location: "#foo" -> #<<uri> scheme: #f userinfo: #f host: #f port: #f path: "" query: #f fragment: "foo">
PASS: web-http.test: response headers: location: "/#foo" -> #<<uri> scheme: #f userinfo: #f host: #f port: #f path: "/" query: #f fragment: "foo">
PASS: web-http.test: response headers: location: "/foo" -> #<<uri> scheme: #f userinfo: #f host: #f port: #f path: "/foo" query: #f fragment: #f>
PASS: web-http.test: response headers: location: #<<uri> scheme: #f userinfo: #f host: #f port: #f path: "/foo" query: #f fragment: #f> reparse
PASS: web-http.test: response headers: location: "//server/foo" -> #<<uri> scheme: #f userinfo: #f host: "server" port: #f path: "/foo" query: #f fragment: #f>
PASS: web-http.test: response headers: location: #<<uri> scheme: #f userinfo: #f host: "server" port: #f path: "/foo" query: #f fragment: #f> reparse
PASS: web-http.test: response headers: proxy-authenticate: "Basic realm=\"guile\"" -> ((basic (realm . "guile")))
PASS: web-http.test: response headers: proxy-authenticate: ((basic (realm . "guile"))) reparse
PASS: web-http.test: response headers: retry-after: "Tue, 15 Nov 1994 08:12:31 GMT" -> #<date nanosecond: 0 second: 31 minute: 12 hour: 8 day: 15 month: 11 year: 1994 zone-offset: 0>
PASS: web-http.test: response headers: retry-after: #<date nanosecond: 0 second: 31 minute: 12 hour: 8 day: 15 month: 11 year: 1994 zone-offset: 0> reparse
PASS: web-http.test: response headers: retry-after: "20" -> 20
PASS: web-http.test: response headers: retry-after: 20 reparse
PASS: web-http.test: response headers: server: "guile!" -> "guile!"
PASS: web-http.test: response headers: server: "guile!" reparse
PASS: web-http.test: response headers: vary: "*" -> *
PASS: web-http.test: response headers: vary: * reparse
PASS: web-http.test: response headers: vary: "foo, bar" -> (foo bar)
PASS: web-http.test: response headers: vary: (foo bar) reparse
PASS: web-http.test: response headers: www-authenticate: "Basic realm=\"guile\"" -> ((basic (realm . "guile")))
PASS: web-http.test: response headers: www-authenticate: ((basic (realm . "guile"))) reparse
PASS: web-http.test: chunked encoding: (get-string-all p)
PASS: web-http.test: chunked encoding: (port-eof? (make-chunked-input-port (open-input-string 0
)))
PASS: web-http.test: chunked encoding: reads chunks without buffering
PASS: web-http.test: chunked encoding: reads across chunk boundaries
PASS: web-http.test: chunked encoding: EOF instead of chunk header
PASS: web-http.test: chunked encoding: b
First chunk
c
Second chunk
b
Third chunk
0

PASS: web-request.test: example-1: read-request
PASS: web-request.test: example-1: (equal? (request-host (build-request (string->uri http://www.gnu.org/))) (quote (www.gnu.org . #f)))
PASS: web-request.test: example-1: (equal? (request-method r) (quote GET))
PASS: web-request.test: example-1: (equal? (request-uri r) (build-uri-reference #:path /qux))
PASS: web-request.test: example-1: (equal? (read-request-body r) #f)
PASS: web-request.test: example-1: checking all headers
PASS: web-request.test: example-1: write then read
PASS: web-request.test: example-1: by accessor
PASS: web-response.test: example-1: read-response
PASS: web-response.test: example-1: read-response-body
PASS: web-response.test: example-1: (response-version r)
PASS: web-response.test: example-1: (response-code r)
PASS: web-response.test: example-1: (response-reason-phrase r)
PASS: web-response.test: example-1: body
PASS: web-response.test: example-1: checking all headers
PASS: web-response.test: example-1: write then read
PASS: web-response.test: example-1: by accessor
PASS: web-response.test: example-1: response-body-port
PASS: web-response.test: example-1: response-body-port + close
PASS: web-response.test: example-2: (response-transfer-encoding r)
PASS: web-response.test: example-2: b
PASS: web-response.test: example-2: response-body-port
PASS: web-server.test: GET /
PASS: web-server.test: GET /latin1
PASS: web-server.test: GET /user-agent
PASS: web-server.test: GET /does-not-exist
PASS: web-server.test: GET with keep-alive
PASS: web-server.test: POST /
PASS: web-uri.test: build-uri: ftp:
PASS: web-uri.test: build-uri: ftp:foo
PASS: web-uri.test: build-uri: ftp://foo
PASS: web-uri.test: build-uri: ftp://foo/bar
PASS: web-uri.test: build-uri: ftp://foo@bar:22/baz
PASS: web-uri.test: build-uri: non-symbol scheme
PASS: web-uri.test: build-uri: http://bad.host.1
PASS: web-uri.test: build-uri: http://bad.host.1 (no validation)
PASS: web-uri.test: build-uri: http://1.good.host
PASS: web-uri.test: build-uri: http://192.0.2.1
PASS: web-uri.test: build-uri: http://[2001:db8::1]
PASS: web-uri.test: build-uri: http://[::ffff:192.0.2.1]
PASS: web-uri.test: build-uri: http://foo:not-a-port
PASS: web-uri.test: build-uri: http://foo:10 but port as string
PASS: web-uri.test: build-uri: http://:10
PASS: web-uri.test: build-uri: http://foo@
PASS: web-uri.test: build-uri: http://illégal.com
PASS: web-uri.test: build-uri-reference: //host/etc/foo
PASS: web-uri.test: build-uri-reference: /path/to/some/foo?query
PASS: web-uri.test: build-uri-reference: nextdoc/foo
PASS: web-uri.test: string->uri: ftp:
PASS: web-uri.test: string->uri: ftp:foo
PASS: web-uri.test: string->uri: ftp://foo/bar
PASS: web-uri.test: string->uri: ftp://foo@bar:22/baz
PASS: web-uri.test: string->uri: xyz://abc/x/y/z
PASS: web-uri.test: string->uri: http://bad.host.1
PASS: web-uri.test: string->uri: http://1.good.host
PASS: web-uri.test: string->uri: http://192.0.2.1
PASS: web-uri.test: string->uri: http://[2001:db8::1]
PASS: web-uri.test: string->uri: http://[2001:db8::1]:80
PASS: web-uri.test: string->uri: http://[::ffff:192.0.2.1]
PASS: web-uri.test: string->uri: http://foo:
PASS: web-uri.test: string->uri: http://foo:/
PASS: web-uri.test: string->uri: http://2012.jsconf.us/
PASS: web-uri.test: string->uri: http://foo:not-a-port
PASS: web-uri.test: string->uri: http://:10
PASS: web-uri.test: string->uri: http://foo@
PASS: web-uri.test: string->uri: file:/
PASS: web-uri.test: string->uri: file:/etc/hosts
PASS: web-uri.test: string->uri: file:///etc/hosts
PASS: web-uri.test: string->uri: http://foo#bar
PASS: web-uri.test: string->uri: http://foo:/#bar
PASS: web-uri.test: string->uri: http://foo:100#bar
PASS: web-uri.test: string->uri: http://foo:100/#bar
PASS: web-uri.test: string->uri: http://foo?q#bar
PASS: web-uri.test: string->uri: http://foo:/?q#bar
PASS: web-uri.test: string->uri: http://foo:100?q#bar
PASS: web-uri.test: string->uri: http://foo:100/?q#bar
UNRESOLVED: web-uri.test: string->uri: http://www.example.com (sv_SE)
PASS: web-uri.test: string->uri-reference: /foo
PASS: web-uri.test: string->uri-reference: ftp:/foo
PASS: web-uri.test: string->uri-reference: ftp:foo
PASS: web-uri.test: string->uri-reference: //foo/bar
PASS: web-uri.test: string->uri-reference: ftp://foo@bar:22/baz
PASS: web-uri.test: string->uri-reference: //foo@bar:22/baz
PASS: web-uri.test: string->uri-reference: http://bad.host.1
PASS: web-uri.test: string->uri-reference: //bad.host.1
PASS: web-uri.test: string->uri-reference: http://1.good.host
PASS: web-uri.test: string->uri-reference: //1.good.host
PASS: web-uri.test: string->uri-reference: http://192.0.2.1
PASS: web-uri.test: string->uri-reference: //192.0.2.1
PASS: web-uri.test: string->uri-reference: http://[2001:db8::1]
PASS: web-uri.test: string->uri-reference: //[2001:db8::1]
PASS: web-uri.test: string->uri-reference: http://[2001:db8::1]:80
PASS: web-uri.test: string->uri-reference: //[2001:db8::1]:80
PASS: web-uri.test: string->uri-reference: http://[::ffff:192.0.2.1]
PASS: web-uri.test: string->uri-reference: //[::ffff:192.0.2.1]
PASS: web-uri.test: string->uri-reference: http://foo:
PASS: web-uri.test: string->uri-reference: //foo:
PASS: web-uri.test: string->uri-reference: http://foo:/
PASS: web-uri.test: string->uri-reference: //foo:/
PASS: web-uri.test: string->uri-reference: http://2012.jsconf.us/
PASS: web-uri.test: string->uri-reference: //2012.jsconf.us/
PASS: web-uri.test: string->uri-reference: http://foo:not-a-port
PASS: web-uri.test: string->uri-reference: //foo:not-a-port
PASS: web-uri.test: string->uri-reference: http://:10
PASS: web-uri.test: string->uri-reference: //:10
PASS: web-uri.test: string->uri-reference: http://foo@
PASS: web-uri.test: string->uri-reference: //foo@
PASS: web-uri.test: string->uri-reference: file:/
PASS: web-uri.test: string->uri-reference: /
PASS: web-uri.test: string->uri-reference: foo
PASS: web-uri.test: string->uri-reference: file:/etc/hosts
PASS: web-uri.test: string->uri-reference: /etc/hosts
PASS: web-uri.test: string->uri-reference: file:///etc/hosts
PASS: web-uri.test: string->uri-reference: ///etc/hosts
PASS: web-uri.test: string->uri-reference: /foo#bar
PASS: web-uri.test: string->uri-reference: //foo#bar
PASS: web-uri.test: string->uri-reference: //foo:/#bar
PASS: web-uri.test: string->uri-reference: //foo:100#bar
PASS: web-uri.test: string->uri-reference: //foo:100/#bar
PASS: web-uri.test: string->uri-reference: /foo?q#bar
PASS: web-uri.test: string->uri-reference: //foo?q#bar
PASS: web-uri.test: string->uri-reference: //foo:/?q#bar
PASS: web-uri.test: string->uri-reference: //foo:100?q#bar
PASS: web-uri.test: string->uri-reference: //foo:100/?q#bar
PASS: web-uri.test: string->uri-reference: /
PASS: web-uri.test: string->uri-reference: /path/to/foo
PASS: web-uri.test: string->uri-reference: //example.org
PASS: web-uri.test: string->uri-reference: //bar@example.org/path/to/foo
PASS: web-uri.test: string->uri-reference: nextdoc/foo
PASS: web-uri.test: uri->string: ftp:
PASS: web-uri.test: uri->string: ftp:foo
PASS: web-uri.test: uri->string: ftp://foo/bar
PASS: web-uri.test: uri->string: //foo/bar
PASS: web-uri.test: uri->string: ftp://foo@bar:22/baz
PASS: web-uri.test: uri->string: //foo@bar:22/baz
PASS: web-uri.test: uri->string: http://192.0.2.1
PASS: web-uri.test: uri->string: //192.0.2.1
PASS: web-uri.test: uri->string: http://[2001:db8::1]
PASS: web-uri.test: uri->string: //[2001:db8::1]
PASS: web-uri.test: uri->string: http://[::ffff:192.0.2.1]
PASS: web-uri.test: uri->string: //[::ffff:192.0.2.1]
PASS: web-uri.test: uri->string: http://foo:
PASS: web-uri.test: uri->string: //foo
PASS: web-uri.test: uri->string: http://foo:/
PASS: web-uri.test: uri->string: //foo:/
PASS: web-uri.test: uri->string: /
PASS: web-uri.test: uri->string: /foo
PASS: web-uri.test: uri->string: /foo/
PASS: web-uri.test: uri->string: /foo/?bar#baz
PASS: web-uri.test: uri->string: foo/?bar#baz
PASS: web-uri.test: uri->string: /path/to/foo
PASS: web-uri.test: uri->string: //example.org
PASS: web-uri.test: uri->string: //bar@example.org/path/to/foo
PASS: web-uri.test: uri->string: nextdoc/foo
PASS: web-uri.test: decode: foo%20bar
PASS: web-uri.test: decode: foo+bar
PASS: web-uri.test: decode: foo+bar
PASS: web-uri.test: encode: (equal? foo%20bar (uri-encode foo bar))
PASS: web-uri.test: encode: (equal? foo%0A%00bar (uri-encode foo
 bar))
PASS: web-uri.test: encode: (equal? %3C%3E%5C%5E (uri-encode <>\^))

Totals for this test run:
passes:                 42982
failures:               0
unexpected passes:      0
expected failures:      24
unresolved test cases:  573
untested test cases:    1
unsupported test cases: 1
errors:                 0

